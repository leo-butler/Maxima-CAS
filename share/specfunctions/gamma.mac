
/* This batch contains a function which returns an asymptotic expansion of
	the GAMMA function truncated to N terms, in the variable Z.
	Just say ASYMPGAMMA(Z,N); 
   It also contains a function which computes the asymptotic expansion of
	GAMMA(z+a)/GAMMA(z+b). */

remarray(%gama1,%gama)$
%gama1[1]:1$
%gama1[n]:=%gama1[n-1]/(n+1)-(1/2)*sum(%gama1[r]*%gama1[-r+n+1],r,2,n-1)$
	/*The above array contains the a[n] as defined in Copson.*/
%gama[0]:1$
%gama[k]:=lambda([factlim],(2*k+1)*2^(1-k)*(2*k-1)!*%gama1[2*k+1]/(k-1)!)(-1)$

asympgamma(z,n):=(z/%e)^z*sqrt(2*%pi/z)*
sum(apply('ev,[%gama[k]])*z^(-k),k,0,n)$

/* The following program computes the asymptotic expansion for
	GAMMA(z-a)/GAMMA(z-b).  Just call GAMMAR(z,a,b). */

gammar(zvar,avar,bvar,n):=block([a,b,w,t1,t2,t3,t4,t5,t6,t7,t8,t9,answer],
t1:	taylor((1/w+a-1/2)*log(w*a+1),w,0,n),
t2:	taylor(t1-subst(a=b,t1),w,0,n)+b-a,
t3:	taylor(%e^t2,w,0,n),
t4:	sum(%gama[k]*(a+1/w)^(-k),k,0,n),
t5:	taylor(log(t4),w,0,n),
t7:	taylor(t5-subst(a=b,t5),w,0,n),
t8:	taylor(%e^t7,w,0,n),
t9:	t3*t8,
answer:	zvar^(avar-bvar)*
subst([a=avar,b=bvar,w=1/zvar],ratdisrep(t9)))$
