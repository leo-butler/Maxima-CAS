
chr1(i,j,k):=(modedeclare([i,j,k],integer),
  if %chr1[i,j,k]#undef then %chr1[i,j,k] 
  else %chr1[i,j,k]:%chr1[j,i,k]:
      ratsimp((1/2)*(diff(lg[i,k],x[j])+diff(lg[j,k],x[i])-diff(lg[i,j],x[k]))) )$

chr2(i,j,l):=(modedeclare([i,j,k,l],integer),
  if %chr2[i,j,l]#undef then %chr2[i,j,l]
  else %chr2[i,j,l]:%chr2[j,i,l]:block([ans],ans:0,
       if not inverted then (inverted:true,lg:g^^-1),
       for k:1 thru 4 do ans:ans+chr1(i,j,k)*ug[k,l],
       ratsimp(ans) ) )$

riemann(i,j,k,l):=(modedeclare([i,j,k,l],integer),
  if %riemann[i,j,k,l]#undef then %riemann[i,j,k,l]
    else if (i=j) or (l=k) then %riemann[i,j,k,l]:0
    else if i<j then %riemann[i,j,k,l]:-riemann(j,i,k,l)
    else if k<l then %riemann[i,j,k,l]:-riemann(i,j,l,k)
    else if i+4*j<k+4*l then riemann(k,l,i,j)
    else %riemann[i,j,k,l]:%riemann[k,l,i,j]:ratsimp(
        rie1(j,l,i,k)-rie1(j,k,i,l)+rie2(i,l,j,k)-rie2(i,k,j,l)))$

rie2(i,j,k,l):=block([ans],
    modedeclare([i,j,k,l,r],integer),
     ans:0,
        for r:1 thru 4 do ans:ans+chr1(i,j,r)*chr2(k,l,r), ans)$

rie1(i,j,k,l):=(modedeclare([i,j,k,l],integer),
    diff(chr1(i,j,k),x[l]))$

ricci(i,j):=(
  modedeclare([i,j,k,l],integer,inverted,boolean),
  if %ricci[i,j]#undef then %ricci[i,j]
  else %ricci[i,j]:%ricci[j,i]:block([ans], ans:0,
    if not inverted then (inverted:true,ug:g^^-1),
    for k:1 thru 4 do 
        for l:1 thru 4 do ans:ans+riemann(i,k,j,l)*ug[k,l],
     ratsimp(ans))
)$

