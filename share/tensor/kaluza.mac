load("itensor");

dim:5;
metric:g5;
defcon(g4);
defcon(g5);
defcon(g4,g4,kdelta);
defcon(g5,g5,kdelta);

predval(prd):=block([retval,saved_prederror:prederror],
	prederror:false,
	retval:ev(prd,pred)=true or ev(prd,pred)=false,
	prederror:saved_prederror,
	retval
);

difflist(exp,lst):=if length(lst)=0 then exp else difflist(diff(exp,lst[1]),rest(lst));

a(l1,l2,[l3]):=if member(5,l3) then 0 else funmake('a,append([l1,l2],l3));

g4(l1,l2,[l3]):=if member(5,l3) then 0 else funmake('g4,append([l1,l2],l3));

g5(l1,l2,[l3]):=
	if member(5,l3) then 0
	else if l1#[] then
	(
		if not (predval(l1[1]<=4) and predval(l1[2]<=4)) then funmake('g5,append([l1,l2],l3))
		else if l1[1]<=4 and l1[2]<=4 then apply('g4,append([l1,l2],l3))+g55*difflist(a([l1[1]],[])*a([l1[2]],[]),l3)
		else if l1[1]<=4 then g55*apply('a,append([[l1[1]],[]],l3))
		else if l1[2]<=4 then g55*apply('a,append([[l1[2]],[]],l3))
		else if l3#[] then 0 else g55
	)
	else if l2#[] then
	(
		if not (predval(l2[1]<=4) and predval(l2[2]<=4)) then funmake('g5,append([l1,l2],l3))
		else if l2[1]<=4 and l2[2]<=4 then apply('g4,append([l1,l2],l3))
		else if l2[1]<=4 then -apply('a,append([[],[l2[1]]],l3))
		else if l2[2]<=4 then -apply('a,append([[],[l2[2]]],l3))
		else if l3#[] then sum(difflist(a([i],[])*a([],[i]),l3),i,1,4)
		else 1/g55+sum(a([i],[])*a([],[i]),i,1,4)
	)
	else funmake('g5,append([l1,l2],l3));

matchdeclare([dummy1,dummy2],true);
defrule(evpot,a([dummy1],[],dummy2)-a([dummy2],[],dummy1),-f([dummy1,dummy2],[]));
