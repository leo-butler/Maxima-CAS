LOAD("itensor");
DIM:5;
METRIC:G5;
/*:lisp ($defcon '%G5);
:lisp ($defcon '%G5 '%G5 '$KDELTA);*/

PREDVAL(prd):=BLOCK([RETVAL,SAVED_PREDERROR:PREDERROR],
	PREDERROR:FALSE,
	RETVAL:EV(prd,PRED)=TRUE OR EV(prd,PRED)=FALSE,
	PREDERROR:SAVED_PREDERROR,
	RETVAL
);

A(L1,L2,[L3])::=BUILDQ([U1:L1,U2:L2,U3:L3],IF MEMBER(5,U3) THEN 0 ELSE FUNMAKE('A,[U1,U2,SPLICE(U3)]));

G4(L1,L2,[L3])::=BUILDQ([U1:L1,U2:L2,U3:L3],IF MEMBER(5,U3) THEN 0 ELSE FUNMAKE('G4,[U1,U2,SPLICE(U3)]));

FUNLCONS(fun,lst):=BLOCK([i],
	FOR i THRU LENGTH(lst) DO fun:ENDCONS(lst[i],fun),
	EV(fun)
);

DIFFPROD(prd1,prd2,lst):= IF LENGTH(lst)=0 THEN prd1*prd2
ELSE
(
	DIFFPROD(FUNLCONS(prd1,[lst[1]]),prd2,REST(lst,1))+
	DIFFPROD(prd1,FUNLCONS(prd2,[lst[1]]),REST(lst,1))
);

G5(L1,L2,[L3])::=BUILDQ([U1:L1,U2:L2,U3:L3],
	IF MEMBER(5,U3) THEN 0
	ELSE IF U1#[] THEN
	(
		IF NOT (PREDVAL(U1[1]<=4) AND PREDVAL(U1[2]<=4)) THEN FUNMAKE('G5,[U1,U2,SPLICE(U3)])
		ELSE IF U1[1]<=4 AND U1[2]<=4 THEN G4(U1,U2,SPLICE(U3))+G55*DIFFPROD(A([U1[1]],[]),A([U1[2]],[]),U3)
		ELSE IF U1[1]<=4 THEN G55*A([U1[1]],[],SPLICE(U3))
		ELSE IF U1[2]<=4 THEN G55*A([U1[2]],[],SPLICE(U3))
		ELSE IF U3#[] THEN 0 ELSE G55
	)
	ELSE IF U2#[] THEN
	(
		IF NOT (PREDVAL(U2[1]<=4) AND PREDVAL(U2[2]<=4)) THEN FUNMAKE('G5,[U1,U2,SPLICE(U3)])
		ELSE IF U2[1]<=4 AND U2[2]<=4 THEN G4(U1,U2,SPLICE(U3))
		ELSE IF U2[1]<=4 THEN -A([],[U2[1]],SPLICE(U3))
		ELSE IF U2[2]<=4 THEN -A([],[U2[2]],SPLICE(U3))
		ELSE IF U3#[] THEN SUM(DIFFPROD(A([I],[]),A([],[I]),U3),I,1,4)
		ELSE 1/G55+SUM(A([I],[])*A([],[I]),I,1,4)
	)
	ELSE FUNMAKE('G5,[U1,U2,SPLICE(U3)])
);

MATCHDECLARE([DUMMY1,DUMMY2],TRUE);
DEFRULE(EVPOT,A([DUMMY1],[],DUMMY2)-A([DUMMY2],[],DUMMY1),-F([DUMMY1,DUMMY2],[]));
