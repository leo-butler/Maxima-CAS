/* Maxima script to test reading & writing a comma-separated file.
 * In Maxima: batchload("csv.mac")$
 * If test succeeds, prints several messages, all of which mention success.
 */

kill(all)$

load("numericalio.lisp")$
load("is_equal_array.lisp")$

prederror: false$

l_nested: [[KEY, XX, YY, ZZ, FOO, Bar, baz],
  [aa46, 7, 7, 16, FOO3, 2.71, 2.88],
  [aA31, 31, 61, 25, 916, 6.10, 741],
  [AA22, 61, 40, 13, 32.75, Bar2, 9.12],
  [AA16, 19, 25, 31, FOO7, 4.80, 697],
  [AA16, 13, 49, 7, 5.67, 2.54, 4.54],
  [AA58, 19, 28, 43, 4.04, 0.90, baz8],
  [AA34, 16, 22, 19, 4.87, 4.90, 2.85],
  [AA52, 28, 34, 7, FOO9, Bar4, 293],
  [AA52, 10, 43, 13, 12.125, 5.69, 0.00],
  [AA40, 7, 25, 40, 3.15, 7.54, 6.11]]$

m: apply(matrix, l_nested)$

m2: read_matrix("rectangular.csv")$

m3: read_matrix("really-csv.data", 'csv)$

m4: read_matrix("really-space-separated.csv", 'space)$

if is(equal(m, m2)) = true
  then print("success: rectangular.csv loaded as a matrix")
  else print("FAILED to load rectangular.csv as a matrix")$

if is(equal(m, m3)) = true
  then print("success: really-csv.data loaded as a matrix")
  else print("FAILED to load really-csv.data as a matrix")$

if is(equal(m, m4)) = true
  then print("success: really-space-separated.csv loaded as a matrix")
  else print("FAILED to load really-space-separated.csv as a matrix")$

write_data(m2, "tmp-matrix.csv")$
write_data(m2, "tmp-matrix.data", 'csv)$
write_data(m2, "tmp-matrix-2.csv", 'space)$

m5: read_matrix("tmp-matrix.csv")$
m6: read_matrix("tmp-matrix.data", 'csv)$
m7: read_matrix("tmp-matrix-2.csv", 'space)$

if is(equal(m2, m5)) = true
  then print("success: wrote .csv file, read again as matrix")
  else print("FAILED to write .csv file, read again as matrix")$

if is(equal(m2, m6)) = true
  then print("success: wrote .data file (using 'csv flag), read again as matrix")
  else print("FAILED to write .data file (using 'csv flag), read again as matrix")$

if is(equal(m2, m7)) = true
  then print("success: wrote .csv file (using 'space flag), read again as matrix")
  else print("FAILED to write .csv file (using 'space flag), read again as matrix")$

array(a, 10, 6)$
read_maxima_array("rectangular.data", a)$
write_data(a, "tmp-array.csv")$

array(a2, 10, 6)$
read_maxima_array("tmp-array.csv", a2)$

if is_equal_array(a, a2) = true
  then print("success: read space-separated, wrote csv, read csv into array")
  else print("FAILED to read space-separated, write csv, read csv into array")$
