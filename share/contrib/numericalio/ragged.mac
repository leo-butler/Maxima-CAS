/* Maxima script to test reading a data file with variable-length lines.
 * In Maxima: batchload("ragged.mac")$
 * If test succeeds, prints several messages, all of which mention success.
 */

kill(all)$

load("numericalio.lisp")$
load("my_flatten.mac")$

l_nested:[
[aa46,7,7,16,FOO3],
[aA31,31,61,25,9.16,513],
[AA16,13,49,7,5.67,2.54,4.54],
[AA52,7,FOO9,Bar4,2.93],
[AA40,7,25,40,3.15,7.54,0.00],
[aa46,1325,7,16,FOO3,2.71,2.88],
[aA31,31,61,25,9.16],
[AA58,19,28,43,4.04,0.90,baz8],
[AA34,16,175.25,2.85],
[AA40,7,25],
[AA22,617,40,Bar2,9.12],
[zz7b,123e-001,123s-001,123d-001,123b-001],
[w23q,123.456e-001,123.456s-001,123.456d-001,123.456b-001],
[q32w,123E-001,123S-001,123D-001,123B-001],
[t5u7,123.456E-001,123.456S-001,123.456D-001,123.456B-001],
[q129,"Foo","BAR","Foo \\ BAR \"baz quux\""]
]$

l: my_flatten(l_nested)$

kill(h)$
h[aa46]: [7,7,16,FOO3]$
h[aA31]: [31,61,25,9.16,513]$
h[AA16]: [13,49,7,5.67,2.54,4.54]$
h[AA52]: [7,FOO9,Bar4,2.93]$
h[AA40]: [7,25,40,3.15,7.54,0.00]$
h[aa46]: [1325,7,16,FOO3,2.71,2.88]$
h[aA31]: [31,61,25,9.16]$
h[AA58]: [19,28,43,4.04,0.90,baz8]$
h[AA34]: [16,175.25,2.85]$
h[AA40]: [7,25]$
h[AA22]: [617,40,Bar2,9.12]$
h[zz7b]: [123e-001,123s-001,123d-001,123b-001]$
h[w23q]: [123.456e-001,123.456s-001,123.456d-001,123.456b-001]$
h[q32w]: [123E-001,123S-001,123D-001,123B-001]$
h[t5u7]: [123.456E-001,123.456S-001,123.456D-001,123.456B-001]$
h[q129]: ["Foo","BAR","Foo \\ BAR \"baz quux\""]$

l2: read_list("ragged.data")$

l2_nested: read_nested_list("ragged.data")$

kill(h2)$
read_hashed_array("ragged.data", h2)$

prederror:false$
ntest : nsuccess : 0$

ntest : ntest + 1$
if is(equal(l, l2)) = true
  then (nsuccess : nsuccess + 1, print("success: ragged.data loaded as flat list"))
  else print("FAILED to load ragged.data as flat list")$

ntest : ntest + 1$
if is(equal(l_nested, l2_nested)) = true
  then (nsuccess : nsuccess + 1, print("success: ragged.data loaded as nested list"))
  else print("FAILED to load ragged.data as nested list")$

ntest : ntest + 1$
if is(equal(arrayinfo(h), arrayinfo(h2))) = true
  then (nsuccess : nsuccess + 1, print("success: ragged.data keys loaded"))
  else print("FAILED to load ragged.data keys")$

ntest : ntest + 1$
if is(equal(listarray(h), listarray(h2))) = true
  then (nsuccess : nsuccess + 1, print("success: ragged.data records loaded as hashed array"))
  else print("FAILED to load ragged.data records as hashed array")$

AA16: 16$
AA22: 22$
aA31: 31$
AA34: 34$
AA40: 40$
aa46: 46$
AA52: 52$
AA58: 58$
FOO3: 13$

FOO9: 27.25$
Bar4: %pi$
baz8: -5.75$
Bar2: -1217$

l_dot_l: l . transpose(l)$
l2_dot_l2: l2 . transpose(l2)$

ntest : ntest + 1$
if is(equal(ev(l_dot_l - l2_dot_l2), 0)) = true
  then (nsuccess : nsuccess + 1, print("success: ragged.data variables assigned"))
  else print("FAILED to assign ragged.data variables")$

print ("summary: nsuccess / ntest => ", nsuccess, "/", ntest);
