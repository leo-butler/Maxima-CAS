/*               COPYRIGHT NOTICE
 
Copyright (C) 2006-2007 Michel Van den Bergh
 
This program is free software; you can redistribute
it and/or modify it under the terms of the
GNU General Public License as published by
the Free Software Foundation; either version 2
of the License, or (at your option) any later version.
 
This program is distributed in the hope that it
will be useful, but WITHOUT ANY WARRANTY;
without even the implied warranty of MERCHANTABILITY
or FITNESS FOR A PARTICULAR PURPOSE. See the
GNU General Public License for more details at
http://www.gnu.org/copyleft/gpl.html
*/
kill(all);
done$
block([],load("levin.mac"),done);
done$
fpprec:16;
16$
is(bflevin_u_sum(1/n^2,n,1)-%pi^2/6<10^(-fpprec+1));
true$
fpprec:30;
30$
is(bflevin_u_sum(1/n^2,n,1)-%pi^2/6<10^(-fpprec+1))$
true$
pi_4(k):=(k-2*fix(k/2))*(-1)^((k-1)/2)/k;
pi_4(k):=(k-2*fix(k/2))*(-1)^((k-1)/2)/k$
is(bflevin_u_sum(pi_4(k),k,1)-%pi/4<10^(-fpprec+1));
true$
pi_4_alt1(k):=if oddp(k) then (-1)^((k-1)/2)/k else 0;
pi_4_alt1(k):=if oddp(k) then (-1)^((k-1)/2)/k else 0$
is(bflevin_u_sum(funmake(pi_4_alt1,[k]),k,1)-%pi/4<10^(-fpprec+1));
true$
pi_4_alt2(k):=if oddp(k) then (-1)^((k-1)/2)/k else if evenp(k) then 0 else funmake(pi_4_alt2,[k]);
pi_4_alt2(k):=if oddp(k) then (-1)^((k-1)/2)/k else if evenp(k) then 0 else funmake(pi_4_alt2,[k])$
is(bflevin_u_sum(pi_4_alt2(k),k,1)-%pi/4<10^(-fpprec+1));
true$
/* note a is the name of a parameters */
sort(listofvars(levin_u_sum(a[n],n,1,2)));
[a[1],a[2]]$
arrays;
[]$
a[n]:=n^2;
a[n]:=n^2$
levin_u_sum(a[n],n,1,2);
5$
arrays;
[a]$
kill(a);
done$
/* note start is the name of a parameters */
sort(listofvars(levin_u_sum(start[n],n,1,2)));
[start[1],start[2]]$
start[n]:=n^3;
start[n]:=n^3$
levin_u_sum(start[n],n,1,2);
9$
arrays;
[start]$
kill(start);
done$
/* note index_var is the name of a parameters */
sort(listofvars(levin_u_sum(index_var[n],n,1,2)));
[index_var[1],index_var[2]]$
index_var[n]:=n^4;
index_var[n]:=n^4$
levin_u_sum(index_var[n],n,1,2);
17$
arrays;
[index_var]$
kill(index_var);
done$
sort(listofvars(levin_u_sum(a[n],n,0,10)));
[a[0],a[1],a[2],a[3],a[4],a[5],a[6],a[7],a[8],a[9]]$
levin_zeta(s):=levin_u_sum(1/n^s,n,1,10);
levin_zeta(s):=levin_u_sum(1/n^s,n,1,10)$
block([],load("bffac"),done);
done$
fpprec:16$
16;
/* is the name of a parameter */
is((bflevin_u_sum(1/a^2,a,1)-%pi^2/6)<10^(-fpprec+1));
true$
is(levin_zeta(1.1)-bfzeta(1.1,10)<10^-5);
true$
is(levin_zeta(1.01)-bfzeta(1.01,10)<10^-4);
true$
bflevin_u_sum(1/n-log(1+1/n),n,1);
bflevin_u_sum_failed$
fpprec:60;
60$
is(levin_u_sum(1/n-log(1+1/n),n,1,31)-%gamma<10^(-29));
true$

