foo : random_matrix (10, 5);
bar : foo [all, 1];
baz : amatrixmap (lambda ([x], is (x > 1/8)), bar);
quux : amatrixmap (lambda ([x], is (x > 3/4)), bar);
mumble : foo [1, all];
blurf : amatrixmap (lambda ([x], is (x < 1/2)), mumble);
snort : amatrixmap (lambda ([x], is (x < 5/8)), mumble);

/* integer */

foo [1, 1];

/* 'all */

foo [all, 1];
foo [1, all];

foo [all, all];

/* list of integers */

foo [[1, 5, 3], 1];
foo [1, [2, 1, 4]];

foo [[2, 3, 7], all];
foo [all, [5, 4, 3]];

foo [[5, 7, 10], [2, 5]];

/* amatrix of booleans */

foo [baz, 4];
foo [8, blurf];

foo [baz, all];
foo [all, blurf];

foo [baz, [1, 5]];
foo [[2, 7, 9], blurf];

foo [baz, blurf];

/* relational expression */

foo [bar >= 1/4, 4];
foo [6, 3/4 >= mumble];

foo [bar > 1/2, all];
foo [all, mumble < 1/2];

foo [bar # 1/2, [5, 2]];
foo [[4, 3, 2], mumble < 3/7];

foo [bar <= 7/8, blurf];
foo [baz, mumble > 1/8];

foo [bar > 2/7, 8/9 >= mumble];

/* boolean expression */

foo [not baz, 3];
foo [7, blurf and snort];

foo [baz and not quux, all];
foo [all, not blurf or snort];

foo [baz or quux, [1, 2, 4]];
foo [[3, 2, 5], not blurf and snort];

foo [quux and baz, snort];
foo [quux, not blurf];

foo [not quux and not baz, mumble < 0.95];
foo [bar > 0.15, not blurf or not snort];

foo [quux or baz, blurf or not snort];


