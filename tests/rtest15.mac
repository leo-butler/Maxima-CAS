/* This file contains tests added since April 2002 */

kill(all);
done$

/* apropos function added 7 April 2002 */
apropos('TR_OPTIMIZE_MAX_LOOP);
[TR_OPTIMIZE_MAX_LOOP]$

/* Test introduced 7 April 2002. Bug fix incorporated 9 June 2002 */
integrate(3^log(x),x);
3^((1/LOG(3)+1)*LOG(x))/((1/LOG(3)+1)*LOG(3))$

/* Wester[1995] Problem 84 - Known failure - 7 April 2002 */
integrate(sqrt(x+1/x-2),x,0,1);
4/3$

/* second thru tenth code added 9 June 2002 */
l : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]$
FIRST(l);
1$ 
SECOND(l);
2$
THIRD(l);
3$
FOURTH(l);
4$
FIFTH(l);
5$
SIXTH(l);
6$
SEVENTH(l);
7$
EIGHTH(l);
8$
NINTH(l);
9$
TENTH(l);
10$

/* ASSOC tests */
ASSOC(1,[x=2]);
FALSE$
ASSOC(x,[x=2]);
2$
ASSOC(1,[x=2],foobar);
foobar$

/* Some older versions of GCL had a bug that resulted in a failure of the */
/* following. */
primep(80630964769);
TRUE$


/* Maxima has a bug causing an incorrect answer for the second integral. */
integrate(diff(f(x,y),x,1,y,1),x);
'DIFF(f(x,y),y,1)$
integrate(diff(f(x,y),x,1,y,1),y);
'DIFF(f(x,y),x,1)$
/* The same bug causes a bug with the second integral in this set. */
h(x,y):=x*y*diff(f(x,y),x,1,y,1);
h(x,y):=x*y*DIFF(f(x,y),x,1,y,1)$
integrate(h(x,y),x);
'INTEGRATE(x*'DIFF(f(x,y),x,1,y,1)*y,x)$
integrate(h(x,y),y);
'INTEGRATE(x*'DIFF(f(x,y),x,1,y,1)*y,y)$

/* Trigrat example from manual - Fixed June 2002 */
trigrat(sin(3*a)/sin(a+%pi/3));
sqrt(3)*sin(2*a)+cos(2*a)-1;

/* compile() will fail with gcl if gcc not installed */
f(x):=x+2;
f(x):=x+2;
f(2);
4;
compile(f);
[f];
f(2);
4;
kill(f);
done;
/* This should kill f, but doesn't which upsets subsequent tests
   Redefining it then killing it does the right thing */
f(x):=x+3;
f(x):=x+3;
kill(f);
done;

/* Trignometric and hyperbolic functions of complex arguments */
sin(%i*z);
%i*sinh(z);
cos(%i*z);
cosh(z);
tan(%i*z);
%i*tanh(z);
csc(%i*z);
-%i*csch(z);
sec(%i*z);
sech(z);
cot(%i*z);
-%i*coth(z);
sinh(%i*z);
%i*sin(z);
cosh(%i*z);
cos(z);
tanh(%i*z);
%i*tan(z);
csch(%i*z);
-%i*csc(z);
sech(%i*z);
sec(z);
coth(%i*z);
-%i*cot(z);
