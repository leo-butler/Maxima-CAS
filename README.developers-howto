  Maxima project CVS / build system HOWTO


  1  General
      
      Makefile.am is the file to modify, NOT Makefile
      (Makefile is generated automatically from Makefile.am)

      "make install" catches Makefile problems
      that are not detected by "make" alone

      Adding / removing files often leads to Makefile problems


  2  Renaming something

      --  Remove the old something and add the new something.
          CVS doesn't understand renaming
         

  3  Adding / removing a file in maxima/src

      --  Copy new file / remove old file
          and execute "cvs add" / "cvs rm"
             
          Then execute "cvs commit"
          (Otherwise add / rm has no effect!)

      --  Add / remove file name from maxima/src/Makefile.am

      --  Add / remove file name from maxima/src/*-depends.mk
             
          NOTE: There are several *-depends.mk files. These are
          theoretically updated automatically but to the best
          of my knowledge it is necessary to fix them by hand.

      --  Add / remove file name in maxima/src/maxima.system

      --  Verify that "sh bootstrap; ./configure --enable-foolisp; make; make install"
          and "run_testsuite();" all succeed
          
      --  Execute "cvs commit"


  4  Adding / removing a file in maxima/share

      --  Copy new file / remove old file
          and execute "cvs add" / "cvs rm"

      --  Add / remove file name in maxima/share/Makefile.am

      --  Verify that "sh bootstrap; ./configure --enable-foolisp; make; make install"
          and "run_testsuite();" all succeed

      --  Execute "cvs commit"


  5.1  Creating a new share package

       E.g., new package name = my_package

      -- Naming conventions:
         
         write_long_names_like_this, and NotLikeThisPlease, norlikethiseitherthanks

         spell_out_names, dnt_try_sv_typng_w_abbrvs_tnx

      -- Create a new directory my_package

      -- Put Lisp and/or Maxima files in the directory

         At least one file must be named my_package.lisp or my_package.mac
         Otherwise load(my_package) fails

      -- Create texinfo documentation file my_package.texi
         (PLEASE CREATE DOCUMENTATION, THANK YOU)

         my_package.texi MUST have the same form as maxima/share/template.texi

      -- Create test file rtest_my_package.mac
         (PLEASE CREATE A TEST FILE, THANK YOU)

         Test file contains pairs of expressions: input expression, then expected result

         batch ("my_package/rtest_my_package.mac", test);
         executes the test


  5.2  Adding a directory in maxima/share

      NOTE: Removing a directory is probably more or less a reversal
      of the steps for adding. Not sure if I've ever done that.

      --  Make the new directory and put the new files in it

      --  In the directory above the one you want to add,
          "cvs add my_package"
          
          NOTE: no need to commit after "cvs add" when adding a directory

      --  In the directory my_package, "cvs add file1 file2 file3 ..."

      --  Put the my_package files on the file list of maxima/share/Makefile.am

      --  Add my_package to SHARE-SUBDIRS-LIST in maxima/src/init-cl.lisp

      --  Move my_package.texi to doc/info
      
          Put my_package.texi on the list of files in doc/info/Makefile.am

          Put my_package on the list of topics in doc/info/maxima.texi
          Probably best way to do that is to copy an existing item, e.g., mnewton

      --  Verify that "sh bootstrap; ./configure --enable-foolisp; make; make install"
          and "run_testsuite();" all succeed

      --  Execute "cvs commit"


  6  Adding / removing a file in maxima/tests

      --  Copy new file / remove old file
          and execute "cvs add" / "cvs rm"

      --  Add / remove file name in maxima/tests/Makefile.am

      --  Add / remove file name in maxima/tests/testsuite.lisp

      --  Verify that "sh bootstrap; ./configure --enable-foolisp; make; make install"
          and "run_testsuite();" all succeed

      --  Execute "cvs commit"
