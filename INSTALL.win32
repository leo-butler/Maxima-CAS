Executive Summary
=================

Maxima can now be built under Windows without recourse to any
unix-like utilities. To do so, follow the purely lisp-based build
procedure in INSTALL.lisp.

Maxima can be simply compiled and installed under MSYS or Cygwin by
following the GNU Autotools instructions in INSTALL. With a few more
steps, Maxima will create a windows installer executable.  The
instructions for doing so are contained in this file. Note, however,
that this process is not as polished as the unix-like install process.

In principle, creating a Windows (X)maxima installer executable is a
straightforward exercise. In order to create the maxima windows
installer from the maxima tarball distribution, I do the following in
a msys window:
-----------------------------
./configure  --with-wish=wish84 --prefix=c:/maxima
make
make install
make iss
-----------------------------
I then run InnoSetup on the generated maxima.iss file. That is all it
takes.


External Requirements
=====================

1) MSYS+MinGW
2) GCL
3) Tcl/SK
4) Perl
5) Starkit sdk, et. al.
6) InnoSetup

Detailed Instructions
=====================

I am posting my notes here in hopes that they will be corrected
by people who know better. I don't know much about windows (and it
shows.) Also, I am reconstructing these steps from memory, so I may be
leaving out steps.

The instructions below apply to the maxima release tarball. In order
to build from the cvs repository, cvs, autoconf and automake are also
required. Follow the directions in INSTALL.cvs before proceding.

1) Get a working msys+mingw installation from www.mingw.org. At this
time (June 2004) it is essential to install the versions of gcc and
binutils listed here to obtain a working gcl.  The files are available
from <http://sourceforge.net/project/showfiles.php?group_id=2435>:
   a) Get MinGW-3.1.0-1.exe. I installed it in c:\MinGW
   b) Get MSYS-1.0.10.exe. I installed it in c:\msys\1.0. 
      The installer should magically find your mingw installation
      and add it to your path.
   c) Install tcltk-8.4.1-1.exe
   d) Install gcc-3.3.1
   e) Install binutils-2.14.90 from 
      ftp://ftp.sf.net/m/mi/mingw/binutils-2.14.90-20030807-1.tar.gz

NOTE: gcc 3.3.3 and gcc 3.4.0 do NOT work; likewise binutils 2.13.90
and 2.15.90.

2) Get a working GCL 

Get the GCL 2.6.2 release tarball from any GNU mirror See
<http://savannah.gnu.org/projects/gcl/>.  I installed it in the 
mingw path /usr/local/src/gcl-2.6.2 == c:\msys\1.0\local\src\gcl-2.6.2

Once the gcl sources are available, compile it with

./configure  --enable-ansi 
make
make install

For extra portability, I do, instead,

./configure --enable-ansi
cd gmp3
./configure --build=i486-unknown-linux-gnu
cd ..
make
make install

3) Install the msys tcltk-8.4

4) Get and install ActivePerl from
<http://www.activestate.com>. Follow the download link at
<http://www.activestate.com/Products/ActivePerl/>.

5) Get and install TclKit and Starkit sdx from
<http://www.equi4.com>. Frankly, I found this step confusing. Although
Starkit are very simply to use, it took me quite a while to understand
what needed to be download, installed etc. In the end, I have the
following files installed in c:\star
	sdx.bat  sdx.kit  tclkit.exe  tclkitsh.exe

Download sdx.bat and sdx.kit from
<http://www.equi4.com/pub/sk/>. Download tclkit-win32.exe.gz and
tclkitsh-win32.exe.gz from <http://www.equi4.com/pub/tk/>.

6) Get and install Inno Setup from
<http://www.jrsoftware.org/isinfo.php>. 

7) Edit your MSYS startup paths in c:\msys\1.0\etc\profile to put gcl,
tcltk and tclkitsh in your PATH. I did so by adding the following line
after the initial setting of PATH:
        export PATH="/c/gcl/bin:/c/tcltk/bin:/c/star:$PATH"

8) You should now be ready to compile and install maxima. configure
maxima so that it will install in some sort of temporary
directory. The directory does not need to exist ahead of time.

./configure  --with-wish=wish84 --prefix=c:/maxima
make
make check
make install

The "check" should pass all tests except those listed as known
failures.

9) The next step depends on the install locations of TCL/TK, sdx,
tclkit, tclkitsh and gcc. The system for determining these locations
is not as elegant as autoconf (configure). Instead, the system
defaults to the directories on my build machine. However, all the
defaults are override-able on the make command line. If you have all
the files installed in the (my) default locations, the next step is
simply

make iss

If, for example, you have sdx installed in d:\other\starkit, you would
type

make iss SDXDIR=/d/other/starkit

The override-able variables and their defaults are:

TCLKITSH = tclkitsh.exe
TCLKITDIR = /c/star
SDXDIR = $(TCLKITDIR)
TCLTKDIR = /c/tcltk
TCLTKINCFLAGS = -I $(TCLTKDIR)/include
TCLTKLINKFLAGS = -L $(TCLTKDIR)/lib
GCCPREFIX=/mingw

To see how they are used, look in interfaces/xmaxima/win32/Makefile.in
and Makefile.am in the top level maxima directory.

10) Once "make iss" is complete, run Inno Setup on the maxima.iss
file. I recommend completely removing the temporary maxima install
directory (c:/maxima above) before testing the installation.

11) Test the installed package.  For example
 o Run the maxima testsuite: run_testsuite()
 o Try compling a function.  This has been a problem in the past
    - f(x):=x+2;
    - compile(f);
    - f(2);
 o Plot something
 o try out the on-line help: describe(sin)

 LocalWords:  iss Tcl mingw gmp linux

Local Variables: ***
mode: Text ***
End: ***