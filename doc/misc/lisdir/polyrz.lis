Listing of compilation of file /cygdrive/e/temp/maxima/src/polyrz.lisp
on 2002-12-17 13:35:33 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/polyrz.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE POLYRZ)-2|
(CONST 0) = POLYRZ
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; POLYRZ
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL ERRRJFFLAG $PROGRAMMODE ...))-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (GENPREFIX A_5))-4|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(LOAD-MACSYMA-MACROS RATMAC)-5|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $REALROOTS N ...)-6|
(CONST 0) = $REALROOTS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $REALROOTS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $REALROOTS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $REALROOTS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $REALROOTS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $REALROOTS
8     (SKIP&RET 1)


Disassembly of function $REALROOTS
(CONST 0) = N
(CONST 1) = EXP
(CONST 2) = 1
(CONST 3) = $ROOTSEPSILON
(CONST 4) = 2
(CONST 5) = NARG1
(CONST 6) = "Wrong number of arguments - REALROOTS"
(CONST 7) = MERROR
(CONST 8) = MEQHK
(CONST 9) = $RATP
(CONST 10) = $RATDISREP
(CONST 11) = MNUMP
(CONST 12) = MNEGP
(CONST 13) = 0
(CONST 14) = 
"Second argument to REALROOTS was not a~
		      positive number: ~M"
(CONST 15) = $KEEPFLOAT
(CONST 16) = STURMSEQ
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: ($ROOTSEPSILON EXP N)
writes special variable : (EXP)
56 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 71)                         ; LENGTH
3     (BIND 0)                            ; N
5     (NIL)
6     (BIND 1)                            ; EXP
8     (NIL&PUSH)
9     (GETVALUE&PUSH 0)                   ; N
11    (CONST&PUSH 2)                      ; 1
12    (CALLSR&JMPIF 1 45 L75)             ; =
16    (GETVALUE&PUSH 0)                   ; N
18    (CONST&PUSH 4)                      ; 2
19    (CALLSR&JMPIF 1 45 L80)             ; =
23    (CONST&PUSH 6)                      ; "Wrong number of arguments - REALROOTS"
24    (CALL1 7)                           ; MERROR
26    L26
26    (CONST&PUSH 2)                      ; 1
27    (LOAD&PUSH 9)
28    (CALL2&PUSH 5)                      ; NARG1
30    (CALL1 8)                           ; MEQHK
32    (SETVALUE 1)                        ; EXP
34    (PUSH)
35    (CALL1&JMPIFNOT 9 L44)              ; $RATP
38    (GETVALUE&PUSH 1)                   ; EXP
40    (CALL1 10)                          ; $RATDISREP
42    (SETVALUE 1)                        ; EXP
44    L44
44    (LOAD&PUSH 0)
45    (CALL1&JMPIFNOT 11 L56)             ; MNUMP
48    (LOAD&PUSH 0)
49    (CALL1&JMPIF 12 L56)                ; MNEGP
52    (LOAD&PUSH 0)
53    (JMPIFNOTEQTO 13 L60)               ; 0
56    L56
56    (CONST&PUSH 14)                     ; "Second argument to REALROOTS was not a~
		      positive number: ~M"
57    (LOAD&PUSH 1)
58    (CALL2 7)                           ; MERROR
60    L60
60    (NIL)
61    (BIND 15)                           ; $KEEPFLOAT
63    (GETVALUE&PUSH 1)                   ; EXP
65    (LOAD&PUSH 4)
66    (CALL2 16)                          ; STURMSEQ
68    (UNBIND1)
69    (SKIP 1)
71    (UNBIND 2)
73    (SKIP&RET 2)
75    L75
75    (GETVALUE 3)                        ; $ROOTSEPSILON
77    (STORE 0)
78    (JMP L26)
80    L80
80    (CONST&PUSH 4)                      ; 2
81    (LOAD&PUSH 9)
82    (CALL2 5)                           ; NARG1
84    (STORE 0)
85    (JMP L26)


Disassembly of function #:|(DEFUN UNIPOLY (EXP) ...)-7|
(CONST 0) = UNIPOLY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNIPOLY>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNIPOLY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNIPOLY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNIPOLY>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNIPOLY
8     (SKIP&RET 1)


Disassembly of function UNIPOLY
(CONST 0) = EXP
(CONST 1) = RATF
(CONST 2) = V
(CONST 3) = "Argument must be a univariate polynomial"
(CONST 4) = MERROR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (EXP)
writes special variables : (V EXP)
40 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; EXP
3     (GETVALUE&PUSH 0)                   ; EXP
5     (CALL1 1)                           ; RATF
7     (CDR)
8     (CAR)
9     (SETVALUE 0)                        ; EXP
11    (JMPIFATOM L43)
13    (NIL&PUSH)
14    (GETVALUE 0)                        ; EXP
16    (CDR&PUSH)
17    (LOAD 1)
18    (BIND 2)                            ; V
20    (LOAD&JMPIFNOT 3 L37)
23    L23
23    (LOAD&CAR&PUSH 3)
25    (LOAD 0)
26    (SETVALUE 2)                        ; V
28    (SKIP 1)
30    (JMPIFCONSP L49)
32    (LOAD&CDR&STORE 3)
34    (LOAD&JMPIF 3 L23)
37    L37
37    (T)
38    L38
38    (UNBIND1)
39    (SKIP 2)
41    (JMPIF L52)
43    L43
43    (CONST&PUSH 3)                      ; "Argument must be a univariate polynomial"
44    (CALL1 4)                           ; MERROR
46    L46
46    (UNBIND1)
47    (SKIP&RET 2)
49    L49
49    (NIL)
50    (JMP L38)
52    L52
52    (GETVALUE 0)                        ; EXP
54    (JMP L46)


Disassembly of function #:|(DEFUN MAKRAT (PT) ...)-8|
(CONST 0) = MAKRAT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKRAT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKRAT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKRAT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKRAT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAKRAT
8     (SKIP&RET 1)


Disassembly of function MAKRAT
(CONST 0) = PT
(CONST 1) = MAXIMA-RATIONALIZE
(CONST 2) = 1
(CONST 3) = $BFLOATP
(CONST 4) = BIGFLOAT2RAT
(CONST 5) = "~M Non-numeric argument"
(CONST 6) = MERROR
(CONST 7) = RAT
(CONST 8) = "~M Non-numeric argument"
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (PT)
48 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; PT
3     (GETVALUE&PUSH 0)                   ; PT
5     (CALLS2&JMPIF 15 L38)               ; FLOATP
8     (GETVALUE&PUSH 0)                   ; PT
10    (CALLS2&JMPIF 8 L44)                ; NUMBERP
13    (GETVALUE&PUSH 0)                   ; PT
15    (CALL1&JMPIF 3 L50)                 ; $BFLOATP
18    (GETVALUE 0)                        ; PT
20    (JMPIFATOM L56)
22    (GETVALUE 0)                        ; PT
24    (CAR)
25    (CAR&PUSH)
26    (JMPIFEQTO 7 L59)                   ; RAT
29    (CONST 8)                           ; "~M Non-numeric argument"
30    L30
30    (PUSH)
31    (GETVALUE&PUSH 0)                   ; PT
33    (CALL2 6)                           ; MERROR
35    L35
35    (UNBIND1)
36    (SKIP&RET 2)
38    L38
38    (GETVALUE&PUSH 0)                   ; PT
40    (CALL1 1)                           ; MAXIMA-RATIONALIZE
42    (JMP L35)
44    L44
44    (GETVALUE&PUSH 0)                   ; PT
46    (CONST 2)                           ; 1
47    (CONS)
48    (JMP L35)
50    L50
50    (GETVALUE&PUSH 0)                   ; PT
52    (CALL1 4)                           ; BIGFLOAT2RAT
54    (JMP L35)
56    L56
56    (CONST 5)                           ; "~M Non-numeric argument"
57    (JMP L30)
59    L59
59    (GETVALUE 0)                        ; PT
61    (CDR)
62    (CAR&PUSH)
63    (GETVALUE 0)                        ; PT
65    (CDR)
66    (CDR)
67    (CAR)
68    (CONS)
69    (JMP L35)


Disassembly of function #:|(DECLARE-TOP (SPECIAL EQUATIONS))-9|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN STURMSEQ (EXP EPS) ...)-10|
(CONST 0) = STURMSEQ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STURMSEQ>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STURMSEQ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STURMSEQ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STURMSEQ>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; STURMSEQ
8     (SKIP&RET 1)


Disassembly of function STURMSEQ
(CONST 0) = EXP
(CONST 1) = VARLIST
(CONST 2) = EQUATIONS
(CONST 3) = $FACTORFLAG
(CONST 4) = $RATPRINT
(CONST 5) = $RATFAC
(CONST 6) = $PROGRAMMODE
(CONST 7) = (MLIST)
(CONST 8) = UNIPOLY
(CONST 9) = PABS
(CONST 10) = PSQFR
(CONST 11) = MAKRAT
(CONST 12) = FINDROOTS
(CONST 13) = MULTOUT
(CONST 14) = SOLVE2
(CONST 15) = (MLIST)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (EQUATIONS EXP $PROGRAMMODE)
40 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; EXP
3     (NIL)
4     (BIND 1)                            ; VARLIST
6     (NIL)
7     (BIND 2)                            ; EQUATIONS
9     (NIL)
10    (BIND 3)                            ; $FACTORFLAG
12    (NIL)
13    (BIND 4)                            ; $RATPRINT
15    (NIL)
16    (BIND 5)                            ; $RATFAC
18    (GETVALUE 6)                        ; $PROGRAMMODE
20    (JMPIF L45)
22    (GETVALUE&PUSH 0)                   ; EXP
24    (CALL1&PUSH 8)                      ; UNIPOLY
26    (CALL1&PUSH 9)                      ; PABS
28    (CALL1&PUSH 10)                     ; PSQFR
30    (LOAD&PUSH 20)
31    (CALL1&PUSH 11)                     ; MAKRAT
33    (CALL2&PUSH 12)                     ; FINDROOTS
35    (CALL1 14)                          ; SOLVE2
37    (CONST&PUSH 15)                     ; (MLIST)
38    (GETVALUE 2)                        ; EQUATIONS
40    (CONS)
41    L41
41    (UNBIND 6)
43    (SKIP&RET 3)
45    L45
45    (CONST&PUSH 7)                      ; (MLIST)
46    (GETVALUE&PUSH 0)                   ; EXP
48    (CALL1&PUSH 8)                      ; UNIPOLY
50    (CALL1&PUSH 9)                      ; PABS
52    (CALL1&PUSH 10)                     ; PSQFR
54    (LOAD&PUSH 21)
55    (CALL1&PUSH 11)                     ; MAKRAT
57    (CALL2&PUSH 12)                     ; FINDROOTS
59    (CALL1 13)                          ; MULTOUT
61    (CONS)
62    (JMP L41)


Disassembly of function #:|(DECLARE-TOP (UNSPECIAL EQUATIONS))-11|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN STURM1 (POLY EPS &AUX ...) ...)-12|
(CONST 0) = STURM1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STURM1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STURM1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STURM1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STURM1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; STURM1
8     (SKIP&RET 1)


Disassembly of function STURM1
(CONST 0) = B
(CONST 1) = ROOT-BOUND
(CONST 2) = 1
(CONST 3) = ISOLAT
(CONST 4) = REFINE
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (B)
writes special variable : (B)
40 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; B
3     (NIL&PUSH)
4     (LOAD&CDR&PUSH 6)
6     (CALL1&PUSH 1)                      ; ROOT-BOUND
8     (CONST 2)                           ; 1
9     (CONS)
10    (SETVALUE 0)                        ; B
12    (LOAD&PUSH 6)
13    (GETVALUE 0)                        ; B
15    (CAR&PUSH)
16    (CALLSR&PUSH 0 54)                  ; -
19    (GETVALUE 0)                        ; B
21    (CDR)
22    (CONS&PUSH)
23    (GETVALUE&PUSH 0)                   ; B
25    (CALL 3 3)                          ; ISOLAT
28    (STORE 0)
29    (NIL&PUSH)
30    (LOAD&PUSH 1)
31    (JMP L50)
33    L33
33    (LOAD&CAR&PUSH 0)
35    (LOAD&PUSH 9)
36    (LOAD&CAR&PUSH 1)
38    (LOAD&CDR&PUSH 2)
40    (LOAD&PUSH 11)
41    (CALL&PUSH 4 4)                     ; REFINE
44    (LOAD&CONS&STORE 2)
46    (SKIP 1)
48    (LOAD&CDR&STORE 0)
50    L50
50    (LOAD&PUSH 0)
51    (CALLS1&JMPIFNOT 146 L33)           ; ENDP
54    (SKIP 1)
56    (LOAD&PUSH 0)
57    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
59    (SKIP 2)
61    (UNBIND1)
62    (SKIP&RET 3)


Disassembly of function #:|(DEFUN ROOT-BOUND (P) ...)-13|
(CONST 0) = ROOT-BOUND
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ROOT-BOUND>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROOT-BOUND
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ROOT-BOUND
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ROOT-BOUND>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ROOT-BOUND
8     (SKIP&RET 1)


Disassembly of function ROOT-BOUND
(CONST 0) = P
(CONST 1) = N
(CONST 2) = COEF
(CONST 3) = LOG2
(CONST 4) = 1
(CONST 5) = 2
(CONST 6) = CEIL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (N COEF P)
writes special variables : (P COEF N)
57 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (NIL)
4     (BIND 1)                            ; N
6     (PUSH-NIL 2)
8     (NIL)
9     (BIND 2)                            ; COEF
11    (NIL&PUSH)
12    (GETVALUE 0)                        ; P
14    (CAR)
15    (SETVALUE 1)                        ; N
17    (GETVALUE 0)                        ; P
19    (CDR)
20    (CAR&PUSH)
21    (CALLS2&STORE 158 5)                ; ABS
24    (PUSH)
25    (CALL1&PUSH 3)                      ; LOG2
27    (CALLS2&STORE 151 4)                ; 1-
30    (CONST 4)                           ; 1
31    (STORE 0)
32    (JMP L75)
34    L34
34    (GETVALUE 0)                        ; P
36    (CDR)
37    (CAR&PUSH)
38    (CALLS2 158)                        ; ABS
40    (SETVALUE 2)                        ; COEF
42    (PUSH)
43    (LOAD&PUSH 6)
44    (CALLSR&JMPIF 1 47 L75)             ; <
48    (LOAD&PUSH 0)
49    (CONST&PUSH 4)                      ; 1
50    (GETVALUE&PUSH 2)                   ; COEF
52    (CALL1&PUSH 3)                      ; LOG2
54    (LOAD&PUSH 7)
55    (CALLSR&PUSH 1 54)                  ; -
58    (GETVALUE&PUSH 1)                   ; N
60    (GETVALUE 0)                        ; P
62    (CAR&PUSH)
63    (CALLSR&PUSH 1 54)                  ; -
66    (CALL2&PUSH 6)                      ; CEIL
68    (CALLSR&PUSH 2 53)                  ; +
71    (CALLSR&STORE 1 51 0)               ; MAX
75    L75
75    (GETVALUE 0)                        ; P
77    (CDR)
78    (CDR)
79    (SETVALUE 0)                        ; P
81    (JMPIF L34)
83    (CONST&PUSH 5)                      ; 2
84    (LOAD&PUSH 1)
85    (CALLS2 154)                        ; EXPT
87    (SKIP 1)
89    (UNBIND1)
90    (SKIP 2)
92    (UNBIND 2)
94    (SKIP&RET 2)


Disassembly of function #:|(DEFUN CEIL (A B) ...)-14|
(CONST 0) = CEIL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CEIL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CEIL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CEIL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CEIL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CEIL
8     (SKIP&RET 1)


Disassembly of function CEIL
(CONST 0) = A
(CONST 1) = B
(CONST 2) = QUOT
(CONST 3) = SIGNUM
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B A)
14 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; B
6     (GETVALUE&PUSH 0)                   ; A
8     (GETVALUE&PUSH 1)                   ; B
10    (CALL2&PUSH 2)                      ; QUOT
12    (GETVALUE&PUSH 0)                   ; A
14    (GETVALUE&PUSH 1)                   ; B
16    (CALLS2&PUSH 184)                   ; REM
18    (CALL1&PUSH 3)                      ; SIGNUM
20    (CALLSR 2 53)                       ; +
23    (UNBIND 2)
25    (SKIP&RET 3)


Disassembly of function #:|(DEFUN STURMAPC (FN LLIST MULTIPLICITY) ...)-15|
(CONST 0) = STURMAPC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STURMAPC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STURMAPC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STURMAPC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STURMAPC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; STURMAPC
8     (SKIP&RET 1)


Disassembly of function STURMAPC
(CONST 0) = FN
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (FN)
20 byte-code instructions:
0     L0
0     (LOAD 3)
1     (BIND 0)                            ; FN
3     (LOAD&JMPIFNOT 5 L25)
6     (GETVALUE&PUSH 0)                   ; FN
8     (LOAD&CAR&PUSH 6)
10    (FUNCALL&PUSH 1)
12    (LOAD&PUSH 5)
13    (GETVALUE&PUSH 0)                   ; FN
15    (LOAD&CDR&PUSH 8)
17    (LOAD&PUSH 8)
18    (JSR L0)
20    (CONS)
21    (CONS)
22    L22
22    (UNBIND1)
23    (SKIP&RET 4)
25    L25
25    (NIL)
26    (JMP L22)


Disassembly of function #:|(DEFUN FINDROOTS (L EPS) ...)-16|
(CONST 0) = FINDROOTS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FINDROOTS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FINDROOTS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FINDROOTS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FINDROOTS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FINDROOTS
8     (SKIP&RET 1)


Disassembly of function FINDROOTS
(CONST 0) = L
(CONST 1) = STURMOUT
(CONST 2) = STURM1
(CONST 3) = STURMAPC
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
36 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; L
3     (GETVALUE 0)                        ; L
5     (JMPIFNOT L40)
7     (GETVALUE 0)                        ; L
9     (CAR&PUSH)
10    (CALLS2&JMPIF 8 L43)                ; NUMBERP
13    (CONST&PUSH 1)                      ; STURMOUT
14    (GETVALUE 0)                        ; L
16    (CAR&PUSH)
17    (LOAD&PUSH 6)
18    (CALL2&PUSH 2)                      ; STURM1
20    (GETVALUE 0)                        ; L
22    (CDR)
23    (CAR&PUSH)
24    (CALL&PUSH 3 3)                     ; STURMAPC
27    (GETVALUE 0)                        ; L
29    (CDR)
30    (CDR&PUSH)
31    (LOAD&PUSH 6)
32    (JSR&PUSH L0)
34    (CALLSR 2 34)                       ; APPEND
37    L37
37    (UNBIND1)
38    (SKIP&RET 3)
40    L40
40    (NIL)
41    (JMP L37)
43    L43
43    (GETVALUE 0)                        ; L
45    (CDR)
46    (CDR&PUSH)
47    (LOAD&PUSH 5)
48    (JSR L0)
50    (JMP L37)


Disassembly of function #:|(DEFUN STURMOUT (INT) ...)-17|
(CONST 0) = STURMOUT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STURMOUT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STURMOUT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STURMOUT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STURMOUT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; STURMOUT
8     (SKIP&RET 1)


Disassembly of function STURMOUT
(CONST 0) = (MEQUAL SIMP)
(CONST 1) = VARLIST
(CONST 2) = RPLUS*
(CONST 3) = RHALF
(CONST 4) = MIDOUT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (VARLIST)
12 byte-code instructions:
0     (CONST&PUSH 0)                      ; (MEQUAL SIMP)
1     (GETVALUE 1)                        ; VARLIST
3     (CAR&PUSH)
4     (LOAD&CAR&PUSH 3)
6     (LOAD 4)
7     (CDR)
8     (CAR&PUSH)
9     (CALL2&PUSH 2)                      ; RPLUS*
11    (CALL1&PUSH 3)                      ; RHALF
13    (CALL1&PUSH 4)                      ; MIDOUT
15    (LIST 3)
17    (SKIP&RET 2)


Disassembly of function #:|(DEFUN MIDOUT (PT) ...)-18|
(CONST 0) = MIDOUT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MIDOUT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MIDOUT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MIDOUT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MIDOUT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MIDOUT
8     (SKIP&RET 1)


Disassembly of function MIDOUT
(CONST 0) = PT
(CONST 1) = 1
(CONST 2) = $FLOAT
(CONST 3) = FPCOFRAT1
(CONST 4) = (RAT SIMP)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($FLOAT PT)
27 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; PT
3     (GETVALUE 0)                        ; PT
5     (CDR&PUSH)
6     (JMPIFEQTO 1 L25)                   ; 1
9     (GETVALUE 2)                        ; $FLOAT
11    (JMPIF L30)
13    (CONST&PUSH 4)                      ; (RAT SIMP)
14    (GETVALUE 0)                        ; PT
16    (CAR&PUSH)
17    (GETVALUE 0)                        ; PT
19    (CDR&PUSH)
20    (LIST 3)
22    L22
22    (UNBIND1)
23    (SKIP&RET 2)
25    L25
25    (GETVALUE 0)                        ; PT
27    (CAR)
28    (JMP L22)
30    L30
30    (GETVALUE 0)                        ; PT
32    (CAR&PUSH)
33    (GETVALUE 0)                        ; PT
35    (CDR&PUSH)
36    (CALL2 3)                           ; FPCOFRAT1
38    (JMP L22)


Disassembly of function #:|(DEFUN UPRIMITIVE (P) ...)-19|
(CONST 0) = UPRIMITIVE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UPRIMITIVE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UPRIMITIVE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UPRIMITIVE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UPRIMITIVE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UPRIMITIVE
8     (SKIP&RET 1)


Disassembly of function UPRIMITIVE
(CONST 0) = P
(CONST 1) = UCONTENT
(CONST 2) = PQUOTIENT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
8 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (GETVALUE&PUSH 0)                   ; P
5     (GETVALUE&PUSH 0)                   ; P
7     (CALL1&PUSH 1)                      ; UCONTENT
9     (CALL2 2)                           ; PQUOTIENT
11    (UNBIND1)
12    (SKIP&RET 2)


Disassembly of function #:|(DEFUN STURM (P) ...)-20|
(CONST 0) = STURM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STURM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STURM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STURM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STURM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; STURM
8     (SKIP&RET 1)


Disassembly of function STURM
(CONST 0) = P
(CONST 1) = R
(CONST 2) = UPRIMITIVE
(CONST 3) = PDERIVATIVE
(CONST 4) = PABS
(CONST 5) = PREM
(CONST 6) = X
(CONST 7) = FIXNUMP
(CONST 8) = PMINUS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (R X P)
writes special variable : (R)
58 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (PUSH-NIL 3)
5     (NIL)
6     (BIND 1)                            ; R
8     (GETVALUE&PUSH 0)                   ; P
10    (CALL1 2)                           ; UPRIMITIVE
12    (STORE 5)
13    (PUSH)
14    (LOAD&CAR&PUSH 6)
16    (CALL2&PUSH 3)                      ; PDERIVATIVE
18    (CALL1 2)                           ; UPRIMITIVE
20    (STORE 4)
21    (PUSH)
22    (LOAD&PUSH 6)
23    (LIST 2)
25    (STORE 3)
26    L26
26    (LOAD&PUSH 5)
27    (LOAD&PUSH 5)
28    (CALL1&PUSH 4)                      ; PABS
30    (CALL2 5)                           ; PREM
32    (SETVALUE 1)                        ; R
34    (BIND 6)                            ; X
36    (GETVALUE&PUSH 6)                   ; X
38    (CALL1&JMPIF 7 L50)                 ; FIXNUMP
41    (GETVALUE 6)                        ; X
43    (JMPIFCONSP L59)
45    (GETVALUE&PUSH 6)                   ; X
47    (CALLS2&JMPIFNOT 15 L74)            ; FLOATP
50    L50
50    (GETVALUE&PUSH 6)                   ; X
52    (CALLS2 145)                        ; ZEROP
54    (UNBIND1)
55    (JMPIFNOT L60)
57    (JMP L77)
59    L59
59    (UNBIND1)
60    L60
60    (LOAD 4)
61    (STORE 5)
62    (GETVALUE&PUSH 1)                   ; R
64    (CALL1&PUSH 2)                      ; UPRIMITIVE
66    (CALL1 8)                           ; PMINUS
68    (STORE 4)
69    (PUSH)
70    (LOAD&CONS&STORE 3)
72    (JMP L26)
74    L74
74    (UNBIND1)
75    (JMPIFNOT L60)
77    L77
77    (LOAD&PUSH 3)
78    (CALLS2 72)                         ; REVERSE
80    (UNBIND1)
81    (SKIP 3)
83    (UNBIND1)
84    (SKIP&RET 2)


Disassembly of function #:|(DEFUN SIGNUM (X) ...)-21|
(CONST 0) = SIGNUM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SIGNUM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SIGNUM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SIGNUM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SIGNUM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SIGNUM
8     (SKIP&RET 1)


Disassembly of function SIGNUM
(CONST 0) = X
(CONST 1) = 0
(CONST 2) = -1
(CONST 3) = 1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
16 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2&JMPIF 145 L17)              ; ZEROP
8     (GETVALUE&PUSH 0)                   ; X
10    (CALLS2&JMPIF 147 L20)              ; MINUSP
13    (CONST 3)                           ; 1
14    L14
14    (UNBIND1)
15    (SKIP&RET 2)
17    L17
17    (CONST 1)                           ; 0
18    (JMP L14)
20    L20
20    (CONST 2)                           ; -1
21    (JMP L14)


Disassembly of function #:|(DEFUN IVAR (SEQ PT) ...)-22|
(CONST 0) = IVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE IVAR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; IVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; IVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE IVAR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; IVAR
8     (SKIP&RET 1)


Disassembly of function IVAR
(CONST 0) = PT
(CONST 1) = V
(CONST 2) = S
(CONST 3) = 0
(CONST 4) = REVAL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (PT S V)
writes special variables : (S V)
39 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; PT
3     (NIL)
4     (BIND 1)                            ; V
6     (NIL)
7     (BIND 2)                            ; S
9     (NIL&PUSH)
10    (CONST 3)                           ; 0
11    (SETVALUE 1)                        ; V
13    (JMP L53)
15    L15
15    (GETVALUE&PUSH 1)                   ; V
17    (CALLS2 150)                        ; 1+
19    (SETVALUE 1)                        ; V
21    (GETVALUE 2)                        ; S
23    (JMP L53)
25    L25
25    (LOAD&JMPIFNOT 12 L57)
28    L28
28    (LOAD&CAR&PUSH 12)
30    (GETVALUE&PUSH 0)                   ; PT
32    (CALL2 4)                           ; REVAL
34    (SETVALUE 2)                        ; S
36    (LOAD&CDR&STORE 12)
38    (GETVALUE&PUSH 2)                   ; S
40    (LOAD&PUSH 1)
41    (CALLSR&PUSH 2 55)                  ; *
44    (CALLS2&JMPIF 147 L15)              ; MINUSP
47    (LOAD&PUSH 0)
48    (CALLS2&JMPIFNOT 145 L25)           ; ZEROP
51    (GETVALUE 2)                        ; S
53    L53
53    (STORE 0)
54    (LOAD&JMPIF 12 L28)
57    L57
57    (GETVALUE 1)                        ; V
59    (SKIP 1)
61    (UNBIND 3)
63    (SKIP&RET 3)


Disassembly of function #:|(DEFUN IVAR2 (SEQ PT) ...)-23|
(CONST 0) = IVAR2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE IVAR2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; IVAR2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; IVAR2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE IVAR2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; IVAR2
8     (SKIP&RET 1)


Disassembly of function IVAR2
(CONST 0) = PT
(CONST 1) = IVAR
(CONST 2) = LEADTERM
(CONST 3) = 1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (PT)
20 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; PT
3     (GETVALUE 0)                        ; PT
5     (JMPIFCONSP L25)
7     (CONST&SYMBOL-FUNCTION&PUSH 2)      ; LEADTERM
9     (LOAD&PUSH 6)
10    (CALLSR&STORE 0 22 5)               ; MAPCAR
14    (PUSH)
15    (GETVALUE&PUSH 0)                   ; PT
17    (CONST 3)                           ; 1
18    (CONS)
19    L19
19    (PUSH)
20    (CALL2 1)                           ; IVAR
22    (UNBIND1)
23    (SKIP&RET 3)
25    L25
25    (LOAD&PUSH 5)
26    (GETVALUE 0)                        ; PT
28    (JMP L19)


Disassembly of function #:|(DEFUN REVAL (P R) ...)-24|
(CONST 0) = REVAL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE REVAL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; REVAL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; REVAL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE REVAL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; REVAL
8     (SKIP&RET 1)


Disassembly of function REVAL
(CONST 0) = P
(CONST 1) = R
(CONST 2) = SIGNUM
(CONST 3) = 0
(CONST 4) = PTERM
(CONST 5) = A
(CONST 6) = B
(CONST 7) = V
(CONST 8) = M
(CONST 9) = C
(CONST 10) = 1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (M B C V A R P)
writes special variables : (C B A M P V)
95 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (LOAD 4)
4     (BIND 1)                            ; R
6     (GETVALUE 0)                        ; P
8     (JMPIFATOM L28)
10    (GETVALUE 1)                        ; R
12    (CAR&PUSH)
13    (CALLS2&JMPIFNOT 145 L32)           ; ZEROP
16    (GETVALUE 0)                        ; P
18    (CDR&PUSH)
19    (CONST&PUSH 3)                      ; 0
20    (CALL2 4)                           ; PTERM
22    L22
22    (PUSH)
23    (CALL1 2)                           ; SIGNUM
25    (JMP L154)
28    L28
28    (GETVALUE 0)                        ; P
30    (JMP L22)
32    L32
32    (NIL)
33    (BIND 5)                            ; A
35    (NIL)
36    (BIND 6)                            ; B
38    (NIL&PUSH)
39    (NIL)
40    (BIND 7)                            ; V
42    (NIL)
43    (BIND 8)                            ; M
45    (NIL)
46    (BIND 9)                            ; C
48    (CONST 10)                          ; 1
49    (STORE 9)
51    (CONST 3)                           ; 0
52    (SETVALUE 7)                        ; V
54    (GETVALUE 0)                        ; P
56    (CDR)
57    (SETVALUE 0)                        ; P
59    (CAR)
60    (SETVALUE 8)                        ; M
62    (GETVALUE 1)                        ; R
64    (CAR)
65    (SETVALUE 5)                        ; A
67    (GETVALUE 1)                        ; R
69    (CDR)
70    (SETVALUE 6)                        ; B
72    (JMP L119)
74    L74
74    (GETVALUE 0)                        ; P
76    (CDR)
77    (CAR)
78    (SETVALUE 9)                        ; C
80    (GETVALUE 0)                        ; P
82    (CDR)
83    (CDR)
84    (SETVALUE 0)                        ; P
86    (JMP L130)
88    L88
88    (GETVALUE&PUSH 5)                   ; A
90    (GETVALUE&PUSH 7)                   ; V
92    (LOAD&PUSH 11)
93    (GETVALUE&PUSH 9)                   ; C
95    (CALLSR&PUSH 2 55)                  ; *
98    (CALLSR&PUSH 2 53)                  ; +
101   (CALLSR 2 55)                       ; *
104   (SETVALUE 7)                        ; V
106   (LOAD&PUSH 9)
107   (GETVALUE&PUSH 6)                   ; B
109   (CALLSR&STORE 2 55 9)               ; *
113   (GETVALUE&PUSH 8)                   ; M
115   (CALLS2 151)                        ; 1-
117   (SETVALUE 8)                        ; M
119   L119
119   (GETVALUE&PUSH 8)                   ; M
121   (GETVALUE 0)                        ; P
123   (CAR&PUSH)
124   (CALLS2&JMPIF 2 L74)                ; EQUAL
127   (CONST 3)                           ; 0
128   (SETVALUE 9)                        ; C
130   L130
130   (GETVALUE&PUSH 8)                   ; M
132   (CALLS2&JMPIFNOT 145 L88)           ; ZEROP
135   (GETVALUE&PUSH 7)                   ; V
137   (LOAD&PUSH 10)
138   (GETVALUE&PUSH 9)                   ; C
140   (CALLSR&PUSH 2 55)                  ; *
143   (CALLSR&PUSH 2 53)                  ; +
146   (CALL1 2)                           ; SIGNUM
148   (UNBIND 3)
150   (SKIP 1)
152   (UNBIND 2)
154   L154
154   (UNBIND 2)
156   (SKIP&RET 3)


Disassembly of function #:|(DEFUN MAKPOINT (PT) ...)-25|
(CONST 0) = MAKPOINT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKPOINT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKPOINT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKPOINT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKPOINT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAKPOINT
8     (SKIP&RET 1)


Disassembly of function MAKPOINT
(CONST 0) = PT
(CONST 1) = $INF
(CONST 2) = 1
(CONST 3) = $MINF
(CONST 4) = -1
(CONST 5) = $NUMER
(CONST 6) = MEVAL
(CONST 7) = MAKRAT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (PT)
22 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; PT
3     (GETVALUE&PUSH 0)                   ; PT
5     (JMPIFEQTO 1 L27)                   ; $INF
8     (GETVALUE&PUSH 0)                   ; PT
10    (JMPIFEQTO 3 L30)                   ; $MINF
13    (T)
14    (BIND 5)                            ; $NUMER
16    (GETVALUE&PUSH 0)                   ; PT
18    (CALL1 6)                           ; MEVAL
20    (UNBIND1)
21    (PUSH)
22    (CALL1 7)                           ; MAKRAT
24    L24
24    (UNBIND1)
25    (SKIP&RET 2)
27    L27
27    (CONST 2)                           ; 1
28    (JMP L24)
30    L30
30    (CONST 4)                           ; -1
31    (JMP L24)


Disassembly of function #:|(DEFMFUN $NROOTS N ...)-26|
(CONST 0) = $NROOTS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $NROOTS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $NROOTS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $NROOTS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $NROOTS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $NROOTS
8     (SKIP&RET 1)


Disassembly of function $NROOTS
(CONST 0) = N
(CONST 1) = VARLIST
(CONST 2) = $KEEPFLOAT
(CONST 3) = $RATFAC
(CONST 4) = L
(CONST 5) = R
(CONST 6) = 1
(CONST 7) = $MINF
(CONST 8) = $INF
(CONST 9) = 3
(CONST 10) = 2
(CONST 11) = NARG1
(CONST 12) = "Wrong number of arguments - NROOTS"
(CONST 13) = MERROR
(CONST 14) = MEQHK
(CONST 15) = UNIPOLY
(CONST 16) = MAKPOINT
(CONST 17) = NROOTS
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (R L N)
writes special variables : (R L)
50 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 71)                         ; LENGTH
3     (BIND 0)                            ; N
5     (NIL)
6     (BIND 1)                            ; VARLIST
8     (NIL)
9     (BIND 2)                            ; $KEEPFLOAT
11    (NIL)
12    (BIND 3)                            ; $RATFAC
14    (NIL)
15    (BIND 4)                            ; L
17    (NIL)
18    (BIND 5)                            ; R
20    (GETVALUE&PUSH 0)                   ; N
22    (CONST&PUSH 6)                      ; 1
23    (CALLSR&JMPIF 1 45 L60)             ; =
27    (GETVALUE&PUSH 0)                   ; N
29    (CONST&PUSH 9)                      ; 3
30    (CALLSR&JMPIF 1 45 L68)             ; =
34    (CONST&PUSH 12)                     ; "Wrong number of arguments - NROOTS"
35    (CALL1 13)                          ; MERROR
37    L37
37    (CONST&PUSH 6)                      ; 1
38    (LOAD&PUSH 20)
39    (CALL2&PUSH 11)                     ; NARG1
41    (CALL1&PUSH 14)                     ; MEQHK
43    (CALL1&PUSH 15)                     ; UNIPOLY
45    (GETVALUE&PUSH 4)                   ; L
47    (CALL1&PUSH 16)                     ; MAKPOINT
49    (GETVALUE&PUSH 5)                   ; R
51    (CALL1&PUSH 16)                     ; MAKPOINT
53    (CALL 3 17)                         ; NROOTS
56    (UNBIND 6)
58    (SKIP&RET 2)
60    L60
60    (CONST 7)                           ; $MINF
61    (SETVALUE 4)                        ; L
63    (CONST 8)                           ; $INF
64    (SETVALUE 5)                        ; R
66    (JMP L37)
68    L68
68    (CONST&PUSH 10)                     ; 2
69    (LOAD&PUSH 20)
70    (CALL2 11)                          ; NARG1
72    (SETVALUE 4)                        ; L
74    (CONST&PUSH 9)                      ; 3
75    (LOAD&PUSH 20)
76    (CALL2 11)                          ; NARG1
78    (SETVALUE 5)                        ; R
80    (JMP L37)


Disassembly of function #:|(DEFUN NROOTS (P L R) ...)-27|
(CONST 0) = NROOTS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NROOTS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NROOTS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NROOTS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NROOTS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NROOTS
8     (SKIP&RET 1)


Disassembly of function NROOTS
(CONST 0) = P
(CONST 1) = L
(CONST 2) = R
(CONST 3) = PSQFR
(CONST 4) = ROOTADDUP
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (R L P)
13 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; P
3     (LOAD 5)
4     (BIND 1)                            ; L
6     (LOAD 7)
7     (BIND 2)                            ; R
9     (GETVALUE&PUSH 0)                   ; P
11    (CALL1&PUSH 3)                      ; PSQFR
13    (GETVALUE&PUSH 1)                   ; L
15    (GETVALUE&PUSH 2)                   ; R
17    (CALL 3 4)                          ; ROOTADDUP
20    (UNBIND 3)
22    (SKIP&RET 4)


Disassembly of function #:|(DEFUN ROOTADDUP (LLIST L R) ...)-28|
(CONST 0) = ROOTADDUP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ROOTADDUP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROOTADDUP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ROOTADDUP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ROOTADDUP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ROOTADDUP
8     (SKIP&RET 1)


Disassembly of function ROOTADDUP
(CONST 0) = L
(CONST 1) = R
(CONST 2) = 0
(CONST 3) = NROOT1
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (R L)
37 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; L
3     (LOAD 4)
4     (BIND 1)                            ; R
6     (LOAD&JMPIFNOT 9 L45)
9     (LOAD&CAR&PUSH 9)
11    (CALLS2&JMPIF 8 L48)                ; NUMBERP
14    (LOAD 9)
15    (CDR)
16    (CDR&PUSH)
17    (GETVALUE&PUSH 0)                   ; L
19    (GETVALUE&PUSH 1)                   ; R
21    (JSR&PUSH L0)
23    (LOAD 10)
24    (CDR)
25    (CAR&PUSH)
26    (LOAD&CAR&PUSH 11)
28    (GETVALUE&PUSH 0)                   ; L
30    (GETVALUE&PUSH 1)                   ; R
32    (CALL&PUSH 3 3)                     ; NROOT1
35    (CALLSR&PUSH 2 55)                  ; *
38    (CALLSR 2 53)                       ; +
41    L41
41    (UNBIND 2)
43    (SKIP&RET 4)
45    L45
45    (CONST 2)                           ; 0
46    (JMP L41)
48    L48
48    (LOAD 9)
49    (CDR)
50    (CDR&PUSH)
51    (GETVALUE&PUSH 0)                   ; L
53    (GETVALUE&PUSH 1)                   ; R
55    (JSR L0)
57    (JMP L41)


Disassembly of function #:|(DEFUN NROOT1 (P L R) ...)-29|
(CONST 0) = NROOT1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NROOT1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NROOT1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NROOT1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NROOT1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NROOT1
8     (SKIP&RET 1)


Disassembly of function NROOT1
(CONST 0) = P
(CONST 1) = L
(CONST 2) = R
(CONST 3) = STURM
(CONST 4) = IVAR2
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (R L P)
18 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; P
3     (LOAD 5)
4     (BIND 1)                            ; L
6     (LOAD 7)
7     (BIND 2)                            ; R
9     (GETVALUE&PUSH 0)                   ; P
11    (CALL1&PUSH 3)                      ; STURM
13    (LOAD&PUSH 0)
14    (GETVALUE&PUSH 1)                   ; L
16    (CALL2&PUSH 4)                      ; IVAR2
18    (LOAD&PUSH 1)
19    (GETVALUE&PUSH 2)                   ; R
21    (CALL2&PUSH 4)                      ; IVAR2
23    (CALLSR 1 54)                       ; -
26    (SKIP 1)
28    (UNBIND 3)
30    (SKIP&RET 4)


Disassembly of function #:|(DEFUN ISOLAT (P L R) ...)-30|
(CONST 0) = ISOLAT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ISOLAT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ISOLAT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ISOLAT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ISOLAT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ISOLAT
8     (SKIP&RET 1)


Disassembly of function ISOLAT
(CONST 0) = P
(CONST 1) = L
(CONST 2) = R
(CONST 3) = TLIST
(CONST 4) = STURM
(CONST 5) = IVAR
(CONST 6) = 1
(CONST 7) = RPLUS*
(CONST 8) = RHALF
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (TLIST R L P)
writes special variables : (R L TLIST)
109 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; P
3     (LOAD 5)
4     (BIND 1)                            ; L
6     (LOAD 7)
7     (BIND 2)                            ; R
9     (PUSH-NIL 5)
11    (NIL)
12    (BIND 3)                            ; TLIST
14    (PUSH-NIL 2)
16    (GETVALUE&PUSH 0)                   ; P
18    (CALL1 4)                           ; STURM
20    (STORE 9)
22    (PUSH)
23    (GETVALUE&PUSH 1)                   ; L
25    (CALL2 5)                           ; IVAR
27    (STORE 8)
29    (LOAD&PUSH 9)
30    (GETVALUE&PUSH 2)                   ; R
32    (CALL2 5)                           ; IVAR
34    (STORE 7)
35    (NIL&STORE 1)
37    (SETVALUE 3)                        ; TLIST
39    (LOAD&PUSH 8)
40    (LOAD&PUSH 8)
41    (CALLS2&JMPIFNOT 2 L140)            ; EQUAL
45    (NIL)
46    (SKIP 2)
48    (UNBIND1)
49    (SKIP 5)
51    (JMP L168)
54    L54
54    (GETVALUE&PUSH 1)                   ; L
56    (GETVALUE 2)                        ; R
58    (CONS&PUSH)
59    (LOAD&CONS&STORE 1)
61    (GETVALUE 3)                        ; TLIST
63    (JMPIFNOT L162)
66    L66
66    (GETVALUE 3)                        ; TLIST
68    (CAR)
69    (STORE 8)
71    (GETVALUE 3)                        ; TLIST
73    (CDR)
74    (CAR)
75    (STORE 7)
76    (GETVALUE 3)                        ; TLIST
78    (CDR)
79    (CDR)
80    (CAR)
81    (SETVALUE 1)                        ; L
83    (GETVALUE 3)                        ; TLIST
85    (CDR)
86    (CDR)
87    (CDR)
88    (CAR)
89    (SETVALUE 2)                        ; R
91    (GETVALUE 3)                        ; TLIST
93    (CDR)
94    (CDR)
95    (CDR)
96    (CDR)
97    (SETVALUE 3)                        ; TLIST
99    (JMP L140)
101   L101
101   (GETVALUE&PUSH 1)                   ; L
103   (GETVALUE&PUSH 2)                   ; R
105   (CALL2&PUSH 7)                      ; RPLUS*
107   (CALL1 8)                           ; RHALF
109   (STORE 6)
110   (LOAD&PUSH 9)
111   (LOAD&PUSH 7)
112   (CALL2 5)                           ; IVAR
114   (STORE 5)
115   (LOAD&PUSH 8)
116   (LOAD&PUSH 6)
117   (CALLS2&JMPIF 2 L134)               ; EQUAL
120   (LOAD&PUSH 8)
121   (LOAD&PUSH 6)
122   (GETVALUE&PUSH 1)                   ; L
124   (LOAD&PUSH 9)
125   (LIST&PUSH 4)
127   (GETVALUE&PUSH 3)                   ; TLIST
129   (CALLSR 2 34)                       ; APPEND
132   (SETVALUE 3)                        ; TLIST
134   L134
134   (LOAD 6)
135   (SETVALUE 1)                        ; L
137   (LOAD 5)
138   (STORE 8)
140   L140
140   (LOAD&PUSH 8)
141   (LOAD&PUSH 8)
142   (CALLSR&STORE 1 54 0)               ; -
146   (PUSH)
147   (CONST&PUSH 6)                      ; 1
148   (CALLSR&JMPIF 1 48 L101)            ; >
152   (LOAD&PUSH 0)
153   (JMPIFEQTO 6 L54)                   ; 1
157   (GETVALUE 3)                        ; TLIST
159   (JMPIF L66)
162   L162
162   (LOAD 1)
163   (SKIP 2)
165   (UNBIND1)
166   (SKIP 5)
168   L168
168   (UNBIND 3)
170   (SKIP&RET 4)


Disassembly of function #:|(DEFUN REFINE (P L R ...) ...)-31|
(CONST 0) = REFINE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE REFINE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; REFINE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; REFINE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE REFINE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; REFINE
8     (SKIP&RET 1)


Disassembly of function REFINE
(CONST 0) = P
(CONST 1) = L
(CONST 2) = R
(CONST 3) = REVAL
(CONST 4) = RDIFFERENCE*
(CONST 5) = RLESSP
(CONST 6) = RPLUS*
(CONST 7) = RHALF
4 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L R P)
writes special variables : (L R)
56 byte-code instructions:
0     (LOAD 4)
1     (BIND 0)                            ; P
3     (LOAD 6)
4     (BIND 1)                            ; L
6     (LOAD 8)
7     (BIND 2)                            ; R
9     (PUSH-NIL 3)
11    (GETVALUE&PUSH 0)                   ; P
13    (GETVALUE&PUSH 2)                   ; R
15    (CALL2 3)                           ; REVAL
17    (STORE 2)
18    (PUSH)
19    (CALLS2&JMPIFNOT 145 L53)           ; ZEROP
22    (GETVALUE 2)                        ; R
24    (JMP L65)
26    L26
26    (GETVALUE&PUSH 1)                   ; L
28    (GETVALUE&PUSH 2)                   ; R
30    (CALL2&PUSH 6)                      ; RPLUS*
32    (CALL1 7)                           ; RHALF
34    (STORE 1)
35    (GETVALUE&PUSH 0)                   ; P
37    (LOAD&PUSH 2)
38    (CALL2 3)                           ; REVAL
40    (STORE 0)
41    (PUSH)
42    (CALLS2&JMPIF 145 L75)              ; ZEROP
45    (LOAD&PUSH 0)
46    (LOAD&PUSH 3)
47    (CALLS2&JMPIFNOT 2 L70)             ; EQUAL
50    (LOAD 1)
51    (SETVALUE 2)                        ; R
53    L53
53    (GETVALUE&PUSH 2)                   ; R
55    (GETVALUE&PUSH 1)                   ; L
57    (CALL2&PUSH 4)                      ; RDIFFERENCE*
59    (LOAD&PUSH 14)
60    (CALL2&JMPIFNOT 5 L26)              ; RLESSP
63    (GETVALUE 1)                        ; L
65    L65
65    (PUSH)
66    (GETVALUE 2)                        ; R
68    (JMP L77)
70    L70
70    (LOAD 1)
71    (SETVALUE 1)                        ; L
73    (JMP L53)
75    L75
75    (LOAD&PUSH 1)
76    (LOAD 2)
77    L77
77    (PUSH)
78    (LIST 2)
80    (SKIP 3)
82    (UNBIND 3)
84    (SKIP&RET 5)


Disassembly of function #:|(DEFUN RHALF (R) ...)-32|
(CONST 0) = RHALF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RHALF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RHALF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RHALF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RHALF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RHALF
8     (SKIP&RET 1)


Disassembly of function RHALF
(CONST 0) = R
(CONST 1) = 2
(CONST 2) = RREDUCE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (R)
11 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; R
3     (GETVALUE 0)                        ; R
5     (CAR&PUSH)
6     (CONST&PUSH 1)                      ; 2
7     (GETVALUE 0)                        ; R
9     (CDR&PUSH)
10    (CALLSR&PUSH 2 55)                  ; *
13    (CALL2 2)                           ; RREDUCE
15    (UNBIND1)
16    (SKIP&RET 2)


Disassembly of function #:|(DEFUN RREDUCE (A B) ...)-33|
(CONST 0) = RREDUCE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RREDUCE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RREDUCE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RREDUCE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RREDUCE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RREDUCE
8     (SKIP&RET 1)


Disassembly of function RREDUCE
(CONST 0) = A
(CONST 1) = B
(CONST 2) = QUOT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B A)
18 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; B
6     (GETVALUE&PUSH 0)                   ; A
8     (GETVALUE&PUSH 1)                   ; B
10    (CALLSR&PUSH 2 57)                  ; GCD
13    (CALLS2&PUSH 158)                   ; ABS
15    (GETVALUE&PUSH 0)                   ; A
17    (LOAD&PUSH 1)
18    (CALL2&PUSH 2)                      ; QUOT
20    (GETVALUE&PUSH 1)                   ; B
22    (LOAD&PUSH 2)
23    (CALL2 2)                           ; QUOT
25    (CONS)
26    (SKIP 1)
28    (UNBIND 2)
30    (SKIP&RET 3)


Disassembly of function #:|(DEFUN RPLUS* (A B) ...)-34|
(CONST 0) = RPLUS*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RPLUS*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RPLUS*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RPLUS*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RPLUS*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RPLUS*
8     (SKIP&RET 1)


Disassembly of function RPLUS*
(CONST 0) = A
(CONST 1) = B
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B A)
23 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; B
6     (GETVALUE 0)                        ; A
8     (CAR&PUSH)
9     (GETVALUE 1)                        ; B
11    (CDR&PUSH)
12    (CALLSR&PUSH 2 55)                  ; *
15    (GETVALUE 1)                        ; B
17    (CAR&PUSH)
18    (GETVALUE 0)                        ; A
20    (CDR&PUSH)
21    (CALLSR&PUSH 2 55)                  ; *
24    (CALLSR&PUSH 2 53)                  ; +
27    (GETVALUE 0)                        ; A
29    (CDR&PUSH)
30    (GETVALUE 1)                        ; B
32    (CDR&PUSH)
33    (CALLSR 2 55)                       ; *
36    (CONS)
37    (UNBIND 2)
39    (SKIP&RET 3)


Disassembly of function #:|(DEFUN RDIFFERENCE* (A B) ...)-35|
(CONST 0) = RDIFFERENCE*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RDIFFERENCE*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RDIFFERENCE*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RDIFFERENCE*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RDIFFERENCE*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RDIFFERENCE*
8     (SKIP&RET 1)


Disassembly of function RDIFFERENCE*
(CONST 0) = A
(CONST 1) = B
(CONST 2) = RPLUS*
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B A)
14 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; B
6     (GETVALUE&PUSH 0)                   ; A
8     (GETVALUE 1)                        ; B
10    (CAR&PUSH)
11    (CALLSR&PUSH 0 54)                  ; -
14    (GETVALUE 1)                        ; B
16    (CDR)
17    (CONS&PUSH)
18    (CALL2 2)                           ; RPLUS*
20    (UNBIND 2)
22    (SKIP&RET 3)


Disassembly of function #:|(DEFUN RLESSP (A B) ...)-36|
(CONST 0) = RLESSP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RLESSP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RLESSP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RLESSP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RLESSP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RLESSP
8     (SKIP&RET 1)


Disassembly of function RLESSP
(CONST 0) = A
(CONST 1) = B
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B A)
17 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; B
6     (GETVALUE 0)                        ; A
8     (CAR&PUSH)
9     (GETVALUE 1)                        ; B
11    (CDR&PUSH)
12    (CALLSR&PUSH 2 55)                  ; *
15    (GETVALUE 1)                        ; B
17    (CAR&PUSH)
18    (GETVALUE 0)                        ; A
20    (CDR&PUSH)
21    (CALLSR&PUSH 2 55)                  ; *
24    (CALLSR 1 47)                       ; <
27    (UNBIND 2)
29    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MULTOUT (ROOTLIST) ...)-37|
(CONST 0) = MULTOUT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MULTOUT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MULTOUT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MULTOUT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MULTOUT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MULTOUT
8     (SKIP&RET 1)


Disassembly of function MULTOUT
(CONST 0) = ROOTLIST
(CONST 1) = (MLIST)
(CONST 2) = $MULTIPLICITIES
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (ROOTLIST)
writes special variables : ($MULTIPLICITIES ROOTLIST)
34 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; ROOTLIST
3     (PUSH-NIL 2)
5     (GETVALUE&PUSH 0)                   ; ROOTLIST
7     (LOAD&JMPIFNOT 0 L26)
10    L10
10    (LOAD&CAR&PUSH 0)
12    (LOAD&CONS&STORE 2)
14    (LOAD 0)
15    (CDR)
16    (CAR&PUSH)
17    (LOAD&CONS&STORE 1)
19    (LOAD 0)
20    (CDR)
21    (CDR)
22    (STORE 0)
23    (LOAD&JMPIF 0 L10)
26    L26
26    (LOAD&PUSH 2)
27    (CALLS2&PUSH 72)                    ; REVERSE
29    (LOAD&PUSH 2)
30    (CALLS2 72)                         ; REVERSE
32    (CONS)
33    (SKIP 3)
35    (SETVALUE 0)                        ; ROOTLIST
37    (CONST&PUSH 1)                      ; (MLIST)
38    (GETVALUE 0)                        ; ROOTLIST
40    (CDR)
41    (CONS)
42    (SETVALUE 2)                        ; $MULTIPLICITIES
44    (GETVALUE 0)                        ; ROOTLIST
46    (CAR)
47    (UNBIND1)
48    (SKIP&RET 2)


Disassembly of function #:|(DECLARE-TOP (UNSPECIAL EQUATIONS))-38|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Wrote file binary-clisp/polyrz.fas
Wrote file /cygdrive/e/temp/maxima/src/polyrz.lis