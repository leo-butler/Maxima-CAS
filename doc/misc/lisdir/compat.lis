Listing of compilation of file /cygdrive/e/temp/maxima/src/compat.lisp
on 2002-12-17 13:31:56 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/compat.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(DEFQUOTE INCLUDEF (FILENAME) ...)-2-2|
(CONST 0) = INCLUDEF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INCLUDEF>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; INCLUDEF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INCLUDEF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INCLUDEF>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (VALUES0)
10    (SKIP&RET 1)


Disassembly of function INCLUDEF
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = QUOTE
(CONST 3) = 0
(CONST 4) = #(NIL)
(CONST 5) = :NAME
(CONST 6) = COMMON-LISP:CONTINUE
(CONST 7) = :INVOKE-FUNCTION
(CONST 8) = #<COMPILED-CLOSURE INCLUDEF-1>
(CONST 9) = :REPORT
(CONST 10) = SYSTEM::REPORT-NEW-VALUE
(CONST 11) = :INTERACTIVE
(CONST 12) = SYSTEM::ASSERT-RESTART-PROMPT
(CONST 13) = SYSTEM::MAKE-RESTART
(CONST 14) = SYSTEM::*ACTIVE-RESTARTS*
(CONST 15) = SYSTEM::*CONDITION-RESTARTS*
(CONST 16) = (#(CONDITION 67) 1 . 1)
(CONST 17) = SYSTEM::ADD-CONDITION-RESTARTS
(CONST 18) = SIGNAL
(CONST 19) = "wrong number of args to INCLUDEF"
(CONST 20) = |INCLUDEF-aux|
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variables: (SYSTEM::*CONDITION-RESTARTS* SYSTEM::*ACTIVE-RESTARTS*)
105 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 47 L52)             ; <
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR&PUSH)
14    (NIL&PUSH)
15    (LOAD&PUSH 1)
16    (PUSH-NIL 3)
18    (LOAD&JMPIFNOT 3 L45)
21    L21
21    (LOAD&CAR&PUSH 3)
23    (LOAD 0)
24    (STORE 5)
25    (SKIP 1)
27    (CONST&PUSH 2)                      ; QUOTE
28    (LOAD&PUSH 5)
29    (LIST 2)
31    (STORE 0)
32    (LOAD&JMPIF 1 L57)
35    (LOAD&PUSH 0)
36    (NIL)
37    (CONS)
38    (STORE 1)
39    (STORE 2)
40    L40
40    (LOAD&CDR&STORE 3)
42    (LOAD&JMPIF 3 L21)
45    L45
45    (LOAD 2)
46    (SKIP 5)
48    (STORE 0)
49    (JMP L143)
52    L52
52    (LOAD&PUSH 2)
53    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
55    (SKIP&RET 3)
57    L57
57    (PUSH)
58    (LOAD&PUSH 1)
59    (NIL)
60    (CONS)
61    (STORE 2)
62    (PUSH)
63    (CALLS1 171)                        ; SYSTEM::%RPLACD
65    (JMP L40)
67    L67
67    (HANDLER-BEGIN&PUSH)
68    (LOAD&PUSH 0)
69    (LOADI&PUSH 0 0 6)
73    (CALL2 17)                          ; SYSTEM::ADD-CONDITION-RESTARTS
75    (LOAD&PUSH 0)
76    (CALL1 18)                          ; SIGNAL
78    (SKIPSP 2 1)
81    (SKIP&RET 2)
83    L83
83    (NIL)
84    (MAKE-VECTOR1&PUSH 1)
86    (NIL)
87    (STOREC 0 0)
90    (TAGBODY-OPEN 4 L130)               ; #(NIL)
93    (CONST&PUSH 5)                      ; :NAME
94    (CONST&PUSH 6)                      ; COMMON-LISP:CONTINUE
95    (CONST&PUSH 7)                      ; :INVOKE-FUNCTION
96    (LOAD&PUSH 7)
97    (LOAD&PUSH 6)
98    (COPY-CLOSURE&PUSH 8 2)             ; #<COMPILED-CLOSURE INCLUDEF-1>
101   (CONST&PUSH 9)                      ; :REPORT
102   (CONST&SYMBOL-FUNCTION&PUSH 10)     ; SYSTEM::REPORT-NEW-VALUE
104   (CONST&PUSH 11)                     ; :INTERACTIVE
105   (CONST&SYMBOL-FUNCTION&PUSH 12)     ; SYSTEM::ASSERT-RESTART-PROMPT
107   (CALL&PUSH 8 13)                    ; SYSTEM::MAKE-RESTART
110   (LIST&PUSH 1)
112   (LOAD&PUSH 0)
113   (GETVALUE&PUSH 14)                  ; SYSTEM::*ACTIVE-RESTARTS*
115   (CALLSR 2 34)                       ; APPEND
118   (BIND 14)                           ; SYSTEM::*ACTIVE-RESTARTS*
120   (GETVALUE 15)                       ; SYSTEM::*CONDITION-RESTARTS*
122   (BIND 15)                           ; SYSTEM::*CONDITION-RESTARTS*
124   (HANDLER-OPEN 16 L67)               ; (#(CONDITION 67) 1 . 1)
126   (CONST&PUSH 19)                     ; "wrong number of args to INCLUDEF"
127   (CALLSR 0 29)                       ; ERROR
130   L130
130   (LOADC 4 0)
133   (UNLIST 1 0)
136   (LOAD 0)
137   (STORE 6)
138   (SKIP 1)
140   (TAGBODY-CLOSE)
141   (SKIP 1)
143   L143
143   (LOAD&PUSH 0)
144   (CALLS2&PUSH 71)                    ; LENGTH
146   (JMPIFNOTEQTO 3 L83)                ; 0
150   (CONST&PUSH 20)                     ; |INCLUDEF-aux|
151   (CONST&PUSH 2)                      ; QUOTE
152   (LOAD&PUSH 3)
153   (LIST&PUSH 2)
155   (LOAD 2)
156   (LIST* 2)
158   (SKIP&RET 5)


Disassembly of function INCLUDEF-1
(CONST 0) = NIL
(CONST 1) = NIL
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
3 byte-code instructions:
0     (LOAD 1)
1     (STOREV 0 1)
4     (GO 1 0)


Disassembly of function #:|(DEFQUOTE INCLUDEF (FILENAME) ...)-2-3|
(CONST 0) = |INCLUDEF-aux|
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE |INCLUDEF-aux|>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; |INCLUDEF-aux|
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; |INCLUDEF-aux|
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE |INCLUDEF-aux|>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; |INCLUDEF-aux|
8     (SKIP&RET 1)


Disassembly of function |INCLUDEF-aux|
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (LOAD 1)
1     (SKIP&RET 2)


Disassembly of function #:|(DEFMACRO PURCOPY (X) ...)-3|
(CONST 0) = PURCOPY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PURCOPY>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PURCOPY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PURCOPY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PURCOPY>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PURCOPY
10    (SKIP&RET 1)


Disassembly of function PURCOPY
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
12 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L13)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (SKIP&RET 3)
13    L13
13    (LOAD&PUSH 2)
14    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
16    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO CHARPOS (IGNOR) ...)-4|
(CONST 0) = CHARPOS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CHARPOS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; CHARPOS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CHARPOS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CHARPOS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; CHARPOS
10    (SKIP&RET 1)


Disassembly of function CHARPOS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = (CDR (CURSORPOS))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L11)             ; /=
8     (CONST 2)                           ; (CDR (CURSORPOS))
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAXIMA-SLEEP (SECONDS) ...)-5|
(CONST 0) = MAXIMA-SLEEP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAXIMA-SLEEP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAXIMA-SLEEP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAXIMA-SLEEP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAXIMA-SLEEP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAXIMA-SLEEP
10    (SKIP&RET 1)


Disassembly of function MAXIMA-SLEEP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = PROCESS-SLEEP
(CONST 3) = FIX
(CONST 4) = F*
(CONST 5) = (60)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L24)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; PROCESS-SLEEP
12    (CONST&PUSH 3)                      ; FIX
13    (CONST&PUSH 4)                      ; F*
14    (LOAD&PUSH 3)
15    (CONST 5)                           ; (60)
16    (LIST*&PUSH 2)
18    (LIST&PUSH 2)
20    (LIST 2)
22    (SKIP&RET 4)
24    L24
24    (LOAD&PUSH 2)
25    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
27    (SKIP&RET 3)


Disassembly of function #:|(DEFUN LINEL (&OPTIONAL STREAM) ...)-6|
(CONST 0) = LINEL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LINEL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LINEL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LINEL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LINEL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LINEL
8     (SKIP&RET 1)


Disassembly of function LINEL
(CONST 0) = 80
0 required arguments
1 optional argument
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; 80
1     (SKIP&RET 2)


Disassembly of function #:|(DEFMACRO NOINTERRUPT (IGNOR) ...)-7|
(CONST 0) = NOINTERRUPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NOINTERRUPT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; NOINTERRUPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NOINTERRUPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NOINTERRUPT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; NOINTERRUPT
10    (SKIP&RET 1)


Disassembly of function NOINTERRUPT
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L11)             ; /=
8     (NIL)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO WITHOUT-TTY-INTERRUPTS (&REST FORM) ...)-8|
(CONST 0) = WITHOUT-TTY-INTERRUPTS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE WITHOUT-TTY-INTERRUPTS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; WITHOUT-TTY-INTERRUPTS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; WITHOUT-TTY-INTERRUPTS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE WITHOUT-TTY-INTERRUPTS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; WITHOUT-TTY-INTERRUPTS
10    (SKIP&RET 1)


Disassembly of function WITHOUT-TTY-INTERRUPTS
(CONST 0) = LET
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LET
3     (NIL&PUSH)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO FIXNUM-IDENTITY (X) ...)-9|
(CONST 0) = FIXNUM-IDENTITY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FIXNUM-IDENTITY>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; FIXNUM-IDENTITY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FIXNUM-IDENTITY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FIXNUM-IDENTITY>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; FIXNUM-IDENTITY
10    (SKIP&RET 1)


Disassembly of function FIXNUM-IDENTITY
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
12 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L13)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (SKIP&RET 3)
13    L13
13    (LOAD&PUSH 2)
14    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
16    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO FLONUM-IDENTITY (X) ...)-10|
(CONST 0) = FLONUM-IDENTITY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FLONUM-IDENTITY>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; FLONUM-IDENTITY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FLONUM-IDENTITY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FLONUM-IDENTITY>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; FLONUM-IDENTITY
10    (SKIP&RET 1)


Disassembly of function FLONUM-IDENTITY
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
12 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L13)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (SKIP&RET 3)
13    L13
13    (LOAD&PUSH 2)
14    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
16    (SKIP&RET 3)


Disassembly of function #:|(PROCLAIM '(INLINE *QUO *DIF))-11|
(CONST 0) = (INLINE *QUO *DIF)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (CONST&PUSH 0)                      ; (INLINE *QUO *DIF)
1     (CALLS1 90)                         ; PROCLAIM
3     (SKIP&RET 1)


Disassembly of function #:|(DEFUN *QUO (X Y) ...)-12|
(CONST 0) = *QUO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = SYSTEM::INLINE-EXPANSION
(CONST 3) = 
((X Y) (DECLARE (SYSTEM::IN-DEFUN *QUO))
 (BLOCK *QUO
  (COND ((AND (INTEGERP X) (INTEGERP Y)) (TRUNCATE X Y)) (T (/ X Y)))))
(CONST 4) = #<COMPILED-CLOSURE *QUO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; *QUO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; *QUO
4     (CONST&PUSH 2)                      ; SYSTEM::INLINE-EXPANSION
5     (CONST&PUSH 3)                      ; ((X Y) (DECLARE #) (BLOCK *QUO #))
6     (CALLS2 136)                        ; SYSTEM::%PUT
8     (CONST&PUSH 0)                      ; *QUO
9     (CONST&PUSH 4)                      ; #<COMPILED-CLOSURE *QUO>
10    (CALLS2 130)                        ; SYSTEM::%PUTD
12    (CONST 0)                           ; *QUO
13    (SKIP&RET 1)


Disassembly of function *QUO
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&JMPIFNOT 12 L8)             ; INTEGERP
4     (LOAD&PUSH 1)
5     (CALLS2&JMPIF 12 L15)               ; INTEGERP
8     L8
8     (LOAD&PUSH 2)
9     (LOAD&PUSH 2)
10    (CALLSR 1 56)                       ; /
13    (SKIP&RET 3)
15    L15
15    (LOAD&PUSH 2)
16    (LOAD&PUSH 2)
17    (CALLS2 181)                        ; TRUNCATE
19    (SKIP&RET 3)


Disassembly of function #:|(DEFUN *DIF (X Y) ...)-13|
(CONST 0) = *DIF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = SYSTEM::INLINE-EXPANSION
(CONST 3) = ((X Y) (DECLARE (SYSTEM::IN-DEFUN *DIF)) (BLOCK *DIF (- X Y)))
(CONST 4) = #<COMPILED-CLOSURE *DIF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; *DIF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; *DIF
4     (CONST&PUSH 2)                      ; SYSTEM::INLINE-EXPANSION
5     (CONST&PUSH 3)                      ; ((X Y) (DECLARE #) (BLOCK *DIF #))
6     (CALLS2 136)                        ; SYSTEM::%PUT
8     (CONST&PUSH 0)                      ; *DIF
9     (CONST&PUSH 4)                      ; #<COMPILED-CLOSURE *DIF>
10    (CALLS2 130)                        ; SYSTEM::%PUTD
12    (CONST 0)                           ; *DIF
13    (SKIP&RET 1)


Disassembly of function *DIF
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALLSR 1 54)                       ; -
5     (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SFA-CALL (STREAM OPERATION ARG) ...)-14|
(CONST 0) = SFA-CALL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SFA-CALL>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SFA-CALL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SFA-CALL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SFA-CALL>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SFA-CALL
10    (SKIP&RET 1)


Disassembly of function SFA-CALL
(CONST 0) = 4
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = FUNCALL
(CONST 3) = READ-FROM-STRING
(CONST 4) = STRING-APPEND
(CONST 5) = #\:
1 required argument
1 optional argument
No rest parameter
No keyword parameters
31 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 4
4     (CALLSR&JMPIF 1 46 L35)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (LOAD 4)
16    (CDR)
17    (CDR)
18    (CDR)
19    (CAR&PUSH)
20    (CONST&PUSH 2)                      ; FUNCALL
21    (LOAD&PUSH 3)
22    (CONST&PUSH 3)                      ; READ-FROM-STRING
23    (CONST&PUSH 4)                      ; STRING-APPEND
24    (CONST&PUSH 5)                      ; #\:
25    (LOAD&PUSH 6)
26    (LIST&PUSH 3)
28    (LIST&PUSH 2)
30    (LOAD&PUSH 3)
31    (LIST 4)
33    (SKIP&RET 6)
35    L35
35    (LOAD&PUSH 2)
36    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
38    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO ARGS (&REST IGNOR) ...)-15|
(CONST 0) = ARGS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ARGS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; ARGS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ARGS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ARGS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; ARGS
10    (SKIP&RET 1)


Disassembly of function ARGS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 3)


Disassembly of function #:|(DEFUN SYMBOLCONC (&REST SYMS) ...)-16|
(CONST 0) = SYMBOLCONC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SYMBOLCONC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SYMBOLCONC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SYMBOLCONC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SYMBOLCONC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SYMBOLCONC
8     (SKIP&RET 1)


Disassembly of function SYMBOLCONC
(CONST 0) = #.#'CONCATENATE
(CONST 1) = STRING
(CONST 2) = SYSTEM::DO-FORMAT-DECIMAL
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
53 byte-code instructions:
0     (CONST&PUSH 0)                      ; #.#'CONCATENATE
1     (CONST&PUSH 1)                      ; STRING
2     (NIL&PUSH)
3     (LOAD&PUSH 4)
4     L4
4     (LOAD&PUSH 0)
5     (CALLS1&JMPIF 146 L65)              ; ENDP
8     (LOAD&CAR&PUSH 0)
10    (LOAD&PUSH 0)
11    (CALLS2&JMPIF 15 L36)               ; FLOATP
14    (LOAD&PUSH 0)
15    (CALLS2&JMPIFNOT 12 L51)            ; INTEGERP
18    (PUSH-UNBOUND 2)
20    (CALLS2&PUSH 117)                   ; MAKE-STRING-OUTPUT-STREAM
22    (LOAD&PUSH 0)
23    (PUSH-NIL 6)
25    (LOAD&PUSH 8)
26    (CALL 8 2)                          ; SYSTEM::DO-FORMAT-DECIMAL
29    L29
29    (LOAD&PUSH 0)
30    (CALLS2 118)                        ; GET-OUTPUT-STREAM-STRING
32    (SKIP 1)
34    (JMP L56)
36    L36
36    (PUSH-UNBOUND 2)
38    (CALLS2&PUSH 117)                   ; MAKE-STRING-OUTPUT-STREAM
40    (LOAD&PUSH 1)
41    (LOAD&PUSH 1)
42    (CALLS1 129)                        ; PRIN1
44    (JMP L29)
46    L46
46    (LOAD&PUSH 0)
47    (CALLS2 140)                        ; SYMBOL-NAME
49    (JMP L56)
51    L51
51    (LOAD&PUSH 0)
52    (CALLS2&JMPIF 6 L46)                ; SYMBOLP
55    (LOAD 0)
56    L56
56    (PUSH)
57    (LOAD&CONS&STORE 2)
59    (SKIP 1)
61    (LOAD&CDR&STORE 0)
63    (JMP L4)
65    L65
65    (SKIP 1)
67    (LOAD&PUSH 0)
68    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
70    (SKIP 1)
72    (APPLY&PUSH 1)
74    (PUSH-UNBOUND 1)
76    (CALLS1 212)                        ; INTERN
78    (SKIP&RET 2)


Disassembly of function #:|(DEFMACRO QUOTE-ARGS (&REST L) ...)-17|
(CONST 0) = QUOTE-ARGS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE QUOTE-ARGS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; QUOTE-ARGS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; QUOTE-ARGS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE QUOTE-ARGS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; QUOTE-ARGS
10    (SKIP&RET 1)


Disassembly of function QUOTE-ARGS
(CONST 0) = QUOTED-ARGS-AUX
(CONST 1) = QUOTE
1 required argument
1 optional argument
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; QUOTED-ARGS-AUX
3     (CONST&PUSH 1)                      ; QUOTE
4     (LOAD&PUSH 2)
5     (LIST&PUSH 2)
7     (LIST 2)
9     (SKIP&RET 4)


Disassembly of function #:|(DEFUN QUOTED-ARGS-AUX (L) ...)-18|
(CONST 0) = QUOTED-ARGS-AUX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE QUOTED-ARGS-AUX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; QUOTED-ARGS-AUX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; QUOTED-ARGS-AUX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE QUOTED-ARGS-AUX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; QUOTED-ARGS-AUX
8     (SKIP&RET 1)


Disassembly of function QUOTED-ARGS-AUX
(CONST 0) = ((1005 (FEF-ARG-OPT FEF-QT-QT)))
(CONST 1) = ARGDESC
(CONST 2) = PUTPROP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
19 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&PUSH 2)
2     (JMP L18)
4     L4
4     (LOAD&CAR&PUSH 0)
6     (LOAD&PUSH 0)
7     (CONST&PUSH 0)                      ; ((1005 (FEF-ARG-OPT FEF-QT-QT)))
8     (CONST&PUSH 1)                      ; ARGDESC
9     (CALL&PUSH 3 2)                     ; PUTPROP
12    (LOAD&CONS&STORE 2)
14    (SKIP 1)
16    (LOAD&CDR&STORE 0)
18    L18
18    (LOAD&PUSH 0)
19    (CALLS1&JMPIFNOT 146 L4)            ; ENDP
22    (SKIP 1)
24    (LOAD&PUSH 0)
25    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
27    (SKIP&RET 3)


Disassembly of function #:|(PROGN 'COMPILE (DEFUN STORE-MACRO-HELPER # ...) ...)-19-2|
(CONST 0) = STORE-MACRO-HELPER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STORE-MACRO-HELPER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STORE-MACRO-HELPER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STORE-MACRO-HELPER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STORE-MACRO-HELPER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function STORE-MACRO-HELPER
(CONST 0) = AREF
(CONST 1) = SETF
(CONST 2) = 2
(CONST 3) = STORE-INTERNAL-1D
(CONST 4) = 3
(CONST 5) = STORE-INTERNAL-2D
(CONST 6) = "Cannot expand STORE for array reference ~S"
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
33 byte-code instructions:
0     (LOAD&CAR&PUSH 2)
2     (JMPIFEQTO 0 L28)                   ; AREF
5     (LOAD&PUSH 2)
6     (CALLS2&PUSH 71)                    ; LENGTH
8     (LOAD&PUSH 0)
9     (JMPIFEQTO 2 L38)                   ; 2
12    (LOAD&PUSH 0)
13    (JMPIFNOTEQTO 4 L41)                ; 3
16    (CONST 5)                           ; STORE-INTERNAL-2D
17    L17
17    (PUSH)
18    (LOAD&PUSH 4)
19    (LOAD&PUSH 4)
20    (LIST&PUSH 1)
22    (CALLSR 2 34)                       ; APPEND
25    (CONS)
26    (SKIP&RET 4)
28    L28
28    (CONST&PUSH 1)                      ; SETF
29    (CONST&PUSH 0)                      ; AREF
30    (LOAD 4)
31    (CDR)
32    (CONS&PUSH)
33    (LOAD&PUSH 3)
34    (LIST 3)
36    (SKIP&RET 3)
38    L38
38    (CONST 3)                           ; STORE-INTERNAL-1D
39    (JMP L17)
41    L41
41    (CONST&PUSH 6)                      ; "Cannot expand STORE for array reference ~S"
42    (LOAD&PUSH 4)
43    (CALLSR 1 29)                       ; ERROR


Disassembly of function #:|(PROGN 'COMPILE (DEFUN STORE-MACRO-HELPER # ...) ...)-19-3|
(CONST 0) = STORE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STORE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; STORE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STORE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STORE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (VALUES0)
10    (SKIP&RET 1)


Disassembly of function STORE
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = (AREF ARRAYCALL)
(CONST 3) = MEMQ
(CONST 4) = (AREF ARRAYCALL)
(CONST 5) = #S(HASH-TABLE EQ (AREF . 17) (ARRAYCALL . 14) (FUNCALL . 10))
(CONST 6) = STORE-MACRO-HELPER
(CONST 7) = SETF
(CONST 8) = FUNCTION
1 required argument
1 optional argument
No rest parameter
No keyword parameters
63 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L44)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (NIL&PUSH)
16    (LOAD&CAR&PUSH 2)
18    (CONST&PUSH 2)                      ; (AREF ARRAYCALL)
19    (CALL2&JMPIF 3 L39)                 ; MEMQ
22    (LOAD&PUSH 2)
23    (PUSH-UNBOUND 1)
25    (CALLS1&STORE 89 0)                 ; MACROEXPAND-1
28    (CAR&PUSH)
29    (CONST&PUSH 4)                      ; (AREF ARRAYCALL)
30    (CALL2&JMPIF 3 L49)                 ; MEMQ
33    (LOAD&PUSH 2)
34    (PUSH-UNBOUND 1)
36    (CALLS1&STORE 88 2)                 ; MACROEXPAND
39    L39
39    (LOAD 2)
40    (CAR)
41    (JMPHASH 5 L68 L53 L57 L60)
44    L44
44    (LOAD&PUSH 2)
45    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
47    (SKIP&RET 3)
49    L49
49    (LOAD 0)
50    (STORE 2)
51    (JMP L39)
53    L53
53    (LOAD 2)
54    (CDR)
55    (JMP L76)
57    L57
57    (CONST 7)                           ; SETF
58    (JMP L61)
60    L60
60    (CONST 7)                           ; SETF
61    L61
61    (PUSH)
62    (LOAD&PUSH 3)
63    (LOAD&PUSH 3)
64    (LIST 3)
66    (SKIP&RET 6)
68    L68
68    (CONST&PUSH 8)                      ; FUNCTION
69    (LOAD&CAR&PUSH 3)
71    (LIST&PUSH 2)
73    (LOAD 3)
74    (CDR)
75    (CONS)
76    L76
76    (PUSH)
77    (LOAD&PUSH 2)
78    (CALL2 6)                           ; STORE-MACRO-HELPER
80    (SKIP&RET 6)


Disassembly of function #:|(PROGN 'COMPILE (DEFUN STORE-MACRO-HELPER # ...) ...)-19-4|
(CONST 0) = STORE-INTERNAL-1D
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STORE-INTERNAL-1D>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STORE-INTERNAL-1D
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STORE-INTERNAL-1D
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STORE-INTERNAL-1D>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function STORE-INTERNAL-1D
(CONST 0) = ARRAY
(CONST 1) = "STORE failed -- can't find array for ~S"
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (JMP L18)
2     L2
2     (CONST&PUSH 1)                      ; "STORE failed -- can't find array for ~S"
3     (LOAD&PUSH 4)
4     (CALLSR 1 29)                       ; ERROR
7     L7
7     (LOAD&PUSH 3)
8     (CALLS2&JMPIFNOT 6 L2)              ; SYMBOLP
11    (LOAD&PUSH 3)
12    (CONST&PUSH 0)                      ; ARRAY
13    (PUSH-UNBOUND 1)
15    (CALLS2&STORE 132 3)                ; GET
18    L18
18    (LOAD&PUSH 3)
19    (CALLS2&JMPIFNOT 32 L7)             ; ARRAYP
22    (LOAD&PUSH 3)
23    (LOAD&PUSH 3)
24    (LOAD&PUSH 3)
25    (CALLSR 1 2)                        ; SYSTEM::STORE
28    (SKIP&RET 4)


Disassembly of function #:|(PROGN 'COMPILE (DEFUN STORE-MACRO-HELPER # ...) ...)-19-5|
(CONST 0) = STORE-INTERNAL-2D
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STORE-INTERNAL-2D>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STORE-INTERNAL-2D
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STORE-INTERNAL-2D
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STORE-INTERNAL-2D>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; STORE-INTERNAL-2D
8     (SKIP&RET 1)


Disassembly of function STORE-INTERNAL-2D
(CONST 0) = ARRAY
(CONST 1) = "STORE failed -- can't find array for ~S"
4 required arguments
0 optional arguments
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (JMP L18)
2     L2
2     (CONST&PUSH 1)                      ; "STORE failed -- can't find array for ~S"
3     (LOAD&PUSH 5)
4     (CALLSR 1 29)                       ; ERROR
7     L7
7     (LOAD&PUSH 4)
8     (CALLS2&JMPIFNOT 6 L2)              ; SYMBOLP
11    (LOAD&PUSH 4)
12    (CONST&PUSH 0)                      ; ARRAY
13    (PUSH-UNBOUND 1)
15    (CALLS2&STORE 132 4)                ; GET
18    L18
18    (LOAD&PUSH 4)
19    (CALLS2&JMPIFNOT 32 L7)             ; ARRAYP
22    (LOAD&PUSH 4)
23    (LOAD&PUSH 4)
24    (LOAD&PUSH 4)
25    (LOAD&PUSH 4)
26    (CALLSR 2 2)                        ; SYSTEM::STORE
29    (SKIP&RET 5)


Wrote file binary-clisp/compat.fas
Wrote file /cygdrive/e/temp/maxima/src/compat.lis