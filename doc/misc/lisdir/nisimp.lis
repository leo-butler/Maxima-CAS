Listing of compilation of file /cygdrive/e/temp/maxima/src/nisimp.lisp
on 2002-12-17 13:35:20 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/nisimp.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE NISIMP)-2|
(CONST 0) = NISIMP
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISIMP
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (*EXPR $RATEXPAND) (*LEXPR $DISP) ...)-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LETVARSIMP NIL)-4-1|
(CONST 0) = $LETVARSIMP
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $LETVARSIMP
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $LETVARSIMP
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LETVARSIMP NIL)-4-2|
(CONST 0) = (SPECIAL $LETVARSIMP)
(CONST 1) = $LETVARSIMP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $LETVARSIMP)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $LETVARSIMP
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $LETVARSIMP
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $LETVARSIMP
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LETRAT NIL)-5-1|
(CONST 0) = $LETRAT
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $LETRAT
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $LETRAT
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LETRAT NIL)-5-2|
(CONST 0) = (SPECIAL $LETRAT)
(CONST 1) = $LETRAT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $LETRAT)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $LETRAT
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $LETRAT
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $LETRAT
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $DEFAULT_LET_RULE_PACKAGE '$DEFAULT_LET_RULE_PACKAGE ...)-6-1|
(CONST 0) = $DEFAULT_LET_RULE_PACKAGE
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $DEFAULT_LET_RULE_PACKAGE
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $DEFAULT_LET_RULE_PACKAGE
11    (LOAD&PUSH 1)
12    (CONST&PUSH 0)                      ; $DEFAULT_LET_RULE_PACKAGE
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $DEFAULT_LET_RULE_PACKAGE '$DEFAULT_LET_RULE_PACKAGE ...)-6-2|
(CONST 0) = (SPECIAL $DEFAULT_LET_RULE_PACKAGE)
(CONST 1) = $DEFAULT_LET_RULE_PACKAGE
(CONST 2) = VARIABLE
(CONST 3) = "The name of the default rule package used by LET and LETSIMP"
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $DEFAULT_LET_RULE_PACKAGE)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $DEFAULT_LET_RULE_PACKAGE
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $DEFAULT_LET_RULE_PACKAGE
8     (CONST&PUSH 1)                      ; $DEFAULT_LET_RULE_PACKAGE
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $DEFAULT_LET_RULE_PACKAGE
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "The name of the default rule package used by LET and LETSIMP"
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $DEFAULT_LET_RULE_PACKAGE
18    (SKIP&RET 1)


Disassembly of function #:|(PUTPROP '$DEFAULT_LET_RULE_PACKAGE 'LET-RULE-SETTER ...)-7|
(CONST 0) = $DEFAULT_LET_RULE_PACKAGE
(CONST 1) = LET-RULE-SETTER
(CONST 2) = ASSIGN
(CONST 3) = PUTPROP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; $DEFAULT_LET_RULE_PACKAGE
1     (CONST&PUSH 1)                      ; LET-RULE-SETTER
2     (CONST&PUSH 2)                      ; ASSIGN
3     (CALL 3 3)                          ; PUTPROP
6     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $CURRENT_LET_RULE_PACKAGE '$DEFAULT_LET_RULE_PACKAGE ...)-8-1|
(CONST 0) = $CURRENT_LET_RULE_PACKAGE
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = $DEFAULT_LET_RULE_PACKAGE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $CURRENT_LET_RULE_PACKAGE
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $CURRENT_LET_RULE_PACKAGE
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; $DEFAULT_LET_RULE_PACKAGE
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $CURRENT_LET_RULE_PACKAGE '$DEFAULT_LET_RULE_PACKAGE ...)-8-2|
(CONST 0) = (SPECIAL $CURRENT_LET_RULE_PACKAGE)
(CONST 1) = $CURRENT_LET_RULE_PACKAGE
(CONST 2) = $DEFAULT_LET_RULE_PACKAGE
(CONST 3) = VARIABLE
(CONST 4) = "The name of the current rule package used by LET and LETSIMP"
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $CURRENT_LET_RULE_PACKAGE)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $CURRENT_LET_RULE_PACKAGE
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $CURRENT_LET_RULE_PACKAGE
8     (CONST&PUSH 2)                      ; $DEFAULT_LET_RULE_PACKAGE
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $CURRENT_LET_RULE_PACKAGE
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "The name of the current rule package used by LET and LETSIMP"
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $CURRENT_LET_RULE_PACKAGE
18    (SKIP&RET 1)


Disassembly of function #:|(PUTPROP '$CURRENT_LET_RULE_PACKAGE 'LET-RULE-SETTER ...)-9|
(CONST 0) = $CURRENT_LET_RULE_PACKAGE
(CONST 1) = LET-RULE-SETTER
(CONST 2) = ASSIGN
(CONST 3) = PUTPROP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; $CURRENT_LET_RULE_PACKAGE
1     (CONST&PUSH 1)                      ; LET-RULE-SETTER
2     (CONST&PUSH 2)                      ; ASSIGN
3     (CALL 3 3)                          ; PUTPROP
6     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LET_RULE_PACKAGES '(# $DEFAULT_LET_RULE_PACKAGE) ...)-10-1|
(CONST 0) = $LET_RULE_PACKAGES
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = ((MLIST) $DEFAULT_LET_RULE_PACKAGE)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $LET_RULE_PACKAGES
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $LET_RULE_PACKAGES
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; ((MLIST) $DEFAULT_LET_RULE_PACKAGE)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LET_RULE_PACKAGES '(# $DEFAULT_LET_RULE_PACKAGE) ...)-10-2|
(CONST 0) = (SPECIAL $LET_RULE_PACKAGES)
(CONST 1) = $LET_RULE_PACKAGES
(CONST 2) = ((MLIST) $DEFAULT_LET_RULE_PACKAGE)
(CONST 3) = VARIABLE
(CONST 4) = "The names of the various let rule simplification packages"
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $LET_RULE_PACKAGES)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $LET_RULE_PACKAGES
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $LET_RULE_PACKAGES
8     (CONST&PUSH 2)                      ; ((MLIST) $DEFAULT_LET_RULE_PACKAGE)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $LET_RULE_PACKAGES
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "The names of the various let rule simplification packages"
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $LET_RULE_PACKAGES
18    (SKIP&RET 1)


Disassembly of function #:|(PUTPROP '$LET_RULE_PACKAGES 'LET-RULE-SETTER ...)-11|
(CONST 0) = $LET_RULE_PACKAGES
(CONST 1) = LET-RULE-SETTER
(CONST 2) = ASSIGN
(CONST 3) = PUTPROP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; $LET_RULE_PACKAGES
1     (CONST&PUSH 1)                      ; LET-RULE-SETTER
2     (CONST&PUSH 2)                      ; ASSIGN
3     (CALL 3 3)                          ; PUTPROP
6     (SKIP&RET 1)


Disassembly of function #:|(SETQ NISRULES NIL ...)-12|
(CONST 0) = NISRULES
(CONST 1) = NISTREE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variables : (NISTREE NISRULES)
4 byte-code instructions:
0     (NIL)
1     (SETVALUE 0)                        ; NISRULES
3     (SETVALUE 1)                        ; NISTREE
5     (SKIP&RET 1)


Disassembly of function #:|(DEFUN LET-RULE-SETTER (VAR VAL) ...)-13|
(CONST 0) = LET-RULE-SETTER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LET-RULE-SETTER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LET-RULE-SETTER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LET-RULE-SETTER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LET-RULE-SETTER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LET-RULE-SETTER
8     (SKIP&RET 1)


Disassembly of function LET-RULE-SETTER
(CONST 0) = VAR
(CONST 1) = $DEFAULT_LET_RULE_PACKAGE
(CONST 2) = "~%Attempt to change DEFAULT_LET_RULE_PACKAGE~%"
(CONST 3) = MERROR
(CONST 4) = $CURRENT_LET_RULE_PACKAGE
(CONST 5) = $LET_RULE_PACKAGES
(CONST 6) = MEMALIKE
(CONST 7) = "~%~M is not a rule package~%"
(CONST 8) = "~%Use LET to add let rule packages~%"
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($LET_RULE_PACKAGES VAR)
31 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; VAR
3     (GETVALUE&PUSH 0)                   ; VAR
5     (JMPIFEQTO 1 L31)                   ; $DEFAULT_LET_RULE_PACKAGE
8     (GETVALUE&PUSH 0)                   ; VAR
10    (JMPIFNOTEQTO 4 L20)                ; $CURRENT_LET_RULE_PACKAGE
13    (LOAD&PUSH 4)
14    (GETVALUE 5)                        ; $LET_RULE_PACKAGES
16    (CDR&PUSH)
17    (CALL2&JMPIFNOT 6 L34)              ; MEMALIKE
20    L20
20    (GETVALUE&PUSH 0)                   ; VAR
22    (JMPIFNOTEQTO 5 L40)                ; $LET_RULE_PACKAGES
25    (CONST 8)                           ; "~%Use LET to add let rule packages~%"
26    L26
26    (PUSH)
27    (CALL1 3)                           ; MERROR
29    (JMP L41)
31    L31
31    (CONST 2)                           ; "~%Attempt to change DEFAULT_LET_RULE_PACKAGE~%"
32    (JMP L26)
34    L34
34    (CONST&PUSH 7)                      ; "~%~M is not a rule package~%"
35    (LOAD&PUSH 5)
36    (CALL2 3)                           ; MERROR
38    (JMP L41)
40    L40
40    (NIL)
41    L41
41    (UNBIND1)
42    (SKIP&RET 3)


Disassembly of function #:|(DEFMSPEC $LET (L) ...)-14-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $LET (L) ...)-14-2-1|>
(CONST 1) = $LET
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $LET (L) ...)-14-2-1|>
1     (CONST&PUSH 1)                      ; $LET
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $LET (L) ...)-14-2-1|
(CONST 0) = L
(CONST 1) = $LET
(CONST 2) = WNA-ERR
(CONST 3) = $RATFAC
(CONST 4) = $CURRENT_LET_RULE_PACKAGE
(CONST 5) = MLIST
(CONST 6) = IMPROPER-ARG-ERR
(CONST 7) = LETSIMPTREE
(CONST 8) = MGET
(CONST 9) = LETRULES
(CONST 10) = NISRULES
(CONST 11) = NISTREE
(CONST 12) = MEVAL
(CONST 13) = MTIMES
(CONST 14) = NISLET
(CONST 15) = MPUTPROP
(CONST 16) = $LET_RULE_PACKAGES
(CONST 17) = ADD2LNC
(CONST 18) = NONSYMCHK
(CONST 19) = (MTEXT)
(CONST 20) = | --> |
(CONST 21) = | WHERE |
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (NISRULES $LET_RULE_PACKAGES NISTREE $CURRENT_LET_RULE_PACKAGE L)
writes special variables : (NISRULES NISTREE L)
139 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (GETVALUE 0)                        ; L
5     (CDR)
6     (SETVALUE 0)                        ; L
8     (CDR)
9     (JMPIF L14)
11    (CONST&PUSH 1)                      ; $LET
12    (CALL1 2)                           ; WNA-ERR
14    L14
14    (PUSH-NIL 5)
16    (NIL)
17    (BIND 3)                            ; $RATFAC
19    (GETVALUE 0)                        ; L
21    (CAR)
22    (JMPIFATOM L33)
24    (GETVALUE 0)                        ; L
26    (CAR)
27    (CAR)
28    (CAR&PUSH)
29    (JMPIFEQTO 5 L157)                  ; MLIST
33    L33
33    (GETVALUE 4)                        ; $CURRENT_LET_RULE_PACKAGE
35    (STORE 4)
36    L36
36    (LOAD&PUSH 4)
37    (CONST&PUSH 7)                      ; LETSIMPTREE
38    (CALL2&PUSH 8)                      ; MGET
40    (LOAD&PUSH 5)
41    (CONST&PUSH 9)                      ; LETRULES
42    (CALL2 8)                           ; MGET
44    (BIND 10)                           ; NISRULES
46    (LOAD 3)
47    (BIND 11)                           ; NISTREE
49    (GETVALUE 0)                        ; L
51    (CAR&PUSH)
52    (CALL1 12)                          ; MEVAL
54    (STORE 13)
56    (GETVALUE 0)                        ; L
58    (CDR)
59    (STORE 12)
61    (LOAD 13)
62    (JMPIFATOM L71)
64    (LOAD 13)
65    (CAR)
66    (CAR&PUSH)
67    (JMPIFEQTO 13 L179)                 ; MTIMES
71    L71
71    (LOAD&PUSH 13)
72    (LIST 1)
74    L74
74    (STORE 14)
76    (GETVALUE&PUSH 11)                  ; NISTREE
78    (LOAD&PUSH 15)
79    (LOAD&PUSH 14)
80    (CALL 3 14)                         ; NISLET
83    (SETVALUE 11)                       ; NISTREE
85    (LOAD&JMPIFNOT 11 L100)
88    (PUSH)
89    (GETVALUE&PUSH 11)                  ; NISTREE
91    (CONST&PUSH 7)                      ; LETSIMPTREE
92    (CALL 3 15)                         ; MPUTPROP
95    (LOAD&PUSH 11)
96    (GETVALUE&PUSH 16)                  ; $LET_RULE_PACKAGES
98    (CALL2 17)                          ; ADD2LNC
100   L100
100   (GETVALUE 0)                        ; L
102   (CDR)
103   (CDR)
104   (CAR&PUSH)
105   (CONST&PUSH 1)                      ; $LET
106   (CALL2 18)                          ; NONSYMCHK
108   (CONST&PUSH 19)                     ; (MTEXT)
109   (LOAD&PUSH 14)
110   (CONST&PUSH 20)                     ; | --> |
111   (LIST&PUSH 3)
113   (GETVALUE 0)                        ; L
115   (CDR)
116   (CDR)
117   (JMPIF L184)
120   (LOAD 13)
121   L121
121   (PUSH)
122   (CALLSR&STORE 2 34 10)              ; APPEND
126   (PUSH)
127   (LIST&PUSH 1)
129   (GETVALUE&PUSH 10)                  ; NISRULES
131   (CALLSR 2 34)                       ; APPEND
134   (SETVALUE 10)                       ; NISRULES
136   (LOAD&JMPIFNOT 11 L146)
139   (PUSH)
140   (GETVALUE&PUSH 10)                  ; NISRULES
142   (CONST&PUSH 9)                      ; LETRULES
143   (CALL 3 15)                         ; MPUTPROP
146   L146
146   (LOAD 10)
147   (UNBIND 2)
149   (SKIP 1)
151   (UNBIND1)
152   (SKIP 5)
154   (UNBIND1)
155   (SKIP&RET 2)
157   L157
157   (GETVALUE 0)                        ; L
159   (CDR)
160   (CAR)
161   (STORE 4)
162   (PUSH)
163   (CALLS2&JMPIF 6 L170)               ; SYMBOLP
166   (LOAD&PUSH 4)
167   (CONST&PUSH 1)                      ; $LET
168   (CALL2 6)                           ; IMPROPER-ARG-ERR
170   L170
170   (GETVALUE 0)                        ; L
172   (CAR)
173   (CDR)
174   (SETVALUE 0)                        ; L
176   (JMP L36)
179   L179
179   (LOAD 13)
180   (CDR)
181   (JMP L74)
184   L184
184   (GETVALUE 0)                        ; L
186   (CDR)
187   (CAR&PUSH)
188   (CONST&PUSH 21)                     ; | WHERE |
189   (GETVALUE 0)                        ; L
191   (CDR)
192   (CDR)
193   (CAR&PUSH)
194   (LIST&PUSH 1)
196   (GETVALUE 0)                        ; L
198   (CDR)
199   (CDR)
200   (CDR)
201   (CONS&PUSH)
202   (LIST 3)
204   (JMP L121)


Disassembly of function #:|(DEFUN NISLET (TREE LIST FUNCTION) ...)-15|
(CONST 0) = NISLET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISLET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISLET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISLET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISLET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISLET
8     (SKIP&RET 1)


Disassembly of function NISLET
(CONST 0) = NISPERMUTATIONS
(CONST 1) = NISTREEBUILDER
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&PUSH 3)
2     (CALL1 0)                           ; NISPERMUTATIONS
4     (JMP L16)
6     L6
6     (LOAD&PUSH 4)
7     (LOAD&CAR&PUSH 1)
9     (LOAD&PUSH 4)
10    (CALL 3 1)                          ; NISTREEBUILDER
13    (STORE 4)
14    (LOAD 0)
15    (CDR)
16    L16
16    (STORE 0)
17    (LOAD&JMPIF 0 L6)
20    (LOAD 4)
21    (SKIP&RET 5)


Disassembly of function #:|(DEFUN NISPERMUTATIONS (LLIST) ...)-16|
(CONST 0) = NISPERMUTATIONS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISPERMUTATIONS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISPERMUTATIONS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISPERMUTATIONS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISPERMUTATIONS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISPERMUTATIONS
8     (SKIP&RET 1)


Disassembly of function NISPERMUTATIONS
(CONST 0) = A
(CONST 1) = NISADDON
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (A)
writes special variable : (A)
33 byte-code instructions:
0     L0
0     (LOAD 1)
1     (CDR)
2     (JMPIFNOT L41)
4     (NIL&PUSH)
5     (NIL)
6     (BIND 0)                            ; A
8     L8
8     (LOAD&CAR&PUSH 5)
10    (GETVALUE&PUSH 0)                   ; A
12    (LOAD&CDR&PUSH 7)
14    (CALLSR&PUSH 2 34)                  ; APPEND
17    (JSR&PUSH L0)
19    (CALL2&PUSH 1)                      ; NISADDON
21    (LOAD&PUSH 4)
22    (CALLSR&STORE 2 34 3)               ; APPEND
26    (LOAD 5)
27    (CDR)
28    (JMPIFNOT L46)
30    (LOAD&CAR&PUSH 5)
32    (GETVALUE 0)                        ; A
34    (CONS)
35    (SETVALUE 0)                        ; A
37    (LOAD&CDR&STORE 5)
39    (JMP L8)
41    L41
41    (LOAD&PUSH 1)
42    (LIST 1)
44    (SKIP&RET 2)
46    L46
46    (LOAD 3)
47    (UNBIND1)
48    (SKIP&RET 3)


Disassembly of function #:|(DEFUN NISADDON (X LLIST) ...)-17|
(CONST 0) = NISADDON
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISADDON>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISADDON
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISADDON
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISADDON>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISADDON
8     (SKIP&RET 1)


Disassembly of function NISADDON
(CONST 0) = X
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
16 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (JMPIFNOT1 L18)
6     (GETVALUE&PUSH 0)                   ; X
8     (LOAD 5)
9     (CAR)
10    (CONS&PUSH)
11    (GETVALUE&PUSH 0)                   ; X
13    (LOAD&CDR&PUSH 6)
15    (JSR L0)
17    (CONS)
18    L18
18    (UNBIND1)
19    (SKIP&RET 3)


Disassembly of function #:|(DEFUN NISTREEBUILDER (TREE PERM FUNCTION) ...)-18|
(CONST 0) = NISTREEBUILDER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISTREEBUILDER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISTREEBUILDER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISTREEBUILDER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISTREEBUILDER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISTREEBUILDER
8     (SKIP&RET 1)


Disassembly of function NISTREEBUILDER
(CONST 0) = NISSWCDR
(CONST 1) = NISSWCAR
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
44 byte-code instructions:
0     (LOAD&JMPIF 2 L43)
3     L3
3     (LOAD&PUSH 1)
4     (LIST&PUSH 1)
6     (LOAD 4)
7     (CONS)
8     (SKIP&RET 4)
10    L10
10    (LOAD&CAR&PUSH 2)
12    (NIL&PUSH)
13    (LOAD&CDR&PUSH 4)
15    (LOAD&PUSH 4)
16    (JSR L40)
18    (CONS&PUSH)
19    (LIST 1)
21    (SKIP&RET 4)
23    L23
23    (LOAD&PUSH 3)
24    (LOAD&CAR&PUSH 4)
26    (LOAD 5)
27    (CAR)
28    (CDR&PUSH)
29    (LOAD&CDR&PUSH 5)
31    (LOAD&PUSH 5)
32    (JSR&PUSH L40)
34    (CALL2&PUSH 0)                      ; NISSWCDR
36    (CALL2 1)                           ; NISSWCAR
38    (SKIP&RET 4)
40    L40
40    (LOAD&JMPIFNOT 2 L3)
43    L43
43    (LOAD&JMPIFNOT 3 L10)
46    (LOAD&CAR&PUSH 2)
48    (LOAD 4)
49    (CAR)
50    (CAR&PUSH)
51    (CALLS2&JMPIF 2 L23)                ; EQUAL
54    (LOAD&PUSH 3)
55    (LOAD&CDR&PUSH 4)
57    (LOAD&PUSH 4)
58    (LOAD&PUSH 4)
59    (JSR&PUSH L40)
61    (CALL2 0)                           ; NISSWCDR
63    (SKIP&RET 4)


Disassembly of function #:|(DEFUN NISSWCAR (X Y) ...)-19|
(CONST 0) = NISSWCAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISSWCAR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISSWCAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISSWCAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISSWCAR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISSWCAR
8     (SKIP&RET 1)


Disassembly of function NISSWCAR
(CONST 0) = X
(CONST 1) = Y
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X Y)
10 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE&PUSH 1)                   ; Y
8     (GETVALUE 0)                        ; X
10    (CDR)
11    (CONS)
12    (UNBIND 2)
14    (SKIP&RET 3)


Disassembly of function #:|(DEFUN NISSWCDR (X Y) ...)-20|
(CONST 0) = NISSWCDR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISSWCDR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISSWCDR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISSWCDR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISSWCDR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISSWCDR
8     (SKIP&RET 1)


Disassembly of function NISSWCDR
(CONST 0) = X
(CONST 1) = Y
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X)
10 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE 0)                        ; X
8     (CAR&PUSH)
9     (GETVALUE 1)                        ; Y
11    (CONS)
12    (UNBIND 2)
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMSPEC $REMLET (X) ...)-21-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $REMLET (X) ...)-21-2-1|>
(CONST 1) = $REMLET
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $REMLET (X) ...)-21-2-1|>
1     (CONST&PUSH 1)                      ; $REMLET
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $REMLET (X) ...)-21-2-1|
(CONST 0) = X
(CONST 1) = $REMLET
(CONST 2) = WNA-ERR
(CONST 3) = $CURRENT_LET_RULE_PACKAGE
(CONST 4) = IMPROPER-ARG-ERR
(CONST 5) = MEVAL
(CONST 6) = $ALL
(CONST 7) = NISRULES
(CONST 8) = NISTREE
(CONST 9) = $DEFAULT_LET_RULE_PACKAGE
(CONST 10) = $LET_RULE_PACKAGES
(CONST 11) = 1
(CONST 12) = DELQ
(CONST 13) = LETSIMPTREE
(CONST 14) = MGET
(CONST 15) = NISREMLET
(CONST 16) = LETRULES
(CONST 17) = NISTREELISTER
(CONST 18) = MPUTPROP
(CONST 19) = $DONE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($LET_RULE_PACKAGES $CURRENT_LET_RULE_PACKAGE NISRULES NISTREE X)
writes special variables : (NISRULES NISTREE X)
86 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (CDR)
6     (SETVALUE 0)                        ; X
8     (PUSH-NIL 3)
10    (GETVALUE 0)                        ; X
12    (CDR)
13    (CDR)
14    (JMPIF L87)
17    (GETVALUE 0)                        ; X
19    (CDR)
20    (JMPIFNOT L92)
23    (GETVALUE 0)                        ; X
25    (CDR)
26    (CAR)
27    (STORE 0)
28    (PUSH)
29    (CALLS2&JMPIF 6 L36)                ; SYMBOLP
32    (LOAD&PUSH 0)
33    (CONST&PUSH 1)                      ; $REMLET
34    (CALL2 4)                           ; IMPROPER-ARG-ERR
36    L36
36    (GETVALUE 0)                        ; X
38    (CAR&PUSH)
39    (CALL1 5)                           ; MEVAL
41    (STORE 2)
42    (JMPIFNOT L97)
44    (LOAD&PUSH 2)
45    (JMPIFEQTO 6 L97)                   ; $ALL
48    (LOAD&PUSH 0)
49    (CONST&PUSH 13)                     ; LETSIMPTREE
50    (CALL2 14)                          ; MGET
52    (SETVALUE 8)                        ; NISTREE
54    (LOAD&PUSH 2)
55    (CALL1 15)                          ; NISREMLET
57    (STORE 1)
58    (JMPIF L115)
60    (GETVALUE 8)                        ; NISTREE
62    (JMPIF L119)
64    (NIL)
65    (SETVALUE 7)                        ; NISRULES
67    L67
67    (LOAD&PUSH 0)
68    (GETVALUE&PUSH 8)                   ; NISTREE
70    (CONST&PUSH 13)                     ; LETSIMPTREE
71    (CALL 3 18)                         ; MPUTPROP
74    (LOAD&PUSH 0)
75    (GETVALUE&PUSH 7)                   ; NISRULES
77    (CONST&PUSH 16)                     ; LETRULES
78    (CALL 3 18)                         ; MPUTPROP
81    (CONST 19)                          ; $DONE
82    (SKIP 3)
84    L84
84    (UNBIND1)
85    (SKIP&RET 2)
87    L87
87    (CONST&PUSH 1)                      ; $REMLET
88    (CALL1 2)                           ; WNA-ERR
90    (JMP L36)
92    L92
92    (GETVALUE 3)                        ; $CURRENT_LET_RULE_PACKAGE
94    (STORE 0)
95    (JMP L36)
97    L97
97    (NIL)
98    (SETVALUE 7)                        ; NISRULES
100   (SETVALUE 8)                        ; NISTREE
102   (LOAD&PUSH 0)
103   (JMPIFEQTO 9 L67)                   ; $DEFAULT_LET_RULE_PACKAGE
106   (LOAD&PUSH 0)
107   (GETVALUE&PUSH 10)                  ; $LET_RULE_PACKAGES
109   (CONST&PUSH 11)                     ; 1
110   (CALL 3 12)                         ; DELQ
113   (JMP L67)
115   L115
115   (SKIP 3)
117   (JMP L84)
119   L119
119   (LOAD&PUSH 0)
120   (CONST&PUSH 16)                     ; LETRULES
121   (CALL2&PUSH 14)                     ; MGET
123   (LOAD&PUSH 3)
124   (CALL2 17)                          ; NISTREELISTER
126   (SETVALUE 7)                        ; NISRULES
128   (JMP L67)


Disassembly of function #:|(DEFUN NISTREELISTER (LLIST PATTERN) ...)-22|
(CONST 0) = NISTREELISTER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISTREELISTER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISTREELISTER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISTREELISTER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISTREELISTER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISTREELISTER
8     (SKIP&RET 1)


Disassembly of function NISTREELISTER
(CONST 0) = X
(CONST 1) = ALIKE1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
writes special variable : (X)
22 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; X
3     (JMP L18)
5     L5
5     (GETVALUE&PUSH 0)                   ; X
7     (LOAD&CAR&PUSH 6)
9     (LIST&PUSH 1)
11    (CALLSR 2 34)                       ; APPEND
14    (SETVALUE 0)                        ; X
16    (LOAD&CDR&STORE 5)
18    L18
18    (LOAD&PUSH 4)
19    (LOAD 6)
20    (CAR)
21    (CDR)
22    (CAR&PUSH)
23    (CALL2&JMPIFNOT 1 L5)               ; ALIKE1
26    (GETVALUE&PUSH 0)                   ; X
28    (LOAD&CDR&PUSH 6)
30    (CALLSR 2 34)                       ; APPEND
33    (UNBIND1)
34    (SKIP&RET 3)


Disassembly of function #:|(DEFUN NISREMLET (PAT) ...)-23|
(CONST 0) = NISREMLET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISREMLET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISREMLET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISREMLET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISREMLET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISREMLET
8     (SKIP&RET 1)


Disassembly of function NISREMLET
(CONST 0) = X
(CONST 1) = MTIMESP
(CONST 2) = NISFLAG
(CONST 3) = NISTREE
(CONST 4) = NISPERMUTATIONS
(CONST 5) = NISTREETRIMMER
(CONST 6) = "~M not found - REMLET"
(CONST 7) = MERROR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (NISFLAG X NISTREE)
writes special variables : (NISTREE X NISFLAG)
42 byte-code instructions:
0     (PUSH-NIL 2)
2     (NIL)
3     (BIND 0)                            ; X
5     (LOAD&PUSH 6)
6     (CALL1&JMPIF 1 L25)                 ; MTIMESP
9     (LOAD&PUSH 6)
10    (NIL)
11    (CONS)
12    L12
12    (STORE 4)
13    (T)
14    (SETVALUE 2)                        ; NISFLAG
16    (GETVALUE 3)                        ; NISTREE
18    (SETVALUE 0)                        ; X
20    (LOAD&PUSH 4)
21    (CALL1 4)                           ; NISPERMUTATIONS
23    (JMP L47)
25    L25
25    (LOAD 6)
26    (CDR)
27    (JMP L12)
29    L29
29    (LOAD&CAR&PUSH 3)
31    (GETVALUE&PUSH 0)                   ; X
33    (CALL2 5)                           ; NISTREETRIMMER
35    (SETVALUE 0)                        ; X
37    (GETVALUE 2)                        ; NISFLAG
39    (JMPIF L45)
41    (CONST&PUSH 6)                      ; "~M not found - REMLET"
42    (LOAD&PUSH 7)
43    (CALL2 7)                           ; MERROR
45    L45
45    (LOAD 3)
46    (CDR)
47    L47
47    (STORE 3)
48    (LOAD&JMPIF 3 L29)
51    (GETVALUE 0)                        ; X
53    (SETVALUE 3)                        ; NISTREE
55    (NIL)
56    (UNBIND1)
57    (SKIP&RET 4)


Disassembly of function #:|(DEFUN NISTREETRIMMER (PERM TREE) ...)-24|
(CONST 0) = NISTREETRIMMER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISTREETRIMMER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISTREETRIMMER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISTREETRIMMER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISTREETRIMMER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISTREETRIMMER
8     (SKIP&RET 1)


Disassembly of function NISTREETRIMMER
(CONST 0) = NISFLAG
(CONST 1) = NISSWCDR
(CONST 2) = X
(CONST 3) = NISSWCAR
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
writes special variables : (X NISFLAG)
62 byte-code instructions:
0     (LOAD&JMPIF 2 L27)
3     L3
3     (LOAD&JMPIFNOT 1 L30)
6     (LOAD 1)
7     (CAR)
8     (CDR)
9     (JMPIFNOT L15)
11    (LOAD&PUSH 1)
12    (NIL)
13    (JMP L75)
15    L15
15    (LOAD 1)
16    (CAR)
17    (CAR)
18    (SETVALUE 0)                        ; NISFLAG
20    (LOAD 1)
21    (CDR)
22    (SKIP&RET 3)
24    L24
24    (LOAD&JMPIFNOT 2 L3)
27    L27
27    (LOAD&JMPIF 1 L65)
30    L30
30    (NIL)
31    (SETVALUE 0)                        ; NISFLAG
33    (SKIP&RET 3)
35    L35
35    (LOAD 4)
36    (CDR)
37    (JMP L62)
39    L39
39    (NIL)
40    (BIND 2)                            ; X
42    (LOAD&CDR&PUSH 5)
44    (LOAD 5)
45    (CAR)
46    (CDR&PUSH)
47    (JSR L24)
49    (SETVALUE 2)                        ; X
51    (JMPIFNOT L35)
53    (LOAD&PUSH 4)
54    (LOAD&CAR&PUSH 5)
56    (GETVALUE&PUSH 2)                   ; X
58    (CALL2&PUSH 1)                      ; NISSWCDR
60    (CALL2 3)                           ; NISSWCAR
62    L62
62    (UNBIND1)
63    (SKIP&RET 3)
65    L65
65    (LOAD&CAR&PUSH 2)
67    (LOAD 2)
68    (CAR)
69    (CAR&PUSH)
70    (CALLS2&JMPIF 2 L39)                ; EQUAL
73    (LOAD&PUSH 1)
74    (LOAD 3)
75    L75
75    (PUSH)
76    (LOAD&CDR&PUSH 3)
78    (JSR&PUSH L24)
80    (CALL2 1)                           ; NISSWCDR
82    (SKIP&RET 3)


Disassembly of function #:|(DEFMSPEC $LETRULES (NAME) ...)-25-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $LETRULES (NAME) ...)-25-2-1|>
(CONST 1) = $LETRULES
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $LETRULES (NAME) ...)-25-2-1|>
1     (CONST&PUSH 1)                      ; $LETRULES
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $LETRULES (NAME) ...)-25-2-1|
(CONST 0) = NAME
(CONST 1) = $CURRENT_LET_RULE_PACKAGE
(CONST 2) = $LETRULES
(CONST 3) = IMPROPER-ARG-ERR
(CONST 4) = LETSIMPTREE
(CONST 5) = MGET
(CONST 6) = NISTREE
(CONST 7) = LETRULES
(CONST 8) = NISRULES
(CONST 9) = $DISP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (NISRULES $CURRENT_LET_RULE_PACKAGE NAME)
writes special variables : (NISRULES NISTREE NAME)
32 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; NAME
3     (GETVALUE 0)                        ; NAME
5     (CDR)
6     (SETVALUE 0)                        ; NAME
8     (JMPIF L44)
10    (GETVALUE 1)                        ; $CURRENT_LET_RULE_PACKAGE
12    L12
12    (PUSH)
13    (LOAD&PUSH 0)
14    (CALLS2&JMPIF 6 L21)                ; SYMBOLP
17    (LOAD&PUSH 0)
18    (CONST&PUSH 2)                      ; $LETRULES
19    (CALL2 3)                           ; IMPROPER-ARG-ERR
21    L21
21    (LOAD&PUSH 0)
22    (CONST&PUSH 4)                      ; LETSIMPTREE
23    (CALL2 5)                           ; MGET
25    (SETVALUE 6)                        ; NISTREE
27    (LOAD&PUSH 0)
28    (CONST&PUSH 7)                      ; LETRULES
29    (CALL2 5)                           ; MGET
31    (SETVALUE 8)                        ; NISRULES
33    (CONST&SYMBOL-FUNCTION&PUSH 9)      ; $DISP
35    (GETVALUE 8)                        ; NISRULES
37    (APPLY 0)
39    (SKIP 1)
41    (UNBIND1)
42    (SKIP&RET 2)
44    L44
44    (CAR)
45    (JMP L12)


Disassembly of function #:|(DEFMSPEC $LETSIMP (X) ...)-26-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $LETSIMP (X) ...)-26-2-1|>
(CONST 1) = $LETSIMP
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $LETSIMP (X) ...)-26-2-1|>
1     (CONST&PUSH 1)                      ; $LETSIMP
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $LETSIMP (X) ...)-26-2-1|
(CONST 0) = X
(CONST 1) = VARLIST
(CONST 2) = GENVAR
(CONST 3) = $RATFAC
(CONST 4) = MEVAL
(CONST 5) = MRAT
(CONST 6) = TRUNC
(CONST 7) = MEMQ
(CONST 8) = $TAYTORAT
(CONST 9) = RATF
(CONST 10) = $CURRENT_LET_RULE_PACKAGE
(CONST 11) = LETSIMPTREE
(CONST 12) = MGET
(CONST 13) = NISTREE
(CONST 14) = NISLETSIMP
(CONST 15) = $LETSIMP
(CONST 16) = IMPROPER-ARG-ERR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($CURRENT_LET_RULE_PACKAGE GENVAR VARLIST X)
writes special variables : (NISTREE X)
87 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (CDR)
6     (SETVALUE 0)                        ; X
8     (GETVALUE 1)                        ; VARLIST
10    (BIND 1)                            ; VARLIST
12    (GETVALUE 2)                        ; GENVAR
14    (BIND 2)                            ; GENVAR
16    (PUSH-NIL 2)
18    (NIL)
19    (BIND 3)                            ; $RATFAC
21    (GETVALUE 0)                        ; X
23    (CAR&PUSH)
24    (CALL1 4)                           ; MEVAL
26    (STORE 4)
27    (JMPIFATOM L39)
29    (LOAD 4)
30    (CAR)
31    (CAR&PUSH)
32    (JMPIFEQTO 5 L86)                   ; MRAT
35    (LOAD&PUSH 4)
36    (CALL1 9)                           ; RATF
38    (STORE 4)
39    L39
39    (GETVALUE 0)                        ; X
41    (CDR)
42    (JMPIFNOT L101)
44    L44
44    (GETVALUE 0)                        ; X
46    (CDR)
47    (SETVALUE 0)                        ; X
49    (CAR&PUSH)
50    (CALLS2&JMPIF 6 L59)                ; SYMBOLP
53    (GETVALUE 0)                        ; X
55    (CAR&PUSH)
56    (CONST&PUSH 15)                     ; $LETSIMP
57    (CALL2 16)                          ; IMPROPER-ARG-ERR
59    L59
59    (GETVALUE 0)                        ; X
61    (CAR&PUSH)
62    (CONST&PUSH 11)                     ; LETSIMPTREE
63    (CALL2 12)                          ; MGET
65    (SETVALUE 13)                       ; NISTREE
67    (JMPIFNOT L73)
69    (LOAD&PUSH 4)
70    (CALL1 14)                          ; NISLETSIMP
72    (STORE 4)
73    L73
73    (GETVALUE 0)                        ; X
75    (CDR)
76    (JMPIF L44)
78    (LOAD&JMPIFNOT 3 L118)
81    L81
81    (LOAD&PUSH 4)
82    (CALL1 9)                           ; RATF
84    (JMP L119)
86    L86
86    (CONST&PUSH 6)                      ; TRUNC
87    (LOAD 5)
88    (CAR)
89    (CDR&PUSH)
90    (CALL2&JMPIFNOT 7 L97)              ; MEMQ
93    (LOAD&PUSH 4)
94    (CALL1 8)                           ; $TAYTORAT
96    (STORE 4)
97    L97
97    (T&STORE 3)
99    (JMP L39)
101   L101
101   (GETVALUE&PUSH 10)                  ; $CURRENT_LET_RULE_PACKAGE
103   (CONST&PUSH 11)                     ; LETSIMPTREE
104   (CALL2 12)                          ; MGET
106   (SETVALUE 13)                       ; NISTREE
108   (LOAD&PUSH 4)
109   (CALL1 14)                          ; NISLETSIMP
111   (STORE 4)
112   (LOAD&JMPIF 3 L81)
115   (LOAD 4)
116   (JMP L119)
118   L118
118   (LOAD 4)
119   L119
119   (UNBIND1)
120   (SKIP 2)
122   (UNBIND 3)
124   (SKIP&RET 2)


Disassembly of function #:|(DEFUN NISLETSIMP (E) ...)-27|
(CONST 0) = NISLETSIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISLETSIMP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISLETSIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISLETSIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISLETSIMP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISLETSIMP
8     (SKIP&RET 1)


Disassembly of function NISLETSIMP
(CONST 0) = E
(CONST 1) = X
(CONST 2) = MNUMP
(CONST 3) = MTIMES
(CONST 4) = NISNEWLIST
(CONST 5) = (MTIMES)
(CONST 6) = $RATEXPAND
(CONST 7) = (MPLUS MEQUAL MLIST $MATRIX)
(CONST 8) = MEMQ
(CONST 9) = MPLUS
(CONST 10) = (MPLUS)
(CONST 11) = NISLETSIMP
(CONST 12) = MRAT
(CONST 13) = MQUOTIENT
(CONST 14) = RATF
(CONST 15) = NISLETSIMPRAT
(CONST 16) = (MTIMES)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X E)
writes special variables : (E X)
94 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; E
3     (NIL)
4     (BIND 1)                            ; X
6     (GETVALUE&PUSH 0)                   ; E
8     (CALL1&JMPIF 2 L70)                 ; MNUMP
11    (GETVALUE 0)                        ; E
13    (JMPIFATOM L76)
15    (GETVALUE 0)                        ; E
17    (CAR)
18    (CAR&PUSH)
19    (JMPIFNOTEQTO 3 L29)                ; MTIMES
22    (GETVALUE 0)                        ; E
24    (CDR)
25    (SETVALUE 1)                        ; X
27    (JMPIF L82)
29    L29
29    (GETVALUE 0)                        ; E
31    (CAR)
32    (CAR&PUSH)
33    (CONST&PUSH 7)                      ; (MPLUS MEQUAL MLIST $MATRIX)
34    (CALL2&JMPIF 8 L96)                 ; MEMQ
37    (GETVALUE 0)                        ; E
39    (CAR)
40    (CAR&PUSH)
41    (JMPIFEQTO 12 L119)                 ; MRAT
45    (GETVALUE 0)                        ; E
47    (CAR)
48    (CAR&PUSH)
49    (JMPIFNOTEQTO 13 L60)               ; MQUOTIENT
52    (GETVALUE&PUSH 0)                   ; E
54    (CALL1 14)                          ; RATF
56    (SETVALUE 0)                        ; E
58    (JMPIF L119)
60    L60
60    (GETVALUE&PUSH 0)                   ; E
62    (NIL)
63    (CONS&PUSH)
64    (CALL1 4)                           ; NISNEWLIST
66    (SETVALUE 1)                        ; X
68    (JMPIF L126)
70    L70
70    (GETVALUE 0)                        ; E
72    (UNBIND1)
73    L73
73    (UNBIND1)
74    (SKIP&RET 2)
76    L76
76    (GETVALUE&PUSH 0)                   ; E
78    (NIL)
79    (CONS)
80    (SETVALUE 1)                        ; X
82    L82
82    (GETVALUE&PUSH 1)                   ; X
84    (CALL1 4)                           ; NISNEWLIST
86    (SETVALUE 1)                        ; X
88    (JMPIFNOT L70)
90    (CONST 5)                           ; (MTIMES)
91    (JMP L127)
93    L93
93    (CONST 10)                          ; (MPLUS)
94    (JMP L106)
96    L96
96    (GETVALUE 0)                        ; E
98    (CAR)
99    (CAR&PUSH)
100   (JMPIFEQTO 9 L93)                   ; MPLUS
103   (GETVALUE 0)                        ; E
105   (CAR)
106   L106
106   (PUSH)
107   (CONST&SYMBOL-FUNCTION&PUSH 11)     ; NISLETSIMP
109   (GETVALUE 0)                        ; E
111   (CDR&PUSH)
112   (CALLSR 0 22)                       ; MAPCAR
115   (CONS)
116   (UNBIND1)
117   (JMP L73)
119   L119
119   (GETVALUE&PUSH 0)                   ; E
121   (CALL1 15)                          ; NISLETSIMPRAT
123   (UNBIND1)
124   (JMP L73)
126   L126
126   (CONST 16)                          ; (MTIMES)
127   L127
127   (PUSH)
128   (GETVALUE 1)                        ; X
130   (CONS&PUSH)
131   (CALL1&PUSH 6)                      ; $RATEXPAND
133   (JSR L0)
136   (UNBIND1)
137   (JMP L73)


Disassembly of function #:|(DEFUN NISLETSIMPRAT (E) ...)-28|
(CONST 0) = NISLETSIMPRAT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISLETSIMPRAT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISLETSIMPRAT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISLETSIMPRAT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISLETSIMPRAT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISLETSIMPRAT
8     (SKIP&RET 1)


Disassembly of function NISLETSIMPRAT
(CONST 0) = E
(CONST 1) = $RATEXPAND
(CONST 2) = NUM
(CONST 3) = $LETVARSIMP
(CONST 4) = NISLETSIMP
(CONST 5) = VARLIST
(CONST 6) = PDIS
(CONST 7) = (MQUOTIENT)
(CONST 8) = $LETRAT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($LETRAT NUM VARLIST $LETVARSIMP E)
writes special variables : (E NUM VARLIST)
48 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; E
3     (GETVALUE 0)                        ; E
5     (CDR)
6     (CAR&PUSH)
7     (GETVALUE 0)                        ; E
9     (CDR)
10    (CDR&PUSH)
11    (NIL)
12    (BIND 1)                            ; $RATEXPAND
14    (LOAD 4)
15    (BIND 2)                            ; NUM
17    (GETVALUE 3)                        ; $LETVARSIMP
19    (JMPIFNOT L30)
21    (CONST&SYMBOL-FUNCTION&PUSH 4)      ; NISLETSIMP
23    (GETVALUE&PUSH 5)                   ; VARLIST
25    (CALLSR 0 22)                       ; MAPCAR
28    (SETVALUE 5)                        ; VARLIST
30    L30
30    (T)
31    (BIND 1)                            ; $RATEXPAND
33    (GETVALUE&PUSH 2)                   ; NUM
35    (CALL1&PUSH 6)                      ; PDIS
37    (CALL1 4)                           ; NISLETSIMP
39    (SETVALUE 2)                        ; NUM
41    (LOAD&PUSH 9)
42    (CALL1&PUSH 6)                      ; PDIS
44    (CALL1 4)                           ; NISLETSIMP
46    (STORE 9)
48    (UNBIND1)
49    (CONST&PUSH 7)                      ; (MQUOTIENT)
50    (GETVALUE&PUSH 2)                   ; NUM
52    (LOAD&PUSH 8)
53    (LIST 3)
55    (SETVALUE 0)                        ; E
57    (GETVALUE 8)                        ; $LETRAT
59    (JMPIF L70)
61    (GETVALUE 0)                        ; E
63    L63
63    (UNBIND 2)
65    (SKIP 2)
67    (UNBIND1)
68    (SKIP&RET 2)
70    L70
70    (GETVALUE&PUSH 0)                   ; E
72    (CALL1&PUSH 1)                      ; $RATEXPAND
74    (CALL1 4)                           ; NISLETSIMP
76    (JMP L63)


Disassembly of function #:|(DEFUN NISNEWLIST (LLIST) ...)-29|
(CONST 0) = NISNEWLIST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISNEWLIST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISNEWLIST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISNEWLIST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISNEWLIST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISNEWLIST
8     (SKIP&RET 1)


Disassembly of function NISNEWLIST
(CONST 0) = NISTREE
(CONST 1) = NISSEARCH
(CONST 2) = X
(CONST 3) = NISREPLACE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X NISTREE)
13 byte-code instructions:
0     (LOAD&PUSH 1)
1     (GETVALUE&PUSH 0)                   ; NISTREE
3     (NIL&PUSH)
4     (CALL 3 1)                          ; NISSEARCH
7     (BIND 2)                            ; X
9     (GETVALUE 2)                        ; X
11    (JMPIFNOT1 L18)
13    (LOAD&PUSH 4)
14    (GETVALUE&PUSH 2)                   ; X
16    (CALL2 3)                           ; NISREPLACE
18    L18
18    (UNBIND1)
19    (SKIP&RET 2)


Disassembly of function #:|(DEFUN NISSEARCH (X Y Z) ...)-30|
(CONST 0) = NISSEARCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISSEARCH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISSEARCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISSEARCH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISSEARCH>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISSEARCH
8     (SKIP&RET 1)


Disassembly of function NISSEARCH
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = NISINNERNULL
(CONST 3) = NISFIX
(CONST 4) = YY
(CONST 5) = NISMATCH
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (YY X Y)
writes special variable : (YY)
71 byte-code instructions:
0     L0
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD 5)
4     (BIND 1)                            ; Y
6     (GETVALUE 1)                        ; Y
8     (JMPIFNOT L82)
11    (GETVALUE&PUSH 1)                   ; Y
13    (CALL1&JMPIF 2 L85)                 ; NISINNERNULL
17    (GETVALUE 0)                        ; X
19    (JMPIFNOT L94)
22    (NIL&PUSH)
23    (NIL)
24    (BIND 4)                            ; YY
26    (PUSH-NIL 2)
28    (GETVALUE 1)                        ; Y
30    (SETVALUE 4)                        ; YY
32    L32
32    (GETVALUE 0)                        ; X
34    (STORE 5)
35    L35
35    (LOAD&CAR&PUSH 5)
37    (GETVALUE 4)                        ; YY
39    (CAR)
40    (CAR&PUSH)
41    (LOAD&PUSH 15)
42    (CALL 3 5)                          ; NISMATCH
45    (STORE 0)
46    (JMPIFNOT L61)
48    (LOAD&CDR&PUSH 5)
50    (GETVALUE 4)                        ; YY
52    (CAR)
53    (CDR&PUSH)
54    (LOAD&CDR&PUSH 2)
56    (JSR L0)
58    (STORE 1)
59    (JMPIF L97)
61    L61
61    (LOAD&CDR&STORE 5)
63    (JMPIF L35)
65    (GETVALUE 4)                        ; YY
67    (CDR)
68    (SETVALUE 4)                        ; YY
70    (JMPIF L32)
72    (NIL)
73    (SKIP 2)
75    (UNBIND1)
76    (SKIP 1)
78    L78
78    (UNBIND 2)
80    (SKIP&RET 4)
82    L82
82    (NIL)
83    (JMP L78)
85    L85
85    (GETVALUE&PUSH 1)                   ; Y
87    (CALL1&PUSH 2)                      ; NISINNERNULL
89    (LOAD&PUSH 8)
90    (CALL2 3)                           ; NISFIX
92    (JMP L78)
94    L94
94    (NIL)
95    (JMP L78)
97    L97
97    (LOAD&CAR&PUSH 0)
99    (LOAD 2)
100   (CONS)
101   (SKIP 2)
103   (UNBIND1)
104   (SKIP 1)
106   (JMP L78)


Disassembly of function #:|(DEFUN NISINNERNULL (X) ...)-31|
(CONST 0) = NISINNERNULL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISINNERNULL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISINNERNULL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISINNERNULL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISINNERNULL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISINNERNULL
8     (SKIP&RET 1)


Disassembly of function NISINNERNULL
(CONST 0) = X
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
23 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFNOT L21)
7     (GETVALUE 0)                        ; X
9     (CAR)
10    (CDR)
11    (JMPIFNOT L24)
13    (GETVALUE 0)                        ; X
15    (CDR&PUSH)
16    (JSR L0)
18    L18
18    (UNBIND1)
19    (SKIP&RET 2)
21    L21
21    (NIL)
22    (JMP L18)
24    L24
24    (GETVALUE 0)                        ; X
26    (CAR)
27    (CAR)
28    (JMP L18)


Disassembly of function #:|(DEFUN NISFIX (FUNPERD ARGASSLIST) ...)-32|
(CONST 0) = NISFIX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISFIX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISFIX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISFIX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISFIX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISFIX
8     (SKIP&RET 1)


Disassembly of function NISFIX
(CONST 0) = ARGS
(CONST 1) = FLAG
(CONST 2) = NISNUMBERPICKER
(CONST 3) = CAAR
(CONST 4) = CDAR
(CONST 5) = MBIND
(CONST 6) = MEVAL
(CONST 7) = MUNBIND
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (FLAG ARGS)
writes special variables : (FLAG ARGS)
76 byte-code instructions:
0     (NIL&PUSH)
1     (NIL)
2     (BIND 0)                            ; ARGS
4     (PUSH-NIL 2)
6     (NIL)
7     (BIND 1)                            ; FLAG
9     (LOAD&JMPIFNOT 10 L75)
12    (LOAD&PUSH 10)
13    (CALL1 2)                           ; NISNUMBERPICKER
15    (STORE 10)
17    (CONST&PUSH 3)                      ; CAAR
18    (LOAD&PUSH 11)
19    (CALLSR 0 23)                       ; MAPLIST
22    (SETVALUE 0)                        ; ARGS
24    (CONST&PUSH 4)                      ; CDAR
25    (LOAD&PUSH 11)
26    (CALLSR&STORE 0 23 4)               ; MAPLIST
30    (GETVALUE&PUSH 0)                   ; ARGS
32    (NIL&PUSH)
33    (UNWIND-PROTECT-OPEN L91)
35    (LOAD&PUSH 3)
36    (LOAD&PUSH 9)
37    (NIL&PUSH)
38    (CALL 3 5)                          ; MBIND
41    (T&STORE 2)
43    (LOAD&CAR&STORE 15 12)
46    (LOAD 15)
48    (CDR)
49    (STORE 7)
50    (JMPIFNOT L56)
52    (PUSH)
53    (CALL1&JMPIFNOT 6 L79)              ; MEVAL
56    L56
56    (GETVALUE 1)                        ; FLAG
58    (JMPIF L65)
60    L60
60    (LOAD&PUSH 12)
61    (CALL1 6)                           ; MEVAL
63    (STORE 12)
65    L65
65    (VALUES0)
66    (UNWIND-PROTECT-NORMAL-EXIT)
67    (LOADI 0 0 0)
71    (JMPIFNOT L103)
73    (JMP L97)
75    L75
75    (LOAD 11)
76    (CAR)
77    (JMP L113)
79    L79
79    (T)
80    (SETVALUE 1)                        ; FLAG
82    (GETVALUE 1)                        ; FLAG
84    (JMPIFNOT L60)
86    (JMP L65)
88    L88
88    (NIL)
89    (JMP L113)
91    L91
91    (LOADI 0 0 0)
95    (JMPIFNOT L103)
97    L97
97    (LOADI&PUSH 0 0 1)
101   (CALL1 7)                           ; MUNBIND
103   L103
103   (UNWIND-PROTECT-CLOSE)
104   (SKIP 2)
106   (GETVALUE 1)                        ; FLAG
108   (JMPIF L88)
110   (LOAD&PUSH 8)
111   (LIST 1)
113   L113
113   (UNBIND1)
114   (SKIP 2)
116   (UNBIND1)
117   (SKIP&RET 4)


Disassembly of function #:|(DEFUN NISNUMBERPICKER (X) ...)-33|
(CONST 0) = NISNUMBERPICKER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISNUMBERPICKER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISNUMBERPICKER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISNUMBERPICKER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISNUMBERPICKER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISNUMBERPICKER
8     (SKIP&RET 1)


Disassembly of function NISNUMBERPICKER
(CONST 0) = X
(CONST 1) = NISSWCDR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
25 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFNOT L26)
7     (GETVALUE 0)                        ; X
9     (CAR)
10    (CAR&PUSH)
11    (CALLS2&JMPIFNOT 6 L29)             ; SYMBOLP
14    (GETVALUE&PUSH 0)                   ; X
16    (GETVALUE 0)                        ; X
18    (CDR&PUSH)
19    (JSR&PUSH L0)
21    (CALL2 1)                           ; NISSWCDR
23    L23
23    (UNBIND1)
24    (SKIP&RET 2)
26    L26
26    (NIL)
27    (JMP L23)
29    L29
29    (GETVALUE 0)                        ; X
31    (CDR&PUSH)
32    (JSR L0)
34    (JMP L23)


Disassembly of function #:|(DEFUN NISMATCH (A B C) ...)-34|
(CONST 0) = NISMATCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISMATCH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISMATCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISMATCH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISMATCH>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISMATCH
8     (SKIP&RET 1)


Disassembly of function NISMATCH
(CONST 0) = A
(CONST 1) = B
(CONST 2) = C
(CONST 3) = X
(CONST 4) = Y
(CONST 5) = NISEXTRACT
(CONST 6) = NISEXPOCHECK
(CONST 7) = NISARGSCHECKER
(CONST 8) = (RAT)
(CONST 9) = NISBUILD
(CONST 10) = (DUMMY 0 (0 0))
(CONST 11) = NISKERNEL
(CONST 12) = NISARGMATCH
(CONST 13) = (RAT)
(CONST 14) = (DUMMY 0 (0 0))
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X C Y B A)
writes special variables : (C Y X)
99 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 5)
4     (BIND 1)                            ; B
6     (LOAD 7)
7     (BIND 2)                            ; C
9     (NIL)
10    (BIND 3)                            ; X
12    (NIL)
13    (BIND 4)                            ; Y
15    (NIL&PUSH)
16    (GETVALUE&PUSH 0)                   ; A
18    (CALL1 5)                           ; NISEXTRACT
20    (SETVALUE 3)                        ; X
22    (GETVALUE&PUSH 1)                   ; B
24    (CALL1 5)                           ; NISEXTRACT
26    (SETVALUE 4)                        ; Y
28    (CDR)
29    (CAR)
30    (JMPIF L91)
32    (GETVALUE&PUSH 0)                   ; A
34    (CALL1&PUSH 11)                     ; NISKERNEL
36    (GETVALUE 4)                        ; Y
38    (CAR&PUSH)
39    (GETVALUE&PUSH 2)                   ; C
41    (CALL 3 12)                         ; NISARGMATCH
44    (SETVALUE 2)                        ; C
46    (JMPIFNOT L152)
49    (GETVALUE 3)                        ; X
51    (CDR)
52    (CDR&PUSH)
53    (GETVALUE 4)                        ; Y
55    (CDR)
56    (CDR&PUSH)
57    (GETVALUE&PUSH 2)                   ; C
59    (CALL 3 6)                          ; NISEXPOCHECK
62    (STORE 0)
63    (JMPIFNOT L152)
66    (CONST&PUSH 13)                     ; (RAT)
67    (LOAD&CAR&PUSH 1)
69    (CALLS2&JMPIF 2 L139)               ; EQUAL
73    (GETVALUE&PUSH 0)                   ; A
75    (CONST 14)                          ; (DUMMY 0 (0 0))
76    L76
76    (CONS&PUSH)
77    (LOAD 1)
78    L78
78    (CONS)
79    (SKIP 1)
81    (UNBIND 2)
83    (JMP L157)
86    L86
86    (GETVALUE&PUSH 0)                   ; A
88    (CONST 10)                          ; (DUMMY 0 (0 0))
89    (JMP L76)
91    L91
91    (GETVALUE 3)                        ; X
93    (CAR&PUSH)
94    (GETVALUE 4)                        ; Y
96    (CAR&PUSH)
97    (CALLS2&JMPIFNOT 2 L152)            ; EQUAL
100   (GETVALUE 3)                        ; X
102   (CDR)
103   (CDR&PUSH)
104   (GETVALUE 4)                        ; Y
106   (CDR)
107   (CDR&PUSH)
108   (GETVALUE&PUSH 2)                   ; C
110   (CALL 3 6)                          ; NISEXPOCHECK
113   (STORE 0)
114   (JMPIFNOT L152)
116   (GETVALUE 3)                        ; X
118   (CDR)
119   (CAR&PUSH)
120   (GETVALUE 4)                        ; Y
122   (CDR)
123   (CAR&PUSH)
124   (GETVALUE&PUSH 2)                   ; C
126   (CALL 3 7)                          ; NISARGSCHECKER
129   (SETVALUE 2)                        ; C
131   (JMPIFNOT L152)
133   (CONST&PUSH 8)                      ; (RAT)
134   (LOAD&CAR&PUSH 1)
136   (CALLS2&JMPIFNOT 2 L86)             ; EQUAL
139   L139
139   (GETVALUE&PUSH 0)                   ; A
141   (GETVALUE&PUSH 3)                   ; X
143   (LOAD&PUSH 2)
144   (CALL2 9)                           ; NISBUILD
146   (CONS&PUSH)
147   (GETVALUE 2)                        ; C
149   (JMP L78)
152   L152
152   (NIL)
153   (SKIP 1)
155   (UNBIND 2)
157   L157
157   (UNBIND 3)
159   (SKIP&RET 4)


Disassembly of function #:|(DEFUN NISKERNEL (A) ...)-35|
(CONST 0) = NISKERNEL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISKERNEL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISKERNEL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISKERNEL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISKERNEL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISKERNEL
8     (SKIP&RET 1)


Disassembly of function NISKERNEL
(CONST 0) = A
(CONST 1) = MEXPTP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (A)
13 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; A
3     (GETVALUE&PUSH 0)                   ; A
5     (CALL1&JMPIF 1 L13)                 ; MEXPTP
8     (GETVALUE 0)                        ; A
10    L10
10    (UNBIND1)
11    (SKIP&RET 2)
13    L13
13    (GETVALUE 0)                        ; A
15    (CDR)
16    (CAR)
17    (JMP L10)


Disassembly of function #:|(DEFUN NISEXTRACT (X) ...)-36|
(CONST 0) = NISEXTRACT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISEXTRACT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISEXTRACT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISEXTRACT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISEXTRACT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISEXTRACT
8     (SKIP&RET 1)


Disassembly of function NISEXTRACT
(CONST 0) = X
(CONST 1) = RAT
(CONST 2) = 1
(CONST 3) = MEXPT
(CONST 4) = ARRAY
(CONST 5) = MEMQ
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
87 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFATOM L58)
7     (GETVALUE 0)                        ; X
9     (CAR)
10    (CAR&PUSH)
11    (JMPIFEQTO 1 L58)                   ; RAT
14    (GETVALUE 0)                        ; X
16    (CAR)
17    (CAR&PUSH)
18    (JMPIFNOTEQTO 3 L91)                ; MEXPT
22    (GETVALUE 0)                        ; X
24    (CDR)
25    (CAR)
26    (JMPIFATOM L64)
28    (CONST&PUSH 4)                      ; ARRAY
29    (GETVALUE 0)                        ; X
31    (CDR)
32    (CAR)
33    (CAR)
34    (CDR&PUSH)
35    (CALL2&JMPIF 5 L71)                 ; MEMQ
38    (GETVALUE 0)                        ; X
40    (CDR)
41    (CAR)
42    (CAR)
43    (CAR)
44    L44
44    (PUSH)
45    (GETVALUE 0)                        ; X
47    (CDR)
48    (CAR)
49    (CDR)
50    L50
50    (PUSH)
51    (GETVALUE 0)                        ; X
53    (CDR)
54    (CDR)
55    (CAR)
56    (JMP L108)
58    L58
58    (GETVALUE&PUSH 0)                   ; X
60    (NIL&PUSH)
61    (CONST 2)                           ; 1
62    (JMP L108)
64    L64
64    (GETVALUE 0)                        ; X
66    (CDR)
67    (CAR&PUSH)
68    (NIL)
69    (JMP L50)
71    L71
71    (GETVALUE 0)                        ; X
73    (CDR)
74    (CAR)
75    (CAR)
76    (CAR&PUSH)
77    (CONST&PUSH 4)                      ; ARRAY
78    (LIST 2)
80    (JMP L44)
82    L82
82    (GETVALUE 0)                        ; X
84    (CAR)
85    (CAR&PUSH)
86    (CONST&PUSH 4)                      ; ARRAY
87    (LIST 2)
89    (JMP L103)
91    L91
91    (CONST&PUSH 4)                      ; ARRAY
92    (GETVALUE 0)                        ; X
94    (CAR)
95    (CDR&PUSH)
96    (CALL2&JMPIF 5 L82)                 ; MEMQ
99    (GETVALUE 0)                        ; X
101   (CAR)
102   (CAR)
103   L103
103   (PUSH)
104   (GETVALUE 0)                        ; X
106   (CDR&PUSH)
107   (CONST 2)                           ; 1
108   L108
108   (CONS)
109   (CONS)
110   (UNBIND1)
111   (SKIP&RET 2)


Disassembly of function #:|(DEFUN NISARGSCHECKER (LISTARGS TREEARGS ARGASSLIST) ...)-37|
(CONST 0) = NISARGSCHECKER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISARGSCHECKER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISARGSCHECKER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISARGSCHECKER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISARGSCHECKER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISARGSCHECKER
8     (SKIP&RET 1)


Disassembly of function NISARGSCHECKER
(CONST 0) = C
(CONST 1) = NISARGMATCH
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (C)
writes special variable : (C)
29 byte-code instructions:
0     L0
0     (NIL)
1     (BIND 0)                            ; C
3     (LOAD&JMPIFNOT 6 L28)
6     (LOAD&JMPIFNOT 5 L28)
9     (LOAD&CAR&PUSH 6)
11    (LOAD&CAR&PUSH 6)
13    (LOAD&PUSH 6)
14    (CALL 3 1)                          ; NISARGMATCH
17    (SETVALUE 0)                        ; C
19    (JMPIF L37)
21    (NIL)
22    L22
22    (UNBIND1)
23    (SKIP&RET 4)
25    L25
25    (NIL)
26    (JMP L22)
28    L28
28    (LOAD&JMPIF 6 L25)
31    (LOAD&JMPIF 5 L25)
34    (LOAD 4)
35    (JMP L22)
37    L37
37    (LOAD&CDR&PUSH 6)
39    (LOAD&CDR&PUSH 6)
41    (GETVALUE&PUSH 0)                   ; C
43    (JSR L0)
45    (JMP L22)


Disassembly of function #:|(DEFUN NISEXPOCHECK (LISTPOWER TREEPOWER ARGASSLIST) ...)-38|
(CONST 0) = NISEXPOCHECK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISEXPOCHECK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISEXPOCHECK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISEXPOCHECK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISEXPOCHECK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISEXPOCHECK
8     (SKIP&RET 1)


Disassembly of function NISEXPOCHECK
(CONST 0) = P
(CONST 1) = R
(CONST 2) = S
(CONST 3) = A
(CONST 4) = B
(CONST 5) = 1
(CONST 6) = NISARGMATCH
(CONST 7) = RAT
(CONST 8) = 0
(CONST 9) = (RAT)
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B A R P S)
writes special variables : (B A P S R)
119 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; P
3     (NIL&PUSH)
4     (NIL)
5     (BIND 1)                            ; R
7     (NIL)
8     (BIND 2)                            ; S
10    (NIL)
11    (BIND 3)                            ; A
13    (NIL)
14    (BIND 4)                            ; B
16    (NIL&PUSH)
17    (LOAD 19)
19    (JMPIFCONSP L150)
22    (LOAD&PUSH 19)
23    (CALLS2&JMPIFNOT 8 L142)            ; NUMBERP
27    (LOAD 19)
29    (SETVALUE 1)                        ; R
31    (CONST 5)                           ; 1
32    (SETVALUE 2)                        ; S
34    L34
34    (LOAD&PUSH 20)
35    (CALLS2&JMPIF 8 L171)               ; NUMBERP
39    (LOAD 20)
41    (JMPIFATOM L181)
44    (LOAD 20)
46    (CAR)
47    (CAR&PUSH)
48    (JMPIFNOTEQTO 7 L184)               ; RAT
52    (LOAD 20)
54    (CDR)
55    (CAR)
56    (SETVALUE 0)                        ; P
58    (LOAD 20)
60    (CDR)
61    (CDR)
62    (CAR)
63    (STORE 13)
65    L65
65    (LOAD&PUSH 13)
66    (GETVALUE&PUSH 2)                   ; S
68    (CALLSR&PUSH 2 55)                  ; *
71    (GETVALUE&PUSH 0)                   ; P
73    (GETVALUE&PUSH 2)                   ; S
75    (CALLSR&PUSH 2 55)                  ; *
78    (LOAD&PUSH 15)
79    (GETVALUE&PUSH 1)                   ; R
81    (CALLSR&PUSH 2 55)                  ; *
84    (CALLSR&PUSH 1 54)                  ; -
87    (CALLSR&STORE 2 55 0)               ; *
91    (GETVALUE&PUSH 1)                   ; R
93    (GETVALUE&PUSH 2)                   ; S
95    (CALLSR&PUSH 2 55)                  ; *
98    (CONST&PUSH 8)                      ; 0
99    (CALLSR 1 47)                       ; <
102   (SETVALUE 3)                        ; A
104   (LOAD&PUSH 0)
105   (CONST&PUSH 8)                      ; 0
106   (CALLSR 1 47)                       ; <
109   (SETVALUE 4)                        ; B
111   (GETVALUE 3)                        ; A
113   (JMPIF L120)
115   (GETVALUE 4)                        ; B
117   (JMPIFNOT L187)
120   L120
120   (GETVALUE 3)                        ; A
122   (JMPIFNOT L132)
124   (GETVALUE 4)                        ; B
126   (JMPIF L187)
128   (LOAD&PUSH 0)
129   (JMPIFEQTO 8 L187)                  ; 0
132   L132
132   (NIL)
133   L133
133   (SKIP 1)
135   (UNBIND 4)
137   (SKIP 1)
139   (UNBIND1)
140   (SKIP&RET 4)
142   L142
142   (LOAD&PUSH 20)
143   (LOAD&PUSH 20)
144   (LOAD&PUSH 20)
145   (CALL 3 6)                          ; NISARGMATCH
148   (JMP L133)
150   L150
150   (LOAD 19)
152   (CDR)
153   (CAR)
154   (SETVALUE 1)                        ; R
156   (LOAD 19)
158   (CDR)
159   (CDR)
160   (CAR)
161   (SETVALUE 2)                        ; S
163   (PUSH)
164   (CALLS2&JMPIF 8 L34)                ; NUMBERP
168   (NIL)
169   (JMP L133)
171   L171
171   (LOAD 20)
173   (SETVALUE 0)                        ; P
175   (CONST 5)                           ; 1
176   (STORE 13)
178   (JMP L65)
181   L181
181   (NIL)
182   (JMP L133)
184   L184
184   (NIL)
185   (JMP L133)
187   L187
187   (CONST&PUSH 9)                      ; (RAT)
188   (LOAD&PUSH 1)
189   (LOAD&PUSH 15)
190   (GETVALUE&PUSH 2)                   ; S
192   (CALLSR&PUSH 2 55)                  ; *
195   (LIST 3)
197   (JMP L133)


Disassembly of function #:|(DEFUN NISARGMATCH (X Y C) ...)-39|
(CONST 0) = NISARGMATCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISARGMATCH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISARGMATCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISARGMATCH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISARGMATCH>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISARGMATCH
8     (SKIP&RET 1)


Disassembly of function NISARGMATCH
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = C
(CONST 3) = W
(CONST 4) = ALIKE1
(CONST 5) = MATCHDECLARE
(CONST 6) = MGET
(CONST 7) = ($TRUE T)
(CONST 8) = MEMQ
(CONST 9) = MEVAL
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X W C)
writes special variable : (W)
91 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD 5)
4     (BIND 1)                            ; Y
6     (LOAD 7)
7     (BIND 2)                            ; C
9     (NIL)
10    (BIND 3)                            ; W
12    (GETVALUE 2)                        ; C
14    (JMP L43)
16    L16
16    (GETVALUE 3)                        ; W
18    (CAR)
19    (CDR&PUSH)
20    (GETVALUE&PUSH 0)                   ; X
22    (CALL2&JMPIFNOT 4 L122)             ; ALIKE1
26    (GETVALUE 2)                        ; C
28    (UNBIND1)
29    (JMP L142)
32    L32
32    (GETVALUE 3)                        ; W
34    (CAR)
35    (CAR&PUSH)
36    (GETVALUE 1)                        ; Y
38    (JMPIFEQ L16)
40    (GETVALUE 3)                        ; W
42    (CDR)
43    L43
43    (SETVALUE 3)                        ; W
45    (GETVALUE 3)                        ; W
47    (JMPIF L32)
49    (GETVALUE&PUSH 1)                   ; Y
51    (CONST&PUSH 5)                      ; MATCHDECLARE
52    (CALL2 6)                           ; MGET
54    (SETVALUE 3)                        ; W
56    (JMPIFNOT L126)
59    (GETVALUE 3)                        ; W
61    (CAR&PUSH)
62    (CONST&PUSH 7)                      ; ($TRUE T)
63    (CALL2&JMPIF 8 L133)                ; MEMQ
67    (GETVALUE 3)                        ; W
69    (CAR)
70    (JMPIFCONSP L91)
72    (GETVALUE 3)                        ; W
74    (CAR&PUSH)
75    (NIL)
76    (CONS&PUSH)
77    (GETVALUE 3)                        ; W
79    (CDR&PUSH)
80    (GETVALUE&PUSH 0)                   ; X
82    (LIST&PUSH 1)
84    (CALLSR 2 34)                       ; APPEND
87    (CONS&PUSH)
88    (CALL1&JMPIF 9 L133)                ; MEVAL
91    L91
91    (GETVALUE 3)                        ; W
93    (CAR)
94    (JMPIFATOM L122)
96    (GETVALUE 3)                        ; W
98    (CAR)
99    (CAR)
100   (JMPIFATOM L122)
102   (GETVALUE 3)                        ; W
104   (CAR)
105   (CAR)
106   (CAR)
107   (JMPIFCONSP L122)
109   (GETVALUE 3)                        ; W
111   (CAR&PUSH)
112   (GETVALUE&PUSH 0)                   ; X
114   (LIST&PUSH 1)
116   (CALLSR&PUSH 2 34)                  ; APPEND
119   (CALL1&JMPIF 9 L133)                ; MEVAL
122   L122
122   (NIL)
123   (UNBIND1)
124   (JMP L142)
126   L126
126   (GETVALUE&PUSH 0)                   ; X
128   (GETVALUE&PUSH 1)                   ; Y
130   (CALLS2&JMPIFNOT 2 L122)            ; EQUAL
133   L133
133   (GETVALUE&PUSH 1)                   ; Y
135   (GETVALUE 0)                        ; X
137   (CONS&PUSH)
138   (GETVALUE 2)                        ; C
140   (CONS)
141   (UNBIND1)
142   L142
142   (UNBIND 3)
144   (SKIP&RET 4)


Disassembly of function #:|(DEFUN NISBUILD (X NEWEXPT) ...)-40|
(CONST 0) = NISBUILD
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISBUILD>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISBUILD
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISBUILD
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISBUILD>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISBUILD
8     (SKIP&RET 1)


Disassembly of function NISBUILD
(CONST 0) = X
(CONST 1) = (MEXPT)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
34 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (CONST&PUSH 1)                      ; (MEXPT)
4     (GETVALUE 0)                        ; X
6     (CDR)
7     (CAR)
8     (JMPIF L27)
10    (GETVALUE 0)                        ; X
12    (CAR)
13    L13
13    (PUSH)
14    (LOAD&PUSH 6)
15    (LIST 3)
17    (UNBIND1)
18    (SKIP&RET 3)
20    L20
20    (GETVALUE 0)                        ; X
22    (CAR&PUSH)
23    (NIL)
24    (CONS)
25    (JMP L36)
27    L27
27    (GETVALUE 0)                        ; X
29    (CAR&PUSH)
30    (CALLS2&JMPIF 6 L20)                ; SYMBOLP
33    (GETVALUE 0)                        ; X
35    (CAR)
36    L36
36    (PUSH)
37    (GETVALUE 0)                        ; X
39    (CDR)
40    (CAR)
41    (CONS)
42    (JMP L13)


Disassembly of function #:|(DEFUN NISREPLACE (LLIST ASSLIST) ...)-41|
(CONST 0) = NISREPLACE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NISREPLACE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NISREPLACE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NISREPLACE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NISREPLACE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NISREPLACE
8     (SKIP&RET 1)


Disassembly of function NISREPLACE
(CONST 0) = 0
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
43 byte-code instructions:
0     L0
0     (LOAD 1)
1     (CDR)
2     (JMPIFNOT L23)
4     (LOAD&CAR&PUSH 2)
6     (LOAD 2)
7     (CAR)
8     (CAR&PUSH)
9     (CALLS2&JMPIF 2 L36)                ; EQUAL
12    (LOAD&CAR&PUSH 2)
14    (LOAD&CDR&PUSH 3)
16    (LOAD 3)
17    L17
17    (PUSH)
18    (JSR L0)
20    L20
20    (CONS)
21    (SKIP&RET 3)
23    L23
23    (LOAD&CAR&PUSH 1)
25    (LOAD 3)
26    (JMP L20)
28    L28
28    (LOAD&CDR&PUSH 2)
30    (LOAD&CDR&PUSH 2)
32    (JMPTAIL 2 5 L0)
36    L36
36    (LOAD 1)
37    (CAR)
38    (CDR)
39    (CDR)
40    (CDR)
41    (CAR)
42    (CDR)
43    (CAR&PUSH)
44    (JMPIFEQTO 0 L28)                   ; 0
47    (LOAD 1)
48    (CAR)
49    (CDR&PUSH)
50    (LOAD&CDR&PUSH 3)
52    (LOAD 3)
53    (CDR)
54    (JMP L17)


Wrote file binary-clisp/nisimp.fas
Wrote file /cygdrive/e/temp/maxima/src/nisimp.lis