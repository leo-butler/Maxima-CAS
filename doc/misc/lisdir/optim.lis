Listing of compilation of file /cygdrive/e/temp/maxima/src/optim.lisp
on 2002-12-17 13:35:45 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/optim.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE OPTIM)-2|
(CONST 0) = OPTIM
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; OPTIM
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL VARS SETQS ...) (FIXNUM N #) ...)-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFVAR *SUBEXP* (*ARRAY NIL T ...))-4|
(CONST 0) = (SPECIAL *SUBEXP*)
(CONST 1) = *SUBEXP*
(CONST 2) = 64
(CONST 3) = *ARRAY
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *SUBEXP*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *SUBEXP*
4     (CALLS1&JMPIF 79 L16)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *SUBEXP*
8     (NIL&PUSH)
9     (T&PUSH)
10    (CONST&PUSH 2)                      ; 64
11    (CALL&PUSH 3 3)                     ; *ARRAY
14    (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
16    L16
16    (CONST 1)                           ; *SUBEXP*
17    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $OPTIMPREFIX '$%)-5-1|
(CONST 0) = $OPTIMPREFIX
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = $%
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $OPTIMPREFIX
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $OPTIMPREFIX
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; $%
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $OPTIMPREFIX '$%)-5-2|
(CONST 0) = (SPECIAL $OPTIMPREFIX)
(CONST 1) = $OPTIMPREFIX
(CONST 2) = $%
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $OPTIMPREFIX)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $OPTIMPREFIX
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $OPTIMPREFIX
8     (CONST&PUSH 2)                      ; $%
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $OPTIMPREFIX
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $OPTIMWARN T ...)-6-1|
(CONST 0) = $OPTIMWARN
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $OPTIMWARN
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $OPTIMWARN
11    (LOAD&PUSH 1)
12    (T&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $OPTIMWARN T ...)-6-2|
(CONST 0) = (SPECIAL $OPTIMWARN)
(CONST 1) = $OPTIMWARN
(CONST 2) = VARIABLE
(CONST 3) = "warns if OPTIMIZE encounters a special form."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $OPTIMWARN)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $OPTIMWARN
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $OPTIMWARN
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $OPTIMWARN
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "warns if OPTIMIZE encounters a special form."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $OPTIMWARN
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $OPTIMIZE (X0) ...)-7|
(CONST 0) = $OPTIMIZE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $OPTIMIZE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $OPTIMIZE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $OPTIMIZE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $OPTIMIZE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $OPTIMIZE
8     (SKIP&RET 1)


Disassembly of function $OPTIMIZE
(CONST 0) = $OPTIMWARN
(CONST 1) = VARS
(CONST 2) = SETQS
(CONST 3) = OPTIMCOUNT
(CONST 4) = XVARS
(CONST 5) = X
(CONST 6) = 0
(CONST 7) = $LISTOFVARS
(CONST 8) = *SUBEXP*
(CONST 9) = (NIL)
(CONST 10) = FILLARRAY
(CONST 11) = COLLAPSE
(CONST 12) = OPFORMAT
(CONST 13) = COMEXP
(CONST 14) = OPTIM
(CONST 15) = MPROG
(CONST 16) = $LISTP
(CONST 17) = (MPROG SIMP)
(CONST 18) = (MLIST)
(CONST 19) = (NIL)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (SETQS VARS X *SUBEXP* $OPTIMWARN)
writes special variables : (X XVARS OPTIMCOUNT)
84 byte-code instructions:
0     (GETVALUE 0)                        ; $OPTIMWARN
2     (BIND 0)                            ; $OPTIMWARN
4     (NIL)
5     (BIND 1)                            ; VARS
7     (NIL)
8     (BIND 2)                            ; SETQS
10    (NIL)
11    (BIND 3)                            ; OPTIMCOUNT
13    (NIL)
14    (BIND 4)                            ; XVARS
16    (NIL)
17    (BIND 5)                            ; X
19    (CONST 6)                           ; 0
20    (SETVALUE 3)                        ; OPTIMCOUNT
22    (LOAD&PUSH 19)
23    (CALL1 7)                           ; $LISTOFVARS
25    (CDR)
26    (SETVALUE 4)                        ; XVARS
28    (GETVALUE&PUSH 8)                   ; *SUBEXP*
30    (CONST&PUSH 9)                      ; (NIL)
31    (CALL2 10)                          ; FILLARRAY
33    (LOAD&PUSH 19)
34    (CALL1&PUSH 11)                     ; COLLAPSE
36    (CALL1&PUSH 12)                     ; OPFORMAT
38    (CALL1 11)                          ; COLLAPSE
40    (SETVALUE 5)                        ; X
42    (JMPIFATOM L112)
45    (GETVALUE&PUSH 5)                   ; X
47    (CALL1 13)                          ; COMEXP
49    (GETVALUE&PUSH 5)                   ; X
51    (CALL1 14)                          ; OPTIM
53    (SETVALUE 5)                        ; X
55    (GETVALUE 1)                        ; VARS
57    (JMPIFNOT L116)
59    (GETVALUE 5)                        ; X
61    (CAR)
62    (CAR&PUSH)
63    (JMPIFNOTEQTO 15 L120)              ; MPROG
66    (GETVALUE 5)                        ; X
68    (CDR)
69    (CAR&PUSH)
70    (CALL1&JMPIFNOT 16 L80)             ; $LISTP
73    (GETVALUE 5)                        ; X
75    (CDR)
76    (CAR)
77    (CDR)
78    (JMPIF L120)
80    L80
80    (GETVALUE&PUSH 2)                   ; SETQS
82    (GETVALUE 5)                        ; X
84    (CDR)
85    (CDR&PUSH)
86    (CALLS1 163)                        ; NRECONC
88    (SETVALUE 5)                        ; X
90    L90
90    (CONST&PUSH 17)                     ; (MPROG SIMP)
91    (CONST&PUSH 18)                     ; (MLIST)
92    (GETVALUE&PUSH 1)                   ; VARS
94    (CALLS2 73)                         ; NREVERSE
96    (CONS&PUSH)
97    (GETVALUE 5)                        ; X
99    (LIST* 2)
101   L101
101   (PUSH)
102   (GETVALUE&PUSH 8)                   ; *SUBEXP*
104   (CONST&PUSH 19)                     ; (NIL)
105   (CALL2 10)                          ; FILLARRAY
107   (POP)
108   L108
108   (UNBIND 6)
110   (SKIP&RET 2)
112   L112
112   (GETVALUE 5)                        ; X
114   (JMP L108)
116   L116
116   (LOAD 19)
118   (JMP L101)
120   L120
120   (GETVALUE&PUSH 5)                   ; X
122   (GETVALUE 2)                        ; SETQS
124   (CONS&PUSH)
125   (CALLS2 73)                         ; NREVERSE
127   (SETVALUE 5)                        ; X
129   (JMP L90)


Disassembly of function #:|(DEFUN OPFORMAT (X) ...)-8|
(CONST 0) = OPFORMAT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE OPFORMAT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; OPFORMAT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; OPFORMAT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE OPFORMAT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; OPFORMAT
8     (SKIP&RET 1)


Disassembly of function OPFORMAT
(CONST 0) = X
(CONST 1) = SPECREPP
(CONST 2) = SPECDISREP
(CONST 3) = $OPTIMWARN
(CONST 4) = MSPECFUNP
(CONST 5) = 
"OPTIMIZE has met up with a special form - ~
			     answer may be wrong."
(CONST 6) = MTELL
(CONST 7) = MEXPT
(CONST 8) = OPMEXPT
(CONST 9) = OPFORMAT
(CONST 10) = ALIKE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($OPTIMWARN X)
writes special variable : ($OPTIMWARN)
54 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFATOM L61)
7     (GETVALUE&PUSH 0)                   ; X
9     (CALL1&JMPIF 1 L65)                 ; SPECREPP
12    (GETVALUE 3)                        ; $OPTIMWARN
14    (JMPIFNOT L29)
16    (GETVALUE 0)                        ; X
18    (CAR)
19    (CAR&PUSH)
20    (CALL1&JMPIFNOT 4 L29)              ; MSPECFUNP
23    (CONST&PUSH 5)                      ; "OPTIMIZE has met up with a special form - ~
			     answer may be wrong."
24    (CALL1 6)                           ; MTELL
26    (NIL)
27    (SETVALUE 3)                        ; $OPTIMWARN
29    L29
29    (GETVALUE 0)                        ; X
31    (CAR)
32    (CAR&PUSH)
33    (JMPIFEQTO 7 L74)                   ; MEXPT
36    (CONST&SYMBOL-FUNCTION&PUSH 9)      ; OPFORMAT
38    (GETVALUE 0)                        ; X
40    (CDR&PUSH)
41    (CALLSR&PUSH 0 22)                  ; MAPCAR
44    (LOAD&PUSH 0)
45    (GETVALUE 0)                        ; X
47    (CDR&PUSH)
48    (CALL2&JMPIF 10 L80)                ; ALIKE
51    (GETVALUE 0)                        ; X
53    (CAR&PUSH)
54    (LOAD 1)
55    (CONS)
56    (SKIP 1)
58    L58
58    (UNBIND1)
59    (SKIP&RET 2)
61    L61
61    (GETVALUE 0)                        ; X
63    (JMP L58)
65    L65
65    (GETVALUE&PUSH 0)                   ; X
67    (CALL1&PUSH 2)                      ; SPECDISREP
69    (JSR L0)
72    (JMP L58)
74    L74
74    (GETVALUE&PUSH 0)                   ; X
76    (CALL1 8)                           ; OPMEXPT
78    (JMP L58)
80    L80
80    (GETVALUE 0)                        ; X
82    (SKIP 1)
84    (JMP L58)


Disassembly of function #:|(DEFUN OPMEXPT (X) ...)-9|
(CONST 0) = OPMEXPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE OPMEXPT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; OPMEXPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; OPMEXPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE OPMEXPT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; OPMEXPT
8     (SKIP&RET 1)


Disassembly of function OPMEXPT
(CONST 0) = X
(CONST 1) = OPFORMAT
(CONST 2) = EXP
(CONST 3) = RATNUMP
(CONST 4) = MTIMESP
(CONST 5) = -1
(CONST 6) = (MQUOTIENT)
(CONST 7) = 1
(CONST 8) = 2
(CONST 9) = (%SQRT)
(CONST 10) = (MEXPT)
(CONST 11) = (%SQRT)
(CONST 12) = ALIKE1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (EXP X)
writes special variable : (EXP)
208 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (CDR)
6     (CAR&PUSH)
7     (CALL1&PUSH 1)                      ; OPFORMAT
9     (GETVALUE 0)                        ; X
11    (CDR)
12    (CDR)
13    (CAR&PUSH)
14    (CALL1 1)                           ; OPFORMAT
16    (BIND 2)                            ; EXP
18    (PUSH-NIL 2)
20    (GETVALUE&PUSH 2)                   ; EXP
22    (CALLS2&JMPIFNOT 8 L31)             ; NUMBERP
25    (GETVALUE&PUSH 2)                   ; EXP
27    (CALLS2&JMPIF 147 L153)             ; MINUSP
31    L31
31    (GETVALUE&PUSH 2)                   ; EXP
33    (CALL1&JMPIFNOT 3 L44)              ; RATNUMP
36    (GETVALUE 2)                        ; EXP
38    (CDR)
39    (CAR&PUSH)
40    (CALLS2&JMPIF 147 L164)             ; MINUSP
44    L44
44    (GETVALUE&PUSH 2)                   ; EXP
46    (CALL1&JMPIFNOT 4 L64)              ; MTIMESP
49    (GETVALUE 2)                        ; EXP
51    (CDR)
52    (CAR&PUSH)
53    (CALLS2&JMPIFNOT 8 L64)             ; NUMBERP
56    (GETVALUE 2)                        ; EXP
58    (CDR)
59    (CAR&PUSH)
60    (CALLS2&JMPIF 147 L215)             ; MINUSP
64    L64
64    (GETVALUE&PUSH 2)                   ; EXP
66    (CALL1&JMPIFNOT 4 L271)             ; MTIMESP
70    (GETVALUE 2)                        ; EXP
72    (CDR)
73    (CAR&PUSH)
74    (CALL1&JMPIFNOT 3 L271)             ; RATNUMP
78    (GETVALUE 2)                        ; EXP
80    (CDR)
81    (CAR)
82    (CDR)
83    (CAR&PUSH)
84    (CALLS2&JMPIFNOT 147 L271)          ; MINUSP
88    (GETVALUE 2)                        ; EXP
90    (CAR&PUSH)
91    (GETVALUE 2)                        ; EXP
93    (CDR)
94    (CAR)
95    (CAR&PUSH)
96    (GETVALUE 2)                        ; EXP
98    (CDR)
99    (CAR)
100   (CDR)
101   (CAR&PUSH)
102   (CALLSR&PUSH 0 54)                  ; -
105   (GETVALUE 2)                        ; EXP
107   (CDR)
108   (CAR)
109   (CDR)
110   (CDR)
111   (CAR&PUSH)
112   (LIST 3)
114   L114
114   (PUSH)
115   (GETVALUE 2)                        ; EXP
117   (CDR)
118   (CDR)
119   (LIST* 2)
121   (STORE 0)
122   L122
122   (CONST&PUSH 6)                      ; (MQUOTIENT)
123   (CONST&PUSH 7)                      ; 1
124   (LOAD&PUSH 2)
125   (JMPIFEQTO 7 L235)                  ; 1
129   (GETVALUE 0)                        ; X
131   (CAR&PUSH)
132   (LOAD&PUSH 8)
133   (LOAD&PUSH 4)
134   (LIST 3)
136   (STORE 3)
137   (LOAD&PUSH 2)
138   (CALL1&JMPIFNOT 3 L149)             ; RATNUMP
141   (LOAD 2)
142   (CDR)
143   (CDR)
144   (CAR&PUSH)
145   (JMPIFEQTO 8 L238)                  ; 2
149   L149
149   (LOAD 3)
150   (JMP L293)
153   L153
153   (GETVALUE&PUSH 2)                   ; EXP
155   (CALLSR&STORE 0 54 0)               ; -
159   (JMPIFNOT L273)
162   (JMP L122)
164   L164
164   (GETVALUE 2)                        ; EXP
166   (CAR&PUSH)
167   (GETVALUE 2)                        ; EXP
169   (CDR)
170   (CAR&PUSH)
171   (CALLSR&PUSH 0 54)                  ; -
174   (GETVALUE 2)                        ; EXP
176   (CDR)
177   (CDR)
178   (CAR&PUSH)
179   (LIST 3)
181   (STORE 0)
182   (JMP L122)
184   L184
184   (GETVALUE 2)                        ; EXP
186   (CDR)
187   (CDR)
188   (CAR)
189   (STORE 0)
190   (JMPIFNOT L273)
193   (JMP L122)
196   L196
196   (GETVALUE 2)                        ; EXP
198   (CDR)
199   (CDR)
200   (CDR)
201   (JMPIFNOT L184)
203   (GETVALUE 2)                        ; EXP
205   (CAR&PUSH)
206   (GETVALUE 2)                        ; EXP
208   (CDR)
209   (CDR)
210   (CONS)
211   (STORE 0)
212   (JMP L122)
215   L215
215   (GETVALUE 2)                        ; EXP
217   (CDR)
218   (CAR&PUSH)
219   (JMPIFEQTO 5 L196)                  ; -1
222   (GETVALUE 2)                        ; EXP
224   (CAR&PUSH)
225   (GETVALUE 2)                        ; EXP
227   (CDR)
228   (CAR&PUSH)
229   (CALLSR 0 54)                       ; -
232   (JMP L114)
235   L235
235   (LOAD 7)
236   (JMP L293)
238   L238
238   (LOAD&PUSH 3)
239   (JSR L0)
242   (JMP L293)
244   L244
244   (CONST&PUSH 9)                      ; (%SQRT)
245   (LOAD&PUSH 6)
246   (LIST 2)
248   (JMP L296)
250   L250
250   (GETVALUE 2)                        ; EXP
252   (CDR)
253   (CAR)
254   (SETVALUE 2)                        ; EXP
256   (PUSH)
257   (JMPIFEQTO 7 L244)                  ; 1
260   (CONST&PUSH 10)                     ; (MEXPT)
261   (CONST&PUSH 11)                     ; (%SQRT)
262   (LOAD&PUSH 7)
263   (LIST 2)
265   (JMP L290)
267   L267
267   (GETVALUE 0)                        ; X
269   (JMP L304)
271   L271
271   (NIL&STORE 0)
273   L273
273   (GETVALUE&PUSH 2)                   ; EXP
275   (CALL1&JMPIFNOT 3 L286)             ; RATNUMP
278   (GETVALUE 2)                        ; EXP
280   (CDR)
281   (CDR)
282   (CAR&PUSH)
283   (JMPIFEQTO 8 L250)                  ; 2
286   L286
286   (GETVALUE 0)                        ; X
288   (CAR&PUSH)
289   (LOAD 6)
290   L290
290   (PUSH)
291   (GETVALUE 2)                        ; EXP
293   L293
293   (PUSH)
294   (LIST 3)
296   L296
296   (STORE 1)
297   (GETVALUE&PUSH 0)                   ; X
299   (LOAD&PUSH 2)
300   (CALL2&JMPIF 12 L267)               ; ALIKE1
303   (LOAD 1)
304   L304
304   (SKIP 2)
306   (UNBIND1)
307   (SKIP 1)
309   (UNBIND1)
310   (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN $COLLAPSE (X) ...)-10|
(CONST 0) = $COLLAPSE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $COLLAPSE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $COLLAPSE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $COLLAPSE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $COLLAPSE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $COLLAPSE
8     (SKIP&RET 1)


Disassembly of function $COLLAPSE
(CONST 0) = X
(CONST 1) = *SUBEXP*
(CONST 2) = (NIL)
(CONST 3) = FILLARRAY
(CONST 4) = COLLAPSE
(CONST 5) = (NIL)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X *SUBEXP*)
13 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 1)                   ; *SUBEXP*
5     (CONST&PUSH 2)                      ; (NIL)
6     (CALL2 3)                           ; FILLARRAY
8     (GETVALUE&PUSH 0)                   ; X
10    (CALL1&PUSH 4)                      ; COLLAPSE
12    (GETVALUE&PUSH 1)                   ; *SUBEXP*
14    (CONST&PUSH 5)                      ; (NIL)
15    (CALL2 3)                           ; FILLARRAY
17    (POP)
18    (UNBIND1)
19    (SKIP&RET 2)


Disassembly of function #:|(DEFUN COLLAPSE (X) ...)-11|
(CONST 0) = COLLAPSE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COLLAPSE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COLLAPSE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COLLAPSE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COLLAPSE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COLLAPSE
8     (SKIP&RET 1)


Disassembly of function COLLAPSE
(CONST 0) = X
(CONST 1) = SPECREPP
(CONST 2) = SPECDISREP
(CONST 3) = OPT-HASH
(CONST 4) = N
(CONST 5) = L
(CONST 6) = 12553
(CONST 7) = 63
(CONST 8) = *SUBEXP*
(CONST 9) = ALIKE1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*SUBEXP* N L X)
writes special variables : (L N)
99 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFATOM L145)
8     (GETVALUE&PUSH 0)                   ; X
10    (CALL1&JMPIF 1 L149)                ; SPECREPP
14    (GETVALUE 0)                        ; X
16    (CAR)
17    (CAR&PUSH)
18    (CALL1 3)                           ; OPT-HASH
20    (BIND 4)                            ; N
22    (GETVALUE 0)                        ; X
24    (CDR)
25    (BIND 5)                            ; L
27    (GETVALUE 5)                        ; L
29    (JMPIFNOT L74)
31    L31
31    (GETVALUE 5)                        ; L
33    (CAR&PUSH)
34    (JSR&PUSH L0)
36    (GETVALUE 5)                        ; L
38    (CAR)
39    (JMPIFEQ L50)
41    (GETVALUE&PUSH 5)                   ; L
43    (GETVALUE 5)                        ; L
45    (CAR&PUSH)
46    (JSR&PUSH L0)
48    (CALLS1 168)                        ; RPLACA
50    L50
50    (GETVALUE 5)                        ; L
52    (CAR&PUSH)
53    (CALL1&PUSH 3)                      ; OPT-HASH
55    (GETVALUE&PUSH 4)                   ; N
57    (CALLSR&PUSH 2 53)                  ; +
60    (CONST&PUSH 6)                      ; 12553
61    (CALLS2 184)                        ; REM
63    (SETVALUE 4)                        ; N
65    (GETVALUE 5)                        ; L
67    (CDR)
68    (SETVALUE 5)                        ; L
70    (GETVALUE 5)                        ; L
72    (JMPIF L31)
74    L74
74    (UNBIND1)
75    (CONST&PUSH 7)                      ; 63
76    (GETVALUE&PUSH 4)                   ; N
78    (CALLSR 2 61)                       ; LOGAND
81    (SETVALUE 4)                        ; N
83    (GETVALUE&PUSH 8)                   ; *SUBEXP*
85    (GETVALUE&PUSH 4)                   ; N
87    (CALLSR 1 1)                        ; AREF
90    (BIND 5)                            ; L
92    (GETVALUE 5)                        ; L
94    (JMPIFNOT L114)
96    L96
96    (GETVALUE&PUSH 0)                   ; X
98    (GETVALUE 5)                        ; L
100   (CAR)
101   (CAR&PUSH)
102   (CALL2&JMPIF 9 L158)                ; ALIKE1
105   (GETVALUE 5)                        ; L
107   (CDR)
108   (SETVALUE 5)                        ; L
110   (GETVALUE 5)                        ; L
112   (JMPIF L96)
114   L114
114   (GETVALUE&PUSH 8)                   ; *SUBEXP*
116   (GETVALUE&PUSH 4)                   ; N
118   (GETVALUE&PUSH 0)                   ; X
120   (LIST&PUSH 1)
122   (GETVALUE&PUSH 8)                   ; *SUBEXP*
124   (GETVALUE&PUSH 4)                   ; N
126   (CALLSR 1 1)                        ; AREF
129   (CONS&PUSH)
130   (LOAD&PUSH 2)
131   (LOAD&PUSH 2)
132   (LOAD&PUSH 2)
133   (CALLSR 1 2)                        ; SYSTEM::STORE
136   (SKIP 3)
138   (GETVALUE 0)                        ; X
140   L140
140   (UNBIND 2)
142   L142
142   (UNBIND1)
143   (SKIP&RET 2)
145   L145
145   (GETVALUE 0)                        ; X
147   (JMP L142)
149   L149
149   (GETVALUE&PUSH 0)                   ; X
151   (CALL1&PUSH 2)                      ; SPECDISREP
153   (JSR L0)
156   (JMP L142)
158   L158
158   (GETVALUE 5)                        ; L
160   (CAR)
161   (CAR)
162   (JMP L140)


Disassembly of function #:|(DEFUN COMEXP (X) ...)-12|
(CONST 0) = COMEXP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COMEXP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COMEXP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COMEXP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COMEXP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COMEXP
8     (SKIP&RET 1)


Disassembly of function COMEXP
(CONST 0) = X
(CONST 1) = RAT
(CONST 2) = OPT-HASH
(CONST 3) = N
(CONST 4) = U
(CONST 5) = 12553
(CONST 6) = *SUBEXP*
(CONST 7) = 63
(CONST 8) = ASSOL
(CONST 9) = SEEN
(CONST 10) = COMEXP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*SUBEXP* N X)
writes special variables : (X N U)
71 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2&JMPIFNOT 5 L28)             ; ATOM
8     (NOT)
9     (JMPIFNOT1 L109)
12    L12
12    (GETVALUE 0)                        ; X
14    (CAR)
15    (CAR&PUSH)
16    (CALL1 2)                           ; OPT-HASH
18    (BIND 3)                            ; N
20    (GETVALUE 0)                        ; X
22    (CDR&PUSH)
23    (NIL)
24    (BIND 4)                            ; U
26    (JMP L76)
28    L28
28    (GETVALUE 0)                        ; X
30    (CAR)
31    (CAR&PUSH)
32    (CONST 1)                           ; RAT
33    (EQ)
34    (NOT)
35    (JMPIFNOT1 L109)
38    (JMP L12)
40    L40
40    (GETVALUE&PUSH 0)                   ; X
42    (CONST&PUSH 9)                      ; SEEN
43    (CALLS1 170)                        ; RPLACD
45    (CONST&SYMBOL-FUNCTION&PUSH 10)     ; COMEXP
47    (GETVALUE 0)                        ; X
49    (CAR)
50    (CDR&PUSH)
51    (CALLSR 0 24)                       ; MAPC
54    (UNBIND1)
55    (JMP L109)
57    L57
57    (LOAD 3)
58    (CAR)
59    (SETVALUE 4)                        ; U
61    (PUSH)
62    (CALL1&PUSH 2)                      ; OPT-HASH
64    (GETVALUE&PUSH 3)                   ; N
66    (CALLSR&PUSH 2 53)                  ; +
69    (CONST&PUSH 5)                      ; 12553
70    (CALLS2 184)                        ; REM
72    (SETVALUE 3)                        ; N
74    (LOAD&CDR&STORE 3)
76    L76
76    (LOAD&PUSH 3)
77    (CALLS1&JMPIFNOT 146 L57)           ; ENDP
80    (UNBIND1)
81    (SKIP 1)
83    (GETVALUE&PUSH 0)                   ; X
85    (GETVALUE&PUSH 6)                   ; *SUBEXP*
87    (CONST&PUSH 7)                      ; 63
88    (GETVALUE&PUSH 3)                   ; N
90    (CALLSR&PUSH 2 61)                  ; LOGAND
93    (CALLSR&PUSH 1 1)                   ; AREF
96    (CALL2 8)                           ; ASSOL
98    (SETVALUE 0)                        ; X
100   (CDR)
101   (JMPIFNOT L40)
103   (GETVALUE&PUSH 0)                   ; X
105   (CONST&PUSH 10)                     ; COMEXP
106   (CALLS1 170)                        ; RPLACD
108   (UNBIND1)
109   L109
109   (UNBIND1)
110   (SKIP&RET 2)


Disassembly of function #:|(DEFUN OPTIM (X) ...)-13|
(CONST 0) = OPTIM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE OPTIM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; OPTIM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; OPTIM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE OPTIM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; OPTIM
8     (SKIP&RET 1)


Disassembly of function OPTIM
(CONST 0) = X
(CONST 1) = ARRAY
(CONST 2) = MEMQ
(CONST 3) = MQAPPLY
(CONST 4) = ARRAYFUN-MODE
(CONST 5) = MGET
(CONST 6) = RAT
(CONST 7) = OPT-HASH
(CONST 8) = NX
(CONST 9) = N
(CONST 10) = U
(CONST 11) = 12553
(CONST 12) = *SUBEXP*
(CONST 13) = 63
(CONST 14) = ASSOL
(CONST 15) = SEEN
(CONST 16) = COMEXP
(CONST 17) = GETOPTIMVAR
(CONST 18) = (MSETQ)
(CONST 19) = SETQS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (SETQS *SUBEXP* U N NX X)
writes special variables : (SETQS X NX N U)
111 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFATOM L61)
7     (CONST&PUSH 1)                      ; ARRAY
8     (GETVALUE 0)                        ; X
10    (CAR)
11    (CDR&PUSH)
12    (CALL2&JMPIFNOT 2 L30)              ; MEMQ
15    (GETVALUE 0)                        ; X
17    (CAR)
18    (CAR&PUSH)
19    (JMPIFEQTO 3 L30)                   ; MQAPPLY
22    (GETVALUE 0)                        ; X
24    (CAR)
25    (CAR&PUSH)
26    (CONST&PUSH 4)                      ; ARRAYFUN-MODE
27    (CALL2&JMPIFNOT 5 L66)              ; MGET
30    L30
30    (GETVALUE 0)                        ; X
32    (CAR)
33    (CAR&PUSH)
34    (JMPIFEQTO 6 L71)                   ; RAT
37    (GETVALUE 0)                        ; X
39    (CAR)
40    (CAR&PUSH)
41    (CALL1&PUSH 7)                      ; OPT-HASH
43    (GETVALUE 0)                        ; X
45    (CAR&PUSH)
46    (LIST 1)
48    (BIND 8)                            ; NX
50    (LOAD 3)
51    (BIND 9)                            ; N
53    (GETVALUE 0)                        ; X
55    (CDR&PUSH)
56    (NIL)
57    (BIND 10)                           ; U
59    (JMP L110)
61    L61
61    (GETVALUE 0)                        ; X
63    (JMP L180)
66    L66
66    (GETVALUE 0)                        ; X
68    (JMP L180)
71    L71
71    (GETVALUE 0)                        ; X
73    (JMP L180)
76    L76
76    (GETVALUE 8)                        ; NX
78    (JMP L176)
81    L81
81    (LOAD 3)
82    (CAR)
83    (SETVALUE 10)                       ; U
85    (PUSH)
86    (CALL1&PUSH 7)                      ; OPT-HASH
88    (GETVALUE&PUSH 9)                   ; N
90    (CALLSR&PUSH 2 53)                  ; +
93    (CONST&PUSH 11)                     ; 12553
94    (CALLS2 184)                        ; REM
96    (SETVALUE 9)                        ; N
98    (GETVALUE&PUSH 10)                  ; U
100   (JSR&PUSH L0)
103   (GETVALUE 8)                        ; NX
105   (CONS)
106   (SETVALUE 8)                        ; NX
108   (LOAD&CDR&STORE 3)
110   L110
110   (LOAD&PUSH 3)
111   (CALLS1&JMPIFNOT 146 L81)           ; ENDP
114   (UNBIND1)
115   (SKIP 1)
117   (GETVALUE&PUSH 0)                   ; X
119   (GETVALUE&PUSH 12)                  ; *SUBEXP*
121   (CONST&PUSH 13)                     ; 63
122   (GETVALUE&PUSH 9)                   ; N
124   (CALLSR&PUSH 2 61)                  ; LOGAND
127   (CALLSR&PUSH 1 1)                   ; AREF
130   (CALL2 14)                          ; ASSOL
132   (SETVALUE 0)                        ; X
134   (GETVALUE&PUSH 8)                   ; NX
136   (CALLS2 73)                         ; NREVERSE
138   (SETVALUE 8)                        ; NX
140   (GETVALUE 0)                        ; X
142   (CDR&PUSH)
143   (JMPIFEQTO 15 L76)                  ; SEEN
147   (GETVALUE 0)                        ; X
149   (CDR&PUSH)
150   (JMPIFNOTEQTO 16 L173)              ; COMEXP
153   (GETVALUE&PUSH 0)                   ; X
155   (CALL0 17)                          ; GETOPTIMVAR
157   (PUSH)
158   (CALLS1 170)                        ; RPLACD
160   (CONST&PUSH 18)                     ; (MSETQ)
161   (GETVALUE 0)                        ; X
163   (CDR&PUSH)
164   (GETVALUE&PUSH 8)                   ; NX
166   (LIST&PUSH 3)
168   (GETVALUE 19)                       ; SETQS
170   (CONS)
171   (SETVALUE 19)                       ; SETQS
173   L173
173   (GETVALUE 0)                        ; X
175   (CDR)
176   L176
176   (UNBIND 2)
178   (SKIP 1)
180   L180
180   (UNBIND1)
181   (SKIP&RET 2)


Disassembly of function #:|(DEFUN OPT-HASH (EXP) ...)-14|
(CONST 0) = OPT-HASH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE OPT-HASH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; OPT-HASH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; OPT-HASH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE OPT-HASH>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; OPT-HASH
8     (SKIP&RET 1)


Disassembly of function OPT-HASH
(CONST 0) = EXP
(CONST 1) = ARGS
(CONST 2) = N
(CONST 3) = 12553
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (N ARGS EXP)
writes special variables : (ARGS N)
44 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; EXP
3     (GETVALUE 0)                        ; EXP
5     (JMPIFATOM L62)
7     (GETVALUE 0)                        ; EXP
9     (CAR)
10    (CAR&PUSH)
11    (JSR&PUSH L0)
13    (GETVALUE 0)                        ; EXP
15    (CDR)
16    (BIND 1)                            ; ARGS
18    (LOAD 3)
19    (BIND 2)                            ; N
21    (GETVALUE 1)                        ; ARGS
23    (JMPIFNOT L49)
25    L25
25    (GETVALUE 1)                        ; ARGS
27    (CAR&PUSH)
28    (JSR&PUSH L0)
30    (GETVALUE&PUSH 2)                   ; N
32    (CALLSR&PUSH 2 53)                  ; +
35    (CONST&PUSH 3)                      ; 12553
36    (CALLS2 184)                        ; REM
38    (SETVALUE 2)                        ; N
40    (GETVALUE 1)                        ; ARGS
42    (CDR)
43    (SETVALUE 1)                        ; ARGS
45    (GETVALUE 1)                        ; ARGS
47    (JMPIF L25)
49    L49
49    (GETVALUE 2)                        ; N
51    (UNBIND 2)
53    (SKIP 1)
55    L55
55    (PUSH)
56    (CONST&PUSH 3)                      ; 12553
57    (CALLS2 184)                        ; REM
59    (UNBIND1)
60    (SKIP&RET 2)
62    L62
62    (GETVALUE&PUSH 0)                   ; EXP
64    (CALLS1 108)                        ; SXHASH
66    (JMP L55)


Disassembly of function #:|(DEFUN GETOPTIMVAR NIL ...)-15|
(CONST 0) = GETOPTIMVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GETOPTIMVAR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GETOPTIMVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GETOPTIMVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GETOPTIMVAR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GETOPTIMVAR
8     (SKIP&RET 1)


Disassembly of function GETOPTIMVAR
(CONST 0) = VAR
(CONST 1) = OPTIMCOUNT
(CONST 2) = $OPTIMPREFIX
(CONST 3) = SYSTEM::DO-FORMAT-DECIMAL
(CONST 4) = XVARS
(CONST 5) = MEMQ
(CONST 6) = VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VARS VAR XVARS $OPTIMPREFIX OPTIMCOUNT)
writes special variables : (VARS VAR OPTIMCOUNT)
32 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; VAR
3     L3
3     (GETVALUE&PUSH 1)                   ; OPTIMCOUNT
5     (CALLS2 150)                        ; 1+
7     (SETVALUE 1)                        ; OPTIMCOUNT
9     (PUSH-UNBOUND 2)
11    (CALLS2&PUSH 117)                   ; MAKE-STRING-OUTPUT-STREAM
13    (GETVALUE&PUSH 2)                   ; $OPTIMPREFIX
15    (GETVALUE&PUSH 1)                   ; OPTIMCOUNT
17    (LOAD&PUSH 1)
18    (LOAD&PUSH 3)
19    (CALLS1 132)                        ; PRINC
21    (LOAD&PUSH 2)
22    (PUSH-NIL 6)
24    (LOAD&PUSH 7)
25    (CALL 8 3)                          ; SYSTEM::DO-FORMAT-DECIMAL
28    (SKIP 2)
30    (LOAD&PUSH 0)
31    (CALLS2&STORE 118 0)                ; GET-OUTPUT-STREAM-STRING
34    (CALLS1 203)                        ; MAKE-SYMBOL
36    (SETVALUE 0)                        ; VAR
38    (PUSH)
39    (GETVALUE&PUSH 4)                   ; XVARS
41    (CALL2&JMPIF 5 L3)                  ; MEMQ
44    (GETVALUE&PUSH 0)                   ; VAR
46    (GETVALUE 6)                        ; VARS
48    (CONS)
49    (SETVALUE 6)                        ; VARS
51    (GETVALUE 0)                        ; VAR
53    (UNBIND1)
54    (SKIP&RET 1)


Wrote file binary-clisp/optim.fas
Wrote file /cygdrive/e/temp/maxima/src/optim.lis