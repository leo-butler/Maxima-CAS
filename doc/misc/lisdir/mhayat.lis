Listing of compilation of file /cygdrive/e/temp/maxima/src/mhayat.lisp
on 2002-12-17 13:32:03 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/mhayat.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE MHAYAT MACRO)-2|
(CONST 0) = MHAYAT
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (MACRO)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; MHAYAT
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (MACRO)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL TLIST IVARS ...))-3|
(CONST 0) = (SPECIAL TLIST IVARS KEY-VARS LAST-EXP)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL TLIST IVARS KEY-VARS ...)
1     (CALLS1 90)                         ; PROCLAIM
3     (SKIP&RET 1)


Disassembly of function #:|(COMMENT SUBTITLE HAYAT ...)-4|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO PSZERO (VAR PW) ...)-5|
(CONST 0) = PSZERO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PSZERO>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PSZERO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PSZERO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PSZERO>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PSZERO
10    (SKIP&RET 1)


Disassembly of function PSZERO
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = '(0 . 1)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L11)             ; /=
8     (CONST 2)                           ; '(0 . 1)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PSP (E) ...)-6|
(CONST 0) = PSP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PSP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PSP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PSP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PSP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PSP
10    (SKIP&RET 1)


Disassembly of function PSP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = EQ
(CONST 3) = CAR
(CONST 4) = ('PS)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; EQ
12    (CONST&PUSH 3)                      ; CAR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST 4)                           ; ('PS)
17    (LIST* 2)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PSCOEFP (E) ...)-7|
(CONST 0) = PSCOEFP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PSCOEFP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PSCOEFP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PSCOEFP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PSCOEFP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PSCOEFP
10    (SKIP&RET 1)


Disassembly of function PSCOEFP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = NULL
(CONST 3) = PSP
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; NULL
12    (CONST&PUSH 3)                      ; PSP
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PSQUO (PS1 &OPTIONAL PS2) ...)-8|
(CONST 0) = PSQUO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PSQUO>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PSQUO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PSQUO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PSQUO>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PSQUO
10    (SKIP&RET 1)


Disassembly of function PSQUO
(CONST 0) = 2
(CONST 1) = 3
(CONST 2) = SYSTEM::MACRO-CALL-ERROR
(CONST 3) = PSEXPT
(CONST 4) = ((RCMONE))
(CONST 5) = PSTIMES
(CONST 6) = ((RCMONE))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
31 byte-code instructions:
0     (CONST&PUSH 0)                      ; 2
1     (LOAD&PUSH 3)
2     (CALLS2&PUSH 71)                    ; LENGTH
4     (CONST&PUSH 1)                      ; 3
5     (CALLSR&JMPIFNOT 2 49 L30)          ; <=
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (LOAD 3)
13    (CDR)
14    (CDR)
15    (CAR&PUSH)
16    (LOAD&JMPIFNOT 0 L35)
19    (CONST&PUSH 5)                      ; PSTIMES
20    (LOAD&PUSH 2)
21    (CONST&PUSH 3)                      ; PSEXPT
22    (LOAD&PUSH 3)
23    (CONST 6)                           ; ((RCMONE))
24    (LIST*&PUSH 2)
26    (LIST 3)
28    (SKIP&RET 5)
30    L30
30    (LOAD&PUSH 2)
31    (CALL1 2)                           ; SYSTEM::MACRO-CALL-ERROR
33    (SKIP&RET 3)
35    L35
35    (CONST&PUSH 3)                      ; PSEXPT
36    (LOAD&PUSH 2)
37    (CONST 4)                           ; ((RCMONE))
38    (LIST* 2)
40    (SKIP&RET 5)


Disassembly of function #:|(DEFMACRO PSLOG-GVAR (GVAR) ...)-9|
(CONST 0) = PSLOG-GVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PSLOG-GVAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PSLOG-GVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PSLOG-GVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PSLOG-GVAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PSLOG-GVAR
10    (SKIP&RET 1)


Disassembly of function PSLOG-GVAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = PSLOG2
(CONST 3) = GET-INVERSE
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; PSLOG2
12    (CONST&PUSH 3)                      ; GET-INVERSE
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GVAR-O (E) ...)-10|
(CONST 0) = GVAR-O
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GVAR-O>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GVAR-O
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GVAR-O
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GVAR-O>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GVAR-O
10    (SKIP&RET 1)


Disassembly of function GVAR-O
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GVAR (E) ...)-11|
(CONST 0) = GVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GVAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GVAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GVAR
10    (SKIP&RET 1)


Disassembly of function GVAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
(CONST 3) = GVAR-O
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (CONST&PUSH 3)                      ; GVAR-O
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EQGVAR (X Y) ...)-12|
(CONST 0) = EQGVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EQGVAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EQGVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EQGVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EQGVAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EQGVAR
10    (SKIP&RET 1)


Disassembly of function EQGVAR
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = EQ
(CONST 3) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
24 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L28)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; EQ
16    (CONST&PUSH 3)                      ; CAR
17    (LOAD&PUSH 3)
18    (LIST&PUSH 2)
20    (CONST&PUSH 3)                      ; CAR
21    (LOAD&PUSH 3)
22    (LIST&PUSH 2)
24    (LIST 3)
26    (SKIP&RET 5)
28    L28
28    (LOAD&PUSH 2)
29    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
31    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO POINTERP (X Y) ...)-13|
(CONST 0) = POINTERP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POINTERP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; POINTERP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POINTERP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POINTERP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; POINTERP
10    (SKIP&RET 1)


Disassembly of function POINTERP
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = >
(CONST 3) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
24 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L28)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; >
16    (CONST&PUSH 3)                      ; CDR
17    (LOAD&PUSH 3)
18    (LIST&PUSH 2)
20    (CONST&PUSH 3)                      ; CDR
21    (LOAD&PUSH 3)
22    (LIST&PUSH 2)
24    (LIST 3)
26    (SKIP&RET 5)
28    L28
28    (LOAD&PUSH 2)
29    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
31    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO POLY-DATA (P) ...)-14|
(CONST 0) = POLY-DATA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POLY-DATA>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; POLY-DATA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POLY-DATA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POLY-DATA>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; POLY-DATA
10    (SKIP&RET 1)


Disassembly of function POLY-DATA
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRUNC-LVL (P) ...)-15|
(CONST 0) = TRUNC-LVL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRUNC-LVL>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRUNC-LVL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRUNC-LVL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRUNC-LVL>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRUNC-LVL
10    (SKIP&RET 1)


Disassembly of function TRUNC-LVL
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
(CONST 3) = POLY-DATA
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (CONST&PUSH 3)                      ; POLY-DATA
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TERMS (P) ...)-16|
(CONST 0) = TERMS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TERMS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TERMS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TERMS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TERMS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TERMS
10    (SKIP&RET 1)


Disassembly of function TERMS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDDDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDDDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO LT (TERMS) ...)-17|
(CONST 0) = LT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LT
10    (SKIP&RET 1)


Disassembly of function LT
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO LE (TERMS) ...)-18|
(CONST 0) = LE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LE
10    (SKIP&RET 1)


Disassembly of function LE
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO LC (TERMS) ...)-19|
(CONST 0) = LC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LC
10    (SKIP&RET 1)


Disassembly of function LC
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO E (TERM) ...)-20|
(CONST 0) = E
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE E>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; E
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; E
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE E>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; E
10    (SKIP&RET 1)


Disassembly of function E
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO C (TERM) ...)-21|
(CONST 0) = C
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE C>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; C
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; C
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE C>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; C
10    (SKIP&RET 1)


Disassembly of function C
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO N-TERM (TERMS) ...)-22|
(CONST 0) = N-TERM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE N-TERM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; N-TERM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; N-TERM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE N-TERM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; N-TERM
10    (SKIP&RET 1)


Disassembly of function N-TERM
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MONO-TERM? (TERMS) ...)-23|
(CONST 0) = MONO-TERM?
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MONO-TERM?>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MONO-TERM?
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MONO-TERM?
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MONO-TERM?>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MONO-TERM?
10    (SKIP&RET 1)


Disassembly of function MONO-TERM?
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = NULL
(CONST 3) = N-TERM
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; NULL
12    (CONST&PUSH 3)                      ; N-TERM
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO NCONC-TERMS (OLDTERMS NEWTERMS) ...)-24|
(CONST 0) = NCONC-TERMS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NCONC-TERMS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; NCONC-TERMS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NCONC-TERMS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NCONC-TERMS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; NCONC-TERMS
10    (SKIP&RET 1)


Disassembly of function NCONC-TERMS
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = NCONC
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; NCONC
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TERM (E C) ...)-25|
(CONST 0) = TERM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TERM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TERM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TERM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TERM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TERM
10    (SKIP&RET 1)


Disassembly of function TERM
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; CONS
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-PS (VAR-OR-DATA-POLY PDATA-OR-TERMS &OPTIONAL ...) ...)-26|
(CONST 0) = MAKE-PS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-PS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-PS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-PS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-PS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-PS
10    (SKIP&RET 1)


Disassembly of function MAKE-PS
(CONST 0) = 3
(CONST 1) = 4
(CONST 2) = SYSTEM::MACRO-CALL-ERROR
(CONST 3) = CONS
(CONST 4) = 'PS
(CONST 5) = 'PS
(CONST 6) = GVAR-O
(CONST 7) = POLY-DATA
1 required argument
1 optional argument
No rest parameter
No keyword parameters
62 byte-code instructions:
0     (CONST&PUSH 0)                      ; 3
1     (LOAD&PUSH 3)
2     (CALLS2&PUSH 71)                    ; LENGTH
4     (CONST&PUSH 1)                      ; 4
5     (CALLSR&JMPIFNOT 2 49 L60)          ; <=
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (LOAD 3)
13    (CDR)
14    (CDR)
15    (CAR&PUSH)
16    (LOAD 4)
17    (CDR)
18    (CDR)
19    (CDR)
20    (JMPIFNOT L27)
22    (LOAD 4)
23    (CDR)
24    (CDR)
25    (CDR)
26    (CAR)
27    L27
27    (PUSH)
28    (LOAD 5)
29    (CDR)
30    (CDR)
31    (CDR)
32    (NOT)
33    (NOT)
34    (PUSH)
35    (LOAD&JMPIF 0 L65)
38    (CONST&PUSH 3)                      ; CONS
39    (CONST&PUSH 5)                      ; 'PS
40    (CONST&PUSH 3)                      ; CONS
41    (CONST&PUSH 6)                      ; GVAR-O
42    (LOAD&PUSH 7)
43    (LIST&PUSH 2)
45    (CONST&PUSH 3)                      ; CONS
46    (CONST&PUSH 7)                      ; POLY-DATA
47    (LOAD&PUSH 9)
48    (LIST&PUSH 2)
50    (LOAD 8)
51    L51
51    (PUSH)
52    (LIST&PUSH 3)
54    (LIST&PUSH 3)
56    (LIST 3)
58    (SKIP&RET 7)
60    L60
60    (LOAD&PUSH 2)
61    (CALL1 2)                           ; SYSTEM::MACRO-CALL-ERROR
63    (SKIP&RET 3)
65    L65
65    (CONST&PUSH 3)                      ; CONS
66    (CONST&PUSH 4)                      ; 'PS
67    (CONST&PUSH 3)                      ; CONS
68    (LOAD&PUSH 6)
69    (CONST&PUSH 3)                      ; CONS
70    (LOAD&PUSH 7)
71    (LOAD 7)
72    (JMP L51)


Disassembly of function #:|(DEFMACRO DEL-LT (PS) ...)-27|
(CONST 0) = DEL-LT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DEL-LT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; DEL-LT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DEL-LT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DEL-LT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; DEL-LT
10    (SKIP&RET 1)


Disassembly of function DEL-LT
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RPLACD
(CONST 3) = CDDR
(CONST 4) = CDDDDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L24)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; RPLACD
12    (CONST&PUSH 3)                      ; CDDR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST&PUSH 4)                      ; CDDDDR
17    (LOAD&PUSH 3)
18    (LIST&PUSH 2)
20    (LIST 3)
22    (SKIP&RET 4)
24    L24
24    (LOAD&PUSH 2)
25    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
27    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO ADD-TERM (TERMS &OPTIONAL # ...) ...)-28|
(CONST 0) = ADD-TERM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ADD-TERM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; ADD-TERM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ADD-TERM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ADD-TERM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; ADD-TERM
10    (SKIP&RET 1)


Disassembly of function ADD-TERM
(CONST 0) = 2
(CONST 1) = 4
(CONST 2) = SYSTEM::MACRO-CALL-ERROR
(CONST 3) = RPLACD
(CONST 4) = (NIL)
(CONST 5) = CONS
(CONST 6) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
77 byte-code instructions:
0     (CONST&PUSH 0)                      ; 2
1     (LOAD&PUSH 3)
2     (CALLS2&PUSH 71)                    ; LENGTH
4     (CONST&PUSH 1)                      ; 4
5     (CALLSR&JMPIFNOT 2 49 L72)          ; <=
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (LOAD 3)
13    (CDR)
14    (CDR)
15    (JMPIFNOT L21)
17    (LOAD 3)
18    (CDR)
19    (CDR)
20    (CAR)
21    L21
21    (PUSH)
22    (LOAD 4)
23    (CDR)
24    (CDR)
25    (NOT)
26    (NOT)
27    (PUSH)
28    (LOAD 5)
29    (CDR)
30    (CDR)
31    (CDR)
32    (JMPIFNOT L39)
34    (LOAD 5)
35    (CDR)
36    (CDR)
37    (CDR)
38    (CAR)
39    L39
39    (PUSH)
40    (LOAD 6)
41    (CDR)
42    (CDR)
43    (CDR)
44    (NOT)
45    (NOT)
46    (PUSH)
47    (LOAD&JMPIFNOT 2 L77)
50    (LOAD&JMPIFNOT 0 L84)
53    (CONST&PUSH 3)                      ; RPLACD
54    (LOAD&PUSH 5)
55    (CONST&PUSH 5)                      ; CONS
56    (CONST&PUSH 5)                      ; CONS
57    (LOAD&PUSH 7)
58    (LOAD&PUSH 6)
59    (LIST&PUSH 3)
61    (CONST 6)                           ; CDR
62    L62
62    (PUSH)
63    (LOAD&PUSH 9)
64    (LIST&PUSH 2)
66    (LIST&PUSH 3)
68    (LIST 3)
70    (SKIP&RET 8)
72    L72
72    (LOAD&PUSH 2)
73    (CALL1 2)                           ; SYSTEM::MACRO-CALL-ERROR
75    (SKIP&RET 3)
77    L77
77    (CONST&PUSH 3)                      ; RPLACD
78    (LOAD&PUSH 5)
79    (CONST 4)                           ; (NIL)
80    (LIST* 2)
82    (SKIP&RET 8)
84    L84
84    (CONST&PUSH 3)                      ; RPLACD
85    (LOAD&PUSH 5)
86    (CONST&PUSH 5)                      ; CONS
87    (LOAD&PUSH 6)
88    (CONST 6)                           ; CDR
89    (JMP L62)


Disassembly of function #:|(DEFMACRO ADD-TERM-&-POP (TERMS &REST ARGS) ...)-29|
(CONST 0) = ADD-TERM-&-POP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ADD-TERM-&-POP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; ADD-TERM-&-POP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ADD-TERM-&-POP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ADD-TERM-&-POP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; ADD-TERM-&-POP
10    (SKIP&RET 1)


Disassembly of function ADD-TERM-&-POP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = PROGN
(CONST 3) = ADD-TERM
(CONST 4) = SETQ
(CONST 5) = N-TERM
1 required argument
1 optional argument
No rest parameter
No keyword parameters
27 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 47 L32)             ; <
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR&PUSH)
14    (CONST&PUSH 2)                      ; PROGN
15    (CONST&PUSH 3)                      ; ADD-TERM
16    (LOAD&PUSH 3)
17    (LOAD 3)
18    (LIST*&PUSH 2)
20    (CONST&PUSH 4)                      ; SETQ
21    (LOAD&PUSH 4)
22    (CONST&PUSH 5)                      ; N-TERM
23    (LOAD&PUSH 6)
24    (LIST&PUSH 2)
26    (LIST&PUSH 3)
28    (LIST 3)
30    (SKIP&RET 5)
32    L32
32    (LOAD&PUSH 2)
33    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
35    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO CHANGE-COEF (TERMS COEF) ...)-30|
(CONST 0) = CHANGE-COEF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CHANGE-COEF>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; CHANGE-COEF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CHANGE-COEF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CHANGE-COEF>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; CHANGE-COEF
10    (SKIP&RET 1)


Disassembly of function CHANGE-COEF
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RPLACD
(CONST 3) = LT
1 required argument
1 optional argument
No rest parameter
No keyword parameters
22 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L25)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; RPLACD
16    (CONST&PUSH 3)                      ; LT
17    (LOAD&PUSH 3)
18    (LIST&PUSH 2)
20    (LOAD&PUSH 2)
21    (LIST 3)
23    (SKIP&RET 5)
25    L25
25    (LOAD&PUSH 2)
26    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
28    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO CHANGE-LC (TERMS COEF) ...)-31|
(CONST 0) = CHANGE-LC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CHANGE-LC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; CHANGE-LC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CHANGE-LC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CHANGE-LC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; CHANGE-LC
10    (SKIP&RET 1)


Disassembly of function CHANGE-LC
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RPLACD
(CONST 3) = LT
1 required argument
1 optional argument
No rest parameter
No keyword parameters
22 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L25)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; RPLACD
16    (CONST&PUSH 3)                      ; LT
17    (LOAD&PUSH 3)
18    (LIST&PUSH 2)
20    (LOAD&PUSH 2)
21    (LIST 3)
23    (SKIP&RET 5)
25    L25
25    (LOAD&PUSH 2)
26    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
28    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GETDISREP (VAR) ...)-32|
(CONST 0) = GETDISREP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GETDISREP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GETDISREP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GETDISREP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GETDISREP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GETDISREP
10    (SKIP&RET 1)


Disassembly of function GETDISREP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = GET
(CONST 3) = CAR
(CONST 4) = ('DISREP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; GET
12    (CONST&PUSH 3)                      ; CAR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST 4)                           ; ('DISREP)
17    (LIST* 2)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GETDIFF (VAR) ...)-33|
(CONST 0) = GETDIFF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GETDIFF>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GETDIFF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GETDIFF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GETDIFF>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GETDIFF
10    (SKIP&RET 1)


Disassembly of function GETDIFF
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = GET
(CONST 3) = CAR
(CONST 4) = ('DIFF)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; GET
12    (CONST&PUSH 3)                      ; CAR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST 4)                           ; ('DIFF)
17    (LIST* 2)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO LT-POLY (P) ...)-34|
(CONST 0) = LT-POLY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LT-POLY>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LT-POLY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LT-POLY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LT-POLY>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LT-POLY
10    (SKIP&RET 1)


Disassembly of function LT-POLY
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = MAKE-PS
(CONST 3) = GVAR-O
(CONST 4) = POLY-DATA
(CONST 5) = LIST
(CONST 6) = LT
(CONST 7) = TERMS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
27 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L34)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; MAKE-PS
12    (CONST&PUSH 3)                      ; GVAR-O
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST&PUSH 4)                      ; POLY-DATA
17    (LOAD&PUSH 3)
18    (LIST&PUSH 2)
20    (CONST&PUSH 5)                      ; LIST
21    (CONST&PUSH 6)                      ; LT
22    (CONST&PUSH 7)                      ; TERMS
23    (LOAD&PUSH 6)
24    (LIST&PUSH 2)
26    (LIST&PUSH 2)
28    (LIST&PUSH 2)
30    (LIST 4)
32    (SKIP&RET 4)
34    L34
34    (LOAD&PUSH 2)
35    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
37    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO OPER-NAME (FUNC) ...)-35|
(CONST 0) = OPER-NAME
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE OPER-NAME>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; OPER-NAME
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; OPER-NAME
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE OPER-NAME>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; OPER-NAME
10    (SKIP&RET 1)


Disassembly of function OPER-NAME
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = IF
(CONST 3) = ATOM
(CONST 4) = CAAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L25)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; IF
12    (CONST&PUSH 3)                      ; ATOM
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LOAD&PUSH 2)
17    (CONST&PUSH 4)                      ; CAAR
18    (LOAD&PUSH 4)
19    (LIST&PUSH 2)
21    (LIST 4)
23    (SKIP&RET 4)
25    L25
25    (LOAD&PUSH 2)
26    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
28    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO OPER-NAMEP (OPER-FORM) ...)-36|
(CONST 0) = OPER-NAMEP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE OPER-NAMEP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; OPER-NAMEP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; OPER-NAMEP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE OPER-NAMEP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; OPER-NAMEP
10    (SKIP&RET 1)


Disassembly of function OPER-NAMEP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = ATOM
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; ATOM
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO INTEGER-SUBSCRIPTP (SUBSCR-FUN) ...)-37|
(CONST 0) = INTEGER-SUBSCRIPTP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INTEGER-SUBSCRIPTP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; INTEGER-SUBSCRIPTP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INTEGER-SUBSCRIPTP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INTEGER-SUBSCRIPTP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; INTEGER-SUBSCRIPTP
10    (SKIP&RET 1)


Disassembly of function INTEGER-SUBSCRIPTP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = APPLY
(CONST 3) = 'AND
(CONST 4) = MAPCAR
(CONST 5) = #'INTEGERP
(CONST 6) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L25)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; APPLY
12    (CONST&PUSH 3)                      ; 'AND
13    (CONST&PUSH 4)                      ; MAPCAR
14    (CONST&PUSH 5)                      ; #'INTEGERP
15    (CONST&PUSH 6)                      ; CDR
16    (LOAD&PUSH 5)
17    (LIST&PUSH 2)
19    (LIST&PUSH 3)
21    (LIST 3)
23    (SKIP&RET 4)
25    L25
25    (LOAD&PUSH 2)
26    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
28    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MLET (VARL VALS COMP) ...)-38|
(CONST 0) = MLET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MLET>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MLET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MLET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MLET>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MLET
10    (SKIP&RET 1)


Disassembly of function MLET
(CONST 0) = 4
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = MBINDING
1 required argument
1 optional argument
No rest parameter
No keyword parameters
27 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 4
4     (CALLSR&JMPIF 1 46 L30)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (LOAD 4)
16    (CDR)
17    (CDR)
18    (CDR)
19    (CAR&PUSH)
20    (CONST&PUSH 2)                      ; MBINDING
21    (LOAD&PUSH 3)
22    (LOAD&PUSH 3)
23    (LIST&PUSH 2)
25    (LOAD&PUSH 2)
26    (LIST 3)
28    (SKIP&RET 6)
30    L30
30    (LOAD&PUSH 2)
31    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
33    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MRAT-HEADER (MRAT) ...)-39|
(CONST 0) = MRAT-HEADER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MRAT-HEADER>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MRAT-HEADER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MRAT-HEADER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MRAT-HEADER>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MRAT-HEADER
10    (SKIP&RET 1)


Disassembly of function MRAT-HEADER
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MRAT-VARLIST (MRAT) ...)-40|
(CONST 0) = MRAT-VARLIST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MRAT-VARLIST>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MRAT-VARLIST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MRAT-VARLIST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MRAT-VARLIST>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MRAT-VARLIST
10    (SKIP&RET 1)


Disassembly of function MRAT-VARLIST
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = THIRD
(CONST 3) = MRAT-HEADER
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; THIRD
12    (CONST&PUSH 3)                      ; MRAT-HEADER
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MRAT-GENVAR (MRAT) ...)-41|
(CONST 0) = MRAT-GENVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MRAT-GENVAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MRAT-GENVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MRAT-GENVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MRAT-GENVAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MRAT-GENVAR
10    (SKIP&RET 1)


Disassembly of function MRAT-GENVAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = FOURTH
(CONST 3) = MRAT-HEADER
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; FOURTH
12    (CONST&PUSH 3)                      ; MRAT-HEADER
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MRAT-TLIST (MRAT) ...)-42|
(CONST 0) = MRAT-TLIST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MRAT-TLIST>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MRAT-TLIST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MRAT-TLIST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MRAT-TLIST>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MRAT-TLIST
10    (SKIP&RET 1)


Disassembly of function MRAT-TLIST
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = FIFTH
(CONST 3) = MRAT-HEADER
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; FIFTH
12    (CONST&PUSH 3)                      ; MRAT-HEADER
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MRAT-PS (MRAT) ...)-43|
(CONST 0) = MRAT-PS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MRAT-PS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MRAT-PS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MRAT-PS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MRAT-PS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MRAT-PS
10    (SKIP&RET 1)


Disassembly of function MRAT-PS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO DATUM-VAR (DATUM) ...)-44|
(CONST 0) = DATUM-VAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DATUM-VAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; DATUM-VAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DATUM-VAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DATUM-VAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; DATUM-VAR
10    (SKIP&RET 1)


Disassembly of function DATUM-VAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRUNC-STACK (DATUM) ...)-45|
(CONST 0) = TRUNC-STACK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRUNC-STACK>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRUNC-STACK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRUNC-STACK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRUNC-STACK>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRUNC-STACK
10    (SKIP&RET 1)


Disassembly of function TRUNC-STACK
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO CURRENT-TRUNC (DATUM) ...)-46|
(CONST 0) = CURRENT-TRUNC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CURRENT-TRUNC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; CURRENT-TRUNC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CURRENT-TRUNC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CURRENT-TRUNC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; CURRENT-TRUNC
10    (SKIP&RET 1)


Disassembly of function CURRENT-TRUNC
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
(CONST 3) = TRUNC-STACK
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (CONST&PUSH 3)                      ; TRUNC-STACK
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO ORIG-TRUNC (DATUM) ...)-47|
(CONST 0) = ORIG-TRUNC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ORIG-TRUNC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; ORIG-TRUNC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ORIG-TRUNC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ORIG-TRUNC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; ORIG-TRUNC
10    (SKIP&RET 1)


Disassembly of function ORIG-TRUNC
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
(CONST 3) = LAST
(CONST 4) = TRUNC-STACK
1 required argument
1 optional argument
No rest parameter
No keyword parameters
19 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L23)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (CONST&PUSH 3)                      ; LAST
13    (CONST&PUSH 4)                      ; TRUNC-STACK
14    (LOAD&PUSH 3)
15    (LIST&PUSH 2)
17    (LIST&PUSH 2)
19    (LIST 2)
21    (SKIP&RET 4)
23    L23
23    (LOAD&PUSH 2)
24    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EXP-PT (DATUM) ...)-48|
(CONST 0) = EXP-PT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXP-PT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXP-PT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXP-PT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXP-PT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EXP-PT
10    (SKIP&RET 1)


Disassembly of function EXP-PT
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SWITCHES (DATUM) ...)-49|
(CONST 0) = SWITCHES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SWITCHES>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SWITCHES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SWITCHES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SWITCHES>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SWITCHES
10    (SKIP&RET 1)


Disassembly of function SWITCHES
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADDDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADDDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SWITCH (SW DATUM) ...)-50|
(CONST 0) = SWITCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SWITCH>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SWITCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SWITCH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SWITCH>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SWITCH
10    (SKIP&RET 1)


Disassembly of function SWITCH
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
(CONST 3) = ASSQ
(CONST 4) = SWITCHES
1 required argument
1 optional argument
No rest parameter
No keyword parameters
24 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L28)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; CDR
16    (CONST&PUSH 3)                      ; ASSQ
17    (LOAD&PUSH 3)
18    (CONST&PUSH 4)                      ; SWITCHES
19    (LOAD&PUSH 4)
20    (LIST&PUSH 2)
22    (LIST&PUSH 3)
24    (LIST 2)
26    (SKIP&RET 5)
28    L28
28    (LOAD&PUSH 2)
29    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
31    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO INT-VAR (DATUM) ...)-51|
(CONST 0) = INT-VAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INT-VAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; INT-VAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INT-VAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INT-VAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; INT-VAR
10    (SKIP&RET 1)


Disassembly of function INT-VAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDDDDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDDDDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO DATA-GVAR-O (DATA) ...)-52|
(CONST 0) = DATA-GVAR-O
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DATA-GVAR-O>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; DATA-GVAR-O
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DATA-GVAR-O
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DATA-GVAR-O>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; DATA-GVAR-O
10    (SKIP&RET 1)


Disassembly of function DATA-GVAR-O
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDDDDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDDDDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO INT-GVAR (DATUM) ...)-53|
(CONST 0) = INT-GVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INT-GVAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; INT-GVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INT-GVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INT-GVAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; INT-GVAR
10    (SKIP&RET 1)


Disassembly of function INT-GVAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
(CONST 3) = INT-VAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (CONST&PUSH 3)                      ; INT-VAR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO DATA-GVAR (DATA) ...)-54|
(CONST 0) = DATA-GVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DATA-GVAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; DATA-GVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DATA-GVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DATA-GVAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; DATA-GVAR
10    (SKIP&RET 1)


Disassembly of function DATA-GVAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
(CONST 3) = DATA-GVAR-O
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (CONST&PUSH 3)                      ; DATA-GVAR-O
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GET-INVERSE (GENSYM) ...)-55|
(CONST 0) = GET-INVERSE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-INVERSE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-INVERSE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-INVERSE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-INVERSE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GET-INVERSE
10    (SKIP&RET 1)


Disassembly of function GET-INVERSE
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
(CONST 3) = ASSQ
(CONST 4) = (IVARS)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (CONST&PUSH 3)                      ; ASSQ
13    (LOAD&PUSH 2)
14    (CONST 4)                           ; (IVARS)
15    (LIST*&PUSH 2)
17    (LIST 2)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GVAR->KVAR (GVAR) ...)-56|
(CONST 0) = GVAR->KVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GVAR->KVAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GVAR->KVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GVAR->KVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GVAR->KVAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GVAR->KVAR
10    (SKIP&RET 1)


Disassembly of function GVAR->KVAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
(CONST 3) = ASSQ
(CONST 4) = (IVARS)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (CONST&PUSH 3)                      ; ASSQ
13    (LOAD&PUSH 2)
14    (CONST 4)                           ; (IVARS)
15    (LIST*&PUSH 2)
17    (LIST 2)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GET-KEY-VAR (GENSYM) ...)-57|
(CONST 0) = GET-KEY-VAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-KEY-VAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-KEY-VAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-KEY-VAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-KEY-VAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GET-KEY-VAR
10    (SKIP&RET 1)


Disassembly of function GET-KEY-VAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
(CONST 3) = ASSQ
(CONST 4) = (KEY-VARS)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (CONST&PUSH 3)                      ; ASSQ
13    (LOAD&PUSH 2)
14    (CONST 4)                           ; (KEY-VARS)
15    (LIST*&PUSH 2)
17    (LIST 2)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GVAR->VAR (GVAR) ...)-58|
(CONST 0) = GVAR->VAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GVAR->VAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GVAR->VAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GVAR->VAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GVAR->VAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GVAR->VAR
10    (SKIP&RET 1)


Disassembly of function GVAR->VAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
(CONST 3) = ASSQ
(CONST 4) = (KEY-VARS)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (CONST&PUSH 3)                      ; ASSQ
13    (LOAD&PUSH 2)
14    (CONST 4)                           ; (KEY-VARS)
15    (LIST*&PUSH 2)
17    (LIST 2)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO DUMMY-VAR NIL ...)-59|
(CONST 0) = DUMMY-VAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DUMMY-VAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; DUMMY-VAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DUMMY-VAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DUMMY-VAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; DUMMY-VAR
10    (SKIP&RET 1)


Disassembly of function DUMMY-VAR
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = (CDAR KEY-VARS)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; (CDAR KEY-VARS)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO FIRST-DATUM NIL ...)-60|
(CONST 0) = FIRST-DATUM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FIRST-DATUM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; FIRST-DATUM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FIRST-DATUM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FIRST-DATUM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; FIRST-DATUM
10    (SKIP&RET 1)


Disassembly of function FIRST-DATUM
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = (CAR TLIST)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; (CAR TLIST)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GET-DATUM (EXPR &OPTIONAL NOT-CANONICALIZED?) ...)-61|
(CONST 0) = GET-DATUM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-DATUM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-DATUM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-DATUM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-DATUM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GET-DATUM
10    (SKIP&RET 1)


Disassembly of function GET-DATUM
(CONST 0) = 2
(CONST 1) = 3
(CONST 2) = SYSTEM::MACRO-CALL-ERROR
(CONST 3) = ASSOL
(CONST 4) = (TLIST)
(CONST 5) = ZL-ASSOC
(CONST 6) = (TLIST)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
28 byte-code instructions:
0     (CONST&PUSH 0)                      ; 2
1     (LOAD&PUSH 3)
2     (CALLS2&PUSH 71)                    ; LENGTH
4     (CONST&PUSH 1)                      ; 3
5     (CALLSR&JMPIFNOT 2 49 L26)          ; <=
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (LOAD 3)
13    (CDR)
14    (CDR)
15    (CAR&PUSH)
16    (LOAD&JMPIF 0 L31)
19    (CONST&PUSH 5)                      ; ZL-ASSOC
20    (LOAD&PUSH 2)
21    (CONST 6)                           ; (TLIST)
22    L22
22    (LIST* 2)
24    (SKIP&RET 5)
26    L26
26    (LOAD&PUSH 2)
27    (CALL1 2)                           ; SYSTEM::MACRO-CALL-ERROR
29    (SKIP&RET 3)
31    L31
31    (CONST&PUSH 3)                      ; ASSOL
32    (LOAD&PUSH 2)
33    (CONST 4)                           ; (TLIST)
34    (JMP L22)


Disassembly of function #:|(DEFMACRO VAR-DATA (VAR) ...)-62|
(CONST 0) = VAR-DATA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE VAR-DATA>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; VAR-DATA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; VAR-DATA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE VAR-DATA>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; VAR-DATA
10    (SKIP&RET 1)


Disassembly of function VAR-DATA
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = ZL-ASSOC
(CONST 3) = (TLIST)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; ZL-ASSOC
12    (LOAD&PUSH 1)
13    (CONST 3)                           ; (TLIST)
14    (LIST* 2)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GVAR-DATA (GVAR) ...)-63|
(CONST 0) = GVAR-DATA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GVAR-DATA>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GVAR-DATA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GVAR-DATA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GVAR-DATA>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GVAR-DATA
10    (SKIP&RET 1)


Disassembly of function GVAR-DATA
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = VAR-DATA
(CONST 3) = GVAR->VAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; VAR-DATA
12    (CONST&PUSH 3)                      ; GVAR->VAR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PS-DATA (PS) ...)-64|
(CONST 0) = PS-DATA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PS-DATA>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PS-DATA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PS-DATA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PS-DATA>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PS-DATA
10    (SKIP&RET 1)


Disassembly of function PS-DATA
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = GVAR-DATA
(CONST 3) = GVAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; GVAR-DATA
12    (CONST&PUSH 3)                      ; GVAR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO T-O-VAR (GENSYM) ...)-65|
(CONST 0) = T-O-VAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE T-O-VAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; T-O-VAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; T-O-VAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE T-O-VAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; T-O-VAR
10    (SKIP&RET 1)


Disassembly of function T-O-VAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CURRENT-TRUNC
(CONST 3) = GET-DATUM
(CONST 4) = GET-KEY-VAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
19 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L23)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CURRENT-TRUNC
12    (CONST&PUSH 3)                      ; GET-DATUM
13    (CONST&PUSH 4)                      ; GET-KEY-VAR
14    (LOAD&PUSH 3)
15    (LIST&PUSH 2)
17    (LIST&PUSH 2)
19    (LIST 2)
21    (SKIP&RET 4)
23    L23
23    (LOAD&PUSH 2)
24    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GVAR-TRUNC (GVAR) ...)-66|
(CONST 0) = GVAR-TRUNC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GVAR-TRUNC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GVAR-TRUNC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GVAR-TRUNC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GVAR-TRUNC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GVAR-TRUNC
10    (SKIP&RET 1)


Disassembly of function GVAR-TRUNC
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CURRENT-TRUNC
(CONST 3) = GVAR-DATA
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CURRENT-TRUNC
12    (CONST&PUSH 3)                      ; GVAR-DATA
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PS-ARG-TRUNC (PS) ...)-67|
(CONST 0) = PS-ARG-TRUNC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PS-ARG-TRUNC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PS-ARG-TRUNC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PS-ARG-TRUNC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PS-ARG-TRUNC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PS-ARG-TRUNC
10    (SKIP&RET 1)


Disassembly of function PS-ARG-TRUNC
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = GVAR-TRUNC
(CONST 3) = GVAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; GVAR-TRUNC
12    (CONST&PUSH 3)                      ; GVAR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PS-LE (PS) ...)-68|
(CONST 0) = PS-LE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PS-LE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PS-LE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PS-LE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PS-LE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PS-LE
10    (SKIP&RET 1)


Disassembly of function PS-LE
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LE
(CONST 3) = TERMS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; LE
12    (CONST&PUSH 3)                      ; TERMS
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PS-LE* (PS) ...)-69|
(CONST 0) = PS-LE*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PS-LE*>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PS-LE*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PS-LE*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PS-LE*>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PS-LE*
10    (SKIP&RET 1)


Disassembly of function PS-LE*
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = IF
(CONST 3) = PSP
(CONST 4) = PS-LE
(CONST 5) = ('(0 . 1))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L25)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; IF
12    (CONST&PUSH 3)                      ; PSP
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST&PUSH 4)                      ; PS-LE
17    (LOAD&PUSH 3)
18    (LIST&PUSH 2)
20    (CONST 5)                           ; ('(0 . 1))
21    (LIST* 3)
23    (SKIP&RET 4)
25    L25
25    (LOAD&PUSH 2)
26    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
28    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PS-LC (PS) ...)-70|
(CONST 0) = PS-LC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PS-LC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PS-LC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PS-LC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PS-LC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PS-LC
10    (SKIP&RET 1)


Disassembly of function PS-LC
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LC
(CONST 3) = TERMS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; LC
12    (CONST&PUSH 3)                      ; TERMS
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PS-LC* (PS) ...)-71|
(CONST 0) = PS-LC*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PS-LC*>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PS-LC*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PS-LC*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PS-LC*>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PS-LC*
10    (SKIP&RET 1)


Disassembly of function PS-LC*
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = IF
(CONST 3) = PSP
(CONST 4) = PS-LC
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L25)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; IF
12    (CONST&PUSH 3)                      ; PSP
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST&PUSH 4)                      ; PS-LC
17    (LOAD&PUSH 3)
18    (LIST&PUSH 2)
20    (LOAD&PUSH 3)
21    (LIST 4)
23    (SKIP&RET 4)
25    L25
25    (LOAD&PUSH 2)
26    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
28    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO PS-LT (PS) ...)-72|
(CONST 0) = PS-LT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PS-LT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; PS-LT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PS-LT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PS-LT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; PS-LT
10    (SKIP&RET 1)


Disassembly of function PS-LT
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LT
(CONST 3) = TERMS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; LT
12    (CONST&PUSH 3)                      ; TERMS
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GETEXP-LE (FUN) ...)-73|
(CONST 0) = GETEXP-LE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GETEXP-LE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GETEXP-LE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GETEXP-LE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GETEXP-LE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GETEXP-LE
10    (SKIP&RET 1)


Disassembly of function GETEXP-LE
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
(CONST 3) = GETEXP-LT
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (CONST&PUSH 3)                      ; GETEXP-LT
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GETEXP-LC (FUN) ...)-74|
(CONST 0) = GETEXP-LC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GETEXP-LC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GETEXP-LC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GETEXP-LC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GETEXP-LC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GETEXP-LC
10    (SKIP&RET 1)


Disassembly of function GETEXP-LC
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
(CONST 3) = GETEXP-LT
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (CONST&PUSH 3)                      ; GETEXP-LT
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO LET-PW (DATUM PW COMP) ...)-75|
(CONST 0) = LET-PW
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LET-PW>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LET-PW
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LET-PW
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LET-PW>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LET-PW
10    (SKIP&RET 1)


Disassembly of function LET-PW
(CONST 0) = 4
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LET
(CONST 3) = D
(CONST 4) = PROG2
(CONST 5) = PUSH-PW
(CONST 6) = ((POP-PW D))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
35 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 4
4     (CALLSR&JMPIF 1 46 L41)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (LOAD 4)
16    (CDR)
17    (CDR)
18    (CDR)
19    (CAR&PUSH)
20    (CONST&PUSH 2)                      ; LET
21    (CONST&PUSH 3)                      ; D
22    (LOAD&PUSH 4)
23    (LIST&PUSH 2)
25    (LIST&PUSH 1)
27    (CONST&PUSH 4)                      ; PROG2
28    (CONST&PUSH 5)                      ; PUSH-PW
29    (CONST&PUSH 3)                      ; D
30    (LOAD&PUSH 6)
31    (LIST&PUSH 3)
33    (LOAD&PUSH 4)
34    (CONST 6)                           ; ((POP-PW D))
35    (LIST*&PUSH 3)
37    (LIST 3)
39    (SKIP&RET 6)
41    L41
41    (LOAD&PUSH 2)
42    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
44    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO IF-PW (PRED DATUM PW ...) ...)-76|
(CONST 0) = IF-PW
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE IF-PW>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; IF-PW
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; IF-PW
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE IF-PW>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; IF-PW
10    (SKIP&RET 1)


Disassembly of function IF-PW
(CONST 0) = 5
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LET
(CONST 3) = P
(CONST 4) = D
(CONST 5) = PROG2
(CONST 6) = AND
(CONST 7) = PUSH-PW
(CONST 8) = POP-PW
1 required argument
1 optional argument
No rest parameter
No keyword parameters
49 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 5
4     (CALLSR&JMPIF 1 46 L60)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (LOAD 4)
16    (CDR)
17    (CDR)
18    (CDR)
19    (CAR&PUSH)
20    (LOAD&PUSH 5)
21    (CALLS1&PUSH 149)                   ; FIFTH
23    (CONST&PUSH 2)                      ; LET
24    (CONST&PUSH 3)                      ; P
25    (LOAD&PUSH 5)
26    (LIST&PUSH 2)
28    (CONST&PUSH 4)                      ; D
29    (LOAD&PUSH 5)
30    (LIST&PUSH 2)
32    (LIST&PUSH 2)
34    (CONST&PUSH 5)                      ; PROG2
35    (CONST&PUSH 6)                      ; AND
36    (CONST&PUSH 3)                      ; P
37    (CONST&PUSH 7)                      ; PUSH-PW
38    (CONST&PUSH 4)                      ; D
39    (LOAD&PUSH 8)
40    (LIST&PUSH 3)
42    (LIST&PUSH 3)
44    (LOAD&PUSH 4)
45    (CONST&PUSH 6)                      ; AND
46    (CONST&PUSH 3)                      ; P
47    (CONST&PUSH 8)                      ; POP-PW
48    (CONST&PUSH 4)                      ; D
49    (LOAD&PUSH 10)
50    (LIST&PUSH 3)
52    (LIST&PUSH 3)
54    (LIST&PUSH 4)
56    (LIST 3)
58    (SKIP&RET 7)
60    L60
60    (LOAD&PUSH 2)
61    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
63    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TLIST-MAPC (DATUM-VAR &REST COMP) ...)-77|
(CONST 0) = TLIST-MAPC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TLIST-MAPC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TLIST-MAPC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TLIST-MAPC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TLIST-MAPC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TLIST-MAPC
10    (SKIP&RET 1)


Disassembly of function TLIST-MAPC
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = MAPC
(CONST 3) = FUNCTION
(CONST 4) = LAMBDA
(CONST 5) = (TLIST)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
25 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 47 L30)             ; <
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR&PUSH)
14    (CONST&PUSH 2)                      ; MAPC
15    (CONST&PUSH 3)                      ; FUNCTION
16    (CONST&PUSH 4)                      ; LAMBDA
17    (LOAD&PUSH 4)
18    (LIST&PUSH 1)
20    (LOAD 4)
21    (LIST*&PUSH 2)
23    (LIST&PUSH 2)
25    (CONST 5)                           ; (TLIST)
26    (LIST* 2)
28    (SKIP&RET 5)
30    L30
30    (LOAD&PUSH 2)
31    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
33    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO FIND-LEXP (EXP &OPTIONAL E-START ...) ...)-78|
(CONST 0) = FIND-LEXP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FIND-LEXP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; FIND-LEXP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FIND-LEXP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FIND-LEXP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; FIND-LEXP
10    (SKIP&RET 1)


Disassembly of function FIND-LEXP
(CONST 0) = 2
(CONST 1) = 5
(CONST 2) = SYSTEM::MACRO-CALL-ERROR
(CONST 3) = GET-LEXP
(CONST 4) = (NCONS T)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
33 byte-code instructions:
0     (CONST&PUSH 0)                      ; 2
1     (LOAD&PUSH 3)
2     (CALLS2&PUSH 71)                    ; LENGTH
4     (CONST&PUSH 1)                      ; 5
5     (CALLSR&JMPIFNOT 2 49 L37)          ; <=
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (LOAD 3)
13    (CDR)
14    (CDR)
15    (CAR&PUSH)
16    (LOAD 4)
17    (CDR)
18    (CDR)
19    (CDR)
20    (CAR&PUSH)
21    (LOAD&PUSH 5)
22    (CALLS1&PUSH 149)                   ; FIFTH
24    (CONST&PUSH 3)                      ; GET-LEXP
25    (LOAD&PUSH 4)
26    (LOAD&PUSH 4)
27    (LOAD&PUSH 4)
28    (LOAD&JMPIFNOT 4 L32)
31    (CONST 4)                           ; (NCONS T)
32    L32
32    (PUSH)
33    (LIST 5)
35    (SKIP&RET 7)
37    L37
37    (LOAD&PUSH 2)
38    (CALL1 2)                           ; SYSTEM::MACRO-CALL-ERROR
40    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TAY-ERR (MSG) ...)-79|
(CONST 0) = TAY-ERR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TAY-ERR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TAY-ERR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TAY-ERR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TAY-ERR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TAY-ERR
10    (SKIP&RET 1)


Disassembly of function TAY-ERR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = THROW
(CONST 3) = 'TAY-ERR
(CONST 4) = LIST
(CONST 5) = (LAST-EXP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
19 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; THROW
12    (CONST&PUSH 3)                      ; 'TAY-ERR
13    (CONST&PUSH 4)                      ; LIST
14    (LOAD&PUSH 3)
15    (CONST 5)                           ; (LAST-EXP)
16    (LIST*&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 4)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO ZERO-WARN (EXP) ...)-80|
(CONST 0) = ZERO-WARN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ZERO-WARN>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; ZERO-WARN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ZERO-WARN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ZERO-WARN>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; ZERO-WARN
10    (SKIP&RET 1)


Disassembly of function ZERO-WARN
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = MTELL
(CONST 3) = "~%~M~%Assumed to be zero in TAYLOR~%"
(CONST 4) = SYSTEM::BACKQUOTE
(CONST 5) = (MLABLE)
(CONST 6) = SYSTEM::UNQUOTE
(CONST 7) = LIST
(CONST 8) = '(MLABLE)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
28 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L34)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; MTELL
12    (CONST&PUSH 3)                      ; "~%~M~%Assumed to be zero in TAYLOR~%"
13    (CONST&PUSH 4)                      ; SYSTEM::BACKQUOTE
14    (CONST&PUSH 5)                      ; (MLABLE)
15    (NIL&PUSH)
16    (CONST&PUSH 6)                      ; SYSTEM::UNQUOTE
17    (LOAD&PUSH 6)
18    (LIST&PUSH 2)
20    (LIST&PUSH 3)
22    (CONST&PUSH 7)                      ; LIST
23    (CONST&PUSH 8)                      ; '(MLABLE)
24    (NIL&PUSH)
25    (LOAD&PUSH 7)
26    (LIST&PUSH 4)
28    (LIST&PUSH 3)
30    (LIST 3)
32    (SKIP&RET 4)
34    L34
34    (LOAD&PUSH 2)
35    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
37    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MERRCATCH (FORM) ...)-81|
(CONST 0) = MERRCATCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MERRCATCH>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MERRCATCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MERRCATCH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MERRCATCH>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MERRCATCH
10    (SKIP&RET 1)


Disassembly of function MERRCATCH
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CATCH
(CONST 3) = 'ERRORSW
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CATCH
12    (CONST&PUSH 3)                      ; 'ERRORSW
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EXP-DATUM-LT (FUN EXP-DATUM) ...)-82|
(CONST 0) = EXP-DATUM-LT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXP-DATUM-LT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXP-DATUM-LT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXP-DATUM-LT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXP-DATUM-LT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EXP-DATUM-LT
10    (SKIP&RET 1)


Disassembly of function EXP-DATUM-LT
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = IF
(CONST 3) = ATOM
(CONST 4) = CADR
(CONST 5) = FUNCALL
(CONST 6) = CDR
(CONST 7) = COPY
1 required argument
1 optional argument
No rest parameter
No keyword parameters
36 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L45)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; IF
16    (CONST&PUSH 3)                      ; ATOM
17    (CONST&PUSH 4)                      ; CADR
18    (LOAD&PUSH 3)
19    (LIST&PUSH 2)
21    (LIST&PUSH 2)
23    (CONST&PUSH 5)                      ; FUNCALL
24    (CONST&PUSH 4)                      ; CADR
25    (LOAD&PUSH 4)
26    (LIST&PUSH 2)
28    (CONST&PUSH 6)                      ; CDR
29    (LOAD&PUSH 6)
30    (LIST&PUSH 2)
32    (LIST&PUSH 3)
34    (CONST&PUSH 7)                      ; COPY
35    (CONST&PUSH 4)                      ; CADR
36    (LOAD&PUSH 5)
37    (LIST&PUSH 2)
39    (LIST&PUSH 2)
41    (LIST 4)
43    (SKIP&RET 5)
45    L45
45    (LOAD&PUSH 2)
46    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
48    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EXP-DATUM-LE (FUN EXP-DATUM) ...)-83|
(CONST 0) = EXP-DATUM-LE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXP-DATUM-LE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXP-DATUM-LE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXP-DATUM-LE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXP-DATUM-LE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EXP-DATUM-LE
10    (SKIP&RET 1)


Disassembly of function EXP-DATUM-LE
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = E
(CONST 3) = EXP-DATUM-LT
1 required argument
1 optional argument
No rest parameter
No keyword parameters
22 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L25)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; E
16    (CONST&PUSH 3)                      ; EXP-DATUM-LT
17    (LOAD&PUSH 3)
18    (LOAD&PUSH 3)
19    (LIST&PUSH 3)
21    (LIST 2)
23    (SKIP&RET 5)
25    L25
25    (LOAD&PUSH 2)
26    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
28    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EXP-FUN (EXP-DATUM) ...)-84|
(CONST 0) = EXP-FUN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXP-FUN>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXP-FUN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXP-FUN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXP-FUN>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EXP-FUN
10    (SKIP&RET 1)


Disassembly of function EXP-FUN
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = IF
(CONST 3) = ATOM
(CONST 4) = CAR
(CONST 5) = CAAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
25 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L31)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; IF
12    (CONST&PUSH 3)                      ; ATOM
13    (CONST&PUSH 4)                      ; CAR
14    (LOAD&PUSH 3)
15    (LIST&PUSH 2)
17    (LIST&PUSH 2)
19    (CONST&PUSH 4)                      ; CAR
20    (LOAD&PUSH 3)
21    (LIST&PUSH 2)
23    (CONST&PUSH 5)                      ; CAAR
24    (LOAD&PUSH 4)
25    (LIST&PUSH 2)
27    (LIST 4)
29    (SKIP&RET 4)
31    L31
31    (LOAD&PUSH 2)
32    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
34    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EXT-FUN (P) ...)-85|
(CONST 0) = EXT-FUN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXT-FUN>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXT-FUN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXT-FUN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXT-FUN>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EXT-FUN
10    (SKIP&RET 1)


Disassembly of function EXT-FUN
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADR
(CONST 3) = POLY-DATA
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADR
12    (CONST&PUSH 3)                      ; POLY-DATA
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EXT-ARGS (P) ...)-86|
(CONST 0) = EXT-ARGS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXT-ARGS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXT-ARGS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXT-ARGS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXT-ARGS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EXT-ARGS
10    (SKIP&RET 1)


Disassembly of function EXT-ARGS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADDR
(CONST 3) = POLY-DATA
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADDR
12    (CONST&PUSH 3)                      ; POLY-DATA
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EXTENDABLEP (P) ...)-87|
(CONST 0) = EXTENDABLEP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXTENDABLEP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXTENDABLEP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXTENDABLEP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXTENDABLEP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EXTENDABLEP
10    (SKIP&RET 1)


Disassembly of function EXTENDABLEP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = (LAMBDA (D) (OR (NULL (CAR D)) (CDR D)))
(CONST 3) = POLY-DATA
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; (LAMBDA (D) (OR (NULL #) (CDR D)))
12    (CONST&PUSH 3)                      ; POLY-DATA
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EXACTP (P) ...)-88|
(CONST 0) = EXACTP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXACTP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXACTP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXACTP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXACTP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EXACTP
10    (SKIP&RET 1)


Disassembly of function EXACTP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = NULL
(CONST 3) = TRUNC-LVL
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; NULL
12    (CONST&PUSH 3)                      ; TRUNC-LVL
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO NEXACTP (P) ...)-89|
(CONST 0) = NEXACTP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NEXACTP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; NEXACTP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NEXACTP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NEXACTP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; NEXACTP
10    (SKIP&RET 1)


Disassembly of function NEXACTP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = TRUNC-LVL
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; TRUNC-LVL
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO GET-PS-FORM (FUN) ...)-90|
(CONST 0) = GET-PS-FORM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-PS-FORM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-PS-FORM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-PS-FORM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-PS-FORM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GET-PS-FORM
10    (SKIP&RET 1)


Disassembly of function GET-PS-FORM
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = GET
(CONST 3) = ('SP2)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; GET
12    (LOAD&PUSH 1)
13    (CONST 3)                           ; ('SP2)
14    (LIST* 2)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TERM-DISREP (TERM P) ...)-91|
(CONST 0) = TERM-DISREP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TERM-DISREP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TERM-DISREP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TERM-DISREP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TERM-DISREP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TERM-DISREP
10    (SKIP&RET 1)


Disassembly of function TERM-DISREP
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = M*
(CONST 3) = SRDIS
(CONST 4) = C
(CONST 5) = M^
(CONST 6) = GET-INVERSE
(CONST 7) = GVAR
(CONST 8) = EDISREP
(CONST 9) = E
1 required argument
1 optional argument
No rest parameter
No keyword parameters
35 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L44)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; M*
16    (CONST&PUSH 3)                      ; SRDIS
17    (CONST&PUSH 4)                      ; C
18    (LOAD&PUSH 4)
19    (LIST&PUSH 2)
21    (LIST&PUSH 2)
23    (CONST&PUSH 5)                      ; M^
24    (CONST&PUSH 6)                      ; GET-INVERSE
25    (CONST&PUSH 7)                      ; GVAR
26    (LOAD&PUSH 5)
27    (LIST&PUSH 2)
29    (LIST&PUSH 2)
31    (CONST&PUSH 8)                      ; EDISREP
32    (CONST&PUSH 9)                      ; E
33    (LOAD&PUSH 7)
34    (LIST&PUSH 2)
36    (LIST&PUSH 2)
38    (LIST&PUSH 3)
40    (LIST 3)
42    (SKIP&RET 5)
44    L44
44    (LOAD&PUSH 2)
45    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
47    (SKIP&RET 3)


Disassembly of function #:|(COMMENT COEFFICIENT ARITHMETIC)-92|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO RCZERO NIL ...)-93|
(CONST 0) = RCZERO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCZERO>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCZERO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCZERO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCZERO>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCZERO
10    (SKIP&RET 1)


Disassembly of function RCZERO
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = '(0 . 1)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; '(0 . 1)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCONE NIL ...)-94|
(CONST 0) = RCONE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCONE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCONE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCONE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCONE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCONE
10    (SKIP&RET 1)


Disassembly of function RCONE
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = '(1 . 1)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; '(1 . 1)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCFONE NIL ...)-95|
(CONST 0) = RCFONE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCFONE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCFONE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCFONE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCFONE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCFONE
10    (SKIP&RET 1)


Disassembly of function RCFONE
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = '(1.0 . 1.0)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; '(1.0 . 1.0)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCTWO NIL ...)-96|
(CONST 0) = RCTWO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCTWO>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCTWO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCTWO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCTWO>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCTWO
10    (SKIP&RET 1)


Disassembly of function RCTWO
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = '(2 . 1)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; '(2 . 1)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCMONE NIL ...)-97|
(CONST 0) = RCMONE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCMONE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCMONE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCMONE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCMONE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCMONE
10    (SKIP&RET 1)


Disassembly of function RCMONE
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = '(-1 . 1)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; '(-1 . 1)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCZEROP (R) ...)-98|
(CONST 0) = RCZEROP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCZEROP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCZEROP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCZEROP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCZEROP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCZEROP
10    (SKIP&RET 1)


Disassembly of function RCZEROP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = SIGNP
(CONST 3) = E
(CONST 4) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; SIGNP
12    (CONST&PUSH 3)                      ; E
13    (CONST&PUSH 4)                      ; CAR
14    (LOAD&PUSH 3)
15    (LIST&PUSH 2)
17    (LIST 3)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCINTEGERP (C) ...)-99|
(CONST 0) = RCINTEGERP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCINTEGERP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCINTEGERP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCINTEGERP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCINTEGERP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCINTEGERP
10    (SKIP&RET 1)


Disassembly of function RCINTEGERP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = AND
(CONST 3) = INTEGERP
(CONST 4) = CAR
(CONST 5) = EQUAL
(CONST 6) = CDR
(CONST 7) = (1)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
25 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L31)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; AND
12    (CONST&PUSH 3)                      ; INTEGERP
13    (CONST&PUSH 4)                      ; CAR
14    (LOAD&PUSH 3)
15    (LIST&PUSH 2)
17    (LIST&PUSH 2)
19    (CONST&PUSH 5)                      ; EQUAL
20    (CONST&PUSH 6)                      ; CDR
21    (LOAD&PUSH 4)
22    (LIST&PUSH 2)
24    (CONST 7)                           ; (1)
25    (LIST*&PUSH 2)
27    (LIST 3)
29    (SKIP&RET 4)
31    L31
31    (LOAD&PUSH 2)
32    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
34    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCPINTEGERP (C) ...)-100|
(CONST 0) = RCPINTEGERP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCPINTEGERP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCPINTEGERP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCPINTEGERP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCPINTEGERP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCPINTEGERP
10    (SKIP&RET 1)


Disassembly of function RCPINTEGERP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = AND
(CONST 3) = RCINTEGERP
(CONST 4) = PLUSP
(CONST 5) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
22 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L27)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; AND
12    (CONST&PUSH 3)                      ; RCINTEGERP
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST&PUSH 4)                      ; PLUSP
17    (CONST&PUSH 5)                      ; CAR
18    (LOAD&PUSH 4)
19    (LIST&PUSH 2)
21    (LIST&PUSH 2)
23    (LIST 3)
25    (SKIP&RET 4)
27    L27
27    (LOAD&PUSH 2)
28    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
30    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCMINTEGERP (C) ...)-101|
(CONST 0) = RCMINTEGERP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCMINTEGERP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCMINTEGERP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCMINTEGERP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCMINTEGERP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCMINTEGERP
10    (SKIP&RET 1)


Disassembly of function RCMINTEGERP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = AND
(CONST 3) = RCINTEGERP
(CONST 4) = MINUSP
(CONST 5) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
22 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L27)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; AND
12    (CONST&PUSH 3)                      ; RCINTEGERP
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST&PUSH 4)                      ; MINUSP
17    (CONST&PUSH 5)                      ; CAR
18    (LOAD&PUSH 4)
19    (LIST&PUSH 2)
21    (LIST&PUSH 2)
23    (LIST 3)
25    (SKIP&RET 4)
27    L27
27    (LOAD&PUSH 2)
28    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
30    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCPLUS (X Y) ...)-102|
(CONST 0) = RCPLUS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCPLUS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCPLUS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCPLUS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCPLUS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCPLUS
10    (SKIP&RET 1)


Disassembly of function RCPLUS
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RATPLUS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; RATPLUS
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCDIFF (X Y) ...)-103|
(CONST 0) = RCDIFF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCDIFF>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCDIFF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCDIFF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCDIFF>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCDIFF
10    (SKIP&RET 1)


Disassembly of function RCDIFF
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RATDIF
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; RATDIF
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCMINUS (X) ...)-104|
(CONST 0) = RCMINUS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCMINUS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCMINUS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCMINUS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCMINUS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCMINUS
10    (SKIP&RET 1)


Disassembly of function RCMINUS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RATMINUS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; RATMINUS
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCTIMES (X Y) ...)-105|
(CONST 0) = RCTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCTIMES>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCTIMES>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCTIMES
10    (SKIP&RET 1)


Disassembly of function RCTIMES
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RATTIMES
(CONST 3) = (T)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L23)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; RATTIMES
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (CONST 3)                           ; (T)
19    (LIST* 3)
21    (SKIP&RET 5)
23    L23
23    (LOAD&PUSH 2)
24    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCQUO (X Y) ...)-106|
(CONST 0) = RCQUO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCQUO>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCQUO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCQUO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCQUO>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCQUO
10    (SKIP&RET 1)


Disassembly of function RCQUO
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RATQUOTIENT
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; RATQUOTIENT
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCDISREP (X) ...)-107|
(CONST 0) = RCDISREP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCDISREP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCDISREP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCDISREP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCDISREP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCDISREP
10    (SKIP&RET 1)


Disassembly of function RCDISREP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDISREP
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDISREP
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCDERIV (X V) ...)-108|
(CONST 0) = RCDERIV
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCDERIV>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCDERIV
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCDERIV
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCDERIV>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCDERIV
10    (SKIP&RET 1)


Disassembly of function RCDERIV
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RATDERIVATIVE
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; RATDERIVATIVE
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCDERIVX (X) ...)-109|
(CONST 0) = RCDERIVX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCDERIVX>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCDERIVX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCDERIVX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCDERIVX>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCDERIVX
10    (SKIP&RET 1)


Disassembly of function RCDERIVX
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RATDX1
(CONST 3) = CAR
(CONST 4) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L24)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; RATDX1
12    (CONST&PUSH 3)                      ; CAR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (CONST&PUSH 4)                      ; CDR
17    (LOAD&PUSH 3)
18    (LIST&PUSH 2)
20    (LIST 3)
22    (SKIP&RET 4)
24    L24
24    (LOAD&PUSH 2)
25    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
27    (SKIP&RET 3)


Disassembly of function #:|(COMMENT EXPONENT ARITHMETIC)-110|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO INFP (X) ...)-111|
(CONST 0) = INFP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INFP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; INFP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INFP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INFP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; INFP
10    (SKIP&RET 1)


Disassembly of function INFP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = NULL
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; NULL
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO INF NIL ...)-112|
(CONST 0) = INF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INF>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; INF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INF>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; INF
10    (SKIP&RET 1)


Disassembly of function INF
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (NIL)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO E- (E1 &OPTIONAL #) ...)-113|
(CONST 0) = E-
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE E->
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; E-
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; E-
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE E->
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; E-
10    (SKIP&RET 1)


Disassembly of function E-
(CONST 0) = 2
(CONST 1) = 3
(CONST 2) = SYSTEM::MACRO-CALL-ERROR
(CONST 3) = EDIFF
(CONST 4) = CONS
(CONST 5) = F-
(CONST 6) = CAR
(CONST 7) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
47 byte-code instructions:
0     (CONST&PUSH 0)                      ; 2
1     (LOAD&PUSH 3)
2     (CALLS2&PUSH 71)                    ; LENGTH
4     (CONST&PUSH 1)                      ; 3
5     (CALLSR&JMPIFNOT 2 49 L48)          ; <=
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (LOAD 3)
13    (CDR)
14    (CDR)
15    (JMPIFNOT L21)
17    (LOAD 3)
18    (CDR)
19    (CDR)
20    (CAR)
21    L21
21    (PUSH)
22    (LOAD 4)
23    (CDR)
24    (CDR)
25    (NOT)
26    (NOT)
27    (PUSH)
28    (LOAD&JMPIF 0 L53)
31    (CONST&PUSH 4)                      ; CONS
32    (CONST&PUSH 5)                      ; F-
33    (CONST&PUSH 6)                      ; CAR
34    (LOAD&PUSH 5)
35    (LIST&PUSH 2)
37    (LIST&PUSH 2)
39    (CONST&PUSH 7)                      ; CDR
40    (LOAD&PUSH 5)
41    (LIST 2)
43    L43
43    (PUSH)
44    (LIST 3)
46    (SKIP&RET 6)
48    L48
48    (LOAD&PUSH 2)
49    (CALL1 2)                           ; SYSTEM::MACRO-CALL-ERROR
51    (SKIP&RET 3)
53    L53
53    (CONST&PUSH 3)                      ; EDIFF
54    (LOAD&PUSH 3)
55    (LOAD 3)
56    (JMP L43)


Disassembly of function #:|(DEFMACRO E// (E1 &OPTIONAL #) ...)-114|
(CONST 0) = E//
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE E//>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; E//
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; E//
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE E//>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; E//
10    (SKIP&RET 1)


Disassembly of function E//
(CONST 0) = 2
(CONST 1) = 3
(CONST 2) = SYSTEM::MACRO-CALL-ERROR
(CONST 3) = EQUO
(CONST 4) = ERECIP
1 required argument
1 optional argument
No rest parameter
No keyword parameters
39 byte-code instructions:
0     (CONST&PUSH 0)                      ; 2
1     (LOAD&PUSH 3)
2     (CALLS2&PUSH 71)                    ; LENGTH
4     (CONST&PUSH 1)                      ; 3
5     (CALLSR&JMPIFNOT 2 49 L37)          ; <=
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (LOAD 3)
13    (CDR)
14    (CDR)
15    (JMPIFNOT L21)
17    (LOAD 3)
18    (CDR)
19    (CDR)
20    (CAR)
21    L21
21    (PUSH)
22    (LOAD 4)
23    (CDR)
24    (CDR)
25    (NOT)
26    (NOT)
27    (PUSH)
28    (LOAD&JMPIF 0 L42)
31    (CONST&PUSH 4)                      ; ERECIP
32    (LOAD&PUSH 3)
33    (LIST 2)
35    (SKIP&RET 6)
37    L37
37    (LOAD&PUSH 2)
38    (CALL1 2)                           ; SYSTEM::MACRO-CALL-ERROR
40    (SKIP&RET 3)
42    L42
42    (CONST&PUSH 3)                      ; EQUO
43    (LOAD&PUSH 3)
44    (LOAD&PUSH 3)
45    (LIST 3)
47    (SKIP&RET 6)


Disassembly of function #:|(DEFMACRO E>= (E1 E2) ...)-115|
(CONST 0) = E>=
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE E>=>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; E>=
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; E>=
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE E>=>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; E>=
10    (SKIP&RET 1)


Disassembly of function E>=
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = OR
(CONST 3) = E>
(CONST 4) = E=
1 required argument
1 optional argument
No rest parameter
No keyword parameters
26 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L30)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; OR
16    (CONST&PUSH 3)                      ; E>
17    (LOAD&PUSH 3)
18    (LOAD&PUSH 3)
19    (LIST&PUSH 3)
21    (CONST&PUSH 4)                      ; E=
22    (LOAD&PUSH 4)
23    (LOAD&PUSH 4)
24    (LIST&PUSH 3)
26    (LIST 3)
28    (SKIP&RET 5)
30    L30
30    (LOAD&PUSH 2)
31    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
33    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EZERO NIL ...)-116|
(CONST 0) = EZERO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EZERO>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EZERO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EZERO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EZERO>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EZERO
10    (SKIP&RET 1)


Disassembly of function EZERO
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = '(0 . 1)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; '(0 . 1)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EONE NIL ...)-117|
(CONST 0) = EONE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EONE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EONE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EONE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EONE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EONE
10    (SKIP&RET 1)


Disassembly of function EONE
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = '(1 . 1)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; '(1 . 1)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EZEROP (E) ...)-118|
(CONST 0) = EZEROP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EZEROP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EZEROP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EZEROP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EZEROP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EZEROP
10    (SKIP&RET 1)


Disassembly of function EZEROP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = ZEROP
(CONST 3) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L20)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; ZEROP
12    (CONST&PUSH 3)                      ; CAR
13    (LOAD&PUSH 2)
14    (LIST&PUSH 2)
16    (LIST 2)
18    (SKIP&RET 4)
20    L20
20    (LOAD&PUSH 2)
21    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
23    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RCINV (R) ...)-119|
(CONST 0) = RCINV
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RCINV>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RCINV
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RCINV
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RCINV>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RCINV
10    (SKIP&RET 1)


Disassembly of function RCINV
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = RATINVERT
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; RATINVERT
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Wrote file binary-clisp/mhayat.fas
Wrote file /cygdrive/e/temp/maxima/src/mhayat.lis