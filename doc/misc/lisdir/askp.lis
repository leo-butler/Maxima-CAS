Listing of compilation of file /cygdrive/e/temp/maxima/src/askp.lisp
on 2002-12-17 13:34:38 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/askp.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE ASKP)-2|
(CONST 0) = ASKP
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; ASKP
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL LIMITP INTEGER-INFO) (FIXNUM N) ...)-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $ASKINTEGER N ...)-4|
(CONST 0) = $ASKINTEGER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $ASKINTEGER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ASKINTEGER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $ASKINTEGER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $ASKINTEGER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $ASKINTEGER
8     (SKIP&RET 1)


Disassembly of function $ASKINTEGER
(CONST 0) = N
(CONST 1) = 2
(CONST 2) = 1
(CONST 3) = $ASKINTEGER
(CONST 4) = WNA-ERR
(CONST 5) = NARG1
(CONST 6) = $INTEGER
(CONST 7) = ASK-INTEGER
(CONST 8) = ($EVEN $ODD $INTEGER)
(CONST 9) = MEMQ
(CONST 10) = IMPROPER-ARG-ERR
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variable: (N)
46 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 71)                         ; LENGTH
3     (BIND 0)                            ; N
5     (GETVALUE&PUSH 0)                   ; N
7     (CONST&PUSH 1)                      ; 2
8     (CALLSR&JMPIF 1 48 L19)             ; >
12    (GETVALUE&PUSH 0)                   ; N
14    (CONST&PUSH 2)                      ; 1
15    (CALLSR&JMPIFNOT 1 47 L22)          ; <
19    L19
19    (CONST&PUSH 3)                      ; $ASKINTEGER
20    (CALL1 4)                           ; WNA-ERR
22    L22
22    (GETVALUE&PUSH 0)                   ; N
24    (CONST&PUSH 2)                      ; 1
25    (CALLSR&JMPIF 1 45 L50)             ; =
29    (CONST&PUSH 1)                      ; 2
30    (LOAD&PUSH 5)
31    (CALL2&PUSH 5)                      ; NARG1
33    (CONST&PUSH 8)                      ; ($EVEN $ODD $INTEGER)
34    (CALL2&JMPIFNOT 9 L57)              ; MEMQ
37    (CONST&PUSH 2)                      ; 1
38    (LOAD&PUSH 5)
39    (CALL2&PUSH 5)                      ; NARG1
41    (CONST&PUSH 1)                      ; 2
42    (LOAD&PUSH 6)
43    (CALL2 5)                           ; NARG1
45    L45
45    (PUSH)
46    (CALL2 7)                           ; ASK-INTEGER
48    (JMP L64)
50    L50
50    (CONST&PUSH 2)                      ; 1
51    (LOAD&PUSH 5)
52    (CALL2&PUSH 5)                      ; NARG1
54    (CONST 6)                           ; $INTEGER
55    (JMP L45)
57    L57
57    (CONST&PUSH 1)                      ; 2
58    (LOAD&PUSH 5)
59    (CALL2&PUSH 5)                      ; NARG1
61    (CONST&PUSH 3)                      ; $ASKINTEGER
62    (CALL2 10)                          ; IMPROPER-ARG-ERR
64    L64
64    (UNBIND1)
65    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN ASK-INTEGER (X EVEN-ODD) ...)-5|
(CONST 0) = ASK-INTEGER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ASK-INTEGER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ASK-INTEGER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ASK-INTEGER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ASK-INTEGER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ASK-INTEGER
8     (SKIP&RET 1)


Disassembly of function ASK-INTEGER
(CONST 0) = X
(CONST 1) = ((Z** . 0) (*Z* . 0))
(CONST 2) = SRATSIMP
(CONST 3) = $%PI
(CONST 4) = FREE
(CONST 5) = $%I
(CONST 6) = RATNUMP
(CONST 7) = $NO
(CONST 8) = $INTEGER
(CONST 9) = ASK-INTEGERP
(CONST 10) = ASK-EVOD
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
writes special variable : (X)
31 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (CONST&PUSH 1)                      ; ((Z** . 0) (*Z* . 0))
4     (GETVALUE&PUSH 0)                   ; X
6     (PUSH-UNBOUND 3)
8     (CALLS1&PUSH 178)                   ; SUBLIS
10    (CALL1 2)                           ; SRATSIMP
12    (SETVALUE 0)                        ; X
14    (PUSH)
15    (CONST&PUSH 3)                      ; $%PI
16    (CALL2&JMPIFNOT 4 L42)              ; FREE
19    (GETVALUE&PUSH 0)                   ; X
21    (CONST&PUSH 5)                      ; $%I
22    (CALL2&JMPIFNOT 4 L42)              ; FREE
25    (GETVALUE&PUSH 0)                   ; X
27    (CALL1&JMPIF 6 L42)                 ; RATNUMP
30    (LOAD&PUSH 4)
31    (JMPIFEQTO 8 L45)                   ; $INTEGER
34    (GETVALUE&PUSH 0)                   ; X
36    (LOAD&PUSH 5)
37    (CALL2 10)                          ; ASK-EVOD
39    L39
39    (UNBIND1)
40    (SKIP&RET 3)
42    L42
42    (CONST 7)                           ; $NO
43    (JMP L39)
45    L45
45    (GETVALUE&PUSH 0)                   ; X
47    (CALL1 9)                           ; ASK-INTEGERP
49    (JMP L39)


Disassembly of function #:|(DEFUN ASK-EVOD (X EVEN-ODD) ...)-6|
(CONST 0) = ASK-EVOD
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ASK-EVOD>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ASK-EVOD
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ASK-EVOD
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ASK-EVOD>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ASK-EVOD
8     (SKIP&RET 1)


Disassembly of function ASK-EVOD
(CONST 0) = X
(CONST 1) = MTIMESP
(CONST 2) = -1
(CONST 3) = MULN
(CONST 4) = EVOD
(CONST 5) = MAXIMA-INTEGERP
(CONST 6) = $YES
(CONST 7) = $NUMBERP
(CONST 8) = $NO
(CONST 9) = $EVEN
(CONST 10) = |even|
(CONST 11) = |odd|
(CONST 12) = |number|
(CONST 13) = ASK-PROP
(CONST 14) = ASK-DECLARE
(CONST 15) = $ODD
(CONST 16) = $UNKNOWN
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
writes special variable : (X)
86 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALL1&JMPIFNOT 1 L24)              ; MTIMESP
8     (GETVALUE 0)                        ; X
10    (CDR)
11    (CAR&PUSH)
12    (JMPIFNOTEQTO 2 L24)                ; -1
15    (GETVALUE 0)                        ; X
17    (CDR)
18    (CDR&PUSH)
19    (T&PUSH)
20    (CALL2 3)                           ; MULN
22    (SETVALUE 0)                        ; X
24    L24
24    (GETVALUE&PUSH 0)                   ; X
26    (CALL1&PUSH 4)                      ; EVOD
28    (GETVALUE&PUSH 0)                   ; X
30    (CALL1&PUSH 5)                      ; MAXIMA-INTEGERP
32    (LOAD&PUSH 1)
33    (LOAD&PUSH 7)
34    (CALLS2&JMPIF 2 L90)                ; EQUAL
37    (GETVALUE&PUSH 0)                   ; X
39    (CALL1&JMPIFNOT 7 L45)              ; $NUMBERP
42    (LOAD&JMPIFNOT 0 L95)
45    L45
45    (LOAD&JMPIFNOT 0 L51)
48    (LOAD&JMPIF 1 L100)
51    L51
51    (GETVALUE&PUSH 0)                   ; X
53    (LOAD&PUSH 7)
54    (JMPIFEQTO 9 L105)                  ; $EVEN
57    (CONST 11)                          ; |odd|
58    L58
58    (PUSH)
59    (CONST&PUSH 12)                     ; |number|
60    (CALL 3 13)                         ; ASK-PROP
63    (STORE 1)
64    (PUSH)
65    (JMPIFEQTO 6 L108)                  ; $YES
68    (LOAD&PUSH 1)
69    (JMPIFNOTEQTO 8 L123)               ; $NO
72    (LOAD&JMPIFNOT 0 L85)
75    (LOAD&PUSH 6)
76    (JMPIFEQTO 9 L118)                  ; $EVEN
79    (GETVALUE&PUSH 0)                   ; X
81    (CONST 9)                           ; $EVEN
82    L82
82    (PUSH)
83    (CALL2 14)                          ; ASK-DECLARE
85    L85
85    (CONST 8)                           ; $NO
86    (SKIP 2)
88    (JMP L126)
90    L90
90    (CONST 6)                           ; $YES
91    (SKIP 2)
93    (JMP L126)
95    L95
95    (CONST 8)                           ; $NO
96    (SKIP 2)
98    (JMP L126)
100   L100
100   (CONST 8)                           ; $NO
101   (SKIP 2)
103   (JMP L126)
105   L105
105   (CONST 10)                          ; |even|
106   (JMP L58)
108   L108
108   (GETVALUE&PUSH 0)                   ; X
110   (LOAD&PUSH 7)
111   (CALL2 14)                          ; ASK-DECLARE
113   (CONST 6)                           ; $YES
114   (SKIP 2)
116   (JMP L126)
118   L118
118   (GETVALUE&PUSH 0)                   ; X
120   (CONST 15)                          ; $ODD
121   (JMP L82)
123   L123
123   (CONST 16)                          ; $UNKNOWN
124   (SKIP 2)
126   L126
126   (UNBIND1)
127   (SKIP&RET 3)


Disassembly of function #:|(DEFUN ASK-INTEGERP (X) ...)-7|
(CONST 0) = ASK-INTEGERP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ASK-INTEGERP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ASK-INTEGERP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ASK-INTEGERP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ASK-INTEGERP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ASK-INTEGERP
8     (SKIP&RET 1)


Disassembly of function ASK-INTEGERP
(CONST 0) = X
(CONST 1) = MPLUSP
(CONST 2) = ADDN
(CONST 3) = MTIMESP
(CONST 4) = -1
(CONST 5) = MULN
(CONST 6) = MAXIMA-INTEGERP
(CONST 7) = INTEGERL
(CONST 8) = MEMALIKE
(CONST 9) = $YES
(CONST 10) = $NUMBERP
(CONST 11) = NONINTEGERP
(CONST 12) = NONINTEGERL
(CONST 13) = $NO
(CONST 14) = |integer|
(CONST 15) = ASK-PROP
(CONST 16) = $INTEGER
(CONST 17) = ASK-DECLARE
(CONST 18) = $NONINTEGER
(CONST 19) = $UNKNOWN
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (NONINTEGERL INTEGERL X)
writes special variable : (X)
77 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (NIL&PUSH)
4     (GETVALUE&PUSH 0)                   ; X
6     (CALL1&JMPIFNOT 1 L25)              ; MPLUSP
9     (GETVALUE 0)                        ; X
11    (CDR)
12    (CAR&PUSH)
13    (CALLS2&JMPIFNOT 12 L25)            ; INTEGERP
16    (GETVALUE 0)                        ; X
18    (CDR)
19    (CDR&PUSH)
20    (T&PUSH)
21    (CALL2 2)                           ; ADDN
23    (SETVALUE 0)                        ; X
25    L25
25    (GETVALUE&PUSH 0)                   ; X
27    (CALL1&JMPIFNOT 3 L46)              ; MTIMESP
30    (GETVALUE 0)                        ; X
32    (CDR)
33    (CAR&PUSH)
34    (JMPIFNOTEQTO 4 L46)                ; -1
37    (GETVALUE 0)                        ; X
39    (CDR)
40    (CDR&PUSH)
41    (T&PUSH)
42    (CALL2 5)                           ; MULN
44    (SETVALUE 0)                        ; X
46    L46
46    (GETVALUE&PUSH 0)                   ; X
48    (CALL1&JMPIF 6 L97)                 ; MAXIMA-INTEGERP
51    (GETVALUE&PUSH 0)                   ; X
53    (GETVALUE&PUSH 7)                   ; INTEGERL
55    (CALL2&JMPIF 8 L97)                 ; MEMALIKE
58    (GETVALUE&PUSH 0)                   ; X
60    (CALL1&JMPIF 10 L102)               ; $NUMBERP
63    (GETVALUE&PUSH 0)                   ; X
65    (CALL1&JMPIF 11 L102)               ; NONINTEGERP
68    (GETVALUE&PUSH 0)                   ; X
70    (GETVALUE&PUSH 12)                  ; NONINTEGERL
72    (CALL2&JMPIF 8 L102)                ; MEMALIKE
75    (GETVALUE&PUSH 0)                   ; X
77    (CONST&PUSH 14)                     ; |integer|
78    (NIL&PUSH)
79    (CALL 3 15)                         ; ASK-PROP
82    (STORE 0)
83    (PUSH)
84    (JMPIFEQTO 9 L107)                  ; $YES
87    (LOAD&PUSH 0)
88    (JMPIFEQTO 13 L117)                 ; $NO
91    (CONST 19)                          ; $UNKNOWN
92    (SKIP 1)
94    L94
94    (UNBIND1)
95    (SKIP&RET 2)
97    L97
97    (CONST 9)                           ; $YES
98    (SKIP 1)
100   (JMP L94)
102   L102
102   (CONST 13)                          ; $NO
103   (SKIP 1)
105   (JMP L94)
107   L107
107   (GETVALUE&PUSH 0)                   ; X
109   (CONST&PUSH 16)                     ; $INTEGER
110   (CALL2 17)                          ; ASK-DECLARE
112   (CONST 9)                           ; $YES
113   (SKIP 1)
115   (JMP L94)
117   L117
117   (GETVALUE&PUSH 0)                   ; X
119   (CONST&PUSH 18)                     ; $NONINTEGER
120   (CALL2 17)                          ; ASK-DECLARE
122   (CONST 13)                          ; $NO
123   (SKIP 1)
125   (JMP L94)


Disassembly of function #:|(DEFUN ASK-DECLARE (X PROPERTY) ...)-8|
(CONST 0) = ASK-DECLARE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ASK-DECLARE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ASK-DECLARE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ASK-DECLARE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ASK-DECLARE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ASK-DECLARE
8     (SKIP&RET 1)


Disassembly of function ASK-DECLARE
(CONST 0) = X
(CONST 1) = ($DECLARE)
(CONST 2) = MEVAL
(CONST 3) = LIMITP
(CONST 4) = ($KIND)
(CONST 5) = INTEGER-INFO
(CONST 6) = $INTEGER
(CONST 7) = INTEGERL
(CONST 8) = $NONINTEGER
(CONST 9) = NONINTEGERL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (NONINTEGERL INTEGERL INTEGER-INFO LIMITP X)
writes special variables : (NONINTEGERL INTEGERL INTEGER-INFO)
46 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFATOM L27)
7     (GETVALUE 3)                        ; LIMITP
9     (JMPIFNOT L15)
11    (LOAD&PUSH 4)
12    (JMPIFEQTO 6 L52)                   ; $INTEGER
15    L15
15    (GETVALUE 3)                        ; LIMITP
17    (JMPIFNOT L23)
19    (LOAD&PUSH 4)
20    (JMPIFEQTO 8 L61)                   ; $NONINTEGER
23    L23
23    (NIL)
24    L24
24    (UNBIND1)
25    (SKIP&RET 3)
27    L27
27    (CONST&PUSH 1)                      ; ($DECLARE)
28    (GETVALUE&PUSH 0)                   ; X
30    (LOAD&PUSH 6)
31    (LIST&PUSH 3)
33    (CALL1 2)                           ; MEVAL
35    (GETVALUE 3)                        ; LIMITP
37    (JMPIFNOT1 L24)
39    (CONST&PUSH 4)                      ; ($KIND)
40    (GETVALUE&PUSH 0)                   ; X
42    (LOAD&PUSH 6)
43    (LIST&PUSH 3)
45    (GETVALUE 5)                        ; INTEGER-INFO
47    (CONS)
48    (SETVALUE 5)                        ; INTEGER-INFO
50    (JMP L24)
52    L52
52    (GETVALUE&PUSH 0)                   ; X
54    (GETVALUE 7)                        ; INTEGERL
56    (CONS)
57    (SETVALUE 7)                        ; INTEGERL
59    (JMP L24)
61    L61
61    (GETVALUE&PUSH 0)                   ; X
63    (GETVALUE 9)                        ; NONINTEGERL
65    (CONS)
66    (SETVALUE 9)                        ; NONINTEGERL
68    (JMP L24)


Disassembly of function #:|(DEFUN ASK-PROP (OBJECT PROPERTY FUN-OR-NUMBER) ...)-9|
(CONST 0) = ASK-PROP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ASK-PROP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ASK-PROP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ASK-PROP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ASK-PROP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ASK-PROP
8     (SKIP&RET 1)


Disassembly of function ASK-PROP
(CONST 0) = | |
(CONST 1) = (MTEXT)
(CONST 2) = |Is  |
(CONST 3) = 1
(CONST 4) = GETCHARN
(CONST 5) = (#\a #\e #\i #\o #\u)
(CONST 6) = ZL-MEMBER
(CONST 7) = |  an |
(CONST 8) = |  a |
(CONST 9) = (?)
(CONST 10) = RETRIEVE
(CONST 11) = ($YES $Y |$y| |$n| $NO $N $UNKNOWN $UK)
(CONST 12) = MEMQ
(CONST 13) = "~%Acceptable answers are Yes, Y, No, N, Unknown, Uk~%"
(CONST 14) = MTELL
(CONST 15) = ($YES $Y |$y|)
(CONST 16) = $YES
(CONST 17) = ($NO $N |$n|)
(CONST 18) = $NO
(CONST 19) = ($UNKNOWN $UK)
(CONST 20) = $UNKNOWN
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
62 byte-code instructions:
0     (LOAD&JMPIFNOT 1 L8)
3     (CONST&PUSH 0)                      ; | |
4     (LOAD&PUSH 2)
5     (LIST 2)
7     (STORE 1)
8     L8
8     (PUSH-NIL 2)
10    (LOAD&JMPIFNOT 1 L32)
13    (JMP L68)
15    L15
15    (CONST 7)                           ; |  an |
16    (JMP L44)
18    L18
18    (CONST 16)                          ; $YES
19    (SKIP&RET 6)
21    L21
21    (CONST 18)                          ; $NO
22    (SKIP&RET 6)
24    L24
24    (CONST 20)                          ; $UNKNOWN
25    (SKIP&RET 6)
27    L27
27    (T&STORE 1)
29    (LOAD&JMPIF 1 L68)
32    L32
32    (CONST&PUSH 1)                      ; (MTEXT)
33    (CONST&PUSH 2)                      ; |Is  |
34    (LOAD&PUSH 7)
35    (LOAD&PUSH 7)
36    (CONST&PUSH 3)                      ; 1
37    (CALL2&PUSH 4)                      ; GETCHARN
39    (CONST&PUSH 5)                      ; (#\a #\e #\i #\o #\u)
40    (CALL2&JMPIF 6 L15)                 ; ZL-MEMBER
43    (CONST 8)                           ; |  a |
44    L44
44    (PUSH)
45    (LOAD&PUSH 8)
46    (LOAD&PUSH 8)
47    (CONST&PUSH 9)                      ; (?)
48    (CALLSR 2 34)                       ; APPEND
51    (LIST*&PUSH 5)
53    (NIL&PUSH)
54    (CALL2 10)                          ; RETRIEVE
56    (STORE 0)
57    (PUSH)
58    (CONST&PUSH 11)                     ; ($YES $Y |$y| |$n| $NO $N ...)
59    (CALL2&JMPIF 12 L27)                ; MEMQ
62    (CONST&PUSH 13)                     ; "~%Acceptable answers are Yes, Y, No, N, Unknown, Uk~%"
63    (CALL1 14)                          ; MTELL
65    (LOAD&JMPIFNOT 1 L32)
68    L68
68    (LOAD&PUSH 0)
69    (CONST&PUSH 15)                     ; ($YES $Y |$y|)
70    (CALL2&JMPIF 12 L18)                ; MEMQ
73    (LOAD&PUSH 0)
74    (CONST&PUSH 17)                     ; ($NO $N |$n|)
75    (CALL2&JMPIF 12 L21)                ; MEMQ
78    (LOAD&PUSH 0)
79    (CONST&PUSH 19)                     ; ($UNKNOWN $UK)
80    (CALL2&JMPIF 12 L24)                ; MEMQ
83    (NIL)
84    (SKIP&RET 6)


Disassembly of function #:|(DECLARE-TOP (NOTYPE N))-10|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Wrote file binary-clisp/askp.fas
Wrote file /cygdrive/e/temp/maxima/src/askp.lis