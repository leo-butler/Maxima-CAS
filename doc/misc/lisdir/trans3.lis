Listing of compilation of file /cygdrive/e/temp/maxima/src/trans3.lisp
on 2002-12-17 13:33:55 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/trans3.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE TRANS3)-2|
(CONST 0) = TRANS3
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRANS3
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(TRANSL-MODULE TRANS3)-3|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (*LEXPR SUM-VAR-SETS) (GENPREFIX TRANS3_))-4|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFTRFUN FREE-LISP-VARS (EXP &AUX PROP) ...)-5|
(CONST 0) = FREE-LISP-VARS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FREE-LISP-VARS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FREE-LISP-VARS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FREE-LISP-VARS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FREE-LISP-VARS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FREE-LISP-VARS
8     (SKIP&RET 1)


Disassembly of function FREE-LISP-VARS
(CONST 0) = EXP
(CONST 1) = FREE-LISP-VARS
(CONST 2) = FREE-LISP-VARS-MACRO
(CONST 3) = MACRO
(CONST 4) = (FSUBR FEXPR)
(CONST 5) = GETL
(CONST 6) = "environment may fail to be correct."
(CONST 7) = WARN-FEXPR
(CONST 8) = FREE-LISP-VARS-OF-ARGL
(CONST 9) = LAMBDA
(CONST 10) = SUM-VAR-SETS
(CONST 11) = "Bad lisp expression generated."
(CONST 12) = BARFO
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (EXP)
90 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; EXP
3     (NIL&PUSH)
4     (GETVALUE 0)                        ; EXP
6     (JMPIFATOM L70)
8     (GETVALUE 0)                        ; EXP
10    (CAR)
11    (JMPIFCONSP L129)
14    (GETVALUE 0)                        ; EXP
16    (CAR&PUSH)
17    (CONST&PUSH 1)                      ; FREE-LISP-VARS
18    (PUSH-UNBOUND 1)
20    (CALLS2&STORE 132 0)                ; GET
23    (JMPIF L87)
25    (GETVALUE 0)                        ; EXP
27    (CAR&PUSH)
28    (CONST&PUSH 2)                      ; FREE-LISP-VARS-MACRO
29    (PUSH-UNBOUND 1)
31    (CALLS2&STORE 132 0)                ; GET
34    (JMPIF L47)
36    (GETVALUE 0)                        ; EXP
38    (CAR&PUSH)
39    (CONST&PUSH 3)                      ; MACRO
40    (PUSH-UNBOUND 1)
42    (CALLS2&STORE 132 0)                ; GET
45    (JMPIFNOT L94)
47    L47
47    (PUSH)
48    (GETVALUE&PUSH 0)                   ; EXP
50    (FUNCALL&PUSH 1)
52    (JSR L0)
54    (JMP L139)
57    L57
57    (NIL)
58    (JMP L139)
61    L61
61    (GETVALUE&PUSH 0)                   ; EXP
63    (LIST&PUSH 1)
65    (LIST 1)
67    (JMP L139)
70    L70
70    (GETVALUE 0)                        ; EXP
72    (JMPIFNOT L57)
74    (GETVALUE&PUSH 0)                   ; EXP
76    (T)
77    (JMPIFEQ L57)
79    (GETVALUE&PUSH 0)                   ; EXP
81    (CALLS2&JMPIF 6 L61)                ; SYMBOLP
84    (NIL)
85    (JMP L139)
87    L87
87    (PUSH)
88    (GETVALUE&PUSH 0)                   ; EXP
90    (FUNCALL 1)
92    (JMP L139)
94    L94
94    (GETVALUE 0)                        ; EXP
96    (CAR&PUSH)
97    (CONST&PUSH 4)                      ; (FSUBR FEXPR)
98    (CALL2&JMPIFNOT 5 L107)             ; GETL
101   (GETVALUE 0)                        ; EXP
103   (CAR&PUSH)
104   (CONST&PUSH 6)                      ; "environment may fail to be correct."
105   (CALL2 7)                           ; WARN-FEXPR
107   L107
107   (GETVALUE 0)                        ; EXP
109   (CDR&PUSH)
110   (CALL1 8)                           ; FREE-LISP-VARS-OF-ARGL
112   (JMP L139)
114   L114
114   (GETVALUE 0)                        ; EXP
116   (CAR&PUSH)
117   (JSR&PUSH L0)
120   (GETVALUE 0)                        ; EXP
122   (CDR&PUSH)
123   (CALL1&PUSH 8)                      ; FREE-LISP-VARS-OF-ARGL
125   (CALL2 10)                          ; SUM-VAR-SETS
127   (JMP L139)
129   L129
129   (GETVALUE 0)                        ; EXP
131   (CAR)
132   (CAR&PUSH)
133   (JMPIFEQTO 9 L114)                  ; LAMBDA
136   (CONST&PUSH 11)                     ; "Bad lisp expression generated."
137   (CALL1 12)                          ; BARFO
139   L139
139   (SKIP 1)
141   (UNBIND1)
142   (SKIP&RET 2)


Disassembly of function #:|(DEFUN FREE-LISP-VARS-OF-ARGL (ARGL) ...)-6|
(CONST 0) = FREE-LISP-VARS-OF-ARGL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FREE-LISP-VARS-OF-ARGL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FREE-LISP-VARS-OF-ARGL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FREE-LISP-VARS-OF-ARGL
8     (SKIP&RET 1)


Disassembly of function FREE-LISP-VARS-OF-ARGL
(CONST 0) = FREE-LISP-VARS
(CONST 1) = UNION-VAR-SET
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; FREE-LISP-VARS
2     (LOAD&PUSH 2)
3     (CALLSR&PUSH 0 22)                  ; MAPCAR
6     (CALL1 1)                           ; UNION-VAR-SET
8     (SKIP&RET 2)


Disassembly of function #:|(DEFUN REDUCE-VAR-SET&OP (VAR-SET OP) ...)-7|
(CONST 0) = REDUCE-VAR-SET&OP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE REDUCE-VAR-SET&OP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; REDUCE-VAR-SET&OP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; REDUCE-VAR-SET&OP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE REDUCE-VAR-SET&OP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; REDUCE-VAR-SET&OP
8     (SKIP&RET 1)


Disassembly of function REDUCE-VAR-SET&OP
(CONST 0) = ASSQ
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
27 byte-code instructions:
0     (LOAD&PUSH 2)
1     (PUSH-NIL 3)
3     (LOAD&JMPIFNOT 3 L27)
6     L6
6     (LOAD&CAR&STORE 3 1)
9     (JMPIFNOT L22)
11    (LOAD&CAR&PUSH 1)
13    (LOAD&PUSH 3)
14    (CALL2 0)                           ; ASSQ
16    (STORE 0)
17    (JMPIF L30)
19    (LOAD&PUSH 1)
20    (LOAD&CONS&STORE 2)
22    L22
22    (LOAD&CDR&STORE 3)
24    (LOAD&JMPIF 3 L6)
27    L27
27    (LOAD 2)
28    (SKIP&RET 7)
30    L30
30    (PUSH)
31    (LOAD&PUSH 6)
32    (LOAD&CDR&PUSH 3)
34    (LOAD&CDR&PUSH 3)
36    (FUNCALL&PUSH 2)
38    (CALLS1 170)                        ; RPLACD
40    (JMP L22)


Disassembly of function #:|(DEFUN REDUCE-VAR-SET (VAR-SET) ...)-8|
(CONST 0) = REDUCE-VAR-SET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE REDUCE-VAR-SET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; REDUCE-VAR-SET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; REDUCE-VAR-SET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE REDUCE-VAR-SET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; REDUCE-VAR-SET
8     (SKIP&RET 1)


Disassembly of function REDUCE-VAR-SET
(CONST 0) = #<COMPILED-CLOSURE REDUCE-VAR-SET-1>
(CONST 1) = REDUCE-VAR-SET&OP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE REDUCE-VAR-SET-1>
2     (CALL2 1)                           ; REDUCE-VAR-SET&OP
4     (SKIP&RET 2)


Disassembly of function REDUCE-VAR-SET-1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD 2)
1     (JMPIF1 L6)
3     (LOAD 1)
4     (SKIP&RET 3)
6     L6
6     (SKIP&RET 3)


Disassembly of function #:|(DEFUN DIFFERENCE-VAR-SETS (S1 S2) ...)-9|
(CONST 0) = DIFFERENCE-VAR-SETS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DIFFERENCE-VAR-SETS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DIFFERENCE-VAR-SETS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DIFFERENCE-VAR-SETS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DIFFERENCE-VAR-SETS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DIFFERENCE-VAR-SETS
8     (SKIP&RET 1)


Disassembly of function DIFFERENCE-VAR-SETS
(CONST 0) = REDUCE-VAR-SET
(CONST 1) = ASSQ
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
19 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALL1 0)                           ; REDUCE-VAR-SET
3     (STORE 2)
4     (NIL&PUSH)
5     (LOAD&JMPIFNOT 3 L24)
8     L8
8     (LOAD 3)
9     (CAR)
10    (CAR&PUSH)
11    (LOAD&PUSH 3)
12    (CALL2&JMPIF 1 L19)                 ; ASSQ
15    (LOAD&CAR&PUSH 3)
17    (LOAD&CONS&STORE 0)
19    L19
19    (LOAD&CDR&STORE 3)
21    (LOAD&JMPIF 3 L8)
24    L24
24    (POP)
25    (SKIP&RET 3)


Disassembly of function #:|(DEFUN UNION-VAR-SET (SET-OF-VAR-SETS) ...)-10|
(CONST 0) = UNION-VAR-SET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNION-VAR-SET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNION-VAR-SET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNION-VAR-SET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNION-VAR-SET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNION-VAR-SET
8     (SKIP&RET 1)


Disassembly of function UNION-VAR-SET
(CONST 0) = #.#'APPEND
(CONST 1) = REDUCE-VAR-SET
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; #.#'APPEND
1     (LOAD 2)
2     (APPLY&PUSH 0)
4     (CALL1 1)                           ; REDUCE-VAR-SET
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN SUM-VAR-SETS (&REST L) ...)-11|
(CONST 0) = SUM-VAR-SETS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SUM-VAR-SETS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SUM-VAR-SETS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SUM-VAR-SETS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SUM-VAR-SETS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SUM-VAR-SETS
8     (SKIP&RET 1)


Disassembly of function SUM-VAR-SETS
(CONST 0) = L
(CONST 1) = #.#'APPEND
(CONST 2) = REDUCE-VAR-SET
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variable: (L)
8 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (CONST&PUSH 1)                      ; #.#'APPEND
4     (GETVALUE 0)                        ; L
6     (APPLY&PUSH 0)
8     (CALL1 2)                           ; REDUCE-VAR-SET
10    (UNBIND1)
11    (SKIP&RET 2)


Disassembly of function #:|(DEFUN MAKE-VAR-SET (VARS) ...)-12|
(CONST 0) = MAKE-VAR-SET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-VAR-SET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-VAR-SET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-VAR-SET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-VAR-SET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAKE-VAR-SET
8     (SKIP&RET 1)


Disassembly of function MAKE-VAR-SET
(CONST 0) = V
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (V)
36 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; V
3     (LOAD&PUSH 4)
4     (PUSH-NIL 3)
6     (LOAD&JMPIFNOT 3 L31)
9     L9
9     (LOAD&CAR&PUSH 3)
11    (LOAD 0)
12    (SETVALUE 0)                        ; V
14    (STORE 0)
15    (NIL)
16    (CONS)
17    (STORE 0)
18    (LOAD&JMPIF 1 L37)
21    (LOAD&PUSH 0)
22    (NIL)
23    (CONS)
24    (STORE 1)
25    (STORE 2)
26    L26
26    (LOAD&CDR&STORE 3)
28    (LOAD&JMPIF 3 L9)
31    L31
31    (LOAD 2)
32    (SKIP 4)
34    (UNBIND1)
35    (SKIP&RET 2)
37    L37
37    (PUSH)
38    (LOAD&PUSH 1)
39    (NIL)
40    (CONS)
41    (STORE 2)
42    (PUSH)
43    (CALLS1 171)                        ; SYSTEM::%RPLACD
45    (JMP L26)


Disassembly of function #:|(DEFUN-PROP (LAMBDA FREE-LISP-VARS) (FORM) ...)-13-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (LAMBDA FREE-LISP-VARS) (FORM) ...)-13-2-1|>
(CONST 1) = LAMBDA
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (LAMBDA FREE-LISP-VARS) (FORM) ...)-13-2-1|>
1     (CONST&PUSH 1)                      ; LAMBDA
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (LAMBDA FREE-LISP-VARS) (FORM) ...)-13-2-1|
(CONST 0) = FREE-LISP-VARS-OF-ARGL
(CONST 1) = MAKE-VAR-SET
(CONST 2) = DIFFERENCE-VAR-SETS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
31 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CDR&PUSH)
3     (CALL1&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
5     (LOAD 2)
6     (CDR)
7     (CAR)
8     (JMPIFNOT L26)
10    (LOAD 2)
11    (CDR)
12    (CAR)
13    (JMPIFATOM L29)
15    (LOAD 2)
16    (CDR)
17    (CAR)
18    L18
18    (PUSH)
19    (CALL1 1)                           ; MAKE-VAR-SET
21    L21
21    (PUSH)
22    (CALL2 2)                           ; DIFFERENCE-VAR-SETS
24    (SKIP&RET 2)
26    L26
26    (NIL)
27    (JMP L21)
29    L29
29    (LOAD 2)
30    (CDR)
31    (CAR&PUSH)
32    (LIST 1)
34    (JMP L18)


Disassembly of function #:|(DEFUN-PROP (PROG FREE-LISP-VARS) (FORM) ...)-14-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (PROG FREE-LISP-VARS) (FORM) ...)-14-2-1|>
(CONST 1) = PROG
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (PROG FREE-LISP-VARS) (FORM) ...)-14-2-1|>
1     (CONST&PUSH 1)                      ; PROG
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (PROG FREE-LISP-VARS) (FORM) ...)-14-2-1|
(CONST 0) = FREE-LISP-VARS
(CONST 1) = UNION-VAR-SET
(CONST 2) = MAKE-VAR-SET
(CONST 3) = DIFFERENCE-VAR-SETS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
32 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD 2)
2     (CDR)
3     (CDR&PUSH)
4     (JMP L24)
6     L6
6     (NIL)
7     (JMP L17)
9     L9
9     (LOAD&CAR&PUSH 0)
11    (LOAD 0)
12    (JMPIFATOM L6)
14    (LOAD&PUSH 0)
15    (CALL1 0)                           ; FREE-LISP-VARS
17    L17
17    (PUSH)
18    (LOAD&CONS&STORE 2)
20    (SKIP 1)
22    (LOAD&CDR&STORE 0)
24    L24
24    (LOAD&PUSH 0)
25    (CALLS1&JMPIFNOT 146 L9)            ; ENDP
28    (SKIP 1)
30    (LOAD&PUSH 0)
31    (CALLS1&STORE 164 0)                ; SYSTEM::LIST-NREVERSE
34    (CALL1&PUSH 1)                      ; UNION-VAR-SET
36    (LOAD 2)
37    (CDR)
38    (CAR&PUSH)
39    (CALL1&PUSH 2)                      ; MAKE-VAR-SET
41    (CALL2 3)                           ; DIFFERENCE-VAR-SETS
43    (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (GO FREE-LISP-VARS) (IGNOR) ...)-15-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (GO FREE-LISP-VARS) (IGNOR) ...)-15-2-1|>
(CONST 1) = GO
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (GO FREE-LISP-VARS) (IGNOR) ...)-15-2-1|>
1     (CONST&PUSH 1)                      ; GO
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (GO FREE-LISP-VARS) (IGNOR) ...)-15-2-1|
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (DO FREE-LISP-VARS) (FORM) ...)-16-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (DO FREE-LISP-VARS) (FORM) ...)-16-2-1|>
(CONST 1) = DO
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (DO FREE-LISP-VARS) (FORM) ...)-16-2-1|>
1     (CONST&PUSH 1)                      ; DO
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (DO FREE-LISP-VARS) (FORM) ...)-16-2-1|
(CONST 0) = FREE-LISP-VARS-OF-ARGL
(CONST 1) = UNION-VAR-SET
(CONST 2) = SUM-VAR-SETS
(CONST 3) = #.#'CAR
(CONST 4) = MAKE-VAR-SET
(CONST 5) = DIFFERENCE-VAR-SETS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
38 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CDR)
3     (CDR&PUSH)
4     (CALL1&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
6     (LOAD 2)
7     (CDR)
8     (CDR)
9     (CAR&PUSH)
10    (CALL1&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
12    (NIL&PUSH)
13    (LOAD 4)
14    (CDR)
15    (CAR&PUSH)
16    (JMP L30)
18    L18
18    (LOAD&CAR&PUSH 0)
20    (LOAD&CDR&PUSH 0)
22    (CALL1&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
24    (LOAD&CONS&STORE 2)
26    (SKIP 1)
28    (LOAD&CDR&STORE 0)
30    L30
30    (LOAD&PUSH 0)
31    (CALLS1&JMPIFNOT 146 L18)           ; ENDP
34    (SKIP 1)
36    (LOAD&PUSH 0)
37    (CALLS1&STORE 164 0)                ; SYSTEM::LIST-NREVERSE
40    (CALL1&PUSH 1)                      ; UNION-VAR-SET
42    (CALL&PUSH 3 2)                     ; SUM-VAR-SETS
45    (CONST&PUSH 3)                      ; #.#'CAR
46    (LOAD 3)
47    (CDR)
48    (CAR&PUSH)
49    (CALLSR&PUSH 0 22)                  ; MAPCAR
52    (CALL1&PUSH 4)                      ; MAKE-VAR-SET
54    (CALL2 5)                           ; DIFFERENCE-VAR-SETS
56    (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (COND FREE-LISP-VARS) (FORM) ...)-17-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (COND FREE-LISP-VARS) (FORM) ...)-17-2-1|>
(CONST 1) = COND
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (COND FREE-LISP-VARS) (FORM) ...)-17-2-1|>
1     (CONST&PUSH 1)                      ; COND
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (COND FREE-LISP-VARS) (FORM) ...)-17-2-1|
(CONST 0) = FREE-LISP-VARS-OF-ARGL
(CONST 1) = UNION-VAR-SET
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; FREE-LISP-VARS-OF-ARGL
2     (LOAD&CDR&PUSH 2)
4     (CALLSR&PUSH 0 22)                  ; MAPCAR
7     (CALL1 1)                           ; UNION-VAR-SET
9     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP 'FREE-LISP-VARS (IGNOR) ...)-18-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP 'FREE-LISP-VARS (IGNOR) ...)-18-2-1|>
(CONST 1) = QUOTE
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP 'FREE-LISP-VARS (IGNOR) ...)-18-2-1|>
1     (CONST&PUSH 1)                      ; QUOTE
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP 'FREE-LISP-VARS (IGNOR) ...)-18-2-1|
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP #'FREE-LISP-VARS (IGNOR) ...)-19-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP #'FREE-LISP-VARS (IGNOR) ...)-19-2-1|>
(CONST 1) = FUNCTION
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP #'FREE-LISP-VARS (IGNOR) ...)-19-2-1|>
1     (CONST&PUSH 1)                      ; FUNCTION
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP #'FREE-LISP-VARS (IGNOR) ...)-19-2-1|
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (SETQ FREE-LISP-VARS) (FORM) ...)-20-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (SETQ FREE-LISP-VARS) (FORM) ...)-20-2-1|>
(CONST 1) = SETQ
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (SETQ FREE-LISP-VARS) (FORM) ...)-20-2-1|>
1     (CONST&PUSH 1)                      ; SETQ
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (SETQ FREE-LISP-VARS) (FORM) ...)-20-2-1|
(CONST 0) = FREE-LISP-VARS
(CONST 1) = SUM-VAR-SETS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
23 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&CDR&PUSH 2)
3     (LOAD&JMPIFNOT 0 L30)
6     L6
6     (LOAD&CAR&PUSH 0)
8     (T)
9     (CONS&PUSH)
10    (LIST&PUSH 1)
12    (LOAD 1)
13    (CDR)
14    (CAR&PUSH)
15    (CALL1&PUSH 0)                      ; FREE-LISP-VARS
17    (LOAD&PUSH 3)
18    (CALL&PUSH 3 1)                     ; SUM-VAR-SETS
21    (LOAD 1)
22    (CDR)
23    (CDR)
24    (STORE 1)
25    (POP&STORE 1)
27    (LOAD&JMPIF 0 L6)
30    L30
30    (LOAD 1)
31    (SKIP&RET 4)


Disassembly of function #:|(DEFUN-PROP (AND FREE-LISP-VARS) (FORM) ...)-21-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (AND FREE-LISP-VARS) (FORM) ...)-21-2-1|>
(CONST 1) = AND
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (AND FREE-LISP-VARS) (FORM) ...)-21-2-1|>
1     (CONST&PUSH 1)                      ; AND
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (AND FREE-LISP-VARS) (FORM) ...)-21-2-1|
(CONST 0) = FREE-LISP-VARS-OF-ARGL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (LOAD&CDR&PUSH 1)
2     (CALL1 0)                           ; FREE-LISP-VARS-OF-ARGL
4     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (OR FREE-LISP-VARS) (FORM) ...)-22-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (OR FREE-LISP-VARS) (FORM) ...)-22-2-1|>
(CONST 1) = OR
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (OR FREE-LISP-VARS) (FORM) ...)-22-2-1|>
1     (CONST&PUSH 1)                      ; OR
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (OR FREE-LISP-VARS) (FORM) ...)-22-2-1|
(CONST 0) = FREE-LISP-VARS-OF-ARGL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (LOAD&CDR&PUSH 1)
2     (CALL1 0)                           ; FREE-LISP-VARS-OF-ARGL
4     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (COMMENT FREE-LISP-VARS) (IGNOR) ...)-23-2|
(CONST 0) = 
#<COMPILED-CLOSURE
  #:|(DEFUN-PROP (COMMENT FREE-LISP-VARS) (IGNOR) ...)-23-2-1|>
(CONST 1) = COMMENT
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE
  #:|(DEFUN-PROP (COMMENT FREE-LISP-VARS) (IGNOR) ...)-23-2-1|>
1     (CONST&PUSH 1)                      ; COMMENT
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (COMMENT FREE-LISP-VARS) (IGNOR) ...)-23-2-1|
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (DECLARE FREE-LISP-VARS) (IGNOR) ...)-24-2|
(CONST 0) = 
#<COMPILED-CLOSURE
  #:|(DEFUN-PROP (DECLARE FREE-LISP-VARS) (IGNOR) ...)-24-2-1|>
(CONST 1) = DECLARE
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE
  #:|(DEFUN-PROP (DECLARE FREE-LISP-VARS) (IGNOR) ...)-24-2-1|>
1     (CONST&PUSH 1)                      ; DECLARE
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (DECLARE FREE-LISP-VARS) (IGNOR) ...)-24-2-1|
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 2)


Disassembly of function #:|(DEFPROP $PIECE T ...)-25|
(CONST 0) = $PIECE
(CONST 1) = SORT-OF-LEXICAL
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; $PIECE
1     (CONST&PUSH 1)                      ; SORT-OF-LEXICAL
2     (T&PUSH)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFUN-PROP (TRD-MSYMEVAL FREE-LISP-VARS) (FORM) ...)-26-2|
(CONST 0) = 
#<COMPILED-CLOSURE
  #:|(DEFUN-PROP (TRD-MSYMEVAL FREE-LISP-VARS) (FORM) ...)-26-2-1|>
(CONST 1) = TRD-MSYMEVAL
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE
  #:|(DEFUN-PROP (TRD-MSYMEVAL FREE-LISP-VARS) (FORM) ...)-26-2-1|>
1     (CONST&PUSH 1)                      ; TRD-MSYMEVAL
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (TRD-MSYMEVAL FREE-LISP-VARS) (FORM) ...)-26-2-1|
(CONST 0) = SORT-OF-LEXICAL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CAR&PUSH)
3     (CONST&PUSH 0)                      ; SORT-OF-LEXICAL
4     (PUSH-UNBOUND 1)
6     (CALLS2 132)                        ; GET
8     (JMPIFNOT1 L19)
10    (LOAD 1)
11    (CDR)
12    (CAR&PUSH)
13    (LIST&PUSH 1)
15    (LIST 1)
17    (SKIP&RET 2)
19    L19
19    (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (MFUNCTION-CALL FREE-LISP-VARS) (FORM) ...)-27-2|
(CONST 0) = 
#<COMPILED-CLOSURE
  #:|(DEFUN-PROP (MFUNCTION-CALL FREE-LISP-VARS) (FORM) ...)-27-2-1|>
(CONST 1) = MFUNCTION-CALL
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE
  #:|(DEFUN-PROP (MFUNCTION-CALL FREE-LISP-VARS) (FORM) ...)-27-2-1|>
1     (CONST&PUSH 1)                      ; MFUNCTION-CALL
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (MFUNCTION-CALL FREE-LISP-VARS) (FORM) ...)-27-2-1|
(CONST 0) = FREE-LISP-VARS-OF-ARGL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CDR&PUSH)
3     (CALL1 0)                           ; FREE-LISP-VARS-OF-ARGL
5     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (FUNGEN&ENV-FOR-MEVAL FREE-LISP-VARS) (FORM) ...)-28-2|
(CONST 0) = 
#<COMPILED-CLOSURE
  #:|(DEFUN-PROP (FUNGEN&ENV-FOR-MEVAL FREE-LISP-VARS) (FORM) ...)-28-2-1|>
(CONST 1) = FUNGEN&ENV-FOR-MEVAL
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE
  #:|(DEFUN-PROP (FUNGEN&ENV-FOR-MEVAL FREE-LISP-VARS) (FORM) ...)-28-2-1|>
1     (CONST&PUSH 1)                      ; FUNGEN&ENV-FOR-MEVAL
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (FUNGEN&ENV-FOR-MEVAL FREE-LISP-VARS) (FORM) ...)-28-2-1|
(CONST 0) = FREE-LISP-VARS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CDR)
3     (CDR)
4     (CAR&PUSH)
5     (CALL1 0)                           ; FREE-LISP-VARS
7     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (FUNGEN&ENV-FOR-MEVALSUMARG FREE-LISP-VARS) (FORM) ...)-29-2|
(CONST 0) = 
#<COMPILED-CLOSURE
  #:|(DEFUN-PROP (FUNGEN&ENV-FOR-MEVALSUMARG FREE-LISP-VARS) (FORM) ...)-29-2-1|>
(CONST 1) = FUNGEN&ENV-FOR-MEVALSUMARG
(CONST 2) = FREE-LISP-VARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE
  #:|(DEFUN-PROP (FUNGEN&ENV-FOR-MEVALSUMARG FREE-LISP-VARS) (FORM) ...)-29-2-1|>
1     (CONST&PUSH 1)                      ; FUNGEN&ENV-FOR-MEVALSUMARG
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (FUNGEN&ENV-FOR-MEVALSUMARG FREE-LISP-VARS) (FORM) ...)-29-2-1|
(CONST 0) = FREE-LISP-VARS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CDR)
3     (CAR&PUSH)
4     (CALL1 0)                           ; FREE-LISP-VARS
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN FREE-LISP-VARS-M-TLAMBDA (FORM) ...)-30|
(CONST 0) = FREE-LISP-VARS-M-TLAMBDA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FREE-LISP-VARS-M-TLAMBDA>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FREE-LISP-VARS-M-TLAMBDA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FREE-LISP-VARS-M-TLAMBDA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FREE-LISP-VARS-M-TLAMBDA>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FREE-LISP-VARS-M-TLAMBDA
8     (SKIP&RET 1)


Disassembly of function FREE-LISP-VARS-M-TLAMBDA
(CONST 0) = FREE-LISP-VARS-OF-ARGL
(CONST 1) = DIFFERENCE-VAR-SETS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CDR&PUSH)
3     (CALL1&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
5     (LOAD 2)
6     (CDR)
7     (CAR&PUSH)
8     (CALL1&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
10    (CALL2 1)                           ; DIFFERENCE-VAR-SETS
12    (SKIP&RET 2)


Disassembly of function #:|(MAPC #'(LAMBDA # #) '(M-TLAMBDA M-TLAMBDA&))-31|
(CONST 0) = (M-TLAMBDA M-TLAMBDA&)
(CONST 1) = FREE-LISP-VARS-M-TLAMBDA
(CONST 2) = FREE-LISP-VARS
(CONST 3) = PUTPROP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (CONST&PUSH 0)                      ; (M-TLAMBDA M-TLAMBDA&)
1     (JMP L15)
3     L3
3     (LOAD&CAR&PUSH 0)
5     (LOAD&PUSH 0)
6     (CONST&PUSH 1)                      ; FREE-LISP-VARS-M-TLAMBDA
7     (CONST&PUSH 2)                      ; FREE-LISP-VARS
8     (CALL 3 3)                          ; PUTPROP
11    (SKIP 1)
13    (LOAD&CDR&STORE 0)
15    L15
15    (LOAD&PUSH 0)
16    (CALLS1&JMPIFNOT 146 L3)            ; ENDP
19    (SKIP 1)
21    (CONST 0)                           ; (M-TLAMBDA M-TLAMBDA&)
22    (SKIP&RET 1)


Disassembly of function #:|(DEFUN FREE-LISP-VARS-M-TLAMBDA&ENV (FORM) ...)-32|
(CONST 0) = FREE-LISP-VARS-M-TLAMBDA&ENV
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FREE-LISP-VARS-M-TLAMBDA&ENV>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FREE-LISP-VARS-M-TLAMBDA&ENV
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FREE-LISP-VARS-M-TLAMBDA&ENV
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FREE-LISP-VARS-M-TLAMBDA&ENV>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FREE-LISP-VARS-M-TLAMBDA&ENV
8     (SKIP&RET 1)


Disassembly of function FREE-LISP-VARS-M-TLAMBDA&ENV
(CONST 0) = FREE-LISP-VARS-OF-ARGL
(CONST 1) = DIFFERENCE-VAR-SETS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CDR&PUSH)
3     (CALL1&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
5     (LOAD 2)
6     (CDR)
7     (CAR)
8     (CAR&PUSH)
9     (CALL1&PUSH 0)                      ; FREE-LISP-VARS-OF-ARGL
11    (CALL2 1)                           ; DIFFERENCE-VAR-SETS
13    (SKIP&RET 2)


Disassembly of function #:|(DEFPROP M-TLAMBDA&ENV FREE-LISP-VARS-M-TLAMBDA&ENV ...)-33|
(CONST 0) = M-TLAMBDA&ENV
(CONST 1) = FREE-LISP-VARS
(CONST 2) = FREE-LISP-VARS-M-TLAMBDA&ENV
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; M-TLAMBDA&ENV
1     (CONST&PUSH 1)                      ; FREE-LISP-VARS
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS-M-TLAMBDA&ENV
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFPROP M-TLAMBDA&ENV& FREE-LISP-VARS-M-TLAMBDA&ENV ...)-34|
(CONST 0) = M-TLAMBDA&ENV&
(CONST 1) = FREE-LISP-VARS
(CONST 2) = FREE-LISP-VARS-M-TLAMBDA&ENV
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; M-TLAMBDA&ENV&
1     (CONST&PUSH 1)                      ; FREE-LISP-VARS
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS-M-TLAMBDA&ENV
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFUN-PROP (M-TLAMBDA-I FREE-LISP-VARS-MACRO) (FORM) ...)-35-2|
(CONST 0) = 
#<COMPILED-CLOSURE
  #:|(DEFUN-PROP (M-TLAMBDA-I FREE-LISP-VARS-MACRO) (FORM) ...)-35-2-1|>
(CONST 1) = M-TLAMBDA-I
(CONST 2) = FREE-LISP-VARS-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE
  #:|(DEFUN-PROP (M-TLAMBDA-I FREE-LISP-VARS-MACRO) (FORM) ...)-35-2-1|>
1     (CONST&PUSH 1)                      ; M-TLAMBDA-I
2     (CONST&PUSH 2)                      ; FREE-LISP-VARS-MACRO
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (M-TLAMBDA-I FREE-LISP-VARS-MACRO) (FORM) ...)-35-2-1|
(CONST 0) = LAMBDA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LAMBDA
1     (LOAD 2)
2     (CDR)
3     (CDR)
4     (CDR)
5     (CONS)
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN TBOUND-FREE-VARS (FREE-VARL) ...)-36|
(CONST 0) = TBOUND-FREE-VARS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TBOUND-FREE-VARS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TBOUND-FREE-VARS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TBOUND-FREE-VARS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TBOUND-FREE-VARS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TBOUND-FREE-VARS
8     (SKIP&RET 1)


Disassembly of function TBOUND-FREE-VARS
(CONST 0) = V
(CONST 1) = TBOUNDP
(CONST 2) = SPECIAL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (V)
32 byte-code instructions:
0     (PUSH-NIL 2)
2     (LOAD&JMPIFNOT 3 L46)
5     L5
5     (LOAD&CAR&PUSH 3)
7     (LOAD&CDR&STORE 4)
9     (POP)
10    (BIND 0)                            ; V
12    (GETVALUE 0)                        ; V
14    (CAR&PUSH)
15    (CALL1&JMPIFNOT 1 L42)              ; TBOUNDP
18    (GETVALUE 0)                        ; V
20    (CAR&PUSH)
21    (CONST&PUSH 2)                      ; SPECIAL
22    (PUSH-UNBOUND 1)
24    (CALLS2&JMPIF 132 L42)              ; GET
27    (GETVALUE 0)                        ; V
29    (CAR&PUSH)
30    (LOAD&CONS&STORE 4)
32    (GETVALUE 0)                        ; V
34    (CDR)
35    (JMPIFNOT L42)
37    (GETVALUE 0)                        ; V
39    (CAR&PUSH)
40    (LOAD&CONS&STORE 3)
42    L42
42    (UNBIND1)
43    (LOAD&JMPIF 3 L5)
46    L46
46    (LOAD&PUSH 1)
47    (LOAD&PUSH 1)
48    (LIST 2)
50    (SKIP&RET 4)


Disassembly of function #:|(DEFUN SIDE-EFFECT-FREE-CHECK (VARL FORM) ...)-37|
(CONST 0) = SIDE-EFFECT-FREE-CHECK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SIDE-EFFECT-FREE-CHECK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SIDE-EFFECT-FREE-CHECK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SIDE-EFFECT-FREE-CHECK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SIDE-EFFECT-FREE-CHECK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SIDE-EFFECT-FREE-CHECK
8     (SKIP&RET 1)


Disassembly of function SIDE-EFFECT-FREE-CHECK
(CONST 0) = "This form:"
(CONST 1) = "has side effects on these variables:"
(CONST 2) = (MLIST)
(CONST 3) = "which cannot be supported in the translated code."
(CONST 4) = "(at this time)"
(CONST 5) = TR-TELL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&JMPIFNOT 2 L17)
3     (CONST&PUSH 0)                      ; "This form:"
4     (LOAD&PUSH 2)
5     (CONST&PUSH 1)                      ; "has side effects on these variables:"
6     (CONST&PUSH 2)                      ; (MLIST)
7     (LOAD 6)
8     (CONS&PUSH)
9     (CONST&PUSH 3)                      ; "which cannot be supported in the translated code."
10    (CONST&PUSH 4)                      ; "(at this time)"
11    (CALL 6 5)                          ; TR-TELL
14    (NIL)
15    (SKIP&RET 3)
17    L17
17    (T)
18    (SKIP&RET 3)


Disassembly of function #:|(DEF%TR $LAMBDA_I (FORM) ...)-38-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR $LAMBDA_I (FORM) ...)-38-2-1|>
(CONST 1) = $LAMBDA_I
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR $LAMBDA_I (FORM) ...)-38-2-1|>
1     (CONST&PUSH 1)                      ; $LAMBDA_I
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $LAMBDA_I (FORM) ...)-38-2-1|
(CONST 0) = GEN-TR-LAMBDA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1 0)                           ; GEN-TR-LAMBDA
3     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR LAMBDA-I (FORM) ...)-39-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR LAMBDA-I (FORM) ...)-39-2-1|>
(CONST 1) = LAMBDA-I
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR LAMBDA-I (FORM) ...)-39-2-1|>
1     (CONST&PUSH 1)                      ; LAMBDA-I
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR LAMBDA-I (FORM) ...)-39-2-1|
(CONST 0) = GEN-TR-LAMBDA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1 0)                           ; GEN-TR-LAMBDA
3     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR LAMBDA (FORM) ...)-40-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR LAMBDA (FORM) ...)-40-2-1|>
(CONST 1) = LAMBDA
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR LAMBDA (FORM) ...)-40-2-1|>
1     (CONST&PUSH 1)                      ; LAMBDA
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR LAMBDA (FORM) ...)-40-2-1|
(CONST 0) = GEN-TR-LAMBDA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1 0)                           ; GEN-TR-LAMBDA
3     (SKIP&RET 2)


Disassembly of function #:|(DEFUN GEN-TR-LAMBDA (FORM &AUX ARG-INFO ...) ...)-41|
(CONST 0) = GEN-TR-LAMBDA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GEN-TR-LAMBDA>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GEN-TR-LAMBDA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GEN-TR-LAMBDA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GEN-TR-LAMBDA>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GEN-TR-LAMBDA
8     (SKIP&RET 1)


Disassembly of function GEN-TR-LAMBDA
(CONST 0) = V
(CONST 1) = MLIST
(CONST 2) = *BAD*
(CONST 3) = MEMQ
(CONST 4) = " bad LAMBDA list. -TRANSLATE"
(CONST 5) = TR-TELL
(CONST 6) = TR-ABORT
(CONST 7) = (LAMBDA)
(CONST 8) = (MLIST)
(CONST 9) = TR-LAMBDA
(CONST 10) = FREE-LISP-VARS
(CONST 11) = TBOUND-FREE-VARS
(CONST 12) = $ANY
(CONST 13) = M-TLAMBDA
(CONST 14) = M-TLAMBDA&
(CONST 15) = LAMBDA-I
(CONST 16) = M-TLAMBDA-I
(CONST 17) = M-TLAMBDA&ENV
(CONST 18) = M-TLAMBDA&ENV&
(CONST 19) = WARN-MEVAL
(CONST 20) = SIDE-EFFECT-FREE-CHECK
(CONST 21) = MEVAL
(CONST 22) = QUOTE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (V)
writes special variable : (TR-ABORT)
182 byte-code instructions:
0     (PUSH-NIL 5)
2     (LOAD 6)
3     (CDR)
4     (CAR)
5     (CDR&PUSH)
6     (JMP L57)
8     L8
8     (NIL)
9     (JMP L49)
11    L11
11    (T)
12    (JMP L49)
14    L14
14    (LOAD 5)
15    (CDR)
16    (CAR&PUSH)
17    (CONST&PUSH 4)                      ; " bad LAMBDA list. -TRANSLATE"
18    (CALL2 5)                           ; TR-TELL
20    (T)
21    (SETVALUE 6)                        ; TR-ABORT
23    (JMP L160)
26    L26
26    (LOAD&CAR&PUSH 0)
28    (LOAD 0)
29    (BIND 0)                            ; V
31    (GETVALUE 0)                        ; V
33    (JMPIFATOM L8)
35    (GETVALUE 0)                        ; V
37    (CAR)
38    (CAR&PUSH)
39    (JMPIFNOTEQTO 1 L48)                ; MLIST
42    (GETVALUE 0)                        ; V
44    (CDR)
45    (CAR)
46    (JMPIFATOM L11)
48    L48
48    (CONST 2)                           ; *BAD*
49    L49
49    (UNBIND1)
50    (PUSH)
51    (LOAD&CONS&STORE 2)
53    (SKIP 1)
55    (LOAD&CDR&STORE 0)
57    L57
57    (LOAD&PUSH 0)
58    (CALLS1&JMPIFNOT 146 L26)           ; ENDP
61    (SKIP 1)
63    (LOAD&PUSH 0)
64    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
66    (SKIP 1)
68    (STORE 3)
69    (CONST&PUSH 2)                      ; *BAD*
70    (LOAD&PUSH 4)
71    (CALL2&JMPIF 3 L14)                 ; MEMQ
74    (T&PUSH)
75    (LOAD&PUSH 4)
76    (CALL2&JMPIFNOT 3 L87)              ; MEMQ
79    (T&PUSH)
80    (LOAD&PUSH 4)
81    (CALL2 3)                           ; MEMQ
83    (CDR)
84    (JMPIF L14)
87    L87
87    (T&PUSH)
88    (LOAD&PUSH 4)
89    (CALL2 3)                           ; MEMQ
91    (STORE 3)
92    (CONST&PUSH 7)                      ; (LAMBDA)
93    (CONST&PUSH 8)                      ; (MLIST)
94    (NIL&PUSH)
95    (LOAD 8)
96    (CDR)
97    (CAR)
98    (CDR&PUSH)
99    (JMP L130)
101   L101
101   (GETVALUE 0)                        ; V
103   (JMP L122)
105   L105
105   (CONST&PUSH 12)                     ; $ANY
106   (CONST 13)                          ; M-TLAMBDA
107   (JMP L169)
109   L109
109   (LOAD&CAR&PUSH 0)
111   (LOAD 0)
112   (BIND 0)                            ; V
114   (GETVALUE 0)                        ; V
116   (JMPIFATOM L101)
118   (GETVALUE 0)                        ; V
120   (CDR)
121   (CAR)
122   L122
122   (UNBIND1)
123   (PUSH)
124   (LOAD&CONS&STORE 2)
126   (SKIP 1)
128   (LOAD&CDR&STORE 0)
130   L130
130   (LOAD&PUSH 0)
131   (CALLS1&JMPIFNOT 146 L109)          ; ENDP
134   (SKIP 1)
136   (LOAD&PUSH 0)
137   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
139   (SKIP 1)
141   (CONS&PUSH)
142   (LOAD 7)
143   (CDR)
144   (CDR)
145   (LIST*&PUSH 2)
147   (CALL1 9)                           ; TR-LAMBDA
149   (STORE 0)
150   (CAR)
151   (STORE 2)
152   (LOAD&CDR&STORE 0)
154   (PUSH)
155   (CALL1&PUSH 10)                     ; FREE-LISP-VARS
157   (CALL1 11)                          ; TBOUND-FREE-VARS
159   (STORE 1)
160   L160
160   (LOAD 1)
161   (CAR)
162   (JMPIF L216)
164   (LOAD&JMPIFNOT 3 L105)
167   (CONST&PUSH 12)                     ; $ANY
168   (CONST 14)                          ; M-TLAMBDA&
169   L169
169   (PUSH)
170   (LOAD 2)
171   (CDR)
172   (LIST* 2)
174   (SKIP&RET 6)
176   L176
176   (CONST&PUSH 12)                     ; $ANY
177   (CONST&PUSH 16)                     ; M-TLAMBDA-I
178   (LOAD&PUSH 4)
179   (LOAD&CAR&PUSH 4)
181   (LOAD 4)
182   (CDR)
183   (LIST* 4)
185   (SKIP&RET 6)
187   L187
187   (CONST 17)                          ; M-TLAMBDA&ENV
188   (JMP L201)
190   L190
190   (LOAD 5)
191   (CAR)
192   (CAR&PUSH)
193   (JMPIFEQTO 15 L176)                 ; LAMBDA-I
196   (CONST&PUSH 12)                     ; $ANY
197   (LOAD&JMPIFNOT 4 L187)
200   (CONST 18)                          ; M-TLAMBDA&ENV&
201   L201
201   (PUSH)
202   (LOAD 2)
203   (CDR)
204   (CAR&PUSH)
205   (LOAD&CAR&PUSH 4)
207   (LIST&PUSH 2)
209   (LOAD 3)
210   (CDR)
211   (CDR)
212   (LIST* 3)
214   (SKIP&RET 6)
216   L216
216   (LOAD 1)
217   (CDR)
218   (CAR)
219   (JMPIFNOT L190)
221   (LOAD&PUSH 5)
222   (CALL1 19)                          ; WARN-MEVAL
224   (LOAD 1)
225   (CDR)
226   (CAR&PUSH)
227   (LOAD&PUSH 6)
228   (CALL2 20)                          ; SIDE-EFFECT-FREE-CHECK
230   (CONST&PUSH 12)                     ; $ANY
231   (CONST&PUSH 21)                     ; MEVAL
232   (CONST&PUSH 22)                     ; QUOTE
233   (LOAD&PUSH 8)
234   (LIST&PUSH 2)
236   (LIST 3)
238   (SKIP&RET 6)


Wrote file binary-clisp/trans3.fas
Wrote file /cygdrive/e/temp/maxima/src/trans3.lis