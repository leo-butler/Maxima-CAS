Listing of compilation of file /cygdrive/e/temp/maxima/src/merror.lisp
on 2002-12-17 13:32:06 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/merror.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE MERROR)-2|
(CONST 0) = MERROR
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; MERROR
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFVAR DEBUG T ...)-3|
(CONST 0) = (SPECIAL DEBUG)
(CONST 1) = DEBUG
(CONST 2) = VARIABLE
(CONST 3) = "Enter the lisp on an error debugger if this is true"
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL DEBUG)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; DEBUG
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; DEBUG
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; DEBUG
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "Enter the lisp on an error debugger if this is true"
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; DEBUG
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ERROR '(# \|&No error.\|) ...)-4-1|
(CONST 0) = $ERROR
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = ((MLIST SIMP) |&No error.|)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ERROR
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ERROR
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; ((MLIST SIMP) |&No error.|)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ERROR '(# \|&No error.\|) ...)-4-2|
(CONST 0) = (SPECIAL $ERROR)
(CONST 1) = $ERROR
(CONST 2) = ((MLIST SIMP) |&No error.|)
(CONST 3) = VARIABLE
(CONST 4) = 
"During an MAXIMA-ERROR break this is bound to a list
  of the arguments to the call to MAXIMA-ERROR, with the message
  text in a compact format."
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ERROR)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ERROR
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ERROR
8     (CONST&PUSH 2)                      ; ((MLIST SIMP) |&No error.|)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ERROR
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "During an MAXIMA-ERROR break this is bound to a list
  of the arguments to the call to MAXIMA-ERROR, with the message
  text in a compact format."
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ERROR
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ERRORMSG 'T ...)-5-1|
(CONST 0) = $ERRORMSG
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ERRORMSG
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ERRORMSG
11    (LOAD&PUSH 1)
12    (T&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ERRORMSG 'T ...)-5-2|
(CONST 0) = (SPECIAL $ERRORMSG)
(CONST 1) = $ERRORMSG
(CONST 2) = VARIABLE
(CONST 3) = "If FALSE then NO MAXIMA-ERROR message is printed!"
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ERRORMSG)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ERRORMSG
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ERRORMSG
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ERRORMSG
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "If FALSE then NO MAXIMA-ERROR message is printed!"
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ERRORMSG
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $ERROR (&REST L) ...)-6|
(CONST 0) = $ERROR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = FUNCTION
(CONST 3) = "Signals a Macsyma user error."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
(CONST 5) = #<COMPILED-CLOSURE $ERROR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ERROR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $ERROR
4     (CONST&PUSH 2)                      ; FUNCTION
5     (CONST&PUSH 3)                      ; "Signals a Macsyma user error."
6     (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
9     (CONST&PUSH 0)                      ; $ERROR
10    (CONST&PUSH 5)                      ; #<COMPILED-CLOSURE $ERROR>
11    (CALLS2 130)                        ; SYSTEM::%PUTD
13    (CONST 0)                           ; $ERROR
14    (SKIP&RET 1)


Disassembly of function $ERROR
(CONST 0) = MERROR
(CONST 1) = FSTRINGC
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; MERROR
2     (LOAD&PUSH 2)
3     (CALL1 1)                           ; FSTRINGC
5     (APPLY&SKIP&RET 0 2)


Disassembly of function #:|(DEFMVAR $ERROR_SIZE 10 ...)-7-1|
(CONST 0) = $ERROR_SIZE
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 10
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ERROR_SIZE
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ERROR_SIZE
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 10
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ERROR_SIZE 10 ...)-7-2|
(CONST 0) = (SPECIAL $ERROR_SIZE)
(CONST 1) = $ERROR_SIZE
(CONST 2) = 10
(CONST 3) = VARIABLE
(CONST 4) = 
"Expressions greater in SOME size measure over this value
  are replaced by symbols {ERREXP1, ERREXP2,...} in the MAXIMA-ERROR
  display, the symbols being set to the expressions, so that one can
  look at them with expression editing tools. The default value of
  this variable may be determined by factors of terminal speed and type."
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ERROR_SIZE)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ERROR_SIZE
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ERROR_SIZE
8     (CONST&PUSH 2)                      ; 10
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ERROR_SIZE
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "Expressions greater in SOME size measure over this value
  are replaced by symbols {ERREXP1, ERREXP2,...} in the MAXIMA-ERROR
  display, the symbols being set to the expressions, so that one can
  look at them with expression editing tools. The default value of
  this variable may be determined by factors of terminal speed and type."
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ERROR_SIZE
18    (SKIP&RET 1)


Disassembly of function #:|(DEFUN ERROR-SIZE (EXP) ...)-8|
(CONST 0) = ERROR-SIZE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ERROR-SIZE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ERROR-SIZE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ERROR-SIZE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ERROR-SIZE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ERROR-SIZE
8     (SKIP&RET 1)


Disassembly of function ERROR-SIZE
(CONST 0) = 0
(CONST 1) = 1
(CONST 2) = $ERROR_SIZE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: ($ERROR_SIZE)
24 byte-code instructions:
0     L0
0     (LOAD 1)
1     (JMPIFATOM L37)
3     (LOAD&CDR&PUSH 1)
5     (CONST&PUSH 1)                      ; 1
6     (LOAD&JMPIFNOT 1 L34)
9     L9
9     (LOAD&PUSH 0)
10    (GETVALUE&PUSH 2)                   ; $ERROR_SIZE
12    (CALLSR&JMPIF 1 48 L34)             ; >
16    (LOAD&CDR&PUSH 1)
18    (LOAD&PUSH 1)
19    (LOAD&CAR&PUSH 3)
21    (JSR&PUSH L0)
23    (CALLSR&PUSH 2 53)                  ; +
26    (CALLS2&STORE 150 1)                ; 1+
29    (POP&STORE 1)
31    (LOAD&JMPIF 1 L9)
34    L34
34    (POP)
35    (SKIP&RET 3)
37    L37
37    (CONST 0)                           ; 0
38    (SKIP&RET 2)


Disassembly of function #:|(DEFUN MERROR (SSTRING &REST L) ...)-9|
(CONST 0) = MERROR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MERROR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MERROR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MERROR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MERROR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MERROR
8     (SKIP&RET 1)


Disassembly of function MERROR
(CONST 0) = (MLIST)
(CONST 1) = $ERROR
(CONST 2) = $ERRORMSG
(CONST 3) = DEBUG
(CONST 4) = DISPFLAG
(CONST 5) = #<COMPILED-CLOSURE MERROR-1>
(CONST 6) = *STANDARD-OUTPUT*
(CONST 7) = BREAK-DBM-LOOP
(CONST 8) = :RESUME
(CONST 9) = BREAK-QUIT
(CONST 10) = ERRCATCH
(CONST 11) = " -- an error: macsyma error"
(CONST 12) = 3
(CONST 13) = $BACKTRACE
(CONST 14) = #<COMPILED-CLOSURE MERROR-2>
(CONST 15) = MACSYMA-QUIT
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (ERRCATCH *STANDARD-OUTPUT* DEBUG $ERRORMSG)
writes special variable : ($ERROR)
49 byte-code instructions:
0     (CONST&PUSH 0)                      ; (MLIST)
1     (LOAD&PUSH 3)
2     (LOAD 3)
3     (LIST* 2)
5     (SETVALUE 1)                        ; $ERROR
7     (GETVALUE 2)                        ; $ERRORMSG
9     (JMPIF L47)
11    (GETVALUE 3)                        ; DEBUG
13    (JMPIFNOT L53)
15    L15
15    (T)
16    (BIND 4)                            ; DISPFLAG
18    (NIL&PUSH)
19    (CONST&PUSH 5)                      ; #<COMPILED-CLOSURE MERROR-1>
20    (GETVALUE&PUSH 6)                   ; *STANDARD-OUTPUT*
22    (CALLSR 1 21)                       ; FUNCALL
25    (NIL&PUSH)
26    (CALL1 7)                           ; BREAK-DBM-LOOP
28    (STORE 0)
29    (PUSH)
30    (JMPIFEQTO 8 L39)                   ; :RESUME
33    (NIL)
34    L34
34    (SKIP 1)
36    (UNBIND1)
37    (SKIP&RET 3)
39    L39
39    (CALL0 9)                           ; BREAK-QUIT
41    (JMP L34)
43    L43
43    (CONST&PUSH 11)                     ; " -- an error: macsyma error"
44    (CALLSR 0 29)                       ; ERROR
47    L47
47    (CALL0 2)                           ; $ERRORMSG
49    (GETVALUE 3)                        ; DEBUG
51    (JMPIF L15)
53    L53
53    (GETVALUE 10)                       ; ERRCATCH
55    (JMPIF L43)
57    (GETVALUE&PUSH 6)                   ; *STANDARD-OUTPUT*
59    (CALLS1 140)                        ; FRESH-LINE
61    (CONST&PUSH 12)                     ; 3
62    (CALL1 13)                          ; $BACKTRACE
64    (CONST&PUSH 14)                     ; #<COMPILED-CLOSURE MERROR-2>
65    (GETVALUE&PUSH 6)                   ; *STANDARD-OUTPUT*
67    (CALLSR 1 21)                       ; FUNCALL
70    (CONST&PUSH 15)                     ; MACSYMA-QUIT
71    (T)
72    (THROW)


Disassembly of function MERROR-1
(CONST 0) = " -- an error.  Entering the Maxima Debugger dbm"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; " -- an error.  Entering the Maxima Debugger dbm"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function MERROR-2
(CONST 0) = 
" -- an error.  Quitting.  To debug this try DEBUGMODE(TRUE);)
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
8 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS1 140)                        ; FRESH-LINE
3     (CONST&PUSH 0)                      ; " -- an error.  Quitting.  To debug this try DEBUGMODE(TRUE);)
"
4     (LOAD&PUSH 3)
5     (PUSH-UNBOUND 2)
7     (CALLS1 137)                        ; WRITE-STRING
9     (LOAD 1)
10    (SKIP&RET 3)


Disassembly of function #:|(DEFMVAR $ERROR_SYMS '(# $ERREXP1 $ERREXP2 ...) ...)-10-1|
(CONST 0) = $ERROR_SYMS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = ((MLIST) $ERREXP1 $ERREXP2 $ERREXP3)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ERROR_SYMS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ERROR_SYMS
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; ((MLIST) $ERREXP1 $ERREXP2 ...)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ERROR_SYMS '(# $ERREXP1 $ERREXP2 ...) ...)-10-2|
(CONST 0) = (SPECIAL $ERROR_SYMS)
(CONST 1) = $ERROR_SYMS
(CONST 2) = ((MLIST) $ERREXP1 $ERREXP2 $ERREXP3)
(CONST 3) = VARIABLE
(CONST 4) = "Symbols to bind the too-large MAXIMA-ERROR expresssions to"
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ERROR_SYMS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ERROR_SYMS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ERROR_SYMS
8     (CONST&PUSH 2)                      ; ((MLIST) $ERREXP1 $ERREXP2 ...)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ERROR_SYMS
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "Symbols to bind the too-large MAXIMA-ERROR expresssions to"
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ERROR_SYMS
18    (SKIP&RET 1)


Disassembly of function #:|(DEFUN-PROP ($ERROR_SYMS ASSIGN) (VAR VAL) ...)-11-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP ($ERROR_SYMS ASSIGN) (VAR VAL) ...)-11-2-1|>
(CONST 1) = $ERROR_SYMS
(CONST 2) = ASSIGN
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP ($ERROR_SYMS ASSIGN) (VAR VAL) ...)-11-2-1|>
1     (CONST&PUSH 1)                      ; $ERROR_SYMS
2     (CONST&PUSH 2)                      ; ASSIGN
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP ($ERROR_SYMS ASSIGN) (VAR VAL) ...)-11-2-1|
(CONST 0) = $LISTP
(CONST 1) = "The variable ~M being set to ~M which is not a list of symbols."
(CONST 2) = MERROR
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
30 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1&JMPIFNOT 0 L30)              ; $LISTP
4     (LOAD&CDR&PUSH 1)
6     (LOAD&JMPIFNOT 0 L19)
9     L9
9     (LOAD&CAR&PUSH 0)
11    (CALLS2&JMPIFNOT 6 L27)             ; SYMBOLP
14    (LOAD&CDR&STORE 0)
16    (LOAD&JMPIF 0 L9)
19    L19
19    (T)
20    L20
20    (SKIP 1)
22    (NOT)
23    (JMPIFNOT1 L41)
25    (JMP L33)
27    L27
27    (NIL)
28    (JMP L20)
30    L30
30    (NOT)
31    (JMPIFNOT1 L41)
33    L33
33    (CONST&PUSH 1)                      ; "The variable ~M being set to ~M which is not a list of symbols."
34    (LOAD&PUSH 3)
35    (LOAD&PUSH 3)
36    (CALL 3 2)                          ; MERROR
39    (SKIP&RET 3)
41    L41
41    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PROCESS-ERROR-ARGL (L) ...)-12|
(CONST 0) = PROCESS-ERROR-ARGL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PROCESS-ERROR-ARGL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PROCESS-ERROR-ARGL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PROCESS-ERROR-ARGL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PROCESS-ERROR-ARGL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PROCESS-ERROR-ARGL
8     (SKIP&RET 1)


Disassembly of function PROCESS-ERROR-ARGL
(CONST 0) = 0
(CONST 1) = ERROR-SIZE
(CONST 2) = $ERROR_SIZE
(CONST 3) = $ERROR_SYMS
(CONST 4) = $ERREXP
(CONST 5) = CONCAT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($ERROR_SYMS $ERROR_SIZE)
writes special variable : ($ERROR_SYMS)
52 byte-code instructions:
0     (PUSH-NIL 3)
2     (CONST&PUSH 0)                      ; 0
3     (LOAD&JMPIFNOT 5 L27)
6     L6
6     (LOAD&CAR&PUSH 5)
8     (LOAD&CDR&STORE 6)
10    (LOAD&PUSH 0)
11    (CALL1&PUSH 1)                      ; ERROR-SIZE
13    (GETVALUE&PUSH 2)                   ; $ERROR_SIZE
15    (CALLSR&JMPIF 1 48 L44)             ; >
19    (LOAD&PUSH 0)
20    (LOAD&CONS&STORE 2)
22    L22
22    (SKIP 1)
24    (LOAD&JMPIF 5 L6)
27    L27
27    (LOAD&PUSH 3)
28    (CALLS2&PUSH 73)                    ; NREVERSE
30    (LOAD&PUSH 3)
31    (CALLS2&PUSH 73)                    ; NREVERSE
33    (LOAD&PUSH 3)
34    (CALLS2&PUSH 73)                    ; NREVERSE
36    (LIST 3)
38    (SKIP&RET 6)
40    L40
40    (CAR)
41    (STORE 0)
42    (JMP L69)
44    L44
44    (LOAD&INC&STORE 1)
46    (PUSH)
47    (GETVALUE&PUSH 3)                   ; $ERROR_SYMS
49    (CALLS1&PUSH 155)                   ; NTHCDR
51    (LOAD&JMPIF 0 L40)
54    (CONST&PUSH 4)                      ; $ERREXP
55    (LOAD&PUSH 3)
56    (CALL2 5)                           ; CONCAT
58    (STORE 0)
59    (GETVALUE&PUSH 3)                   ; $ERROR_SYMS
61    (LOAD&PUSH 1)
62    (LIST&PUSH 1)
64    (CALLSR 2 34)                       ; APPEND
67    (SETVALUE 3)                        ; $ERROR_SYMS
69    L69
69    (LOAD&PUSH 0)
70    (LOAD&CONS&STORE 5)
72    (LOAD&PUSH 1)
73    (LOAD&CONS&STORE 4)
75    (LOAD&PUSH 0)
76    (LOAD&CONS&STORE 3)
78    (SKIP 1)
80    (JMP L22)


Disassembly of function #:|(DEFMFUN $ERRORMSG NIL ...)-13|
(CONST 0) = $ERRORMSG
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = FUNCTION
(CONST 3) = "ERRORMSG() redisplays the MAXIMA-ERROR message while in an MAXIMA-ERROR break."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
(CONST 5) = #<COMPILED-CLOSURE $ERRORMSG>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ERRORMSG
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $ERRORMSG
4     (CONST&PUSH 2)                      ; FUNCTION
5     (CONST&PUSH 3)                      ; "ERRORMSG() redisplays the MAXIMA-ERROR message while in an MAXIMA-ERROR break."
6     (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
9     (CONST&PUSH 0)                      ; $ERRORMSG
10    (CONST&PUSH 5)                      ; #<COMPILED-CLOSURE $ERRORMSG>
11    (CALLS2 130)                        ; SYSTEM::%PUTD
13    (CONST 0)                           ; $ERRORMSG
14    (SKIP&RET 1)


Disassembly of function $ERRORMSG
(CONST 0) = $ERROR
(CONST 1) = PROCESS-ERROR-ARGL
(CONST 2) = #.#'SET
(CONST 3) = ERRSET
(CONST 4) = #(NIL)
(CONST 5) = (#(ERROR 49) 1 . 1)
(CONST 6) = MFORMAT
(CONST 7) = "~%** error while printing ERROR message **~%~A~%"
(CONST 8) = MTELL
(CONST 9) = $DONE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (ERRSET $ERROR)
57 byte-code instructions:
0     (GETVALUE 0)                        ; $ERROR
2     (CDR)
3     (CDR&PUSH)
4     (CALL1&PUSH 1)                      ; PROCESS-ERROR-ARGL
6     (CONST&PUSH 2)                      ; #.#'SET
7     (LOAD&CAR&PUSH 1)
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (CALLSR 1 24)                       ; MAPC
15    (PUSH-UNBOUND 1)
17    (CALLS1 140)                        ; FRESH-LINE
19    (NIL)
20    (BIND 3)                            ; ERRSET
22    (NIL&PUSH)
23    (TAGBODY-OPEN 4 L64)                ; #(NIL)
26    (HANDLER-OPEN 5 L49)                ; (#(ERROR 49) 1 . 1)
28    (CONST&SYMBOL-FUNCTION&PUSH 6)      ; MFORMAT
30    (NIL&PUSH)
31    (GETVALUE 0)                        ; $ERROR
33    (CDR)
34    (CAR&PUSH)
35    (LOAD 15)
37    (CDR)
38    (CDR)
39    (CAR)
40    (APPLY 2)
42    (SKIP 4)
44    (TAGBODY-CLOSE)
45    (SKIP 1)
47    (JMP L80)
49    L49
49    (HANDLER-BEGIN&PUSH)
50    (LOAD 0)
51    (STOREI 0 0 4)
55    (GO-I 0 0 2 0)
60    L60
60    (LOAD&PUSH 4)
61    (CALLSR 0 29)                       ; ERROR
64    L64
64    (GETVALUE 3)                        ; ERRSET
66    (JMPIF L60)
68    (TAGBODY-CLOSE)
69    (SKIP 1)
71    (JMPIF L80)
73    (CONST&PUSH 7)                      ; "~%** error while printing ERROR message **~%~A~%"
74    (GETVALUE 0)                        ; $ERROR
76    (CDR)
77    (CAR&PUSH)
78    (CALL2 8)                           ; MTELL
80    L80
80    (UNBIND1)
81    (PUSH-UNBOUND 1)
83    (CALLS1 140)                        ; FRESH-LINE
85    (SKIP 1)
87    (CONST 9)                           ; $DONE
88    (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN READ-ONLY-ASSIGN (VAR VAL) ...)-14|
(CONST 0) = READ-ONLY-ASSIGN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE READ-ONLY-ASSIGN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; READ-ONLY-ASSIGN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; READ-ONLY-ASSIGN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE READ-ONLY-ASSIGN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; READ-ONLY-ASSIGN
8     (SKIP&RET 1)


Disassembly of function READ-ONLY-ASSIGN
(CONST 0) = MUNBINDP
(CONST 1) = "Attempting to assign read-only variable ~:M the value:~%~M"
(CONST 2) = MERROR
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (MUNBINDP)
10 byte-code instructions:
0     (GETVALUE 0)                        ; MUNBINDP
2     (JMPIF L12)
4     (CONST&PUSH 1)                      ; "Attempting to assign read-only variable ~:M the value:~%~M"
5     (LOAD&PUSH 3)
6     (LOAD&PUSH 3)
7     (CALL 3 2)                          ; MERROR
10    (SKIP&RET 3)
12    L12
12    (CONST 0)                           ; MUNBINDP
13    (SKIP&RET 3)


Disassembly of function #:|(DEFPROP $ERROR READ-ONLY-ASSIGN ...)-15|
(CONST 0) = $ERROR
(CONST 1) = ASSIGN
(CONST 2) = READ-ONLY-ASSIGN
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ERROR
1     (CONST&PUSH 1)                      ; ASSIGN
2     (CONST&PUSH 2)                      ; READ-ONLY-ASSIGN
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN ERRRJF N ...)-16|
(CONST 0) = ERRRJF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ERRRJF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ERRRJF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ERRRJF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ERRRJF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ERRRJF
8     (SKIP&RET 1)


Disassembly of function ERRRJF
(CONST 0) = ERRRJFFLAG
(CONST 1) = RATERR
(CONST 2) = MERROR
(CONST 3) = LISTIFY1
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variable: (ERRRJFFLAG)
13 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (GETVALUE 0)                        ; ERRRJFFLAG
5     (JMPIF L16)
7     (CONST&SYMBOL-FUNCTION&PUSH 2)      ; MERROR
9     (LOAD&PUSH 1)
10    (LOAD&PUSH 4)
11    (CALL2 3)                           ; LISTIFY1
13    (APPLY&SKIP&RET 0 3)
16    L16
16    (CONST&PUSH 1)                      ; RATERR
17    (NIL)
18    (THROW)


Disassembly of function #:|(DEFMFUN FSTRINGC (L) ...)-17|
(CONST 0) = FSTRINGC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FSTRINGC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FSTRINGC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FSTRINGC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FSTRINGC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FSTRINGC
8     (SKIP&RET 1)


Disassembly of function FSTRINGC
(CONST 0) = 1
(CONST 1) = GETCHARN
(CONST 2) = #\&
(CONST 3) = EXPLODEN
(CONST 4) = #\~
(CONST 5) = #\M
(CONST 6) = #\Space
(CONST 7) = MAKNAM
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
75 byte-code instructions:
0     (PUSH-NIL 4)
2     (LOAD&JMPIFNOT 5 L49)
5     L5
5     (LOAD&CAR&PUSH 5)
7     (LOAD&CDR&STORE 6)
9     (POP&STORE 2)
11    (PUSH)
12    (CALLS2&JMPIFNOT 6 L24)             ; SYMBOLP
15    (LOAD&PUSH 2)
16    (CONST&PUSH 0)                      ; 1
17    (CALL2&PUSH 1)                      ; GETCHARN
19    (CONST&PUSH 2)                      ; #\&
20    (CALLSR&JMPIF 1 7 L60)              ; CHAR=
24    L24
24    (LOAD&PUSH 2)
25    (LOAD&CONS&STORE 0)
27    (CONST&PUSH 4)                      ; #\~
28    (CONST&PUSH 5)                      ; #\M
29    (LIST 2)
31    (STORE 1)
32    L32
32    (LOAD&PUSH 3)
33    (LOAD&PUSH 2)
34    (LOAD&JMPIFNOT 7 L108)
38    (CONST&PUSH 6)                      ; #\Space
39    (LIST 1)
41    L41
41    (PUSH)
42    (CALLSR&STORE 3 35 3)               ; NCONC
46    (LOAD&JMPIF 5 L5)
49    L49
49    (LOAD&PUSH 3)
50    (CALL1 7)                           ; MAKNAM
52    (STORE 3)
53    (PUSH)
54    (LOAD&PUSH 1)
55    (CALLS2 73)                         ; NREVERSE
57    (CONS)
58    (SKIP&RET 6)
60    L60
60    (NIL&PUSH)
61    (LOAD&PUSH 3)
62    (CALL1 3)                           ; EXPLODEN
64    (CDR&PUSH)
65    (JMP L93)
67    L67
67    (LOAD&PUSH 0)
68    (LOAD&PUSH 1)
69    (LIST 2)
71    (JMP L84)
73    L73
73    (LOAD&CAR&PUSH 0)
75    (LOAD&PUSH 0)
76    (CONST&PUSH 4)                      ; #\~
77    (CALLSR&JMPIF 1 7 L67)              ; CHAR=
81    (LOAD&PUSH 0)
82    (LIST 1)
84    L84
84    (PUSH)
85    (LOAD&PUSH 3)
86    (CALLS1&STORE 163 2)                ; NRECONC
89    (SKIP 1)
91    (LOAD&CDR&STORE 0)
93    L93
93    (LOAD&PUSH 0)
94    (CALLS1&JMPIFNOT 146 L73)           ; ENDP
97    (SKIP 1)
99    (LOAD&PUSH 0)
100   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
102   (SKIP 1)
104   (STORE 1)
105   (JMP L32)
108   L108
108   (NIL)
109   (JMP L41)


Disassembly of function #:NIL-18
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Wrote file binary-clisp/merror.fas
Wrote file /cygdrive/e/temp/maxima/src/merror.lis