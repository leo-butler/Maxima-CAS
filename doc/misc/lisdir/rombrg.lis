Listing of compilation of file /cygdrive/e/temp/maxima/src/rombrg.lisp
on 2002-12-17 13:34:12 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/rombrg.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE ROMBRG)-2|
(CONST 0) = ROMBRG
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROMBRG
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(LOAD-MACSYMA-MACROS TRANSM NUMERM)-3|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL USER-TIMESOFAR))-4|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGIT 11 ...)-5-1|
(CONST 0) = $ROMBERGIT
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 11
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ROMBERGIT
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ROMBERGIT
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 11
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGIT 11 ...)-5-2|
(CONST 0) = (SPECIAL $ROMBERGIT)
(CONST 1) = $ROMBERGIT
(CONST 2) = 11
(CONST 3) = VARIABLE
(CONST 4) = "the maximum number of iterations"
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ROMBERGIT)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ROMBERGIT
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ROMBERGIT
8     (CONST&PUSH 2)                      ; 11
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ROMBERGIT
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "the maximum number of iterations"
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ROMBERGIT
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGMIN 0 ...)-6-1|
(CONST 0) = $ROMBERGMIN
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 0
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ROMBERGMIN
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ROMBERGMIN
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 0
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGMIN 0 ...)-6-2|
(CONST 0) = (SPECIAL $ROMBERGMIN)
(CONST 1) = $ROMBERGMIN
(CONST 2) = 0
(CONST 3) = VARIABLE
(CONST 4) = "the minimum number of iterations"
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ROMBERGMIN)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ROMBERGMIN
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ROMBERGMIN
8     (CONST&PUSH 2)                      ; 0
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ROMBERGMIN
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "the minimum number of iterations"
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ROMBERGMIN
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGTOL 1.0E-4 ...)-7-1|
(CONST 0) = $ROMBERGTOL
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 1.0E-4
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ROMBERGTOL
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ROMBERGTOL
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 1.0E-4
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGTOL 1.0E-4 ...)-7-2|
(CONST 0) = (SPECIAL $ROMBERGTOL)
(CONST 1) = $ROMBERGTOL
(CONST 2) = 1.0E-4
(CONST 3) = VARIABLE
(CONST 4) = "the relative tolerance of error"
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ROMBERGTOL)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ROMBERGTOL
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ROMBERGTOL
8     (CONST&PUSH 2)                      ; 1.0E-4
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ROMBERGTOL
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "the relative tolerance of error"
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ROMBERGTOL
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGABS 0.0 ...)-8-1|
(CONST 0) = $ROMBERGABS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 0.0
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ROMBERGABS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ROMBERGABS
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 0.0
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGABS 0.0 ...)-8-2|
(CONST 0) = (SPECIAL $ROMBERGABS)
(CONST 1) = $ROMBERGABS
(CONST 2) = 0.0
(CONST 3) = VARIABLE
(CONST 4) = "the absolute tolerance of error"
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ROMBERGABS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ROMBERGABS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ROMBERGABS
8     (CONST&PUSH 2)                      ; 0.0
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ROMBERGABS
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "the absolute tolerance of error"
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ROMBERGABS
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGIT_USED 0 ...)-9-1|
(CONST 0) = $ROMBERGIT_USED
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 0
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ROMBERGIT_USED
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ROMBERGIT_USED
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 0
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ROMBERGIT_USED 0 ...)-9-2|
(CONST 0) = (SPECIAL $ROMBERGIT_USED)
(CONST 1) = $ROMBERGIT_USED
(CONST 2) = 0
(CONST 3) = VARIABLE
(CONST 4) = "the number of iterations actually used."
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ROMBERGIT_USED)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ROMBERGIT_USED
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ROMBERGIT_USED
8     (CONST&PUSH 2)                      ; 0
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ROMBERGIT_USED
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "the number of iterations actually used."
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ROMBERGIT_USED
18    (SKIP&RET 1)


Disassembly of function #:|(DEFVAR ROMB-PRINT NIL)-10|
(CONST 0) = (SPECIAL ROMB-PRINT)
(CONST 1) = ROMB-PRINT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL ROMB-PRINT)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; ROMB-PRINT
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; ROMB-PRINT
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; ROMB-PRINT
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN $ROMBERG_SUBR (FUNCTION LEFT RIGHT) ...)-11|
(CONST 0) = $ROMBERG_SUBR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $ROMBERG_SUBR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ROMBERG_SUBR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $ROMBERG_SUBR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $ROMBERG_SUBR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $ROMBERG_SUBR
8     (SKIP&RET 1)


Disassembly of function $ROMBERG_SUBR
(CONST 0) = RIGHT
(CONST 1) = TRAMP1$
(CONST 2) = 1
(CONST 3) = MAKE-TRAMP$
(CONST 4) = F
(CONST 5) = 1.0
(CONST 6) = 0.0
(CONST 7) = $ROMBERGIT
(CONST 8) = DOUBLE-FLOAT
(CONST 9) = ROMB-TIMESOFAR
(CONST 10) = USER-TIMESOFAR
(CONST 11) = ROMB-PRINT
(CONST 12) = B
(CONST 13) = X
(CONST 14) = 0.5
(CONST 15) = 0
(CONST 16) = L
(CONST 17) = 4
(CONST 18) = M
(CONST 19) = Y
(CONST 20) = QUOT
(CONST 21) = 
"Romberg: ~A iterations; last error =~A;~
			    calculating F(~A)."
(CONST 22) = MTELL
(CONST 23) = 2
(CONST 24) = 2.0
(CONST 25) = K
(CONST 26) = 4.0
(CONST 27) = 3.0
(CONST 28) = $ROMBERGABS
(CONST 29) = $ROMBERGTOL
(CONST 30) = $ROMBERGMIN
(CONST 31) = $ROMBERGIT_USED
(CONST 32) = "ROMBERG failed to converge"
(CONST 33) = MERROR
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: 
($ROMBERGMIN $ROMBERGTOL $ROMBERGABS K ROMB-PRINT L Y M X F B USER-TIMESOFAR
 $ROMBERGIT RIGHT)
writes special variables : (M L K $ROMBERGIT_USED ROMB-PRINT Y X)
295 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; RIGHT
3     (NIL)
4     (BIND 1)                            ; TRAMP1$
6     (LOAD&PUSH 9)
7     (CONST&PUSH 2)                      ; 1
8     (CALL2 3)                           ; MAKE-TRAMP$
10    (BIND 4)                            ; F
12    (LOAD&PUSH 11)
13    (CONST&PUSH 5)                      ; 1.0
14    (CALLS2&PUSH 174)                   ; COMMON-LISP:FLOAT
16    (GETVALUE&PUSH 0)                   ; RIGHT
18    (CONST&PUSH 5)                      ; 1.0
19    (CALLS2&PUSH 174)                   ; COMMON-LISP:FLOAT
21    (CONST&PUSH 6)                      ; 0.0
22    (GETVALUE&PUSH 7)                   ; $ROMBERGIT
24    (PUSH-UNBOUND 7)
26    (CONST 8)                           ; DOUBLE-FLOAT
27    (STORE 5)
28    (CALLS1&PUSH 29)                    ; MAKE-ARRAY
30    (GETVALUE&PUSH 7)                   ; $ROMBERGIT
32    (PUSH-UNBOUND 7)
34    (CONST 8)                           ; DOUBLE-FLOAT
35    (STORE 5)
36    (CALLS1&PUSH 29)                    ; MAKE-ARRAY
38    (CONST&PUSH 9)                      ; ROMB-TIMESOFAR
39    (GETVALUE 10)                       ; USER-TIMESOFAR
41    (CONS)
42    (BIND 10)                           ; USER-TIMESOFAR
44    (NIL)
45    (BIND 11)                           ; ROMB-PRINT
47    (LOAD 9)
48    (BIND 12)                           ; B
50    (LOAD 11)
51    (BIND 13)                           ; X
53    (GETVALUE&PUSH 12)                  ; B
55    (LOAD&PUSH 17)
56    (CALLSR 1 54)                       ; -
59    (SETVALUE 13)                       ; X
61    (PUSH)
62    (GETVALUE&PUSH 4)                   ; F
64    (GETVALUE&PUSH 12)                  ; B
66    (FUNCALL&PUSH 1)
68    (GETVALUE&PUSH 4)                   ; F
70    (LOAD&PUSH 19)
71    (FUNCALL&PUSH 1)
73    (CALLSR&PUSH 2 53)                  ; +
76    (CONST&PUSH 14)                     ; 0.5
77    (CALLSR&PUSH 3 55)                  ; *
80    (LOAD&PUSH 14)
81    (CONST&PUSH 15)                     ; 0
82    (LOAD&PUSH 2)
83    (CALLSR 1 2)                        ; SYSTEM::STORE
86    (SKIP 1)
88    (GETVALUE&PUSH 13)                  ; X
90    (GETVALUE&PUSH 4)                   ; F
92    (GETVALUE&PUSH 12)                  ; B
94    (LOAD&PUSH 19)
95    (CALLSR&PUSH 2 53)                  ; +
98    (CONST&PUSH 14)                     ; 0.5
99    (CALLSR&PUSH 2 55)                  ; *
102   (FUNCALL&PUSH 1)
104   (CALLSR&PUSH 2 55)                  ; *
107   (LOAD&PUSH 13)
108   (CONST&PUSH 15)                     ; 0
109   (LOAD&PUSH 2)
110   (CALLSR 1 2)                        ; SYSTEM::STORE
113   (SKIP 1)
115   (CONST 2)                           ; 1
116   (BIND 16)                           ; L
118   (CONST 17)                          ; 4
119   (BIND 18)                           ; M
121   (CONST 6)                           ; 0.0
122   (BIND 19)                           ; Y
124   (CONST&PUSH 6)                      ; 0.0
125   (CONST&PUSH 6)                      ; 0.0
126   (JMP L529)
129   L129
129   (GETVALUE&PUSH 18)                  ; M
131   (CONST&PUSH 5)                      ; 1.0
132   (CALLS2 174)                        ; COMMON-LISP:FLOAT
134   (SETVALUE 19)                       ; Y
136   (GETVALUE&PUSH 13)                  ; X
138   (GETVALUE&PUSH 19)                  ; Y
140   (CALL2 20)                          ; QUOT
142   (STORE 1)
143   (GETVALUE&PUSH 16)                  ; L
145   (LOAD&PUSH 25)
147   (GETVALUE&PUSH 16)                  ; L
149   (CALLS2&PUSH 151)                   ; 1-
151   (CALLSR&PUSH 1 1)                   ; AREF
154   (LOAD&PUSH 25)
156   (GETVALUE&PUSH 16)                  ; L
158   (CALLS2&PUSH 151)                   ; 1-
160   (CALLSR&PUSH 1 1)                   ; AREF
163   (CALLSR&PUSH 2 53)                  ; +
166   (CONST&PUSH 14)                     ; 0.5
167   (CALLSR&PUSH 2 55)                  ; *
170   (LOAD&PUSH 26)
172   (LOAD&PUSH 2)
173   (LOAD&PUSH 2)
174   (CALLSR 1 2)                        ; SYSTEM::STORE
177   (SKIP 2)
179   (GETVALUE&PUSH 16)                  ; L
181   (LOAD&PUSH 24)
182   (LOAD&PUSH 1)
183   (CONST&PUSH 6)                      ; 0.0
184   (CALLSR 1 2)                        ; SYSTEM::STORE
187   (SKIP 1)
189   (CONST&PUSH 2)                      ; 1
190   (JMP L263)
193   L193
193   (GETVALUE 11)                       ; ROMB-PRINT
195   (JMPIFNOT L219)
197   (NIL)
198   (SETVALUE 11)                       ; ROMB-PRINT
200   (CONST&PUSH 21)                     ; "Romberg: ~A iterations; last error =~A;~
			    calculating F(~A)."
201   (LOAD&PUSH 1)
202   (LOAD&PUSH 3)
203   (LOAD&PUSH 5)
204   (LOAD&PUSH 4)
205   (CONST&PUSH 5)                      ; 1.0
206   (CALLS2&PUSH 174)                   ; COMMON-LISP:FLOAT
208   (CALLSR&PUSH 2 55)                  ; *
211   (LOAD&PUSH 32)
213   (CALLSR&PUSH 2 53)                  ; +
216   (CALL 4 22)                         ; MTELL
219   L219
219   (GETVALUE&PUSH 16)                  ; L
221   (GETVALUE&PUSH 4)                   ; F
223   (LOAD&PUSH 4)
224   (LOAD&PUSH 3)
225   (CONST&PUSH 5)                      ; 1.0
226   (CALLS2&PUSH 174)                   ; COMMON-LISP:FLOAT
228   (CALLSR&PUSH 2 55)                  ; *
231   (LOAD&PUSH 31)
233   (CALLSR&PUSH 2 53)                  ; +
236   (FUNCALL&PUSH 1)
238   (LOAD&PUSH 26)
240   (GETVALUE&PUSH 16)                  ; L
242   (CALLSR&PUSH 1 1)                   ; AREF
245   (CALLSR&PUSH 2 53)                  ; +
248   (LOAD&PUSH 26)
250   (LOAD&PUSH 2)
251   (LOAD&PUSH 2)
252   (CALLSR 1 2)                        ; SYSTEM::STORE
255   (SKIP 2)
257   (LOAD&PUSH 0)
258   (CONST&PUSH 23)                     ; 2
259   (CALLSR&STORE 2 53 0)               ; +
263   L263
263   (LOAD&PUSH 0)
264   (GETVALUE&PUSH 18)                  ; M
266   (CALLSR&JMPIFNOT 1 48 L193)         ; >
271   (SKIP 1)
273   (GETVALUE&PUSH 16)                  ; L
275   (LOAD&PUSH 2)
276   (LOAD&PUSH 25)
278   (GETVALUE&PUSH 16)                  ; L
280   (CALLSR&PUSH 1 1)                   ; AREF
283   (CONST&PUSH 24)                     ; 2.0
284   (CALLSR&PUSH 3 55)                  ; *
287   (LOAD&PUSH 25)
289   (LOAD&PUSH 2)
290   (LOAD&PUSH 2)
291   (CALLSR 1 2)                        ; SYSTEM::STORE
294   (SKIP 2)
296   (CONST 6)                           ; 0.0
297   (SETVALUE 19)                       ; Y
299   (GETVALUE 16)                       ; L
301   (BIND 25)                           ; K
303   (JMP L429)
306   L306
306   (CONST 5)                           ; 1.0
307   (JMP L497)
310   L310
310   (GETVALUE 16)                       ; L
312   (SETVALUE 31)                       ; $ROMBERGIT_USED
314   (GETVALUE 19)                       ; Y
316   (JMP L542)
319   L319
319   (GETVALUE&PUSH 19)                  ; Y
321   (CONST&PUSH 26)                     ; 4.0
322   (CALLSR&PUSH 2 55)                  ; *
325   (CONST&PUSH 27)                     ; 3.0
326   (CALLSR 2 53)                       ; +
329   (SETVALUE 19)                       ; Y
331   (GETVALUE&PUSH 25)                  ; K
333   (CALLS2&PUSH 151)                   ; 1-
335   (LOAD&PUSH 28)
337   (GETVALUE&PUSH 25)                  ; K
339   (CALLSR&PUSH 1 1)                   ; AREF
342   (LOAD&PUSH 29)
344   (GETVALUE&PUSH 25)                  ; K
346   (CALLS2&PUSH 151)                   ; 1-
348   (CALLSR&PUSH 1 1)                   ; AREF
351   (CALLSR&PUSH 1 54)                  ; -
354   (GETVALUE&PUSH 19)                  ; Y
356   (CALL2&PUSH 20)                     ; QUOT
358   (LOAD&PUSH 29)
360   (GETVALUE&PUSH 25)                  ; K
362   (CALLSR&PUSH 1 1)                   ; AREF
365   (CALLSR&PUSH 2 53)                  ; +
368   (LOAD&PUSH 29)
370   (LOAD&PUSH 2)
371   (LOAD&PUSH 2)
372   (CALLSR 1 2)                        ; SYSTEM::STORE
375   (SKIP 2)
377   (GETVALUE&PUSH 25)                  ; K
379   (CALLS2&PUSH 151)                   ; 1-
381   (LOAD&PUSH 27)
383   (GETVALUE&PUSH 25)                  ; K
385   (CALLSR&PUSH 1 1)                   ; AREF
388   (LOAD&PUSH 28)
390   (GETVALUE&PUSH 25)                  ; K
392   (CALLS2&PUSH 151)                   ; 1-
394   (CALLSR&PUSH 1 1)                   ; AREF
397   (CALLSR&PUSH 1 54)                  ; -
400   (GETVALUE&PUSH 19)                  ; Y
402   (CALL2&PUSH 20)                     ; QUOT
404   (LOAD&PUSH 28)
406   (GETVALUE&PUSH 25)                  ; K
408   (CALLSR&PUSH 1 1)                   ; AREF
411   (CALLSR&PUSH 2 53)                  ; +
414   (LOAD&PUSH 28)
416   (LOAD&PUSH 2)
417   (LOAD&PUSH 2)
418   (CALLSR 1 2)                        ; SYSTEM::STORE
421   (SKIP 2)
423   (GETVALUE&PUSH 25)                  ; K
425   (CALLS2 151)                        ; 1-
427   (SETVALUE 25)                       ; K
429   L429
429   (GETVALUE&PUSH 25)                  ; K
431   (CONST&PUSH 15)                     ; 0
432   (CALLSR&JMPIFNOT 1 45 L319)         ; =
437   (UNBIND1)
438   (LOAD&PUSH 24)
439   (CONST&PUSH 15)                     ; 0
440   (CALLSR&PUSH 1 1)                   ; AREF
443   (LOAD&PUSH 24)
444   (CONST&PUSH 15)                     ; 0
445   (CALLSR&PUSH 1 1)                   ; AREF
448   (CALLSR&PUSH 2 53)                  ; +
451   (CONST&PUSH 14)                     ; 0.5
452   (CALLSR 2 55)                       ; *
455   (SETVALUE 19)                       ; Y
457   (GETVALUE&PUSH 28)                  ; $ROMBERGABS
459   (LOAD&PUSH 25)
461   (CONST&PUSH 15)                     ; 0
462   (CALLSR&PUSH 1 1)                   ; AREF
465   (LOAD&PUSH 25)
467   (CONST&PUSH 15)                     ; 0
468   (CALLSR&PUSH 1 1)                   ; AREF
471   (CALLSR&PUSH 1 54)                  ; -
474   (CALLS2&STORE 158 1)                ; ABS
477   (PUSH)
478   (CALLSR&JMPIFNOT 1 47 L506)         ; <
482   (GETVALUE&PUSH 29)                  ; $ROMBERGTOL
484   (LOAD&PUSH 1)
485   (GETVALUE&PUSH 19)                  ; Y
487   (CONST&PUSH 6)                      ; 0.0
488   (CALLSR&JMPIF 1 45 L306)            ; =
493   (GETVALUE&PUSH 19)                  ; Y
495   (CALLS2 158)                        ; ABS
497   L497
497   (PUSH)
498   (CALL2 20)                          ; QUOT
500   (STORE 1)
501   (PUSH)
502   (CALLSR&JMPIF 1 47 L515)            ; <
506   L506
506   (GETVALUE&PUSH 16)                  ; L
508   (GETVALUE&PUSH 30)                  ; $ROMBERGMIN
510   (CALLSR&JMPIF 1 48 L310)            ; >
515   L515
515   (GETVALUE&PUSH 16)                  ; L
517   (CALLS2 150)                        ; 1+
519   (SETVALUE 16)                       ; L
521   (GETVALUE&PUSH 18)                  ; M
523   (CONST&PUSH 23)                     ; 2
524   (CALLSR 2 55)                       ; *
527   (SETVALUE 18)                       ; M
529   L529
529   (GETVALUE&PUSH 16)                  ; L
531   (GETVALUE&PUSH 7)                   ; $ROMBERGIT
533   (CALLSR&JMPIFNOT 1 45 L129)         ; =
538   (CONST&PUSH 32)                     ; "ROMBERG failed to converge"
540   (CALL1 33)                          ; MERROR
542   L542
542   (SKIP 2)
544   (UNBIND 7)
546   (SKIP 5)
548   (UNBIND 3)
550   (SKIP&RET 4)


Disassembly of function #:|(DEFUN ROMB-TIMESOFAR NIL ...)-12|
(CONST 0) = ROMB-TIMESOFAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ROMB-TIMESOFAR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROMB-TIMESOFAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ROMB-TIMESOFAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ROMB-TIMESOFAR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ROMB-TIMESOFAR
8     (SKIP&RET 1)


Disassembly of function ROMB-TIMESOFAR
(CONST 0) = ROMB-PRINT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (ROMB-PRINT)
3 byte-code instructions:
0     (T)
1     (SETVALUE 0)                        ; ROMB-PRINT
3     (SKIP&RET 1)


Disassembly of function #:|(DEFPROP $ROMBERG_SUBR $FLOAT ...)-13|
(CONST 0) = $ROMBERG_SUBR
(CONST 1) = FUNCTION-MODE
(CONST 2) = $FLOAT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ROMBERG_SUBR
1     (CONST&PUSH 1)                      ; FUNCTION-MODE
2     (CONST&PUSH 2)                      ; $FLOAT
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFUN ROMBERG-MACRO (FORM TRANSLATEP) ...)-14|
(CONST 0) = ROMBERG-MACRO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ROMBERG-MACRO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROMBERG-MACRO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ROMBERG-MACRO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ROMBERG-MACRO>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ROMBERG-MACRO
8     (SKIP&RET 1)


Disassembly of function ROMBERG-MACRO
(CONST 0) = FORM
(CONST 1) = 3
(CONST 2) = ($ROMBERG_SUBR)
(CONST 3) = (MPROG)
(CONST 4) = ((MLIST) ((MSETQ) $NUMER T) ((MSETQ) $%ENUMER T))
(CONST 5) = ($ROMBERG_SUBR)
(CONST 6) = 4
(CONST 7) = EXP
(CONST 8) = VAR
(CONST 9) = ($ROMBERG_SUBR)
(CONST 10) = (LAMBDA-I)
(CONST 11) = (MLIST)
(CONST 12) = ($MODEDECLARE)
(CONST 13) = ($FLOAT)
(CONST 14) = (MPROG)
(CONST 15) = ((MLIST) ((MSETQ) $NUMER T) ((MSETQ) $%ENUMER T))
(CONST 16) = ($ROMBERG_SUBR)
(CONST 17) = (LAMBDA)
(CONST 18) = (MLIST)
(CONST 19) = $ROMBERG
(CONST 20) = WNA-ERR
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (EXP VAR FORM)
writes special variables : (VAR EXP FORM)
77 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; FORM
3     (GETVALUE 0)                        ; FORM
5     (CDR)
6     (SETVALUE 0)                        ; FORM
8     (PUSH)
9     (CALLS2&PUSH 71)                    ; LENGTH
11    (CONST&PUSH 1)                      ; 3
12    (CALLSR&JMPIF 1 45 L37)             ; =
16    (GETVALUE&PUSH 0)                   ; FORM
18    (CALLS2&PUSH 71)                    ; LENGTH
20    (CONST&PUSH 6)                      ; 4
21    (CALLSR&JMPIF 1 45 L72)             ; =
25    (CONST&PUSH 19)                     ; $ROMBERG
26    (CALL1 20)                          ; WNA-ERR
28    L28
28    (UNBIND1)
29    (SKIP&RET 3)
31    L31
31    (CONST&PUSH 2)                      ; ($ROMBERG_SUBR)
32    (GETVALUE 0)                        ; FORM
34    (CONS)
35    (JMP L28)
37    L37
37    (LOAD&JMPIF 4 L31)
40    (CONST&PUSH 3)                      ; (MPROG)
41    (CONST&PUSH 4)                      ; ((MLIST) (# $NUMER ...) ...)
42    (CONST&PUSH 5)                      ; ($ROMBERG_SUBR)
43    (GETVALUE 0)                        ; FORM
45    (CONS&PUSH)
46    (LIST 3)
48    (JMP L28)
50    L50
50    (CONST&PUSH 9)                      ; ($ROMBERG_SUBR)
51    (CONST&PUSH 10)                     ; (LAMBDA-I)
52    (CONST&PUSH 11)                     ; (MLIST)
53    (GETVALUE&PUSH 8)                   ; VAR
55    (LIST&PUSH 2)
57    (CONST&PUSH 12)                     ; ($MODEDECLARE)
58    (GETVALUE&PUSH 8)                   ; VAR
60    (CONST 13)                          ; ($FLOAT)
61    (LIST*&PUSH 2)
63    (GETVALUE&PUSH 7)                   ; EXP
65    (LIST&PUSH 4)
67    (LOAD 2)
68    (LIST* 2)
70    (JMP L112)
72    L72
72    (NIL)
73    (BIND 7)                            ; EXP
75    (NIL)
76    (BIND 8)                            ; VAR
78    (GETVALUE&PUSH 0)                   ; FORM
80    (LOAD 0)
81    (CAR)
82    (SETVALUE 7)                        ; EXP
84    (LOAD&CDR&STORE 0)
86    (CAR)
87    (SETVALUE 8)                        ; VAR
89    (LOAD&CDR&STORE 0)
91    (LOAD&JMPIF 11 L50)
94    (CONST&PUSH 14)                     ; (MPROG)
95    (CONST&PUSH 15)                     ; ((MLIST) (# $NUMER ...) ...)
96    (CONST&PUSH 16)                     ; ($ROMBERG_SUBR)
97    (CONST&PUSH 17)                     ; (LAMBDA)
98    (CONST&PUSH 18)                     ; (MLIST)
99    (GETVALUE&PUSH 8)                   ; VAR
101   (LIST&PUSH 2)
103   (GETVALUE&PUSH 7)                   ; EXP
105   (LIST&PUSH 3)
107   (LOAD 4)
108   (LIST*&PUSH 2)
110   (LIST 3)
112   L112
112   (SKIP 1)
114   (UNBIND 2)
116   (JMP L28)


Disassembly of function #:|(DEFMSPEC $ROMBERG (FORM) ...)-15-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $ROMBERG (FORM) ...)-15-2-1|>
(CONST 1) = $ROMBERG
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $ROMBERG (FORM) ...)-15-2-1|>
1     (CONST&PUSH 1)                      ; $ROMBERG
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $ROMBERG (FORM) ...)-15-2-1|
(CONST 0) = FORM
(CONST 1) = ROMBERG-MACRO
(CONST 2) = MEVAL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (FORM)
8 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; FORM
3     (GETVALUE&PUSH 0)                   ; FORM
5     (NIL&PUSH)
6     (CALL2&PUSH 1)                      ; ROMBERG-MACRO
8     (CALL1 2)                           ; MEVAL
10    (UNBIND1)
11    (SKIP&RET 2)


Disassembly of function #:|(DEF-TRANSLATE-PROPERTY $ROMBERG (FORM) ...)-16-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF-TRANSLATE-PROPERTY $ROMBERG (FORM) ...)-16-2-1|>
(CONST 1) = $ROMBERG
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF-TRANSLATE-PROPERTY $ROMBERG (FORM) ...)-16-2-1|>
1     (CONST&PUSH 1)                      ; $ROMBERG
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF-TRANSLATE-PROPERTY $ROMBERG (FORM) ...)-16-2-1|
(CONST 0) = FORM
(CONST 1) = $TR_NUMER
(CONST 2) = ROMBERG-MACRO
(CONST 3) = TRANSLATE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (FORM)
10 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; FORM
3     (T)
4     (BIND 1)                            ; $TR_NUMER
6     (GETVALUE&PUSH 0)                   ; FORM
8     (T&PUSH)
9     (CALL2&PUSH 2)                      ; ROMBERG-MACRO
11    (CALL1 3)                           ; TRANSLATE
13    (UNBIND 2)
15    (SKIP&RET 2)


Wrote file binary-clisp/rombrg.fas
Wrote file /cygdrive/e/temp/maxima/src/rombrg.lis