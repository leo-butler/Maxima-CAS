Listing of compilation of file /cygdrive/e/temp/maxima/src/opers.lisp
on 2002-12-17 13:32:05 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/opers.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE OPERS)-2|
(CONST 0) = OPERS
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; OPERS
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN ADD2 (X Y) ...)-3|
(CONST 0) = ADD2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ADD2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ADD2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ADD2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ADD2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ADD2
8     (SKIP&RET 1)


Disassembly of function ADD2
(CONST 0) = (MPLUS)
(CONST 1) = SIMPLIFYA
(CONST 2) = 0
(CONST 3) = (MPLUS)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
31 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&JMPIF 8 L29)                ; NUMBERP
4     (LOAD&PUSH 1)
5     (JMPIFEQTO 2 L40)                   ; 0
8     (CONST 3)                           ; (MPLUS)
9     L9
9     (PUSH)
10    (LOAD&PUSH 3)
11    (LOAD&PUSH 3)
12    (LIST&PUSH 3)
14    (T&PUSH)
15    (CALL2 1)                           ; SIMPLIFYA
17    (SKIP&RET 3)
19    L19
19    (LOAD&PUSH 2)
20    (LOAD&PUSH 2)
21    (CALLSR 2 53)                       ; +
24    (SKIP&RET 3)
26    L26
26    (LOAD 1)
27    (SKIP&RET 3)
29    L29
29    (LOAD&PUSH 1)
30    (CALLS2&JMPIF 8 L19)                ; NUMBERP
33    (LOAD&PUSH 2)
34    (CALLS2&JMPIF 145 L26)              ; ZEROP
37    (CONST 0)                           ; (MPLUS)
38    (JMP L9)
40    L40
40    (LOAD 2)
41    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN ADD2* (X Y) ...)-4|
(CONST 0) = ADD2*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ADD2*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ADD2*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ADD2*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ADD2*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ADD2*
8     (SKIP&RET 1)


Disassembly of function ADD2*
(CONST 0) = 0
(CONST 1) = SIMPLIFYA
(CONST 2) = (MPLUS)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
29 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&JMPIFNOT 8 L8)              ; NUMBERP
4     (LOAD&PUSH 1)
5     (CALLS2&JMPIF 8 L27)                ; NUMBERP
8     L8
8     (LOAD&PUSH 2)
9     (JMPIFEQTO 0 L34)                   ; 0
12    (LOAD&PUSH 1)
13    (JMPIFEQTO 0 L37)                   ; 0
16    (CONST&PUSH 2)                      ; (MPLUS)
17    (LOAD&PUSH 3)
18    (LOAD&PUSH 3)
19    (LIST 3)
21    L21
21    (PUSH)
22    (NIL&PUSH)
23    (CALL2 1)                           ; SIMPLIFYA
25    (SKIP&RET 3)
27    L27
27    (LOAD&PUSH 2)
28    (LOAD&PUSH 2)
29    (CALLSR 2 53)                       ; +
32    (SKIP&RET 3)
34    L34
34    (LOAD 1)
35    (JMP L21)
37    L37
37    (LOAD 2)
38    (JMP L21)


Disassembly of function #:|(DEFMFUN ADDN (TERMS SIMP-FLAG) ...)-5|
(CONST 0) = ADDN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ADDN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ADDN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ADDN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ADDN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ADDN
8     (SKIP&RET 1)


Disassembly of function ADDN
(CONST 0) = 0
(CONST 1) = (MPLUS)
(CONST 2) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&JMPIFNOT 2 L11)
3     (CONST&PUSH 1)                      ; (MPLUS)
4     (LOAD 3)
5     (CONS&PUSH)
6     (LOAD&PUSH 2)
7     (CALL2 2)                           ; SIMPLIFYA
9     (SKIP&RET 3)
11    L11
11    (CONST 0)                           ; 0
12    (SKIP&RET 3)


Disassembly of function #:|(DECLARE-TOP (SPECIAL $NEGDISTRIB) (MUZZLED T))-6|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN NEG (X) ...)-7|
(CONST 0) = NEG
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NEG>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NEG
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NEG
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NEG>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NEG
8     (SKIP&RET 1)


Disassembly of function NEG
(CONST 0) = $NEGDISTRIB
(CONST 1) = (MTIMES)
(CONST 2) = -1
(CONST 3) = SIMPLIFYA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2&JMPIF 8 L18)                ; NUMBERP
4     (T)
5     (BIND 0)                            ; $NEGDISTRIB
7     (CONST&PUSH 1)                      ; (MTIMES)
8     (CONST&PUSH 2)                      ; -1
9     (LOAD&PUSH 6)
10    (LIST&PUSH 3)
12    (T&PUSH)
13    (CALL2 3)                           ; SIMPLIFYA
15    (UNBIND1)
16    (SKIP&RET 2)
18    L18
18    (LOAD&PUSH 1)
19    (CALLSR 0 54)                       ; -
22    (SKIP&RET 2)


Disassembly of function #:|(DECLARE-TOP (MUZZLED NIL))-8|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN SUB (X Y) ...)-9|
(CONST 0) = SUB
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SUB>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SUB
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SUB
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SUB>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SUB
8     (SKIP&RET 1)


Disassembly of function SUB
(CONST 0) = 0
(CONST 1) = NEG
(CONST 2) = ADD
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
26 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&JMPIFNOT 8 L8)              ; NUMBERP
4     (LOAD&PUSH 1)
5     (CALLS2&JMPIF 8 L24)                ; NUMBERP
8     L8
8     (LOAD&PUSH 1)
9     (JMPIFEQTO 0 L31)                   ; 0
12    (LOAD&PUSH 2)
13    (JMPIFEQTO 0 L34)                   ; 0
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (CALL1&PUSH 1)                      ; NEG
20    (CALL2 2)                           ; ADD
22    (SKIP&RET 3)
24    L24
24    (LOAD&PUSH 2)
25    (LOAD&PUSH 2)
26    (CALLSR 1 54)                       ; -
29    (SKIP&RET 3)
31    L31
31    (LOAD 2)
32    (SKIP&RET 3)
34    L34
34    (LOAD&PUSH 1)
35    (CALL1 1)                           ; NEG
37    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN SUB* (X Y) ...)-10|
(CONST 0) = SUB*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SUB*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SUB*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SUB*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SUB*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SUB*
8     (SKIP&RET 1)


Disassembly of function SUB*
(CONST 0) = 0
(CONST 1) = NEG
(CONST 2) = SIMPLIFYA
(CONST 3) = -1
(CONST 4) = MUL
(CONST 5) = ADD
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
31 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&JMPIFNOT 8 L8)              ; NUMBERP
4     (LOAD&PUSH 1)
5     (CALLS2&JMPIF 8 L31)                ; NUMBERP
8     L8
8     (LOAD&PUSH 1)
9     (JMPIFEQTO 0 L38)                   ; 0
12    (LOAD&PUSH 2)
13    (JMPIFEQTO 0 L41)                   ; 0
16    (LOAD&PUSH 2)
17    (NIL&PUSH)
18    (CALL2&PUSH 2)                      ; SIMPLIFYA
20    (CONST&PUSH 3)                      ; -1
21    (LOAD&PUSH 3)
22    (NIL&PUSH)
23    (CALL2&PUSH 2)                      ; SIMPLIFYA
25    (CALL2&PUSH 4)                      ; MUL
27    (CALL2 5)                           ; ADD
29    (SKIP&RET 3)
31    L31
31    (LOAD&PUSH 2)
32    (LOAD&PUSH 2)
33    (CALLSR 1 54)                       ; -
36    (SKIP&RET 3)
38    L38
38    (LOAD 2)
39    (SKIP&RET 3)
41    L41
41    (LOAD&PUSH 1)
42    (CALL1 1)                           ; NEG
44    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN MUL2 (X Y) ...)-11|
(CONST 0) = MUL2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MUL2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MUL2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MUL2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MUL2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MUL2
8     (SKIP&RET 1)


Disassembly of function MUL2
(CONST 0) = 1
(CONST 1) = (MTIMES)
(CONST 2) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
27 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&JMPIFNOT 8 L8)              ; NUMBERP
4     (LOAD&PUSH 1)
5     (CALLS2&JMPIF 8 L26)                ; NUMBERP
8     L8
8     (LOAD&PUSH 2)
9     (JMPIFEQTO 0 L33)                   ; 1
12    (LOAD&PUSH 1)
13    (JMPIFEQTO 0 L36)                   ; 1
16    (CONST&PUSH 1)                      ; (MTIMES)
17    (LOAD&PUSH 3)
18    (LOAD&PUSH 3)
19    (LIST&PUSH 3)
21    (T&PUSH)
22    (CALL2 2)                           ; SIMPLIFYA
24    (SKIP&RET 3)
26    L26
26    (LOAD&PUSH 2)
27    (LOAD&PUSH 2)
28    (CALLSR 2 55)                       ; *
31    (SKIP&RET 3)
33    L33
33    (LOAD 1)
34    (SKIP&RET 3)
36    L36
36    (LOAD 2)
37    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN MUL2* (X Y) ...)-12|
(CONST 0) = MUL2*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MUL2*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MUL2*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MUL2*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MUL2*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MUL2*
8     (SKIP&RET 1)


Disassembly of function MUL2*
(CONST 0) = 1
(CONST 1) = SIMPLIFYA
(CONST 2) = (MTIMES)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
29 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&JMPIFNOT 8 L8)              ; NUMBERP
4     (LOAD&PUSH 1)
5     (CALLS2&JMPIF 8 L27)                ; NUMBERP
8     L8
8     (LOAD&PUSH 2)
9     (JMPIFEQTO 0 L34)                   ; 1
12    (LOAD&PUSH 1)
13    (JMPIFEQTO 0 L37)                   ; 1
16    (CONST&PUSH 2)                      ; (MTIMES)
17    (LOAD&PUSH 3)
18    (LOAD&PUSH 3)
19    (LIST 3)
21    L21
21    (PUSH)
22    (NIL&PUSH)
23    (CALL2 1)                           ; SIMPLIFYA
25    (SKIP&RET 3)
27    L27
27    (LOAD&PUSH 2)
28    (LOAD&PUSH 2)
29    (CALLSR 2 55)                       ; *
32    (SKIP&RET 3)
34    L34
34    (LOAD 1)
35    (JMP L21)
37    L37
37    (LOAD 2)
38    (JMP L21)


Disassembly of function #:|(DEFMFUN MUL3 (X Y Z) ...)-13|
(CONST 0) = MUL3
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MUL3>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MUL3
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MUL3
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MUL3>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MUL3
8     (SKIP&RET 1)


Disassembly of function MUL3
(CONST 0) = 1
(CONST 1) = MUL2
(CONST 2) = (MTIMES)
(CONST 3) = SIMPLIFYA
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
30 byte-code instructions:
0     (LOAD&PUSH 3)
1     (JMPIFEQTO 0 L13)                   ; 1
4     (LOAD&PUSH 2)
5     (JMPIFNOTEQTO 0 L16)                ; 1
8     (LOAD 3)
9     L9
9     (PUSH)
10    (LOAD 2)
11    (JMP L22)
13    L13
13    (LOAD 2)
14    (JMP L9)
16    L16
16    (LOAD&PUSH 1)
17    (JMPIFNOTEQTO 0 L27)                ; 1
20    (LOAD&PUSH 3)
21    (LOAD 3)
22    L22
22    (PUSH)
23    (CALL2 1)                           ; MUL2
25    (SKIP&RET 4)
27    L27
27    (CONST&PUSH 2)                      ; (MTIMES)
28    (LOAD&PUSH 4)
29    (LOAD&PUSH 4)
30    (LOAD&PUSH 4)
31    (LIST&PUSH 4)
33    (T&PUSH)
34    (CALL2 3)                           ; SIMPLIFYA
36    (SKIP&RET 4)


Disassembly of function #:|(DEFMFUN MULN (FACTORS SIMP-FLAG) ...)-14|
(CONST 0) = MULN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MULN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MULN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MULN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MULN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MULN
8     (SKIP&RET 1)


Disassembly of function MULN
(CONST 0) = 1
(CONST 1) = (MTIMES)
(CONST 2) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&JMPIFNOT 2 L14)
3     (LOAD 2)
4     (JMPIFATOM L17)
6     (CONST&PUSH 1)                      ; (MTIMES)
7     (LOAD 3)
8     (CONS&PUSH)
9     (LOAD&PUSH 2)
10    (CALL2 2)                           ; SIMPLIFYA
12    (SKIP&RET 3)
14    L14
14    (CONST 0)                           ; 1
15    (SKIP&RET 3)
17    L17
17    (LOAD 2)
18    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN DIV (X Y) ...)-15|
(CONST 0) = DIV
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DIV>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DIV
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DIV
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DIV>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DIV
8     (SKIP&RET 1)


Disassembly of function DIV
(CONST 0) = 1
(CONST 1) = -1
(CONST 2) = POWER
(CONST 3) = MUL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
13 byte-code instructions:
0     (LOAD&PUSH 2)
1     (JMPIFEQTO 0 L13)                   ; 1
4     (LOAD&PUSH 2)
5     (LOAD&PUSH 2)
6     (CONST&PUSH 1)                      ; -1
7     (CALL2&PUSH 2)                      ; POWER
9     (CALL2 3)                           ; MUL
11    (SKIP&RET 3)
13    L13
13    (LOAD&PUSH 1)
14    (CONST&PUSH 1)                      ; -1
15    (CALL2 2)                           ; POWER
17    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN DIV* (X Y) ...)-16|
(CONST 0) = DIV*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DIV*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DIV*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DIV*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DIV*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DIV*
8     (SKIP&RET 1)


Disassembly of function DIV*
(CONST 0) = 1
(CONST 1) = -1
(CONST 2) = POWER*
(CONST 3) = SIMPLIFYA
(CONST 4) = MUL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (JMPIFEQTO 0 L16)                   ; 1
4     (LOAD&PUSH 2)
5     (NIL&PUSH)
6     (CALL2&PUSH 3)                      ; SIMPLIFYA
8     (LOAD&PUSH 2)
9     (CONST&PUSH 1)                      ; -1
10    (CALL2&PUSH 2)                      ; POWER*
12    (CALL2 4)                           ; MUL
14    (SKIP&RET 3)
16    L16
16    (LOAD&PUSH 1)
17    (CONST&PUSH 1)                      ; -1
18    (CALL2 2)                           ; POWER*
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN NCMUL2 (X Y) ...)-17|
(CONST 0) = NCMUL2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NCMUL2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NCMUL2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NCMUL2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NCMUL2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NCMUL2
8     (SKIP&RET 1)


Disassembly of function NCMUL2
(CONST 0) = (MNCTIMES)
(CONST 1) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; (MNCTIMES)
1     (LOAD&PUSH 3)
2     (LOAD&PUSH 3)
3     (LIST&PUSH 3)
5     (T&PUSH)
6     (CALL2 1)                           ; SIMPLIFYA
8     (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN NCMULN (FACTORS FLAG) ...)-18|
(CONST 0) = NCMULN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NCMULN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NCMULN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NCMULN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NCMULN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NCMULN
8     (SKIP&RET 1)


Disassembly of function NCMULN
(CONST 0) = (MNCTIMES)
(CONST 1) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; (MNCTIMES)
1     (LOAD 3)
2     (CONS&PUSH)
3     (LOAD&PUSH 2)
4     (CALL2 1)                           ; SIMPLIFYA
6     (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN POWER (*BASE POWER) ...)-19|
(CONST 0) = POWER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POWER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POWER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POWER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POWER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POWER
8     (SKIP&RET 1)


Disassembly of function POWER
(CONST 0) = 1
(CONST 1) = (MEXPT)
(CONST 2) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
12 byte-code instructions:
0     (LOAD&PUSH 1)
1     (JMPIFEQTO 0 L14)                   ; 1
4     (CONST&PUSH 1)                      ; (MEXPT)
5     (LOAD&PUSH 3)
6     (LOAD&PUSH 3)
7     (LIST&PUSH 3)
9     (T&PUSH)
10    (CALL2 2)                           ; SIMPLIFYA
12    (SKIP&RET 3)
14    L14
14    (LOAD 2)
15    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN POWER* (*BASE POWER) ...)-20|
(CONST 0) = POWER*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POWER*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POWER*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POWER*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POWER*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POWER*
8     (SKIP&RET 1)


Disassembly of function POWER*
(CONST 0) = 1
(CONST 1) = SIMPLIFYA
(CONST 2) = (MEXPT)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (LOAD&PUSH 1)
1     (JMPIFEQTO 0 L15)                   ; 1
4     (CONST&PUSH 2)                      ; (MEXPT)
5     (LOAD&PUSH 3)
6     (LOAD&PUSH 3)
7     (LIST 3)
9     L9
9     (PUSH)
10    (NIL&PUSH)
11    (CALL2 1)                           ; SIMPLIFYA
13    (SKIP&RET 3)
15    L15
15    (LOAD 2)
16    (JMP L9)


Disassembly of function #:|(DEFMFUN NCPOWER (X Y) ...)-21|
(CONST 0) = NCPOWER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NCPOWER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NCPOWER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NCPOWER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NCPOWER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NCPOWER
8     (SKIP&RET 1)


Disassembly of function NCPOWER
(CONST 0) = 0
(CONST 1) = 1
(CONST 2) = (MNCEXPT)
(CONST 3) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD&PUSH 1)
1     (JMPIFEQTO 0 L18)                   ; 0
4     (LOAD&PUSH 1)
5     (JMPIFEQTO 1 L21)                   ; 1
8     (CONST&PUSH 2)                      ; (MNCEXPT)
9     (LOAD&PUSH 3)
10    (LOAD&PUSH 3)
11    (LIST&PUSH 3)
13    (T&PUSH)
14    (CALL2 3)                           ; SIMPLIFYA
16    (SKIP&RET 3)
18    L18
18    (CONST 1)                           ; 1
19    (SKIP&RET 3)
21    L21
21    (LOAD 2)
22    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN ROOT (X N) ...)-22|
(CONST 0) = ROOT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ROOT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROOT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ROOT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ROOT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ROOT
8     (SKIP&RET 1)


Disassembly of function ROOT
(CONST 0) = 0
(CONST 1) = 1
(CONST 2) = (MEXPT)
(CONST 3) = (RAT)
(CONST 4) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (JMPIFEQTO 0 L22)                   ; 0
4     (LOAD&PUSH 2)
5     (JMPIFEQTO 1 L25)                   ; 1
8     (CONST&PUSH 2)                      ; (MEXPT)
9     (LOAD&PUSH 3)
10    (CONST&PUSH 3)                      ; (RAT)
11    (CONST&PUSH 1)                      ; 1
12    (LOAD&PUSH 5)
13    (LIST&PUSH 3)
15    (LIST&PUSH 3)
17    (T&PUSH)
18    (CALL2 4)                           ; SIMPLIFYA
20    (SKIP&RET 3)
22    L22
22    (CONST 0)                           ; 0
23    (SKIP&RET 3)
25    L25
25    (CONST 1)                           ; 1
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN PORM (S X) ...)-23|
(CONST 0) = PORM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PORM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PORM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PORM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PORM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PORM
8     (SKIP&RET 1)


Disassembly of function PORM
(CONST 0) = NEG
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (LOAD&JMPIF 2 L8)
3     (LOAD&PUSH 1)
4     (CALL1 0)                           ; NEG
6     (SKIP&RET 3)
8     L8
8     (LOAD 1)
9     (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN MORP (S X) ...)-24|
(CONST 0) = MORP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MORP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MORP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MORP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MORP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MORP
8     (SKIP&RET 1)


Disassembly of function MORP
(CONST 0) = NEG
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (LOAD&JMPIF 2 L6)
3     (LOAD 1)
4     (SKIP&RET 3)
6     L6
6     (LOAD&PUSH 1)
7     (CALL1 0)                           ; NEG
9     (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN SIMPLIFY (X) ...)-25|
(CONST 0) = SIMPLIFY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SIMPLIFY>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SIMPLIFY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SIMPLIFY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SIMPLIFY>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SIMPLIFY
8     (SKIP&RET 1)


Disassembly of function SIMPLIFY
(CONST 0) = SIMPLIFYA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (LOAD&PUSH 1)
1     (NIL&PUSH)
2     (CALL2 0)                           ; SIMPLIFYA
4     (SKIP&RET 2)


Wrote file binary-clisp/opers.fas
Wrote file /cygdrive/e/temp/maxima/src/opers.lis