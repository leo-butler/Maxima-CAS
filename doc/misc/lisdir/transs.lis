Listing of compilation of file /cygdrive/e/temp/maxima/src/transs.lisp
on 2002-12-17 13:33:52 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/transs.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE TRANSS)-2|
(CONST 0) = TRANSS
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRANSS
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFUN SET-UP-TRANSLATE NIL ...)-3|
(CONST 0) = SET-UP-TRANSLATE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SET-UP-TRANSLATE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SET-UP-TRANSLATE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SET-UP-TRANSLATE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SET-UP-TRANSLATE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SET-UP-TRANSLATE
8     (SKIP&RET 1)


Disassembly of function SET-UP-TRANSLATE
(CONST 0) = |<macsym>transl.autolo|
(CONST 1) = LOAD
(CONST 2) = |<macsym>trdata.fasl|
(CONST 3) = |<maxout>dcl.fasl|
(CONST 4) = |<macsym>transl.fasl|
(CONST 5) = |<macsym>trans1.fasl|
(CONST 6) = |<macsym>troper.fasl|
(CONST 7) = |<macsym>trutil.fasl|
(CONST 8) = |<macsym>trans2.fasl|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (CONST&PUSH 0)                      ; |<macsym>transl.autolo|
1     (CALL1 1)                           ; LOAD
3     (CONST&PUSH 2)                      ; |<macsym>trdata.fasl|
4     (CALL1 1)                           ; LOAD
6     (CONST&PUSH 3)                      ; |<maxout>dcl.fasl|
7     (CALL1 1)                           ; LOAD
9     (CONST&PUSH 4)                      ; |<macsym>transl.fasl|
10    (CALL1 1)                           ; LOAD
12    (CONST&PUSH 5)                      ; |<macsym>trans1.fasl|
13    (CALL1 1)                           ; LOAD
15    (CONST&PUSH 6)                      ; |<macsym>troper.fasl|
16    (CALL1 1)                           ; LOAD
18    (CONST&PUSH 7)                      ; |<macsym>trutil.fasl|
19    (CALL1 1)                           ; LOAD
21    (CONST&PUSH 8)                      ; |<macsym>trans2.fasl|
22    (CALL1 1)                           ; LOAD
24    (SKIP&RET 1)


Disassembly of function #:|(TRANSL-MODULE TRANSS)-4|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR *TRANSL-FILE-DEBUG* NIL ...)-5-1|
(CONST 0) = *TRANSL-FILE-DEBUG*
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; *TRANSL-FILE-DEBUG*
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; *TRANSL-FILE-DEBUG*
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR *TRANSL-FILE-DEBUG* NIL ...)-5-2|
(CONST 0) = (SPECIAL *TRANSL-FILE-DEBUG*)
(CONST 1) = *TRANSL-FILE-DEBUG*
(CONST 2) = VARIABLE
(CONST 3) = 
"set this to T if you don't want to have the temporary files
	used automaticaly deleted in case of errors."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *TRANSL-FILE-DEBUG*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *TRANSL-FILE-DEBUG*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *TRANSL-FILE-DEBUG*
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; *TRANSL-FILE-DEBUG*
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "set this to T if you don't want to have the temporary files
	used automaticaly deleted in case of errors."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; *TRANSL-FILE-DEBUG*
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_OUTPUT_FILE_DEFAULT '$TRLISP ...)-6-1|
(CONST 0) = $TR_OUTPUT_FILE_DEFAULT
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = $TRLISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $TR_OUTPUT_FILE_DEFAULT
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $TR_OUTPUT_FILE_DEFAULT
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; $TRLISP
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_OUTPUT_FILE_DEFAULT '$TRLISP ...)-6-2|
(CONST 0) = (SPECIAL $TR_OUTPUT_FILE_DEFAULT)
(CONST 1) = $TR_OUTPUT_FILE_DEFAULT
(CONST 2) = $TRLISP
(CONST 3) = VARIABLE
(CONST 4) = 
"This is the second file name to be used for translated lisp
	 output."
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $TR_OUTPUT_FILE_DEFAULT)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $TR_OUTPUT_FILE_DEFAULT
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $TR_OUTPUT_FILE_DEFAULT
8     (CONST&PUSH 2)                      ; $TRLISP
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $TR_OUTPUT_FILE_DEFAULT
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "This is the second file name to be used for translated lisp
	 output."
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $TR_OUTPUT_FILE_DEFAULT
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_FILE_TTY_MESSAGESP NIL ...)-7-1|
(CONST 0) = $TR_FILE_TTY_MESSAGESP
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $TR_FILE_TTY_MESSAGESP
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $TR_FILE_TTY_MESSAGESP
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_FILE_TTY_MESSAGESP NIL ...)-7-2|
(CONST 0) = (SPECIAL $TR_FILE_TTY_MESSAGESP)
(CONST 1) = $TR_FILE_TTY_MESSAGESP
(CONST 2) = VARIABLE
(CONST 3) = 
"It TRUE messages about translation of the file are sent
	 to the TTY also."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $TR_FILE_TTY_MESSAGESP)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $TR_FILE_TTY_MESSAGESP
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $TR_FILE_TTY_MESSAGESP
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $TR_FILE_TTY_MESSAGESP
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "It TRUE messages about translation of the file are sent
	 to the TTY also."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $TR_FILE_TTY_MESSAGESP
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_WINDY T ...)-8-1|
(CONST 0) = $TR_WINDY
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $TR_WINDY
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $TR_WINDY
11    (LOAD&PUSH 1)
12    (T&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_WINDY T ...)-8-2|
(CONST 0) = (SPECIAL $TR_WINDY)
(CONST 1) = $TR_WINDY
(CONST 2) = VARIABLE
(CONST 3) = "Generate helpful comments and programming hints."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $TR_WINDY)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $TR_WINDY
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $TR_WINDY
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $TR_WINDY
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "Generate helpful comments and programming hints."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $TR_WINDY
18    (SKIP&RET 1)


Disassembly of function #:|(DEFTRVAR *TRANSLATION-MSGS-FILES* NIL ...)-9|
(CONST 0) = (SPECIAL *TRANSLATION-MSGS-FILES*)
(CONST 1) = *TRANSLATION-MSGS-FILES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *TRANSLATION-MSGS-FILES*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *TRANSLATION-MSGS-FILES*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *TRANSLATION-MSGS-FILES*
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *TRANSLATION-MSGS-FILES*
12    (SKIP&RET 1)


Disassembly of function #:|(DEFTRVAR $TR_VERSION (GET 'TRANSL-AUTOLOAD 'VERSION))-10|
(CONST 0) = (SPECIAL $TR_VERSION)
(CONST 1) = $TR_VERSION
(CONST 2) = TRANSL-AUTOLOAD
(CONST 3) = VERSION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $TR_VERSION)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $TR_VERSION
4     (CALLS1&JMPIF 79 L16)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $TR_VERSION
8     (CONST&PUSH 2)                      ; TRANSL-AUTOLOAD
9     (CONST&PUSH 3)                      ; VERSION
10    (PUSH-UNBOUND 1)
12    (CALLS2&PUSH 132)                   ; GET
14    (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
16    L16
16    (CONST 1)                           ; $TR_VERSION
17    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR TRANSL-FILE NIL ...)-11-1|
(CONST 0) = TRANSL-FILE
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRANSL-FILE
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; TRANSL-FILE
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR TRANSL-FILE NIL ...)-11-2|
(CONST 0) = (SPECIAL TRANSL-FILE)
(CONST 1) = TRANSL-FILE
(CONST 2) = VARIABLE
(CONST 3) = "output stream of $COMPFILE and $TRANSLATE_FILE"
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL TRANSL-FILE)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; TRANSL-FILE
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; TRANSL-FILE
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; TRANSL-FILE
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "output stream of $COMPFILE and $TRANSLATE_FILE"
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; TRANSL-FILE
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $COMPGRIND NIL ...)-12-1|
(CONST 0) = $COMPGRIND
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $COMPGRIND
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $COMPGRIND
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $COMPGRIND NIL ...)-12-2|
(CONST 0) = (SPECIAL $COMPGRIND)
(CONST 1) = $COMPGRIND
(CONST 2) = VARIABLE
(CONST 3) = "If TRUE lisp output will be pretty-printed."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $COMPGRIND)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $COMPGRIND
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $COMPGRIND
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $COMPGRIND
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "If TRUE lisp output will be pretty-printed."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $COMPGRIND
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED NIL ...)-13-1|
(CONST 0) = $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED NIL ...)-13-2|
(CONST 0) = (SPECIAL $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED)
(CONST 1) = $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED
(CONST 2) = VARIABLE
(CONST 3) = 
"This is set by TRANSLATE_FILE for use by user macros
	 which want to know the name of the source file."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL ...)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "This is set by TRANSLATE_FILE for use by user macros
	 which want to know the name of the source file."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $TR_TRUE_NAME_OF_FILE_BEING_TRANSLATED
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_STATE_VARS '(# $TRANSCOMPILE $TR_SEMICOMPILE ...))-14-1|
(CONST 0) = $TR_STATE_VARS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 
((MLIST) $TRANSCOMPILE $TR_SEMICOMPILE $TRANSLATE_FAST_ARRAYS
 $TR_WARN_UNDECLARED $TR_WARN_MEVAL $TR_WARN_FEXPR $TR_WARN_MODE
 $TR_WARN_UNDEFINED_VARIABLE $TR_FUNCTION_CALL_DEFAULT $TR_ARRAY_AS_REF
 $TR_NUMER $DEFINE_VARIABLE)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $TR_STATE_VARS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $TR_STATE_VARS
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; ((MLIST) $TRANSCOMPILE ...)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_STATE_VARS '(# $TRANSCOMPILE $TR_SEMICOMPILE ...))-14-2|
(CONST 0) = (SPECIAL $TR_STATE_VARS)
(CONST 1) = $TR_STATE_VARS
(CONST 2) = 
((MLIST) $TRANSCOMPILE $TR_SEMICOMPILE $TRANSLATE_FAST_ARRAYS
 $TR_WARN_UNDECLARED $TR_WARN_MEVAL $TR_WARN_FEXPR $TR_WARN_MODE
 $TR_WARN_UNDEFINED_VARIABLE $TR_FUNCTION_CALL_DEFAULT $TR_ARRAY_AS_REF
 $TR_NUMER $DEFINE_VARIABLE)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $TR_STATE_VARS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $TR_STATE_VARS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $TR_STATE_VARS
8     (CONST&PUSH 2)                      ; ((MLIST) $TRANSCOMPILE ...)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $TR_STATE_VARS
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO COMPFILE-OUTPUTNAME-TEMP NIL ...)-15|
(CONST 0) = COMPFILE-OUTPUTNAME-TEMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COMPFILE-OUTPUTNAME-TEMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; COMPFILE-OUTPUTNAME-TEMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COMPFILE-OUTPUTNAME-TEMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COMPFILE-OUTPUTNAME-TEMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; COMPFILE-OUTPUTNAME-TEMP
10    (SKIP&RET 1)


Disassembly of function COMPFILE-OUTPUTNAME-TEMP
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(PATHNAME "_cmf_")
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(PATHNAME "_cmf_")
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO COMPFILE-OUTPUTNAME NIL ...)-16|
(CONST 0) = COMPFILE-OUTPUTNAME
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COMPFILE-OUTPUTNAME>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; COMPFILE-OUTPUTNAME
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COMPFILE-OUTPUTNAME
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COMPFILE-OUTPUTNAME>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; COMPFILE-OUTPUTNAME
10    (SKIP&RET 1)


Disassembly of function COMPFILE-OUTPUTNAME
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(PATHNAME (STRIPDOLLAR $TR_OUTPUT_FILE_DEFAULT))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(PATHNAME #)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRLISP-INPUTNAME-D1 NIL ...)-17|
(CONST 0) = TRLISP-INPUTNAME-D1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRLISP-INPUTNAME-D1>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRLISP-INPUTNAME-D1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRLISP-INPUTNAME-D1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRLISP-INPUTNAME-D1>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRLISP-INPUTNAME-D1
10    (SKIP&RET 1)


Disassembly of function TRLISP-INPUTNAME-D1
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(PATHNAME "")
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(PATHNAME "")
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRLISP-OUTPUTNAME-D1 NIL ...)-18|
(CONST 0) = TRLISP-OUTPUTNAME-D1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRLISP-OUTPUTNAME-D1>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRLISP-OUTPUTNAME-D1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRLISP-OUTPUTNAME-D1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRLISP-OUTPUTNAME-D1>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRLISP-OUTPUTNAME-D1
10    (SKIP&RET 1)


Disassembly of function TRLISP-OUTPUTNAME-D1
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(PATHNAME (STRIPDOLLAR $TR_OUTPUT_FILE_DEFAULT))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(PATHNAME #)
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRLISP-OUTPUTNAME NIL ...)-19|
(CONST 0) = TRLISP-OUTPUTNAME
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRLISP-OUTPUTNAME>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRLISP-OUTPUTNAME
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRLISP-OUTPUTNAME
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRLISP-OUTPUTNAME>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRLISP-OUTPUTNAME
10    (SKIP&RET 1)


Disassembly of function TRLISP-OUTPUTNAME
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(MAKE-PATHNAME :TYPE "LISP")
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(MAKE-PATHNAME :TYPE "LISP")
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRLISP-OUTPUTNAME-TEMP NIL ...)-20|
(CONST 0) = TRLISP-OUTPUTNAME-TEMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRLISP-OUTPUTNAME-TEMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRLISP-OUTPUTNAME-TEMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRLISP-OUTPUTNAME-TEMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRLISP-OUTPUTNAME-TEMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRLISP-OUTPUTNAME-TEMP
10    (SKIP&RET 1)


Disassembly of function TRLISP-OUTPUTNAME-TEMP
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(PATHNAME "_trli_")
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(PATHNAME "_trli_")
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRTAGS-OUTPUTNAME NIL ...)-21|
(CONST 0) = TRTAGS-OUTPUTNAME
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRTAGS-OUTPUTNAME>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRTAGS-OUTPUTNAME
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRTAGS-OUTPUTNAME
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRTAGS-OUTPUTNAME>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRTAGS-OUTPUTNAME
10    (SKIP&RET 1)


Disassembly of function TRTAGS-OUTPUTNAME
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(PATHNAME "tags")
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(PATHNAME "tags")
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRTAGS-OUTPUTNAME-TEMP NIL ...)-22|
(CONST 0) = TRTAGS-OUTPUTNAME-TEMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRTAGS-OUTPUTNAME-TEMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRTAGS-OUTPUTNAME-TEMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRTAGS-OUTPUTNAME-TEMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRTAGS-OUTPUTNAME-TEMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRTAGS-OUTPUTNAME-TEMP
10    (SKIP&RET 1)


Disassembly of function TRTAGS-OUTPUTNAME-TEMP
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(PATHNAME "_tags_")
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(PATHNAME "_tags_")
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRCOMMENTS-OUTPUTNAME NIL ...)-23|
(CONST 0) = TRCOMMENTS-OUTPUTNAME
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRCOMMENTS-OUTPUTNAME>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRCOMMENTS-OUTPUTNAME
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRCOMMENTS-OUTPUTNAME
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRCOMMENTS-OUTPUTNAME>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRCOMMENTS-OUTPUTNAME
10    (SKIP&RET 1)


Disassembly of function TRCOMMENTS-OUTPUTNAME
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(PATHNAME "unlisp")
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(PATHNAME "unlisp")
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRCOMMENTS-OUTPUTNAME-TEMP NIL ...)-24|
(CONST 0) = TRCOMMENTS-OUTPUTNAME-TEMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRCOMMENTS-OUTPUTNAME-TEMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRCOMMENTS-OUTPUTNAME-TEMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRCOMMENTS-OUTPUTNAME-TEMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRCOMMENTS-OUTPUTNAME-TEMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRCOMMENTS-OUTPUTNAME-TEMP
10    (SKIP&RET 1)


Disassembly of function TRCOMMENTS-OUTPUTNAME-TEMP
(CONST 0) = 1
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = `,(PATHNAME "_unli_")
1 required argument
1 optional argument
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 48 L11)             ; >
8     (CONST 2)                           ; `,(PATHNAME "_unli_")
9     (SKIP&RET 3)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
14    (SKIP&RET 3)


Disassembly of function #:|(DEFTRVAR DECLARES NIL)-25|
(CONST 0) = (SPECIAL DECLARES)
(CONST 1) = DECLARES
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL DECLARES)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; DECLARES
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; DECLARES
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; DECLARES
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO MYTRUENAME (X) ...)-26|
(CONST 0) = MYTRUENAME
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MYTRUENAME>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MYTRUENAME
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MYTRUENAME
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MYTRUENAME>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MYTRUENAME
10    (SKIP&RET 1)


Disassembly of function MYTRUENAME
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = TRUENAME
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; TRUENAME
14    (GETVALUE&PUSH 2)                   ; X
16    (LIST 2)
18    (UNBIND1)
19    (SKIP&RET 3)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFUN RENAME-TF (NEW-NAME TRUE-IN-FILE-NAME &OPTIONAL ...) ...)-27|
(CONST 0) = RENAME-TF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RENAME-TF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RENAME-TF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RENAME-TF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RENAME-TF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RENAME-TF
8     (SKIP&RET 1)


Disassembly of function RENAME-TF
(CONST 0) = TRANSL-FILE
(CONST 1) = CLOSE
(CONST 2) = 1
(CONST 3) = SUB-SEQ
2 required arguments
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (TRANSL-FILE)
15 byte-code instructions:
0     (UNBOUND->NIL 1)
2     (NIL&PUSH)
3     (GETVALUE&PUSH 0)                   ; TRANSL-FILE
5     (CALLS1&STORE 245 0)                ; TRUENAME
8     (GETVALUE&PUSH 0)                   ; TRANSL-FILE
10    (CALL1 1)                           ; CLOSE
12    (LOAD&PUSH 2)
13    (CALLS1&PUSH 75)                    ; STRING
15    (CONST&PUSH 2)                      ; 1
16    (CALL2 3)                           ; SUB-SEQ
18    (STORE 2)
19    (LOAD&PUSH 0)
20    (LOAD&PUSH 3)
21    (CALLS1 248)                        ; RENAME-FILE
23    (SKIP&RET 5)


Disassembly of function #:|(DEFMSPEC $COMPFILE (FORMS) ...)-28-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $COMPFILE (FORMS) ...)-28-2-1|>
(CONST 1) = $COMPFILE
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $COMPFILE (FORMS) ...)-28-2-1|>
1     (CONST&PUSH 1)                      ; $COMPFILE
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $COMPFILE (FORMS) ...)-28-2-1|
(CONST 0) = *WARNED-UN-DECLARED-VARS*
(CONST 1) = *WARNED-FEXPRS*
(CONST 2) = *WARNED-MODE-VARS*
(CONST 3) = *WARNED-UNDEFINED-VARS*
(CONST 4) = WARNED-UNDEFINED-VARIABLES
(CONST 5) = TR-ABORT
(CONST 6) = TRANSL-FILE
(CONST 7) = *IN-COMPFILE*
(CONST 8) = *IN-TRANSLATE-FILE*
(CONST 9) = *IN-TRANSLATE*
(CONST 10) = *PRE-TRANSL-FORMS*
(CONST 11) = *NEW-AUTOLOAD-ENTRIES*
(CONST 12) = $TR_SEMICOMPILE
(CONST 13) = ARRAYS
(CONST 14) = EXPRS
(CONST 15) = LEXPRS
(CONST 16) = FEXPRS
(CONST 17) = SPECIALS
(CONST 18) = DECLARES
(CONST 19) = $TRANSCOMPILE
(CONST 20) = $TR_NUMER
(CONST 21) = DEFINED_VARIABLES
(CONST 22) = MFILENAME-ONLYP
(CONST 23) = $FILENAME_MERGE
(CONST 24) = ""
(CONST 25) = *TRANSLATION-MSGS-FILES*
(CONST 26) = $TR_OUTPUT_FILE_DEFAULT
(CONST 27) = STRIPDOLLAR
(CONST 28) = MERGEF
(CONST 29) = "_cmf_"
(CONST 30) = OPEN-OUT-DSK
(CONST 31) = $ALL
(CONST 32) = MEMQ
(CONST 33) = $FUNCTIONS
(CONST 34) = #.#'CAAR
(CONST 35) = L
(CONST 36) = TRANSLATE
(CONST 37) = DCONVX
(CONST 38) = PRINT*
(CONST 39) = $VERBIFY
(CONST 40) = COMPILE-FUNCTION
(CONST 41) = COMPFILE
(CONST 42) = PRINT-ABORT-MSG
(CONST 43) = $COMPGRIND
(CONST 44) = "~2%;; Function ~:@M~%"
(CONST 45) = MFORMAT
(CONST 46) = RENAME-TF
(CONST 47) = TO-MACSYMA-NAMESTRING
(CONST 48) = CLOSE
(CONST 49) = DELETEF
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: 
(TRANSL-FILE $COMPGRIND TR-ABORT L $FUNCTIONS $TR_OUTPUT_FILE_DEFAULT $TR_NUMER
 $TRANSCOMPILE $TR_SEMICOMPILE)
writes special variables : (FEXPRS LEXPRS TR-ABORT DECLARES L TRANSL-FILE *IN-COMPFILE* $TRANSCOMPILE)
187 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CAR&PUSH)
3     (LOAD&CDR&STORE 2)
5     (NIL)
6     (BIND 0)                            ; *WARNED-UN-DECLARED-VARS*
8     (NIL)
9     (BIND 1)                            ; *WARNED-FEXPRS*
11    (NIL)
12    (BIND 2)                            ; *WARNED-MODE-VARS*
14    (NIL)
15    (BIND 3)                            ; *WARNED-UNDEFINED-VARS*
17    (NIL)
18    (BIND 4)                            ; WARNED-UNDEFINED-VARIABLES
20    (NIL)
21    (BIND 5)                            ; TR-ABORT
23    (NIL)
24    (BIND 6)                            ; TRANSL-FILE
26    (NIL)
27    (BIND 7)                            ; *IN-COMPFILE*
29    (NIL)
30    (BIND 8)                            ; *IN-TRANSLATE-FILE*
32    (NIL)
33    (BIND 9)                            ; *IN-TRANSLATE*
35    (NIL)
36    (BIND 10)                           ; *PRE-TRANSL-FORMS*
38    (NIL)
39    (BIND 11)                           ; *NEW-AUTOLOAD-ENTRIES*
41    (GETVALUE 12)                       ; $TR_SEMICOMPILE
43    (BIND 12)                           ; $TR_SEMICOMPILE
45    (NIL)
46    (BIND 13)                           ; ARRAYS
48    (NIL)
49    (BIND 14)                           ; EXPRS
51    (NIL)
52    (BIND 15)                           ; LEXPRS
54    (NIL)
55    (BIND 16)                           ; FEXPRS
57    (NIL)
58    (BIND 17)                           ; SPECIALS
60    (NIL)
61    (BIND 18)                           ; DECLARES
63    (GETVALUE 19)                       ; $TRANSCOMPILE
65    (BIND 19)                           ; $TRANSCOMPILE
67    (GETVALUE 20)                       ; $TR_NUMER
69    (BIND 20)                           ; $TR_NUMER
71    (NIL)
72    (BIND 21)                           ; DEFINED_VARIABLES
74    (T)
75    (SETVALUE 19)                       ; $TRANSCOMPILE
77    (SETVALUE 7)                        ; *IN-COMPFILE*
79    (LOAD&CAR&PUSH 68)
81    (CALL1&JMPIF 22 L242)               ; MFILENAME-ONLYP
85    (CONST 24)                          ; ""
87    L87
87    (PUSH)
88    (NIL&PUSH)
89    (NIL)
90    (BIND 25)                           ; *TRANSLATION-MSGS-FILES*
92    (LOAD&PUSH 4)
93    (GETVALUE&PUSH 26)                  ; $TR_OUTPUT_FILE_DEFAULT
95    (CALL1&PUSH 27)                     ; STRIPDOLLAR
97    (CALLS1&PUSH 231)                   ; PATHNAME
99    (CALL2 28)                          ; MERGEF
101   (STORE 4)
102   (UNWIND-PROTECT-OPEN L281)
105   (CONST&PUSH 29)                     ; "_cmf_"
106   (CALLS1&PUSH 231)                   ; PATHNAME
108   (LOAD&PUSH 7)
109   (CALL2&PUSH 28)                     ; MERGEF
111   (CALL1 30)                          ; OPEN-OUT-DSK
113   (SETVALUE 6)                        ; TRANSL-FILE
115   (CONST&PUSH 31)                     ; $ALL
117   (LOAD&PUSH 76)
119   (CALL2&JMPIF 32 L129)               ; MEMQ
122   (CONST&PUSH 33)                     ; $FUNCTIONS
124   (LOAD&PUSH 76)
126   (CALL2&JMPIFNOT 32 L138)            ; MEMQ
129   L129
129   (CONST&PUSH 34)                     ; #.#'CAAR
131   (GETVALUE 33)                       ; $FUNCTIONS
133   (CDR&PUSH)
134   (CALLSR&STORE 0 22 75)              ; MAPCAR
138   L138
138   (LOAD 75)
140   (BIND 35)                           ; L
142   (NIL)
143   (BIND 18)                           ; DECLARES
145   (NIL)
146   (BIND 5)                            ; TR-ABORT
148   (NIL&PUSH)
149   (NIL)
150   (BIND 15)                           ; LEXPRS
152   (NIL)
153   (BIND 16)                           ; FEXPRS
155   (NIL&PUSH)
156   (GETVALUE 35)                       ; L
158   (JMPIFNOT L207)
160   L160
160   (GETVALUE 35)                       ; L
162   (CAR)
163   (STORE 7)
164   (JMPIFCONSP L251)
167   (LOAD&PUSH 7)
168   (CALL1 39)                          ; $VERBIFY
170   (STORE 7)
171   (PUSH)
172   (CALL1 40)                          ; COMPILE-FUNCTION
174   (STORE 0)
175   (GETVALUE 5)                        ; TR-ABORT
177   (JMPIF L259)
180   (GETVALUE 43)                       ; $COMPGRIND
182   (JMPIF L269)
185   (LOAD 0)
186   L186
186   (PUSH)
187   (CALL1 38)                          ; PRINT*
189   L189
189   (GETVALUE 35)                       ; L
191   (CDR)
192   (SETVALUE 35)                       ; L
194   (NIL)
195   (SETVALUE 18)                       ; DECLARES
197   (SETVALUE 5)                        ; TR-ABORT
199   (SETVALUE 15)                       ; LEXPRS
201   (SETVALUE 16)                       ; FEXPRS
203   (GETVALUE 35)                       ; L
205   (JMPIF L160)
207   L207
207   (SKIP 1)
209   (UNBIND 2)
211   (SKIP 1)
213   (UNBIND 3)
215   (LOAD&PUSH 6)
216   (NIL&PUSH)
217   (LOAD&PUSH 75)
219   (CALL 3 46)                         ; RENAME-TF
222   (STORE 6)
223   (PUSH)
224   (CALL1 47)                          ; TO-MACSYMA-NAMESTRING
226   (UNWIND-PROTECT-NORMAL-EXIT)
227   (GETVALUE 6)                        ; TRANSL-FILE
229   (JMPIFNOT L285)
231   L231
231   (PUSH)
232   (CALL1 48)                          ; CLOSE
234   (LOADI 0 0 3)
238   (JMPIFNOT L295)
240   (JMP L291)
242   L242
242   (LOAD&CAR&PUSH 68)
244   (LOAD&CDR&STORE 69)
246   (CALL1 23)                          ; $FILENAME_MERGE
248   (JMP L87)
251   L251
251   (LOAD&PUSH 7)
252   (CALL1&PUSH 36)                     ; TRANSLATE
254   (CALL1 37)                          ; DCONVX
256   (JMP L186)
259   L259
259   (LOAD&PUSH 7)
260   (CONST&PUSH 41)                     ; COMPFILE
262   (CALL2 42)                          ; PRINT-ABORT-MSG
264   (STORE 22)
266   (JMP L189)
269   L269
269   (GETVALUE&PUSH 6)                   ; TRANSL-FILE
271   (CONST&PUSH 44)                     ; "~2%;; Function ~:@M~%"
273   (LOAD&PUSH 9)
274   (CALL 3 45)                         ; MFORMAT
277   (LOAD 0)
278   (JMP L186)
281   L281
281   (GETVALUE 6)                        ; TRANSL-FILE
283   (JMPIF L231)
285   L285
285   (LOADI 0 0 3)
289   (JMPIFNOT L295)
291   L291
291   (GETVALUE&PUSH 6)                   ; TRANSL-FILE
293   (CALL1 49)                          ; DELETEF
295   L295
295   (UNWIND-PROTECT-CLOSE)
296   (UNBIND1)
297   (SKIP 2)
299   (UNBIND 22)
301   (SKIP&RET 3)


Disassembly of function #:|(DEFUN COMPILE-FUNCTION (F) ...)-29|
(CONST 0) = COMPILE-FUNCTION
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COMPILE-FUNCTION>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COMPILE-FUNCTION
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COMPILE-FUNCTION
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COMPILE-FUNCTION>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COMPILE-FUNCTION
8     (SKIP&RET 1)


Disassembly of function COMPILE-FUNCTION
(CONST 0) = F
(CONST 1) = *TRANSLATION-MSGS-FILES*
(CONST 2) = "~%Translating ~:@M"
(CONST 3) = MFORMAT
(CONST 4) = TR-MFUN
(CONST 5) = TR-ABORT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (TR-ABORT F *TRANSLATION-MSGS-FILES*)
18 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; F
3     (GETVALUE&PUSH 1)                   ; *TRANSLATION-MSGS-FILES*
5     (CONST&PUSH 2)                      ; "~%Translating ~:@M"
6     (GETVALUE&PUSH 0)                   ; F
8     (CALL 3 3)                          ; MFORMAT
11    (GETVALUE&PUSH 0)                   ; F
13    (CALL1&PUSH 4)                      ; TR-MFUN
15    (GETVALUE 5)                        ; TR-ABORT
17    (JMPIF L23)
19    (POP)
20    L20
20    (UNBIND1)
21    (SKIP&RET 2)
23    L23
23    (NIL)
24    (SKIP 1)
26    (JMP L20)


Disassembly of function #:|(DEFVAR TR-DEFAULTF NIL ...)-30|
(CONST 0) = (SPECIAL TR-DEFAULTF)
(CONST 1) = TR-DEFAULTF
(CONST 2) = VARIABLE
(CONST 3) = "A default only for the case of NO arguments to $TRANSLATE_FILE"
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL TR-DEFAULTF)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; TR-DEFAULTF
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; TR-DEFAULTF
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; TR-DEFAULTF
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "A default only for the case of NO arguments to $TRANSLATE_FILE"
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; TR-DEFAULTF
18    (SKIP&RET 1)


Disassembly of function #:|(PROGN 'COMPILE (DEFUN MERGEF # ...))-31-2|
(CONST 0) = MERGEF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MERGEF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MERGEF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MERGEF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MERGEF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MERGEF
8     (SKIP&RET 1)


Disassembly of function MERGEF
(CONST 0) = X
(CONST 1) = Y
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X Y)
10 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE&PUSH 1)                   ; Y
8     (GETVALUE&PUSH 0)                   ; X
10    (PUSH-UNBOUND 2)
12    (CALLS1 241)                        ; MERGE-PATHNAMES
14    (UNBIND 2)
16    (SKIP&RET 3)

WARNING in $COMPILE_FILE in lines 264..283 :
variable WARNINGS-P is not used.
Misspelled or missing IGNORE declaration?

Disassembly of function #:|(DEFUN $COMPILE_FILE (INPUT-FILE &OPTIONAL BIN-FILE ...) ...)-32|
(CONST 0) = $COMPILE_FILE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $COMPILE_FILE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $COMPILE_FILE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $COMPILE_FILE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $COMPILE_FILE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $COMPILE_FILE
8     (SKIP&RET 1)


Disassembly of function $COMPILE_FILE
(CONST 0) = MAXIMA-STRING
(CONST 1) = "LISP"
(CONST 2) = (MLIST)
(CONST 3) = TRANSLATE-FILE
(CONST 4) = :OUTPUT-FILE
(CONST 5) = COMPILE-FILE
1 required argument
2 optional arguments
No rest parameter
No keyword parameters
58 byte-code instructions:
0     (UNBOUND->NIL 2)
2     (UNBOUND->NIL 1)
4     (NIL&PUSH)
5     (LOAD&PUSH 4)
6     (CALL1 0)                           ; MAXIMA-STRING
8     (STORE 4)
9     (LOAD&JMPIF 3 L67)
12    (LOAD&JMPIFNOT 2 L19)
15    L15
15    (PUSH)
16    (CALL1 0)                           ; MAXIMA-STRING
18    (STORE 2)
19    L19
19    (LOAD&PUSH 4)
20    (PUSH-UNBOUND 1)
22    (CALLS1&PUSH 236)                   ; PATHNAME-TYPE
24    (CONST&PUSH 1)                      ; "LISP"
25    (PUSH-UNBOUND 4)
27    (CALLS1&JMPIF 59 L76)               ; STRING-EQUAL
30    (LOAD&PUSH 4)
31    (LOAD&PUSH 3)
32    (CALL2 3)                           ; TRANSLATE-FILE
34    (STORE 0)
35    (CDR)
36    (CDR)
37    (CAR)
38    (STORE 4)
39    L39
39    (LOAD&PUSH 4)
40    (CONST&PUSH 4)                      ; :OUTPUT-FILE
41    (LOAD&JMPIF 5 L45)
44    (T)
45    L45
45    (PUSH)
46    (CALL 3 5)                          ; COMPILE-FILE
49    (NV-TO-STACK 3)
51    (LOAD&JMPIF 0 L56)
54    (LOAD 2)
55    (STORE 6)
56    L56
56    (SKIP 3)
58    (LOAD&PUSH 0)
59    (LOAD&PUSH 4)
60    (LIST&PUSH 1)
62    (CALLSR 2 34)                       ; APPEND
65    (SKIP&RET 5)
67    L67
67    (PUSH)
68    (CALL1 0)                           ; MAXIMA-STRING
70    (STORE 3)
71    (LOAD&JMPIFNOT 2 L19)
74    (JMP L15)
76    L76
76    (CONST&PUSH 2)                      ; (MLIST)
77    (LOAD&PUSH 5)
78    (LIST 2)
80    (STORE 0)
81    (JMP L39)


Disassembly of function #:|(DEFUN MAXIMA-STRING (SYMB) ...)-33|
(CONST 0) = MAXIMA-STRING
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAXIMA-STRING>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAXIMA-STRING
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAXIMA-STRING
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAXIMA-STRING>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAXIMA-STRING
8     (SKIP&RET 1)


Disassembly of function MAXIMA-STRING
(CONST 0) = "&"
(CONST 1) = STRING-LEFT-TRIM
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; "&"
1     (LOAD&PUSH 2)
2     (CALLS1&PUSH 75)                    ; STRING
4     (CALL2 1)                           ; STRING-LEFT-TRIM
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN $TRANSLATE_FILE (INPUT-FILE &OPTIONAL OUTPUT-FILE) ...)-34|
(CONST 0) = $TRANSLATE_FILE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $TRANSLATE_FILE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $TRANSLATE_FILE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $TRANSLATE_FILE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $TRANSLATE_FILE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $TRANSLATE_FILE
8     (SKIP&RET 1)


Disassembly of function $TRANSLATE_FILE
(CONST 0) = MAXIMA-STRING
(CONST 1) = TRANSLATE-FILE
1 required argument
1 optional argument
No rest parameter
No keyword parameters
13 byte-code instructions:
0     (UNBOUND->NIL 1)
2     (LOAD&PUSH 2)
3     (CALL1 0)                           ; MAXIMA-STRING
5     (STORE 2)
6     (LOAD&JMPIFNOT 1 L13)
9     (PUSH)
10    (CALL1 0)                           ; MAXIMA-STRING
12    (STORE 1)
13    L13
13    (LOAD&PUSH 2)
14    (LOAD&PUSH 2)
15    (CALL2 1)                           ; TRANSLATE-FILE
17    (SKIP&RET 3)


Disassembly of function #:|(DEFMVAR $TR_GEN_TAGS NIL ...)-35-1|
(CONST 0) = $TR_GEN_TAGS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $TR_GEN_TAGS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $TR_GEN_TAGS
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $TR_GEN_TAGS NIL ...)-35-2|
(CONST 0) = (SPECIAL $TR_GEN_TAGS)
(CONST 1) = $TR_GEN_TAGS
(CONST 2) = VARIABLE
(CONST 3) = 
"If TRUE, TRANSLATE_FILE generates a TAGS file for
	 use by the text editor"
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $TR_GEN_TAGS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $TR_GEN_TAGS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $TR_GEN_TAGS
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $TR_GEN_TAGS
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "If TRUE, TRANSLATE_FILE generates a TAGS file for
	 use by the text editor"
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $TR_GEN_TAGS
18    (SKIP&RET 1)


Disassembly of function #:|(DEFVAR *PRETTY-PRINT-TRANSLATION* T)-36|
(CONST 0) = (SPECIAL *PRETTY-PRINT-TRANSLATION*)
(CONST 1) = *PRETTY-PRINT-TRANSLATION*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL ...)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *PRETTY-PRINT-TRANSLATION*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *PRETTY-PRINT-TRANSLATION*
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *PRETTY-PRINT-TRANSLATION*
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN CALL-BATCH1 (IN-STREAM OUT-STREAM &AUX ...) ...)-37|
(CONST 0) = CALL-BATCH1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CALL-BATCH1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CALL-BATCH1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CALL-BATCH1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CALL-BATCH1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CALL-BATCH1
8     (SKIP&RET 1)


Disassembly of function CALL-BATCH1
(CONST 0) = CLEANUP
(CONST 1) = #\n
(CONST 2) = NEWLINE
(CONST 3) = MREAD
(CONST 4) = TRANSLATE-MACEXPR-TOPLEVEL
(CONST 5) = *PRETTY-PRINT-TRANSLATION*
(CONST 6) = #<COMPILED-CLOSURE CALL-BATCH1-1>
(CONST 7) = FORMAT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*PRETTY-PRINT-TRANSLATION*)
33 byte-code instructions:
0     (PUSH-NIL 2)
2     (CALL0 0)                           ; CLEANUP
4     (LOAD&PUSH 4)
5     (CONST&PUSH 1)                      ; #\n
6     (CALL2 2)                           ; NEWLINE
8     (JMP L33)
10    L10
10    (LOAD&PUSH 0)
11    (LOAD&PUSH 4)
12    (CALLS1 131)                        ; PPRINT
14    (JMP L33)
16    L16
16    (LOAD 1)
17    (CDR)
18    (CDR)
19    (CAR&PUSH)
20    (CALL1 4)                           ; TRANSLATE-MACEXPR-TOPLEVEL
22    (STORE 0)
23    (GETVALUE 5)                        ; *PRETTY-PRINT-TRANSLATION*
25    (JMPIF L10)
27    (LOAD&PUSH 3)
28    (CONST&PUSH 6)                      ; #<COMPILED-CLOSURE CALL-BATCH1-1>
29    (LOAD&PUSH 2)
30    (CALL 3 7)                          ; FORMAT
33    L33
33    (LOAD&PUSH 4)
34    (CALL1 3)                           ; MREAD
36    (STORE 1)
37    (JMPIFNOT L41)
39    (JMPIFCONSP L16)
41    L41
41    (NIL)
42    (SKIP&RET 5)


Disassembly of function CALL-BATCH1-1
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
5 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 4)
2     (CALLS1 132)                        ; PRINC
4     (LOAD 1)
5     (SKIP&RET 4)


Disassembly of function #:|(DEFUN TRANSLATE-FROM-STREAM (FROM-STREAM &KEY TO-STREAM ...) ...)-38|
(CONST 0) = TRANSLATE-FROM-STREAM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRANSLATE-FROM-STREAM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRANSLATE-FROM-STREAM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRANSLATE-FROM-STREAM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRANSLATE-FROM-STREAM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TRANSLATE-FROM-STREAM
8     (SKIP&RET 1)


Disassembly of function TRANSLATE-FROM-STREAM
(CONST 0) = :TO-STREAM
(CONST 1) = :EVAL
(CONST 2) = :PRETTY
(CONST 3) = :PRINT-FUNCTION
(CONST 4) = #.#'PRIN1
(CONST 5) = *WARNED-UN-DECLARED-VARS*
(CONST 6) = *WARNED-FEXPRS*
(CONST 7) = *WARNED-MODE-VARS*
(CONST 8) = *WARNED-UNDEFINED-VARS*
(CONST 9) = WARNED-UNDEFINED-VARIABLES
(CONST 10) = TR-ABORT
(CONST 11) = TRANSL-FILE
(CONST 12) = *IN-COMPFILE*
(CONST 13) = *IN-TRANSLATE-FILE*
(CONST 14) = *IN-TRANSLATE*
(CONST 15) = *PRE-TRANSL-FORMS*
(CONST 16) = *NEW-AUTOLOAD-ENTRIES*
(CONST 17) = $TR_SEMICOMPILE
(CONST 18) = ARRAYS
(CONST 19) = EXPRS
(CONST 20) = LEXPRS
(CONST 21) = FEXPRS
(CONST 22) = SPECIALS
(CONST 23) = DECLARES
(CONST 24) = $TRANSCOMPILE
(CONST 25) = $TR_NUMER
(CONST 26) = DEFINED_VARIABLES
(CONST 27) = *PRINT-PRETTY*
(CONST 28) = MREAD
(CONST 29) = TRANSLATE-MACEXPR-TOPLEVEL
(CONST 30) = V
(CONST 31) = FORMS-TO-COMPILE-QUEUE
(CONST 32) = #<COMPILED-CLOSURE TRANSLATE-FROM-STREAM-1>
(CONST 33) = *STANDARD-OUTPUT*
(CONST 34) = #<COMPILED-CLOSURE TRANSLATE-FROM-STREAM-2>
(CONST 35) = TO-STREAM
1 required argument
0 optional arguments
No rest parameter
4 keyword parameters: :TO-STREAM, :EVAL, :PRETTY, :PRINT-FUNCTION.
reads special variables: 
(*STANDARD-OUTPUT* FORMS-TO-COMPILE-QUEUE V $TR_NUMER $TRANSCOMPILE
 $TR_SEMICOMPILE)
writes special variables : (FORMS-TO-COMPILE-QUEUE V)
126 byte-code instructions:
0     (UNBOUND->NIL 4)
2     (UNBOUND->NIL 3)
4     (UNBOUND->NIL 2)
6     (JMPIFBOUNDP 1 L11)
9     (CONST 4)                           ; #.#'PRIN1
10    (STORE 1)
11    L11
11    (PUSH-NIL 2)
13    (NIL)
14    (BIND 5)                            ; *WARNED-UN-DECLARED-VARS*
16    (NIL)
17    (BIND 6)                            ; *WARNED-FEXPRS*
19    (NIL)
20    (BIND 7)                            ; *WARNED-MODE-VARS*
22    (NIL)
23    (BIND 8)                            ; *WARNED-UNDEFINED-VARS*
25    (NIL)
26    (BIND 9)                            ; WARNED-UNDEFINED-VARIABLES
28    (NIL)
29    (BIND 10)                           ; TR-ABORT
31    (NIL)
32    (BIND 11)                           ; TRANSL-FILE
34    (NIL)
35    (BIND 12)                           ; *IN-COMPFILE*
37    (NIL)
38    (BIND 13)                           ; *IN-TRANSLATE-FILE*
40    (NIL)
41    (BIND 14)                           ; *IN-TRANSLATE*
43    (NIL)
44    (BIND 15)                           ; *PRE-TRANSL-FORMS*
46    (NIL)
47    (BIND 16)                           ; *NEW-AUTOLOAD-ENTRIES*
49    (GETVALUE 17)                       ; $TR_SEMICOMPILE
51    (BIND 17)                           ; $TR_SEMICOMPILE
53    (NIL)
54    (BIND 18)                           ; ARRAYS
56    (NIL)
57    (BIND 19)                           ; EXPRS
59    (NIL)
60    (BIND 20)                           ; LEXPRS
62    (NIL)
63    (BIND 21)                           ; FEXPRS
65    (NIL)
66    (BIND 22)                           ; SPECIALS
68    (NIL)
69    (BIND 23)                           ; DECLARES
71    (GETVALUE 24)                       ; $TRANSCOMPILE
73    (BIND 24)                           ; $TRANSCOMPILE
75    (GETVALUE 25)                       ; $TR_NUMER
77    (BIND 25)                           ; $TR_NUMER
79    (NIL)
80    (BIND 26)                           ; DEFINED_VARIABLES
82    (T)
83    (BIND 13)                           ; *IN-TRANSLATE-FILE*
85    (LOAD 73)
87    (BIND 27)                           ; *PRINT-PRETTY*
89    (JMP L198)
92    L92
92    (LOAD&PUSH 72)
94    (CALLS1 91)                         ; EVAL
96    (LOAD&JMPIFNOT 78 L139)
99    (JMP L131)
101   L101
101   (LOAD&PUSH 79)
103   (GETVALUE&PUSH 30)                  ; V
105   (LOAD&PUSH 84)
107   (FUNCALL 2)
109   (LOAD&JMPIFNOT 81 L187)
113   (JMP L183)
116   L116
116   (LOAD 73)
118   (CDR)
119   (CDR)
120   (CAR&PUSH)
121   (CALL1 29)                          ; TRANSLATE-MACEXPR-TOPLEVEL
123   (STORE 72)
125   (LOAD&JMPIF 77 L92)
128   (LOAD&JMPIFNOT 78 L139)
131   L131
131   (LOAD&PUSH 75)
133   (LOAD&PUSH 73)
135   (LOAD&PUSH 80)
137   (FUNCALL 2)
139   L139
139   (NIL)
140   (BIND 30)                           ; V
142   (GETVALUE&PUSH 31)                  ; FORMS-TO-COMPILE-QUEUE
144   (LOAD&JMPIFNOT 0 L192)
147   L147
147   (LOAD&CAR&PUSH 0)
149   (LOAD 0)
150   (SETVALUE 30)                       ; V
152   (SKIP 1)
154   (CONST&PUSH 32)                     ; #<COMPILED-CLOSURE TRANSLATE-FROM-STREAM-1>
156   (GETVALUE&PUSH 33)                  ; *STANDARD-OUTPUT*
158   (CONST&PUSH 30)                     ; V
160   (GETVALUE&PUSH 30)                  ; V
162   (CALLSR 3 21)                       ; FUNCALL
165   (CONST&PUSH 34)                     ; #<COMPILED-CLOSURE TRANSLATE-FROM-STREAM-2>
167   (GETVALUE&PUSH 33)                  ; *STANDARD-OUTPUT*
169   (CONST&PUSH 35)                     ; TO-STREAM
171   (LOAD&PUSH 85)
173   (CALLSR 3 21)                       ; FUNCALL
176   (LOAD&JMPIF 82 L101)
180   (LOAD&JMPIFNOT 81 L187)
183   L183
183   (GETVALUE&PUSH 30)                  ; V
185   (CALLS1 91)                         ; EVAL
187   L187
187   (LOAD&CDR&STORE 0)
189   (LOAD&JMPIF 0 L147)
192   L192
192   (SKIP 1)
194   (UNBIND1)
195   (NIL)
196   (SETVALUE 31)                       ; FORMS-TO-COMPILE-QUEUE
198   L198
198   (LOAD&PUSH 79)
200   (CALL1 28)                          ; MREAD
202   (STORE 73)
204   (JMPIFNOT L209)
206   (JMPIFCONSP L116)
209   L209
209   (NIL)
210   (UNBIND 24)
212   (SKIP&RET 8)


Disassembly of function TRANSLATE-FROM-STREAM-1
(CONST 0) = 
"
The value of "
(CONST 1) = " is "
3 required arguments
0 optional arguments
Rest parameter
No keyword parameters
16 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
The value of "
1     (LOAD&PUSH 5)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 3)
7     (LOAD&PUSH 5)
8     (CALLS1 132)                        ; PRINC
10    (CONST&PUSH 1)                      ; " is "
11    (LOAD&PUSH 5)
12    (PUSH-UNBOUND 2)
14    (CALLS1 137)                        ; WRITE-STRING
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 5)
18    (CALLS1 132)                        ; PRINC
20    (LOAD 1)
21    (SKIP&RET 5)


Disassembly of function TRANSLATE-FROM-STREAM-2
(CONST 0) = 
"
The value of "
(CONST 1) = " is "
3 required arguments
0 optional arguments
Rest parameter
No keyword parameters
16 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
The value of "
1     (LOAD&PUSH 5)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 3)
7     (LOAD&PUSH 5)
8     (CALLS1 132)                        ; PRINC
10    (CONST&PUSH 1)                      ; " is "
11    (LOAD&PUSH 5)
12    (PUSH-UNBOUND 2)
14    (CALLS1 137)                        ; WRITE-STRING
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 5)
18    (CALLS1 132)                        ; PRINC
20    (LOAD 1)
21    (SKIP&RET 5)


Disassembly of function #:|(DEFVAR TRF-START-HOOK NIL)-39|
(CONST 0) = (SPECIAL TRF-START-HOOK)
(CONST 1) = TRF-START-HOOK
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL TRF-START-HOOK)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; TRF-START-HOOK
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; TRF-START-HOOK
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; TRF-START-HOOK
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN DELETE-OLD-AND-OPEN (X) ...)-40|
(CONST 0) = DELETE-OLD-AND-OPEN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DELETE-OLD-AND-OPEN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DELETE-OLD-AND-OPEN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DELETE-OLD-AND-OPEN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DELETE-OLD-AND-OPEN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DELETE-OLD-AND-OPEN
8     (SKIP&RET 1)


Disassembly of function DELETE-OLD-AND-OPEN
(CONST 0) = X
(CONST 1) = :OUTPUT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
8 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CONST&PUSH 1)                      ; :OUTPUT
6     (PUSH-UNBOUND 5)
8     (CALLS1 249)                        ; OPEN
10    (UNBIND1)
11    (SKIP&RET 2)


Disassembly of function #:|(DEFUN ALTER-PATHNAME (PATHNAME &REST OPTIONS) ...)-41|
(CONST 0) = ALTER-PATHNAME
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ALTER-PATHNAME>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ALTER-PATHNAME
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ALTER-PATHNAME
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ALTER-PATHNAME>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ALTER-PATHNAME
8     (SKIP&RET 1)


Disassembly of function ALTER-PATHNAME
(CONST 0) = MAKE-PATHNAME
(CONST 1) = :DEFAULTS
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-PATHNAME
1     (CONST&PUSH 1)                      ; :DEFAULTS
2     (LOAD&PUSH 4)
3     (CALLS1&PUSH 231)                   ; PATHNAME
5     (LOAD 4)
6     (APPLY&SKIP&RET 2 3)


Disassembly of function #:|(DEFUN INSERT-NECESSARY-FUNCTION-DECLARES (STREAM) ...)-42|
(CONST 0) = INSERT-NECESSARY-FUNCTION-DECLARES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INSERT-NECESSARY-FUNCTION-DECLARES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; INSERT-NECESSARY-FUNCTION-DECLARES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INSERT-NECESSARY-FUNCTION-DECLARES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INSERT-NECESSARY-FUNCTION-DECLARES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; INSERT-NECESSARY-FUNCTION-DECLARES
8     (SKIP&RET 1)


Disassembly of function INSERT-NECESSARY-FUNCTION-DECLARES
(CONST 0) = V
(CONST 1) = *UNTRANSLATED-FUNCTIONS-CALLED*
(CONST 2) = ONCE-TRANSLATED
(CONST 3) = #<COMPILED-CLOSURE INSERT-NECESSARY-FUNCTION-DECLARES-1>
(CONST 4) = FORMAT
(CONST 5) = ($EVAL_WHEN)
(CONST 6) = $TRANSLATE
(CONST 7) = ($DECLARE_TRANSLATED)
(CONST 8) = MGRIND
(CONST 9) = #<COMPILED-CLOSURE INSERT-NECESSARY-FUNCTION-DECLARES-2>
(CONST 10) = *STANDARD-OUTPUT*
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*STANDARD-OUTPUT* V *UNTRANSLATED-FUNCTIONS-CALLED*)
writes special variables : (*UNTRANSLATED-FUNCTIONS-CALLED* V)
60 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; V
3     (GETVALUE&PUSH 1)                   ; *UNTRANSLATED-FUNCTIONS-CALLED*
5     (PUSH-NIL 2)
7     (LOAD&JMPIFNOT 2 L46)
10    L10
10    (LOAD&CAR&PUSH 2)
12    (LOAD 0)
13    (SETVALUE 0)                        ; V
15    (STORE 0)
16    (CONST&PUSH 2)                      ; ONCE-TRANSLATED
17    (PUSH-UNBOUND 1)
19    (CALLS2&JMPIFNOT 132 L41)           ; GET
22    (GETVALUE&PUSH 0)                   ; V
24    (GETVALUE&PUSH 1)                   ; *UNTRANSLATED-FUNCTIONS-CALLED*
26    (PUSH-UNBOUND 7)
28    (CALLS2 81)                         ; DELETE
30    (SETVALUE 1)                        ; *UNTRANSLATED-FUNCTIONS-CALLED*
32    (LOAD&JMPIF 0 L55)
35    (GETVALUE&PUSH 0)                   ; V
37    (NIL)
38    (CONS)
39    (STORE 0)
40    (STORE 1)
41    L41
41    (LOAD&CDR&STORE 2)
43    (LOAD&JMPIF 2 L10)
46    L46
46    (LOAD&JMPIF 1 L66)
49    (NIL)
50    L50
50    (SKIP 3)
52    (UNBIND1)
53    (SKIP&RET 2)
55    L55
55    (PUSH)
56    (GETVALUE&PUSH 0)                   ; V
58    (NIL)
59    (CONS)
60    (STORE 1)
61    (PUSH)
62    (CALLS1 171)                        ; SYSTEM::%RPLACD
64    (JMP L41)
66    L66
66    (LOAD&PUSH 7)
67    (CONST&PUSH 3)                      ; #<COMPILED-CLOSURE INSERT-NECESSARY-FUNCTION-DECLARES-1>
68    (CALL2 4)                           ; FORMAT
70    (CONST&PUSH 5)                      ; ($EVAL_WHEN)
71    (CONST&PUSH 6)                      ; $TRANSLATE
72    (CONST&PUSH 7)                      ; ($DECLARE_TRANSLATED)
73    (LOAD 4)
74    (CONS&PUSH)
75    (LIST&PUSH 3)
77    (LOAD&PUSH 8)
78    (CALL2 8)                           ; MGRIND
80    (CONST&PUSH 9)                      ; #<COMPILED-CLOSURE INSERT-NECESSARY-FUNCTION-DECLARES-2>
81    (GETVALUE&PUSH 10)                  ; *STANDARD-OUTPUT*
83    (CALLSR 1 21)                       ; FUNCALL
86    (NIL)
87    (JMP L50)


Disassembly of function INSERT-NECESSARY-FUNCTION-DECLARES-1
(CONST 0) = 2
(CONST 1) = SYSTEM::FORMAT-TERPRI
(CONST 2) = 
";;The following functions declaration should ;;go at the front of your macsyma file 
;;"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 2)
1     (PUSH-NIL 2)
3     (CONST&PUSH 0)                      ; 2
4     (CALL 4 1)                          ; SYSTEM::FORMAT-TERPRI
7     (CONST&PUSH 2)                      ; ";;The following functions declaration should ;;go at the front of your macsyma file 
;;"
8     (LOAD&PUSH 3)
9     (PUSH-UNBOUND 2)
11    (CALLS1 137)                        ; WRITE-STRING
13    (LOAD 1)
14    (SKIP&RET 3)


Disassembly of function INSERT-NECESSARY-FUNCTION-DECLARES-2
(CONST 0) = 
"
See the extra declarations at the end of the translated file.  They should be included in you macsyma file, and you should retranslate."
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
See the extra declarations at the end of the translated file.  They should be included in you macsyma file, and you should retranslate."
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function #:|(DEFUN TRANSLATE-FILE (IN-FILE-NAME OUT-FILE-NAME &OPTIONAL ...) ...)-43|
(CONST 0) = TRANSLATE-FILE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRANSLATE-FILE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRANSLATE-FILE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRANSLATE-FILE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRANSLATE-FILE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TRANSLATE-FILE
8     (SKIP&RET 1)


Disassembly of function TRANSLATE-FILE
(CONST 0) = $TR_FILE_TTY_MESSAGESP
(CONST 1) = *TRANSLATION-MSGS-FILES*
(CONST 2) = *UNTRANSLATED-FUNCTIONS-CALLED*
(CONST 3) = *WARNED-UN-DECLARED-VARS*
(CONST 4) = *WARNED-FEXPRS*
(CONST 5) = *WARNED-MODE-VARS*
(CONST 6) = *WARNED-UNDEFINED-VARS*
(CONST 7) = WARNED-UNDEFINED-VARIABLES
(CONST 8) = TR-ABORT
(CONST 9) = TRANSL-FILE
(CONST 10) = *IN-COMPFILE*
(CONST 11) = *IN-TRANSLATE-FILE*
(CONST 12) = *IN-TRANSLATE*
(CONST 13) = *PRE-TRANSL-FORMS*
(CONST 14) = *NEW-AUTOLOAD-ENTRIES*
(CONST 15) = $TR_SEMICOMPILE
(CONST 16) = ARRAYS
(CONST 17) = EXPRS
(CONST 18) = LEXPRS
(CONST 19) = FEXPRS
(CONST 20) = SPECIALS
(CONST 21) = DECLARES
(CONST 22) = $TRANSCOMPILE
(CONST 23) = $TR_NUMER
(CONST 24) = DEFINED_VARIABLES
(CONST 25) = :TYPE
(CONST 26) = "LISP"
(CONST 27) = ALTER-PATHNAME
(CONST 28) = "UNLISP"
(CONST 29) = #.#'VALUES
(CONST 30) = :OUTPUT
(CONST 31) = *STANDARD-OUTPUT*
(CONST 32) = #<COMPILED-CLOSURE TRANSLATE-FILE-1>
(CONST 33) = FORMAT
(CONST 34) = #<COMPILED-CLOSURE TRANSLATE-FILE-2>
(CONST 35) = #<COMPILED-CLOSURE TRANSLATE-FILE-3>
(CONST 36) = "~%;;** Variable settings were **~%~%"
(CONST 37) = MFORMAT
(CONST 38) = $TR_STATE_VARS
(CONST 39) = V
(CONST 40) = ";;~:M:~:M;~%"
(CONST 41) = *TERMINAL-IO*
(CONST 42) = "~%Translation begun on ~A.~%"
(CONST 43) = CALL-BATCH1
(CONST 44) = INSERT-NECESSARY-FUNCTION-DECLARES
(CONST 45) = (MLIST)
(CONST 46) = NAMESTRING
(CONST 47) = PATHNAME
(CONST 48) = CLOSE
(CONST 49) = :ABORT
2 required arguments
1 optional argument
No rest parameter
No keyword parameters
reads special variables: 
(*TERMINAL-IO* V $TR_STATE_VARS *TRANSLATION-MSGS-FILES* *STANDARD-OUTPUT*
 $TR_NUMER $TRANSCOMPILE $TR_SEMICOMPILE $TR_FILE_TTY_MESSAGESP)
writes special variables : (V *TRANSLATION-MSGS-FILES* *IN-TRANSLATE-FILE*)
222 byte-code instructions:
0     (JMPIFBOUNDP 1 L6)
3     (GETVALUE 0)                        ; $TR_FILE_TTY_MESSAGESP
5     (STORE 1)
6     L6
6     (PUSH-NIL 2)
8     (NIL)
9     (BIND 1)                            ; *TRANSLATION-MSGS-FILES*
11    (NIL)
12    (BIND 2)                            ; *UNTRANSLATED-FUNCTIONS-CALLED*
14    (NIL)
15    (BIND 3)                            ; *WARNED-UN-DECLARED-VARS*
17    (NIL)
18    (BIND 4)                            ; *WARNED-FEXPRS*
20    (NIL)
21    (BIND 5)                            ; *WARNED-MODE-VARS*
23    (NIL)
24    (BIND 6)                            ; *WARNED-UNDEFINED-VARS*
26    (NIL)
27    (BIND 7)                            ; WARNED-UNDEFINED-VARIABLES
29    (NIL)
30    (BIND 8)                            ; TR-ABORT
32    (NIL)
33    (BIND 9)                            ; TRANSL-FILE
35    (NIL)
36    (BIND 10)                           ; *IN-COMPFILE*
38    (NIL)
39    (BIND 11)                           ; *IN-TRANSLATE-FILE*
41    (NIL)
42    (BIND 12)                           ; *IN-TRANSLATE*
44    (NIL)
45    (BIND 13)                           ; *PRE-TRANSL-FORMS*
47    (NIL)
48    (BIND 14)                           ; *NEW-AUTOLOAD-ENTRIES*
50    (GETVALUE 15)                       ; $TR_SEMICOMPILE
52    (BIND 15)                           ; $TR_SEMICOMPILE
54    (NIL)
55    (BIND 16)                           ; ARRAYS
57    (NIL)
58    (BIND 17)                           ; EXPRS
60    (NIL)
61    (BIND 18)                           ; LEXPRS
63    (NIL)
64    (BIND 19)                           ; FEXPRS
66    (NIL)
67    (BIND 20)                           ; SPECIALS
69    (NIL)
70    (BIND 21)                           ; DECLARES
72    (GETVALUE 22)                       ; $TRANSCOMPILE
74    (BIND 22)                           ; $TRANSCOMPILE
76    (GETVALUE 23)                       ; $TR_NUMER
78    (BIND 23)                           ; $TR_NUMER
80    (NIL)
81    (BIND 24)                           ; DEFINED_VARIABLES
83    (T)
84    (SETVALUE 11)                       ; *IN-TRANSLATE-FILE*
86    (LOAD&JMPIF 76 L91)
89    (LOAD 77)
91    L91
91    (PUSH)
92    (CONST&PUSH 25)                     ; :TYPE
93    (CONST&PUSH 26)                     ; "LISP"
94    (CALL 3 27)                         ; ALTER-PATHNAME
97    (STORE 72)
99    (LOAD&PUSH 77)
101   (CONST&PUSH 25)                     ; :TYPE
102   (CONST&PUSH 28)                     ; "UNLISP"
103   (CALL 3 27)                         ; ALTER-PATHNAME
106   (STORE 73)
108   (LOAD&PUSH 77)
110   (PUSH-UNBOUND 6)
112   (CALLS1&PUSH 249)                   ; OPEN
114   (UNWIND-PROTECT-OPEN L354)
117   (CONST 29)                          ; #.#'VALUES
119   (MVCALLP)
120   (LOAD&PUSH 76)
122   (CONST&PUSH 30)                     ; :OUTPUT
124   (PUSH-UNBOUND 5)
126   (CALLS1&PUSH 249)                   ; OPEN
128   (UNWIND-PROTECT-OPEN L318)
131   (CONST 29)                          ; #.#'VALUES
133   (MVCALLP)
134   (LOAD&PUSH 81)
136   (CONST&PUSH 30)                     ; :OUTPUT
138   (PUSH-UNBOUND 5)
140   (CALLS1&PUSH 249)                   ; OPEN
142   (UNWIND-PROTECT-OPEN L282)
145   (CONST 29)                          ; #.#'VALUES
147   (MVCALLP)
148   (LOAD&PUSH 3)
149   (LIST 1)
151   (SETVALUE 1)                        ; *TRANSLATION-MSGS-FILES*
153   (LOAD&JMPIFNOT 87 L163)
156   (GETVALUE&PUSH 31)                  ; *STANDARD-OUTPUT*
158   (GETVALUE 1)                        ; *TRANSLATION-MSGS-FILES*
160   (CONS)
161   (SETVALUE 1)                        ; *TRANSLATION-MSGS-FILES*
163   L163
163   (LOAD&PUSH 7)
164   (CONST&PUSH 32)                     ; #<COMPILED-CLOSURE TRANSLATE-FILE-1>
166   (CALL2 33)                          ; FORMAT
168   (LOAD&PUSH 7)
169   (CONST&PUSH 34)                     ; #<COMPILED-CLOSURE TRANSLATE-FILE-2>
171   (CALL2 33)                          ; FORMAT
173   (LOAD&PUSH 3)
174   (CONST&PUSH 35)                     ; #<COMPILED-CLOSURE TRANSLATE-FILE-3>
176   (LOAD&PUSH 13)
177   (CALLS1&PUSH 231)                   ; PATHNAME
179   (PUSH-UNBOUND 1)
181   (CALLS1&PUSH 244)                   ; NAMESTRING
183   (CALL 3 33)                         ; FORMAT
186   (LOAD&PUSH 7)
187   (CONST&PUSH 36)                     ; "~%;;** Variable settings were **~%~%"
189   (CALL2 37)                          ; MFORMAT
191   (NIL&PUSH)
192   (GETVALUE 38)                       ; $TR_STATE_VARS
194   (CDR&PUSH)
195   (LOAD 1)
196   (BIND 39)                           ; V
198   (LOAD&JMPIFNOT 3 L225)
201   L201
201   (LOAD&CAR&PUSH 3)
203   (LOAD 0)
204   (SETVALUE 39)                       ; V
206   (SKIP 1)
208   (LOAD&PUSH 12)
209   (CONST&PUSH 40)                     ; ";;~:M:~:M;~%"
211   (GETVALUE&PUSH 39)                  ; V
213   (GETVALUE&PUSH 39)                  ; V
215   (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
217   (CALL 4 37)                         ; MFORMAT
220   (LOAD&CDR&STORE 3)
222   (LOAD&JMPIF 3 L201)
225   L225
225   (UNBIND1)
226   (SKIP 2)
228   (GETVALUE&PUSH 41)                  ; *TERMINAL-IO*
230   (CONST&PUSH 42)                     ; "~%Translation begun on ~A.~%"
232   (LOAD&PUSH 13)
233   (CALLS1&PUSH 231)                   ; PATHNAME
235   (CALL 3 37)                         ; MFORMAT
238   (LOAD&PUSH 11)
239   (LOAD&PUSH 8)
240   (CALL2 43)                          ; CALL-BATCH1
242   (LOAD&PUSH 7)
243   (CALL1 44)                          ; INSERT-NECESSARY-FUNCTION-DECLARES
245   (CONST&PUSH 45)                     ; (MLIST)
247   (CONST&PUSH 46)                     ; NAMESTRING
249   (CONST&PUSH 47)                     ; PATHNAME
251   (LOAD&PUSH 14)
252   (LOAD&PUSH 11)
253   (LOAD&PUSH 8)
254   (LIST&PUSH 3)
256   (CALLSR&PUSH 0 22)                  ; MAPCAR
259   (CALLSR 0 22)                       ; MAPCAR
262   (CONS&PUSH)
263   (LOADI 0 0 2)
267   (JMPIFNOT L272)
269   (PUSH)
270   (CALL1 48)                          ; CLOSE
272   L272
272   (MVCALL)
273   (UNWIND-PROTECT-NORMAL-EXIT)
274   (LOADI 0 0 0)
278   (JMPIFNOT L295)
280   (JMP L288)
282   L282
282   (LOADI 0 0 0)
286   (JMPIFNOT L295)
288   L288
288   (PUSH)
289   (CONST&PUSH 49)                     ; :ABORT
291   (T&PUSH)
292   (CALL 3 48)                         ; CLOSE
295   L295
295   (UNWIND-PROTECT-CLOSE)
296   (SKIP 1)
298   (MV-TO-STACK)
299   (LOADI 0 0 2)
303   (JMPIFNOT L308)
305   (PUSH)
306   (CALL1 48)                          ; CLOSE
308   L308
308   (MVCALL)
309   (UNWIND-PROTECT-NORMAL-EXIT)
310   (LOADI 0 0 0)
314   (JMPIFNOT L331)
316   (JMP L324)
318   L318
318   (LOADI 0 0 0)
322   (JMPIFNOT L331)
324   L324
324   (PUSH)
325   (CONST&PUSH 49)                     ; :ABORT
327   (T&PUSH)
328   (CALL 3 48)                         ; CLOSE
331   L331
331   (UNWIND-PROTECT-CLOSE)
332   (SKIP 1)
334   (MV-TO-STACK)
335   (LOADI 0 0 2)
339   (JMPIFNOT L344)
341   (PUSH)
342   (CALL1 48)                          ; CLOSE
344   L344
344   (MVCALL)
345   (UNWIND-PROTECT-NORMAL-EXIT)
346   (LOADI 0 0 0)
350   (JMPIFNOT L367)
352   (JMP L360)
354   L354
354   (LOADI 0 0 0)
358   (JMPIFNOT L367)
360   L360
360   (PUSH)
361   (CONST&PUSH 49)                     ; :ABORT
363   (T&PUSH)
364   (CALL 3 48)                         ; CLOSE
367   L367
367   (UNWIND-PROTECT-CLOSE)
368   (SKIP 1)
370   (UNBIND 24)
372   (SKIP&RET 6)


Disassembly of function TRANSLATE-FILE-1
(CONST 0) = 
";;; -*- Mode: Lisp; package:maxima; syntax:common-lisp ;Base: 10 -*- ;;;
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; ";;; -*- Mode: Lisp; package:maxima; syntax:common-lisp ;Base: 10 -*- ;;;
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function TRANSLATE-FILE-2
(CONST 0) = 
"
(in-package \"MAXIMA\")"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
(in-package \"MAXIMA\")"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function TRANSLATE-FILE-3
(CONST 0) = 
"
This is the unlisp file for "
(CONST 1) = #\Space
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
12 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
This is the unlisp file for "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (CONST&PUSH 1)                      ; #\Space
11    (LOAD&PUSH 4)
12    (CALLS1 136)                        ; WRITE-CHAR
14    (LOAD 1)
15    (SKIP&RET 4)


Disassembly of function #:|(DEFUN PRINT* (P) ...)-44|
(CONST 0) = PRINT*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PRINT*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PRINT*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PRINT*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PRINT*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PRINT*
8     (SKIP&RET 1)


Disassembly of function PRINT*
(CONST 0) = P
(CONST 1) = ^W
(CONST 2) = TRANSL-FILE
(CONST 3) = OUTFILES
(CONST 4) = ^R
(CONST 5) = $LOADPRINT
(CONST 6) = SUB-PRINT*
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (P TRANSL-FILE)
15 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (T)
4     (BIND 1)                            ; ^W
6     (GETVALUE&PUSH 2)                   ; TRANSL-FILE
8     (LIST 1)
10    (BIND 3)                            ; OUTFILES
12    (T)
13    (BIND 4)                            ; ^R
15    (NIL)
16    (BIND 5)                            ; $LOADPRINT
18    (GETVALUE&PUSH 0)                   ; P
20    (CALL1 6)                           ; SUB-PRINT*
22    (UNBIND 5)
24    (SKIP&RET 2)


Disassembly of function #:|(DEFUN SUB-PRINT* (P &AUX #) ...)-45|
(CONST 0) = SUB-PRINT*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SUB-PRINT*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SUB-PRINT*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SUB-PRINT*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SUB-PRINT*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SUB-PRINT*
8     (SKIP&RET 1)


Disassembly of function SUB-PRINT*
(CONST 0) = P
(CONST 1) = FLAG
(CONST 2) = PROGN
(CONST 3) = 'COMPILE
(CONST 4) = SUB-PRINT*
(CONST 5) = $TR_SEMICOMPILE
(CONST 6) = (EVAL-WHEN INCLUDEF)
(CONST 7) = MEMQ
(CONST 8) = |(PROGN|
(CONST 9) = PRINC*
(CONST 10) = TERPRI*
(CONST 11) = $COMPGRIND
(CONST 12) = SPRIN1
(CONST 13) = TRANSL-FILE
(CONST 14) = |)|
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (FLAG TRANSL-FILE $COMPGRIND $TR_SEMICOMPILE P)
writes special variable : (FLAG)
68 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (NIL)
4     (BIND 1)                            ; FLAG
6     (GETVALUE&PUSH 0)                   ; P
8     (CALLS2 5)                          ; ATOM
10    (JMPIF1 L60)
12    (GETVALUE 0)                        ; P
14    (CAR&PUSH)
15    (JMPIFNOTEQTO 2 L31)                ; PROGN
18    (GETVALUE 0)                        ; P
20    (CDR)
21    (JMPIFNOT L31)
23    (GETVALUE 0)                        ; P
25    (CDR)
26    (CAR&PUSH)
27    (CONST&PUSH 3)                      ; 'COMPILE
28    (CALLS2&JMPIF 2 L64)                ; EQUAL
31    L31
31    (GETVALUE 5)                        ; $TR_SEMICOMPILE
33    (JMPIF L75)
35    (SETVALUE 1)                        ; FLAG
37    (JMPIF L86)
39    L39
39    (GETVALUE 11)                       ; $COMPGRIND
41    (JMPIF L95)
43    L43
43    (GETVALUE&PUSH 0)                   ; P
45    (GETVALUE&PUSH 13)                  ; TRANSL-FILE
47    (CALLS1 129)                        ; PRIN1
49    (GETVALUE 1)                        ; FLAG
51    (JMPIFNOT L56)
53    L53
53    (CONST&PUSH 14)                     ; |)|
54    (CALL1 9)                           ; PRINC*
56    L56
56    (GETVALUE&PUSH 13)                  ; TRANSL-FILE
58    (CALLS1 139)                        ; TERPRI
60    L60
60    (UNBIND 2)
62    (SKIP&RET 2)
64    L64
64    (CONST&SYMBOL-FUNCTION&PUSH 4)      ; SUB-PRINT*
66    (GETVALUE 0)                        ; P
68    (CDR)
69    (CDR&PUSH)
70    (CALLSR 0 24)                       ; MAPC
73    (JMP L60)
75    L75
75    (GETVALUE 0)                        ; P
77    (CAR&PUSH)
78    (CONST&PUSH 6)                      ; (EVAL-WHEN INCLUDEF)
79    (CALL2 7)                           ; MEMQ
81    (NOT)
82    (SETVALUE 1)                        ; FLAG
84    (JMPIFNOT L39)
86    L86
86    (CONST&PUSH 8)                      ; |(PROGN|
87    (CALL1 9)                           ; PRINC*
89    (CALL0 10)                          ; TERPRI*
91    (GETVALUE 11)                       ; $COMPGRIND
93    (JMPIFNOT L43)
95    L95
95    (GETVALUE&PUSH 0)                   ; P
97    (CALL1 12)                          ; SPRIN1
99    (GETVALUE 1)                        ; FLAG
101   (JMPIFNOT L56)
103   (JMP L53)


Disassembly of function #:|(DEFUN PRINC* (FORM) ...)-46|
(CONST 0) = PRINC*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PRINC*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PRINC*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PRINC*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PRINC*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PRINC*
8     (SKIP&RET 1)


Disassembly of function PRINC*
(CONST 0) = TRANSL-FILE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (TRANSL-FILE)
4 byte-code instructions:
0     (LOAD&PUSH 1)
1     (GETVALUE&PUSH 0)                   ; TRANSL-FILE
3     (CALLS1 132)                        ; PRINC
5     (SKIP&RET 2)


Disassembly of function #:|(DEFUN NPRINC* (&REST FORM) ...)-47|
(CONST 0) = NPRINC*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NPRINC*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NPRINC*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NPRINC*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NPRINC*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NPRINC*
8     (SKIP&RET 1)


Disassembly of function NPRINC*
(CONST 0) = X
(CONST 1) = TRANSL-FILE
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (TRANSL-FILE X)
18 byte-code instructions:
0     (LOAD&PUSH 1)
1     (JMP L19)
3     L3
3     (LOAD&CAR&PUSH 0)
5     (LOAD 0)
6     (BIND 0)                            ; X
8     (GETVALUE&PUSH 0)                   ; X
10    (GETVALUE&PUSH 1)                   ; TRANSL-FILE
12    (CALLS1 132)                        ; PRINC
14    (UNBIND1)
15    (SKIP 1)
17    (LOAD&CDR&STORE 0)
19    L19
19    (LOAD&PUSH 0)
20    (CALLS1&JMPIFNOT 146 L3)            ; ENDP
23    (SKIP 1)
25    (LOAD 1)
26    (SKIP&RET 2)


Disassembly of function #:|(DEFUN TERPRI* NIL ...)-48|
(CONST 0) = TERPRI*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TERPRI*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TERPRI*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TERPRI*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TERPRI*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TERPRI*
8     (SKIP&RET 1)


Disassembly of function TERPRI*
(CONST 0) = TRANSL-FILE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (TRANSL-FILE)
3 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; TRANSL-FILE
2     (CALLS1 139)                        ; TERPRI
4     (SKIP&RET 1)


Disassembly of function #:|(DEFUN PRINT-MODULE (M) ...)-49|
(CONST 0) = PRINT-MODULE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PRINT-MODULE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PRINT-MODULE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PRINT-MODULE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PRINT-MODULE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PRINT-MODULE
8     (SKIP&RET 1)


Disassembly of function PRINT-MODULE
(CONST 0) = M
(CONST 1) = " "
(CONST 2) = " version "
(CONST 3) = VERSION
(CONST 4) = NPRINC*
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (M)
12 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; M
3     (CONST&PUSH 1)                      ; " "
4     (GETVALUE&PUSH 0)                   ; M
6     (CONST&PUSH 2)                      ; " version "
7     (GETVALUE&PUSH 0)                   ; M
9     (CONST&PUSH 3)                      ; VERSION
10    (PUSH-UNBOUND 1)
12    (CALLS2&PUSH 132)                   ; GET
14    (CALL 4 4)                          ; NPRINC*
17    (UNBIND1)
18    (SKIP&RET 2)


Disassembly of function #:|(DEFUN NEW-COMMENT-LINE NIL ...)-50|
(CONST 0) = NEW-COMMENT-LINE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NEW-COMMENT-LINE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NEW-COMMENT-LINE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NEW-COMMENT-LINE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NEW-COMMENT-LINE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NEW-COMMENT-LINE
8     (SKIP&RET 1)


Disassembly of function NEW-COMMENT-LINE
(CONST 0) = TERPRI*
(CONST 1) = ";;;"
(CONST 2) = PRINC*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CALL0 0)                           ; TERPRI*
2     (CONST&PUSH 1)                      ; ";;;"
3     (CALL1 2)                           ; PRINC*
5     (SKIP&RET 1)


Disassembly of function #:|(DEFUN PRINT-TRANSL-MODULES NIL ...)-51|
(CONST 0) = PRINT-TRANSL-MODULES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PRINT-TRANSL-MODULES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PRINT-TRANSL-MODULES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PRINT-TRANSL-MODULES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PRINT-TRANSL-MODULES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PRINT-TRANSL-MODULES
8     (SKIP&RET 1)


Disassembly of function PRINT-TRANSL-MODULES
(CONST 0) = NEW-COMMENT-LINE
(CONST 1) = TRANSL-AUTOLOAD
(CONST 2) = PRINT-MODULE
(CONST 3) = 0
(CONST 4) = TRANSL-MODULES
(CONST 5) = ZL-DELETE
(CONST 6) = 3
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (TRANSL-MODULES)
25 byte-code instructions:
0     (CALL0 0)                           ; NEW-COMMENT-LINE
2     (CONST&PUSH 1)                      ; TRANSL-AUTOLOAD
3     (CALL1 2)                           ; PRINT-MODULE
5     (CONST&PUSH 3)                      ; 0
6     (CONST&PUSH 1)                      ; TRANSL-AUTOLOAD
7     (GETVALUE&PUSH 4)                   ; TRANSL-MODULES
9     (CALLS1&PUSH 158)                   ; COPY-LIST
11    (CALL2&PUSH 5)                      ; ZL-DELETE
13    (LOAD&JMPIFNOT 0 L38)
16    L16
16    (CONST&PUSH 3)                      ; 0
17    (LOAD&PUSH 2)
18    (CONST&PUSH 6)                      ; 3
19    (CALLS2&PUSH 184)                   ; REM
21    (CALLSR&JMPIFNOT 1 45 L27)          ; =
25    (CALL0 0)                           ; NEW-COMMENT-LINE
27    L27
27    (LOAD&CAR&PUSH 0)
29    (CALL1 2)                           ; PRINT-MODULE
31    (LOAD&CDR&STORE 0)
33    (LOAD&INC&STORE 1)
35    (LOAD&JMPIF 0 L16)
38    L38
38    (NIL)
39    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PRINT-TRANSL-HEADER (SOURCE) ...)-52|
(CONST 0) = PRINT-TRANSL-HEADER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PRINT-TRANSL-HEADER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PRINT-TRANSL-HEADER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PRINT-TRANSL-HEADER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PRINT-TRANSL-HEADER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PRINT-TRANSL-HEADER
8     (SKIP&RET 1)


Disassembly of function PRINT-TRANSL-HEADER
(CONST 0) = TRANSL-FILE
(CONST 1) = ";;; -*- Mode: Lisp; package:maxima; syntax:common-lisp -*-~%"
(CONST 2) = MFORMAT
(CONST 3) = ";;; Translated code for ~A"
(CONST 4) = ";;; Translated MACSYMA functions generated by COMPFILE."
(CONST 5) = 
"~%;;; Written on ~:M, from MACSYMA ~A~
	    ~%;;; Translated for ~A~%"
(CONST 6) = $TIMEDATE
(CONST 7) = $VERSION
(CONST 8) = PRINT-TRANSL-MODULES
(CONST 9) = 
"~%~
	   ~%(includef (cond ((status feature ITS) '|DSK:LIBMAX;TPRELU >|)~
	   ~%                ((status feature Multics) '|translate|)~
	   ~%                ((status feature Unix) '|libmax//tprelu.l|)~
	   ~%                (t (MAXIMA-ERROR '|Unknown system, see GJC@MIT-MC|))))~
           ~%~
           ~%(eval-when (compile eval)~
           ~%  (or (status feature lispm)~
	   ~%      (setq *infile-name-key*~
	   ~%               ((lambda (file-name)~
	   ~%                           ;; temp crock for multics.~
	   ~%                          (cond ((eq (ml-typep file-name) 'list)~
	   ~%                                 (namestring file-name))~
	   ~%                                (t file-name)))~
	   ~%                  (truename infile)))))~
           ~%~
           ~%(eval-when (compile)~
           ~%   (setq $tr_semicompile '~S)~
           ~%   (setq forms-to-compile-queue ()))~
           ~%~%(comment ~S)~%~%"
(CONST 10) = $TR_SEMICOMPILE
(CONST 11) = $TRANSCOMPILE
(CONST 12) = UPDATE-GLOBAL-DECLARES
(CONST 13) = $COMPGRIND
(CONST 14) = ";;; General declarations required for translated MACSYMA code.~%"
(CONST 15) = DECLARE
(CONST 16) = DECLARES
(CONST 17) = PRINT*
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (DECLARES $COMPGRIND $TRANSCOMPILE $TR_SEMICOMPILE $VERSION TRANSL-FILE)
44 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; TRANSL-FILE
2     (CONST&PUSH 1)                      ; ";;; -*- Mode: Lisp; package:maxima; syntax:common-lisp -*-~%"
3     (CALL2 2)                           ; MFORMAT
5     (LOAD&JMPIF 1 L43)
8     (GETVALUE&PUSH 0)                   ; TRANSL-FILE
10    (CONST&PUSH 4)                      ; ";;; Translated MACSYMA functions generated by COMPFILE."
11    (CALL2 2)                           ; MFORMAT
13    L13
13    (GETVALUE&PUSH 0)                   ; TRANSL-FILE
15    (CONST&PUSH 5)                      ; "~%;;; Written on ~:M, from MACSYMA ~A~
	    ~%;;; Translated for ~A~%"
16    (CALL0 6)                           ; $TIMEDATE
18    (PUSH)
19    (GETVALUE&PUSH 7)                   ; $VERSION
21    (NIL&PUSH)
22    (CALL 5 2)                          ; MFORMAT
25    (CALL0 8)                           ; PRINT-TRANSL-MODULES
27    (GETVALUE&PUSH 0)                   ; TRANSL-FILE
29    (CONST&PUSH 9)                      ; "~%~
	   ~%(includef (cond ((status feature ITS) '|DSK:LIBMAX;TPRELU >|)~
	   ~%                ((status feature Multics) '|translate|)~
	   ~%                ((status feature Unix) '|libmax//tprelu.l|)~
	   ~%                (t (MAXIMA-ERROR '|Unknown system, see GJC@MIT-MC|))))~
           ~%~
           ~%(eval-when (compile eval)~
           ~%  (or (status feature lispm)~
	   ~%      (setq *infile-name-key*~
	   ~%               ((lambda (file-name)~
	   ~%                           ;; temp crock for multics.~
	   ~%                          (cond ((eq (ml-typep file-name) 'list)~
	   ~%                                 (namestring file-name))~
	   ~%                                (t file-name)))~
	   ~%                  (truename infile)))))~
           ~%~
           ~%(eval-when (compile)~
           ~%   (setq $tr_semicompile '~S)~
           ~%   (setq forms-to-compile-queue ()))~
           ~%~%(comment ~S)~%~%"
30    (GETVALUE&PUSH 10)                  ; $TR_SEMICOMPILE
32    (LOAD&PUSH 4)
33    (CALL 4 2)                          ; MFORMAT
36    (GETVALUE 11)                       ; $TRANSCOMPILE
38    (JMPIF L52)
40    (NIL)
41    (SKIP&RET 2)
43    L43
43    (GETVALUE&PUSH 0)                   ; TRANSL-FILE
45    (CONST&PUSH 3)                      ; ";;; Translated code for ~A"
46    (LOAD&PUSH 3)
47    (CALL 3 2)                          ; MFORMAT
50    (JMP L13)
52    L52
52    (CALL0 12)                          ; UPDATE-GLOBAL-DECLARES
54    (GETVALUE 13)                       ; $COMPGRIND
56    (JMPIFNOT L63)
58    (GETVALUE&PUSH 0)                   ; TRANSL-FILE
60    (CONST&PUSH 14)                     ; ";;; General declarations required for translated MACSYMA code.~%"
61    (CALL2 2)                           ; MFORMAT
63    L63
63    (CONST&PUSH 15)                     ; DECLARE
64    (GETVALUE 16)                       ; DECLARES
66    (CONS&PUSH)
67    (CALL1 17)                          ; PRINT*
69    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PRINT-ABORT-MSG (FUN FROM) ...)-53|
(CONST 0) = PRINT-ABORT-MSG
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PRINT-ABORT-MSG>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PRINT-ABORT-MSG
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PRINT-ABORT-MSG
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PRINT-ABORT-MSG>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PRINT-ABORT-MSG
8     (SKIP&RET 1)


Disassembly of function PRINT-ABORT-MSG
(CONST 0) = *TRANSLATION-MSGS-FILES*
(CONST 1) = 
"~:@M failed to Translate.~
            ~%~A will continue, but file output will be aborted."
(CONST 2) = MFORMAT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*TRANSLATION-MSGS-FILES*)
6 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; *TRANSLATION-MSGS-FILES*
2     (CONST&PUSH 1)                      ; "~:@M failed to Translate.~
            ~%~A will continue, but file output will be aborted."
3     (LOAD&PUSH 4)
4     (LOAD&PUSH 4)
5     (CALL 4 2)                          ; MFORMAT
8     (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO EXTENSION-FILENAME (X) ...)-54|
(CONST 0) = EXTENSION-FILENAME
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXTENSION-FILENAME>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXTENSION-FILENAME
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXTENSION-FILENAME
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXTENSION-FILENAME>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; EXTENSION-FILENAME
10    (SKIP&RET 1)


Disassembly of function EXTENSION-FILENAME
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = CADDR
(CONST 4) = NAMELIST
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
19 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L24)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; CADDR
14    (CONST&PUSH 4)                      ; NAMELIST
15    (GETVALUE&PUSH 2)                   ; X
17    (LIST&PUSH 2)
19    (LIST 2)
21    (UNBIND1)
22    (SKIP&RET 3)
24    L24
24    (LOAD&PUSH 2)
25    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
27    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PUMP-STREAM (IN OUT &OPTIONAL ...) ...)-55|
(CONST 0) = PUMP-STREAM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PUMP-STREAM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PUMP-STREAM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PUMP-STREAM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PUMP-STREAM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PUMP-STREAM
8     (SKIP&RET 1)


Disassembly of function PUMP-STREAM
(CONST 0) = #.MOST-POSITIVE-FIXNUM
(CONST 1) = N
(CONST 2) = 0
(CONST 3) = -1
(CONST 4) = +TYI
(CONST 5) = +TYO
2 required arguments
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (N)
writes special variable : (N)
28 byte-code instructions:
0     (JMPIFBOUNDP 1 L4)
3     (CONST 0)                           ; #.MOST-POSITIVE-FIXNUM
4     L4
4     (BIND 1)                            ; N
6     (CONST&PUSH 2)                      ; 0
7     (JMP L19)
9     L9
9     (LOAD&PUSH 0)
10    (LOAD&PUSH 7)
11    (CALL2 5)                           ; +TYO
13    (GETVALUE&PUSH 1)                   ; N
15    (CALLS2 151)                        ; 1-
17    (SETVALUE 1)                        ; N
19    L19
19    (GETVALUE&PUSH 1)                   ; N
21    (CALLS2&JMPIF 145 L35)              ; ZEROP
24    (LOAD&PUSH 7)
25    (CONST&PUSH 3)                      ; -1
26    (CALL2 4)                           ; +TYI
28    (STORE 0)
29    (PUSH)
30    (CONST&PUSH 3)                      ; -1
31    (CALLSR&JMPIFNOT 1 45 L9)           ; =
35    L35
35    (NIL)
36    (SKIP 1)
38    (UNBIND1)
39    (SKIP&RET 4)


Disassembly of function #:|(DEFMSPEC $TRANSLATE (FUNCTS) ...)-56-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $TRANSLATE (FUNCTS) ...)-56-2-1|>
(CONST 1) = $TRANSLATE
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $TRANSLATE (FUNCTS) ...)-56-2-1|>
1     (CONST&PUSH 1)                      ; $TRANSLATE
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $TRANSLATE (FUNCTS) ...)-56-2-1|
(CONST 0) = $LISTP
(CONST 1) = "Use the function TRANSLATE_FILE"
(CONST 2) = MERROR
(CONST 3) = $FUNCTIONS
(CONST 4) = MEMQ
(CONST 5) = $ALL
(CONST 6) = CAAR
(CONST 7) = L
(CONST 8) = V
(CONST 9) = $VERBIFY
(CONST 10) = TRANSLATE-FUNCTION
(CONST 11) = " is an illegal argument to TRANSLATE."
(CONST 12) = TR-TELL
(CONST 13) = (MLIST)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (V L $FUNCTIONS)
writes special variables : (V L)
63 byte-code instructions:
0     (LOAD&CDR&STORE 1)
2     (JMPIFNOT L8)
4     (CAR&PUSH)
5     (CALL1&JMPIF 0 L66)                 ; $LISTP
8     L8
8     (CONST&PUSH 3)                      ; $FUNCTIONS
9     (LOAD&PUSH 2)
10    (CALL2&JMPIF 4 L18)                 ; MEMQ
13    (CONST&PUSH 5)                      ; $ALL
14    (LOAD&PUSH 2)
15    (CALL2&JMPIFNOT 4 L26)              ; MEMQ
18    L18
18    (CONST&PUSH 6)                      ; CAAR
19    (GETVALUE 3)                        ; $FUNCTIONS
21    (CDR&PUSH)
22    (CALLSR&STORE 0 22 1)               ; MAPCAR
26    L26
26    (LOAD 1)
27    (BIND 7)                            ; L
29    (NIL)
30    (BIND 8)                            ; V
32    (GETVALUE 7)                        ; L
34    (JMPIFNOT L56)
36    L36
36    (GETVALUE 7)                        ; L
38    (CAR)
39    (JMPIFATOM L81)
41    (GETVALUE 7)                        ; L
43    (CAR&PUSH)
44    (CONST&PUSH 11)                     ; " is an illegal argument to TRANSLATE."
45    (CALL2 12)                          ; TR-TELL
47    L47
47    (GETVALUE 7)                        ; L
49    (CDR)
50    (SETVALUE 7)                        ; L
52    (GETVALUE 7)                        ; L
54    (JMPIF L36)
56    L56
56    (CONST&PUSH 13)                     ; (MLIST)
57    (GETVALUE&PUSH 8)                   ; V
59    (CALLS2 73)                         ; NREVERSE
61    (CONS)
62    (UNBIND 2)
64    (SKIP&RET 2)
66    L66
66    (CONST&PUSH 1)                      ; "Use the function TRANSLATE_FILE"
67    (CALL1 2)                           ; MERROR
69    (SKIP&RET 2)
71    L71
71    (PUSH)
72    (GETVALUE 8)                        ; V
74    (CONS)
75    (SETVALUE 8)                        ; V
77    (SKIP 1)
79    (JMP L47)
81    L81
81    (GETVALUE 7)                        ; L
83    (CAR&PUSH)
84    (CALL1&PUSH 9)                      ; $VERBIFY
86    (CALL1&PUSH 10)                     ; TRANSLATE-FUNCTION
88    (LOAD&JMPIF 0 L71)
91    (SKIP 1)
93    (JMP L47)


Disassembly of function #:|(PROGN 'COMPILE (DECLARE-TOP #) ...)-57-3-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(PROGN 'COMPILE (DECLARE-TOP #) ...)-57-3-2-1|>
(CONST 1) = $COMPILE
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(PROGN 'COMPILE (DECLARE-TOP #) ...)-57-3-2-1|>
1     (CONST&PUSH 1)                      ; $COMPILE
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(PROGN 'COMPILE (DECLARE-TOP #) ...)-57-3-2-1|
(CONST 0) = ($TRANSLATE)
(CONST 1) = MEVAL
(CONST 2) = L
(CONST 3) = FORMS-TO-COMPILE-QUEUE
(CONST 4) = X
(CONST 5) = COMPILE
(CONST 6) = DEFUN
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (FORMS-TO-COMPILE-QUEUE X L)
writes special variable : (FORMS-TO-COMPILE-QUEUE)
65 byte-code instructions:
0     (CONST&PUSH 0)                      ; ($TRANSLATE)
1     (LOAD 2)
2     (CDR)
3     (CONS&PUSH)
4     (CALL1 1)                           ; MEVAL
6     (BIND 2)                            ; L
8     (NIL)
9     (BIND 3)                            ; FORMS-TO-COMPILE-QUEUE
11    (GETVALUE 2)                        ; L
13    (CDR&PUSH)
14    (LOAD&PUSH 0)
15    L15
15    (LOAD&PUSH 0)
16    (CALLS1&JMPIF 146 L85)              ; ENDP
20    (LOAD&CAR&PUSH 0)
22    (LOAD 0)
23    (BIND 4)                            ; X
25    (GETVALUE&PUSH 4)                   ; X
27    (CALLS1&JMPIFNOT 80 L34)            ; FBOUNDP
30    (GETVALUE&PUSH 4)                   ; X
32    (CALL1 5)                           ; COMPILE
34    L34
34    (UNBIND1)
35    (SKIP 1)
37    (LOAD&CDR&STORE 0)
39    (JMP L15)
41    L41
41    (GETVALUE&PUSH 3)                   ; FORMS-TO-COMPILE-QUEUE
43    (NIL)
44    (SETVALUE 3)                        ; FORMS-TO-COMPILE-QUEUE
46    (LOAD&PUSH 0)
47    (JMP L81)
49    L49
49    (LOAD 0)
50    (CDR)
51    (CAR&PUSH)
52    (CALL1 5)                           ; COMPILE
54    (SKIP 1)
56    (JMP L79)
58    L58
58    (LOAD&CAR&PUSH 0)
60    (LOAD&PUSH 0)
61    (CALLS1 91)                         ; EVAL
63    (LOAD 0)
64    (JMPIFATOM L77)
66    (LOAD&CAR&PUSH 0)
68    (JMPIFNOTEQTO 6 L77)                ; DEFUN
71    (LOAD 0)
72    (CDR)
73    (CAR&PUSH)
74    (CALLS2&JMPIF 6 L49)                ; SYMBOLP
77    L77
77    (SKIP 1)
79    L79
79    (LOAD&CDR&STORE 0)
81    L81
81    (LOAD&PUSH 0)
82    (CALLS1&JMPIFNOT 146 L58)           ; ENDP
85    L85
85    (SKIP 2)
87    (GETVALUE 3)                        ; FORMS-TO-COMPILE-QUEUE
89    (JMPIF L41)
91    (GETVALUE 2)                        ; L
93    (UNBIND 2)
95    (SKIP&RET 2)


Wrote file binary-clisp/transs.fas
Wrote file /cygdrive/e/temp/maxima/src/transs.lis