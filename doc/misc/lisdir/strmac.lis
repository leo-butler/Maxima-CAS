Listing of compilation of file /cygdrive/e/temp/maxima/src/strmac.lisp
on 2002-12-17 13:32:01 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/strmac.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE STRMAC MACRO)-2|
(CONST 0) = STRMAC
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (MACRO)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; STRMAC
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (MACRO)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO MAKE-G-REP (OPERATOR . OPERANDS) ...)-3|
(CONST 0) = MAKE-G-REP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-G-REP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-G-REP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-G-REP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-G-REP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-G-REP
10    (SKIP&RET 1)


Disassembly of function MAKE-G-REP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LIST
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 47 L24)             ; <
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR&PUSH)
14    (CONST&PUSH 2)                      ; LIST
15    (CONST&PUSH 2)                      ; LIST
16    (LOAD&PUSH 3)
17    (LIST&PUSH 2)
19    (LOAD 2)
20    (LIST* 2)
22    (SKIP&RET 5)
24    L24
24    (LOAD&PUSH 2)
25    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
27    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-G-REP-SIMP (OPERATOR . OPERANDS) ...)-4|
(CONST 0) = MAKE-G-REP-SIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-G-REP-SIMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-G-REP-SIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-G-REP-SIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-G-REP-SIMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-G-REP-SIMP
10    (SKIP&RET 1)


Disassembly of function MAKE-G-REP-SIMP
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LIST
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 47 L24)             ; <
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR&PUSH)
14    (CONST&PUSH 2)                      ; LIST
15    (CONST&PUSH 2)                      ; LIST
16    (LOAD&PUSH 3)
17    (LIST&PUSH 2)
19    (LOAD 2)
20    (LIST* 2)
22    (SKIP&RET 5)
24    L24
24    (LOAD&PUSH 2)
25    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
27    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO G-REP-OPERATOR (EXP) ...)-5|
(CONST 0) = G-REP-OPERATOR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE G-REP-OPERATOR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; G-REP-OPERATOR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; G-REP-OPERATOR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE G-REP-OPERATOR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; G-REP-OPERATOR
10    (SKIP&RET 1)


Disassembly of function G-REP-OPERATOR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO G-REP-OPERANDS (EXP) ...)-6|
(CONST 0) = G-REP-OPERANDS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE G-REP-OPERANDS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; G-REP-OPERANDS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; G-REP-OPERANDS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE G-REP-OPERANDS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; G-REP-OPERANDS
10    (SKIP&RET 1)


Disassembly of function G-REP-OPERANDS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO G-REP-FIRST-OPERAND (EXP) ...)-7|
(CONST 0) = G-REP-FIRST-OPERAND
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE G-REP-FIRST-OPERAND>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; G-REP-FIRST-OPERAND
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; G-REP-FIRST-OPERAND
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE G-REP-FIRST-OPERAND>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; G-REP-FIRST-OPERAND
10    (SKIP&RET 1)


Disassembly of function G-REP-FIRST-OPERAND
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MPLUS (&REST ARGS) ...)-8|
(CONST 0) = MAKE-MPLUS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MPLUS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MPLUS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MPLUS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MPLUS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MPLUS
10    (SKIP&RET 1)


Disassembly of function MAKE-MPLUS
(CONST 0) = LIST
(CONST 1) = '(MPLUS)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LIST
3     (CONST&PUSH 1)                      ; '(MPLUS)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO MAKE-MPLUS-L (LLIST) ...)-9|
(CONST 0) = MAKE-MPLUS-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MPLUS-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MPLUS-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MPLUS-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MPLUS-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MPLUS-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MPLUS-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MPLUS)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MPLUS)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MPLUS-SIMP (&REST ARGS) ...)-10|
(CONST 0) = MAKE-MPLUS-SIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MPLUS-SIMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MPLUS-SIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MPLUS-SIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MPLUS-SIMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MPLUS-SIMP
10    (SKIP&RET 1)


Disassembly of function MAKE-MPLUS-SIMP
(CONST 0) = LIST
(CONST 1) = '(MPLUS SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LIST
3     (CONST&PUSH 1)                      ; '(MPLUS SIMP)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO MAKE-MPLUS-SIMP-L (LLIST) ...)-11|
(CONST 0) = MAKE-MPLUS-SIMP-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MPLUS-SIMP-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MPLUS-SIMP-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MPLUS-SIMP-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MPLUS-SIMP-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MPLUS-SIMP-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MPLUS-SIMP-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MPLUS SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MPLUS SIMP)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MTIMES (&REST ARGS) ...)-12|
(CONST 0) = MAKE-MTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MTIMES>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MTIMES>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MTIMES
10    (SKIP&RET 1)


Disassembly of function MAKE-MTIMES
(CONST 0) = LIST
(CONST 1) = '(MTIMES)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LIST
3     (CONST&PUSH 1)                      ; '(MTIMES)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO MAKE-MTIMES-L (LLIST) ...)-13|
(CONST 0) = MAKE-MTIMES-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MTIMES-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MTIMES-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MTIMES-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MTIMES-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MTIMES-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MTIMES-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MTIMES)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MTIMES)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MTIMES-SIMP (&REST ARGS) ...)-14|
(CONST 0) = MAKE-MTIMES-SIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MTIMES-SIMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MTIMES-SIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MTIMES-SIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MTIMES-SIMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MTIMES-SIMP
10    (SKIP&RET 1)


Disassembly of function MAKE-MTIMES-SIMP
(CONST 0) = LIST
(CONST 1) = '(MTIMES SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LIST
3     (CONST&PUSH 1)                      ; '(MTIMES SIMP)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO MAKE-MTIMES-SIMP-L (LLIST) ...)-15|
(CONST 0) = MAKE-MTIMES-SIMP-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MTIMES-SIMP-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MTIMES-SIMP-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MTIMES-SIMP-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MTIMES-SIMP-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MTIMES-SIMP-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MTIMES-SIMP-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MTIMES SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MTIMES SIMP)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MEXPT (THING-BEING-RAISED-TO-POWER EXPT) ...)-16|
(CONST 0) = MAKE-MEXPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MEXPT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MEXPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MEXPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MEXPT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MEXPT
10    (SKIP&RET 1)


Disassembly of function MAKE-MEXPT
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LIST
(CONST 3) = '(MEXPT)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L23)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; LIST
16    (CONST&PUSH 3)                      ; '(MEXPT)
17    (LOAD&PUSH 3)
18    (LOAD&PUSH 3)
19    (LIST 4)
21    (SKIP&RET 5)
23    L23
23    (LOAD&PUSH 2)
24    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MEXPT-L (LLIST) ...)-17|
(CONST 0) = MAKE-MEXPT-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MEXPT-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MEXPT-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MEXPT-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MEXPT-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MEXPT-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MEXPT-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MEXPT)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MEXPT)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MEXPT-SIMP (THING-BEING-RAISED-TO-POWER EXPT) ...)-18|
(CONST 0) = MAKE-MEXPT-SIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MEXPT-SIMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MEXPT-SIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MEXPT-SIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MEXPT-SIMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MEXPT-SIMP
10    (SKIP&RET 1)


Disassembly of function MAKE-MEXPT-SIMP
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LIST
(CONST 3) = '(MEXPT SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L23)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; LIST
16    (CONST&PUSH 3)                      ; '(MEXPT SIMP)
17    (LOAD&PUSH 3)
18    (LOAD&PUSH 3)
19    (LIST 4)
21    (SKIP&RET 5)
23    L23
23    (LOAD&PUSH 2)
24    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MEXPT-SIMP-L (LLIST) ...)-19|
(CONST 0) = MAKE-MEXPT-SIMP-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MEXPT-SIMP-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MEXPT-SIMP-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MEXPT-SIMP-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MEXPT-SIMP-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MEXPT-SIMP-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MEXPT-SIMP-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MEXPT SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MEXPT SIMP)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MEXPT-BASE (MEXPT) ...)-20|
(CONST 0) = MEXPT-BASE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MEXPT-BASE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MEXPT-BASE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MEXPT-BASE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MEXPT-BASE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MEXPT-BASE
10    (SKIP&RET 1)


Disassembly of function MEXPT-BASE
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MEXPT-EXPT (MEXPT) ...)-21|
(CONST 0) = MEXPT-EXPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MEXPT-EXPT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MEXPT-EXPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MEXPT-EXPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MEXPT-EXPT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MEXPT-EXPT
10    (SKIP&RET 1)


Disassembly of function MEXPT-EXPT
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MEQUAL (LHS RHS) ...)-22|
(CONST 0) = MAKE-MEQUAL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MEQUAL>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MEQUAL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MEQUAL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MEQUAL>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MEQUAL
10    (SKIP&RET 1)


Disassembly of function MAKE-MEQUAL
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LIST
(CONST 3) = '(MEQUAL)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L23)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; LIST
16    (CONST&PUSH 3)                      ; '(MEQUAL)
17    (LOAD&PUSH 3)
18    (LOAD&PUSH 3)
19    (LIST 4)
21    (SKIP&RET 5)
23    L23
23    (LOAD&PUSH 2)
24    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MEQUAL-L (LLIST) ...)-23|
(CONST 0) = MAKE-MEQUAL-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MEQUAL-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MEQUAL-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MEQUAL-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MEQUAL-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MEQUAL-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MEQUAL-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MEQUAL)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MEQUAL)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MEQUAL-SIMP (LHS RHS) ...)-24|
(CONST 0) = MAKE-MEQUAL-SIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MEQUAL-SIMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MEQUAL-SIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MEQUAL-SIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MEQUAL-SIMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MEQUAL-SIMP
10    (SKIP&RET 1)


Disassembly of function MAKE-MEQUAL-SIMP
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LIST
(CONST 3) = '(MEQUAL SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L23)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; LIST
16    (CONST&PUSH 3)                      ; '(MEQUAL SIMP)
17    (LOAD&PUSH 3)
18    (LOAD&PUSH 3)
19    (LIST 4)
21    (SKIP&RET 5)
23    L23
23    (LOAD&PUSH 2)
24    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MEQUAL-SIMP-L (LLIST) ...)-25|
(CONST 0) = MAKE-MEQUAL-SIMP-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MEQUAL-SIMP-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MEQUAL-SIMP-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MEQUAL-SIMP-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MEQUAL-SIMP-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MEQUAL-SIMP-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MEQUAL-SIMP-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MEQUAL SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MEQUAL SIMP)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MEQUAL-LHS (MEQUAL) ...)-26|
(CONST 0) = MEQUAL-LHS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MEQUAL-LHS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MEQUAL-LHS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MEQUAL-LHS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MEQUAL-LHS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MEQUAL-LHS
10    (SKIP&RET 1)


Disassembly of function MEQUAL-LHS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MEQUAL-RHS (MEQUAL) ...)-27|
(CONST 0) = MEQUAL-RHS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MEQUAL-RHS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MEQUAL-RHS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MEQUAL-RHS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MEQUAL-RHS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MEQUAL-RHS
10    (SKIP&RET 1)


Disassembly of function MEQUAL-RHS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MLIST (&REST ARGS) ...)-28|
(CONST 0) = MAKE-MLIST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MLIST>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MLIST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MLIST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MLIST>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MLIST
10    (SKIP&RET 1)


Disassembly of function MAKE-MLIST
(CONST 0) = LIST
(CONST 1) = '(MLIST)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LIST
3     (CONST&PUSH 1)                      ; '(MLIST)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO MAKE-MLIST-L (LLIST) ...)-29|
(CONST 0) = MAKE-MLIST-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MLIST-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MLIST-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MLIST-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MLIST-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MLIST-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MLIST-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MLIST)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MLIST)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MLIST-SIMP (&REST ARGS) ...)-30|
(CONST 0) = MAKE-MLIST-SIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MLIST-SIMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MLIST-SIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MLIST-SIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MLIST-SIMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MLIST-SIMP
10    (SKIP&RET 1)


Disassembly of function MAKE-MLIST-SIMP
(CONST 0) = LIST
(CONST 1) = '(MLIST SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LIST
3     (CONST&PUSH 1)                      ; '(MLIST SIMP)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO MAKE-MLIST-SIMP-L (LLIST) ...)-31|
(CONST 0) = MAKE-MLIST-SIMP-L
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MLIST-SIMP-L>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MLIST-SIMP-L
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MLIST-SIMP-L
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MLIST-SIMP-L>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MLIST-SIMP-L
10    (SKIP&RET 1)


Disassembly of function MAKE-MLIST-SIMP-L
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
(CONST 3) = '(MLIST SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CONS
12    (CONST&PUSH 3)                      ; '(MLIST SIMP)
13    (LOAD&PUSH 2)
14    (LIST 3)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MTEXT (&REST ARGS) ...)-32|
(CONST 0) = MAKE-MTEXT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MTEXT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MTEXT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MTEXT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MTEXT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MTEXT
10    (SKIP&RET 1)


Disassembly of function MAKE-MTEXT
(CONST 0) = LIST
(CONST 1) = '(MTEXT)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LIST
3     (CONST&PUSH 1)                      ; '(MTEXT)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO MAKE-RAT (&REST ARGS) ...)-33|
(CONST 0) = MAKE-RAT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-RAT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-RAT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-RAT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-RAT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-RAT
10    (SKIP&RET 1)


Disassembly of function MAKE-RAT
(CONST 0) = LIST
(CONST 1) = '(RAT)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LIST
3     (CONST&PUSH 1)                      ; '(RAT)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO MAKE-RAT-SIMP (&REST ARGS) ...)-34|
(CONST 0) = MAKE-RAT-SIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-RAT-SIMP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-RAT-SIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-RAT-SIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-RAT-SIMP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-RAT-SIMP
10    (SKIP&RET 1)


Disassembly of function MAKE-RAT-SIMP
(CONST 0) = LIST
(CONST 1) = '(RAT SIMP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; LIST
3     (CONST&PUSH 1)                      ; '(RAT SIMP)
4     (LOAD 2)
5     (LIST* 2)
7     (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO MAKE-RAT-BODY (NUMER DENOM) ...)-35|
(CONST 0) = MAKE-RAT-BODY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-RAT-BODY>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-RAT-BODY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-RAT-BODY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-RAT-BODY>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-RAT-BODY
10    (SKIP&RET 1)


Disassembly of function MAKE-RAT-BODY
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; CONS
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RAT-NUMER (RAT) ...)-36|
(CONST 0) = RAT-NUMER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RAT-NUMER>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RAT-NUMER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RAT-NUMER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RAT-NUMER>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RAT-NUMER
10    (SKIP&RET 1)


Disassembly of function RAT-NUMER
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RAT-DENOM (RAT) ...)-37|
(CONST 0) = RAT-DENOM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RAT-DENOM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RAT-DENOM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RAT-DENOM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RAT-DENOM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RAT-DENOM
10    (SKIP&RET 1)


Disassembly of function RAT-DENOM
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MRAT-BODY (MRAT) ...)-38|
(CONST 0) = MRAT-BODY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MRAT-BODY>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MRAT-BODY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MRAT-BODY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MRAT-BODY>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MRAT-BODY
10    (SKIP&RET 1)


Disassembly of function MRAT-BODY
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MRAT-NUMER (MRAT) ...)-39|
(CONST 0) = MRAT-NUMER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MRAT-NUMER>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MRAT-NUMER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MRAT-NUMER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MRAT-NUMER>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MRAT-NUMER
10    (SKIP&RET 1)


Disassembly of function MRAT-NUMER
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CADR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MRAT-DENOM (MRAT) ...)-40|
(CONST 0) = MRAT-DENOM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MRAT-DENOM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MRAT-DENOM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MRAT-DENOM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MRAT-DENOM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MRAT-DENOM
10    (SKIP&RET 1)


Disassembly of function MRAT-DENOM
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MRAT (VARLIST GENVARS NUMER ...) ...)-41|
(CONST 0) = MAKE-MRAT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MRAT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MRAT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MRAT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MRAT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MRAT
10    (SKIP&RET 1)


Disassembly of function MAKE-MRAT
(CONST 0) = 5
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = VARLIST
(CONST 3) = MRAT
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (VARLIST)
33 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 5
4     (CALLSR&JMPIF 1 46 L40)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; VARLIST
13    (LOAD 5)
14    (CDR)
15    (CDR)
16    (CAR&PUSH)
17    (LOAD 6)
18    (CDR)
19    (CDR)
20    (CDR)
21    (CAR&PUSH)
22    (LOAD&PUSH 7)
23    (CALLS1&PUSH 149)                   ; FIFTH
25    (CONST&PUSH 3)                      ; MRAT
26    (GETVALUE&PUSH 2)                   ; VARLIST
28    (LOAD&PUSH 4)
29    (LIST&PUSH 3)
31    (LOAD&PUSH 2)
32    (LOAD 2)
33    (LIST* 2)
35    (SKIP 3)
37    (UNBIND1)
38    (SKIP&RET 3)
40    L40
40    (LOAD&PUSH 2)
41    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
43    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MRAT-BODY (NUMER DENOM) ...)-42|
(CONST 0) = MAKE-MRAT-BODY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MRAT-BODY>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MRAT-BODY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MRAT-BODY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MRAT-BODY>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MRAT-BODY
10    (SKIP&RET 1)


Disassembly of function MAKE-MRAT-BODY
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; CONS
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO TRIG-CANNON (OPERATOR) ...)-43|
(CONST 0) = TRIG-CANNON
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRIG-CANNON>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRIG-CANNON
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRIG-CANNON
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRIG-CANNON>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TRIG-CANNON
10    (SKIP&RET 1)


Disassembly of function TRIG-CANNON
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = GET
(CONST 3) = ('TRIG-CANNON)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L18)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; GET
12    (LOAD&PUSH 1)
13    (CONST 3)                           ; ('TRIG-CANNON)
14    (LIST* 2)
16    (SKIP&RET 4)
18    L18
18    (LOAD&PUSH 2)
19    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
21    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-LINEQ (LINEAR CONSTANT) ...)-44|
(CONST 0) = MAKE-LINEQ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-LINEQ>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-LINEQ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-LINEQ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-LINEQ>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-LINEQ
10    (SKIP&RET 1)


Disassembly of function MAKE-LINEQ
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; CONS
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO LINEQ-LINEAR (LINEQ) ...)-45|
(CONST 0) = LINEQ-LINEAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LINEQ-LINEAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LINEQ-LINEAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LINEQ-LINEAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LINEQ-LINEAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LINEQ-LINEAR
10    (SKIP&RET 1)


Disassembly of function LINEQ-LINEAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO LINEQ-CONSTANT (LINEQ) ...)-46|
(CONST 0) = LINEQ-CONSTANT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LINEQ-CONSTANT>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LINEQ-CONSTANT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LINEQ-CONSTANT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LINEQ-CONSTANT>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LINEQ-CONSTANT
10    (SKIP&RET 1)


Disassembly of function LINEQ-CONSTANT
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-SOLUTION (WINS LOSSES) ...)-47|
(CONST 0) = MAKE-SOLUTION
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-SOLUTION>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-SOLUTION
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-SOLUTION
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-SOLUTION>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-SOLUTION
10    (SKIP&RET 1)


Disassembly of function MAKE-SOLUTION
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; CONS
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SOLUTION-WINS (SOLUTION) ...)-48|
(CONST 0) = SOLUTION-WINS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SOLUTION-WINS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SOLUTION-WINS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SOLUTION-WINS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SOLUTION-WINS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SOLUTION-WINS
10    (SKIP&RET 1)


Disassembly of function SOLUTION-WINS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SOLUTION-LOSSES (SOLUTION) ...)-49|
(CONST 0) = SOLUTION-LOSSES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SOLUTION-LOSSES>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SOLUTION-LOSSES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SOLUTION-LOSSES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SOLUTION-LOSSES>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SOLUTION-LOSSES
10    (SKIP&RET 1)


Disassembly of function SOLUTION-LOSSES
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO MAKE-MRAT-POLY (VAR TERMS) ...)-50|
(CONST 0) = MAKE-MRAT-POLY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-MRAT-POLY>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-MRAT-POLY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-MRAT-POLY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-MRAT-POLY>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MAKE-MRAT-POLY
10    (SKIP&RET 1)


Disassembly of function MAKE-MRAT-POLY
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CONS
1 required argument
1 optional argument
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; CONS
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 2)
18    (LIST 3)
20    (SKIP&RET 5)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO POLY-VAR (POLY) ...)-51|
(CONST 0) = POLY-VAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POLY-VAR>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; POLY-VAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POLY-VAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POLY-VAR>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; POLY-VAR
10    (SKIP&RET 1)


Disassembly of function POLY-VAR
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO POLY-TERMS (POLY) ...)-52|
(CONST 0) = POLY-TERMS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POLY-TERMS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; POLY-TERMS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POLY-TERMS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POLY-TERMS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; POLY-TERMS
10    (SKIP&RET 1)


Disassembly of function POLY-TERMS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CDR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Wrote file binary-clisp/strmac.fas
Wrote file /cygdrive/e/temp/maxima/src/strmac.lis