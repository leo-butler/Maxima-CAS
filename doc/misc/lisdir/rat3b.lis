Listing of compilation of file /cygdrive/e/temp/maxima/src/rat3b.lisp
on 2002-12-17 13:33:35 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/rat3b.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE RAT3B)-2|
(CONST 0) = RAT3B
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; RAT3B
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (GENPREFIX A_2) (SPECIAL $ALGEBRAIC $RATFAC ...))-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(LOAD-MACSYMA-MACROS RATMAC)-4|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $RATWTLVL NIL)-5-1|
(CONST 0) = $RATWTLVL
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $RATWTLVL
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $RATWTLVL
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $RATWTLVL NIL)-5-2|
(CONST 0) = (SPECIAL $RATWTLVL)
(CONST 1) = $RATWTLVL
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $RATWTLVL)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $RATWTLVL
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $RATWTLVL
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $RATWTLVL
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $RATALGDENOM T)-6-1|
(CONST 0) = $RATALGDENOM
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $RATALGDENOM
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $RATALGDENOM
11    (LOAD&PUSH 1)
12    (T&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $RATALGDENOM T)-6-2|
(CONST 0) = (SPECIAL $RATALGDENOM)
(CONST 1) = $RATALGDENOM
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $RATALGDENOM)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $RATALGDENOM
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $RATALGDENOM
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $RATALGDENOM
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN RALGP (R) ...)-7|
(CONST 0) = RALGP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RALGP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RALGP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RALGP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RALGP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RALGP
8     (SKIP&RET 1)


Disassembly of function RALGP
(CONST 0) = PALGP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (LOAD&CAR&PUSH 1)
2     (CALL1 0)                           ; PALGP
4     (JMPIF1 L12)
6     (LOAD&CDR&PUSH 1)
8     (CALL1 0)                           ; PALGP
10    (SKIP&RET 2)
12    L12
12    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PALGP (POLY) ...)-8|
(CONST 0) = PALGP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PALGP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PALGP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PALGP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PALGP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PALGP
8     (SKIP&RET 1)


Disassembly of function PALGP
(CONST 0) = ALG
(CONST 1) = P
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
writes special variable : (P)
36 byte-code instructions:
0     L0
0     (LOAD 1)
1     (JMPIFATOM L37)
3     (LOAD&PUSH 1)
4     (CALL1&JMPIF 0 L40)                 ; ALG
7     (LOAD 1)
8     (CDR)
9     (BIND 1)                            ; P
11    (GETVALUE 1)                        ; P
13    (JMPIFNOT L33)
15    L15
15    (GETVALUE 1)                        ; P
17    (CDR)
18    (CAR&PUSH)
19    (JSR L0)
21    (JMPIF L43)
23    (GETVALUE 1)                        ; P
25    (CDR)
26    (CDR)
27    (SETVALUE 1)                        ; P
29    (GETVALUE 1)                        ; P
31    (JMPIF L15)
33    L33
33    (NIL)
34    L34
34    (UNBIND1)
35    (SKIP&RET 2)
37    L37
37    (NIL)
38    (SKIP&RET 2)
40    L40
40    (T)
41    (SKIP&RET 2)
43    L43
43    (T)
44    (JMP L34)


Disassembly of function #:|(DEFUN RATDX (E *X*) ...)-9|
(CONST 0) = RATDX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATDX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATDX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATDX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATDX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATDX
8     (SKIP&RET 1)


Disassembly of function RATDX
(CONST 0) = *X*
(CONST 1) = VARLIST
(CONST 2) = FLAG
(CONST 3) = V*
(CONST 4) = GENVAR
(CONST 5) = *A
(CONST 6) = TRUNCLIST
(CONST 7) = TRUNC
(CONST 8) = MEMQ
(CONST 9) = MRAT
(CONST 10) = RATF
(CONST 11) = B
(CONST 12) = FULLRATSIMP
(CONST 13) = NEWVAR
(CONST 14) = FF
(CONST 15) = SDIFF
(CONST 16) = ORDERPOINTER
(CONST 17) = (0 . 1)
(CONST 18) = DIFF
(CONST 19) = PUTPROP
(CONST 20) = ALIKE1
(CONST 21) = 0
(CONST 22) = SIMP
(CONST 23) = PSDP
(CONST 24) = PSDERIVATIVE
(CONST 25) = RATDX1
(CONST 26) = RATDERIVATIVE
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*A V* FLAG TRUNCLIST FF *X* B GENVAR VARLIST)
writes special variables : (FLAG V* *A FF *X* GENVAR VARLIST TRUNCLIST)
259 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; *X*
3     (NIL)
4     (BIND 1)                            ; VARLIST
6     (NIL)
7     (BIND 2)                            ; FLAG
9     (NIL)
10    (BIND 3)                            ; V*
12    (NIL)
13    (BIND 4)                            ; GENVAR
15    (NIL)
16    (BIND 5)                            ; *A
18    (NIL&PUSH)
19    (NIL)
20    (BIND 6)                            ; TRUNCLIST
22    (CONST&PUSH 7)                      ; TRUNC
23    (LOAD&CAR&PUSH 25)
25    (CALL2&JMPIFNOT 8 L38)              ; MEMQ
28    (LOAD 24)
30    (CAR)
31    (CDR)
32    (CDR)
33    (CDR)
34    (CDR)
35    (CAR)
36    (SETVALUE 6)                        ; TRUNCLIST
38    L38
38    (LOAD 24)
40    (CAR)
41    (CAR&PUSH)
42    (JMPIFEQTO 9 L50)                   ; MRAT
45    (LOAD&PUSH 24)
46    (CALL1 10)                          ; RATF
48    (STORE 24)
50    L50
50    (LOAD 24)
52    (CAR)
53    (CDR)
54    (CDR)
55    (CAR)
56    (SETVALUE 1)                        ; VARLIST
58    (LOAD 24)
60    (CAR)
61    (CDR)
62    (CDR)
63    (CDR)
64    (CAR)
65    (SETVALUE 4)                        ; GENVAR
67    (PUSH)
68    (CALLS2&PUSH 71)                    ; LENGTH
70    (GETVALUE&PUSH 1)                   ; VARLIST
72    (CALLS2&PUSH 71)                    ; LENGTH
74    (CALLSR&JMPIFNOT 1 48 L125)         ; >
78    (NIL&PUSH)
79    (GETVALUE&PUSH 1)                   ; VARLIST
81    (GETVALUE&PUSH 4)                   ; GENVAR
83    (JMP L106)
85    L85
85    (SKIP 2)
87    (JMP L118)
89    L89
89    (LOAD&CAR&PUSH 1)
91    (LOAD 0)
92    (BIND 11)                           ; B
94    (GETVALUE 11)                       ; B
96    (UNBIND1)
97    (PUSH)
98    (LOAD&CONS&STORE 4)
100   (SKIP 2)
102   (LOAD&CDR&STORE 1)
104   (LOAD&CDR&STORE 0)
106   L106
106   (LOAD&PUSH 1)
107   (CALLS1&JMPIF 146 L85)              ; ENDP
110   (LOAD&CAR&PUSH 1)
112   (LOAD&PUSH 1)
113   (CALLS1&JMPIFNOT 146 L89)           ; ENDP
116   (SKIP 3)
118   L118
118   (LOAD&PUSH 0)
119   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
121   (SKIP 1)
123   (SETVALUE 4)                        ; GENVAR
125   L125
125   (GETVALUE&PUSH 0)                   ; *X*
127   (CALL1 12)                          ; FULLRATSIMP
129   (SETVALUE 0)                        ; *X*
131   (PUSH)
132   (CALL1 13)                          ; NEWVAR
134   (NIL&PUSH)
135   (GETVALUE&PUSH 1)                   ; VARLIST
137   (JMP L175)
139   L139
139   (LOAD&CAR&PUSH 0)
141   (NIL)
142   (BIND 14)                           ; FF
144   (LOAD&PUSH 3)
145   (GETVALUE&PUSH 0)                   ; *X*
147   (CALL2&PUSH 15)                     ; SDIFF
149   (CALL1 12)                          ; FULLRATSIMP
151   (SETVALUE 14)                       ; FF
153   (PUSH)
154   (CALL1 13)                          ; NEWVAR
156   (GETVALUE&PUSH 1)                   ; VARLIST
158   (CALL1 16)                          ; ORDERPOINTER
160   (LOAD&PUSH 3)
161   (GETVALUE&PUSH 14)                  ; FF
163   (LIST 2)
165   (UNBIND1)
166   (PUSH)
167   (LOAD&PUSH 3)
168   (CALLS1&STORE 163 2)                ; NRECONC
171   (SKIP 1)
173   (LOAD&CDR&STORE 0)
175   L175
175   (LOAD&PUSH 0)
176   (CALLS1&JMPIFNOT 146 L139)          ; ENDP
179   (SKIP 1)
181   (LOAD&PUSH 0)
182   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
184   (SKIP 1)
186   (STORE 3)
187   (NIL&PUSH)
188   (LOAD 4)
189   (CONS)
190   (SETVALUE 5)                        ; *A
192   (GETVALUE&PUSH 1)                   ; VARLIST
194   (LOAD&PUSH 0)
195   (GETVALUE&PUSH 4)                   ; GENVAR
197   (JMP L336)
200   L200
200   (SKIP 2)
202   (JMP L349)
205   L205
205   (GETVALUE&PUSH 11)                  ; B
207   (CONST&PUSH 17)                     ; (0 . 1)
208   (CONST&PUSH 18)                     ; DIFF
209   (CALL 3 19)                         ; PUTPROP
212   (JMP L329)
215   L215
215   (GETVALUE 11)                       ; B
217   (SETVALUE 3)                        ; V*
219   (JMP L329)
222   L222
222   (LOAD&PUSH 0)
223   (CALLS2 145)                        ; ZEROP
225   (SKIP 1)
227   (JMPIFNOT L370)
230   (JMP L383)
233   L233
233   (CONST 21)                          ; 0
235   (JMP L408)
238   L238
238   (LOAD&CDR&PUSH 25)
240   (CALL1 23)                          ; PSDP
242   (CONS)
243   (JMP L408)
246   L246
246   (CONST&PUSH 9)                      ; MRAT
247   (CONST&PUSH 22)                     ; SIMP
248   (GETVALUE&PUSH 1)                   ; VARLIST
250   (GETVALUE&PUSH 4)                   ; GENVAR
252   (GETVALUE&PUSH 6)                   ; TRUNCLIST
254   (CONST&PUSH 7)                      ; TRUNC
255   (LIST&PUSH 6)
257   (GETVALUE 2)                        ; FLAG
259   (JMPIF L238)
261   (LOAD&CDR&PUSH 25)
263   (GETVALUE&PUSH 3)                   ; V*
265   (CALL2 24)                          ; PSDERIVATIVE
267   (CONS)
268   (JMP L408)
271   L271
271   (LOAD 25)
273   (CDR)
274   (CAR&PUSH)
275   (LOAD 26)
277   (CDR)
278   (CDR&PUSH)
279   (CALL2 25)                          ; RATDX1
281   (CONS)
282   (JMP L408)
285   L285
285   (LOAD&CAR&PUSH 1)
287   (LOAD 0)
288   (BIND 11)                           ; B
290   (GETVALUE 5)                        ; *A
292   (CDR&PUSH)
293   (LOAD&PUSH 5)
294   (PUSH-UNBOUND 1)
296   (CALLS2&JMPIFNOT 133 L205)          ; GETF
300   (GETVALUE&PUSH 11)                  ; B
302   (GETVALUE 5)                        ; *A
304   (CDR&PUSH)
305   (LOAD&PUSH 6)
306   (PUSH-UNBOUND 1)
308   (CALLS2&PUSH 133)                   ; GETF
310   (CALL1 10)                          ; RATF
312   (CDR&PUSH)
313   (CONST&PUSH 18)                     ; DIFF
314   (CALL 3 19)                         ; PUTPROP
317   (JMPIFNOT L326)
319   (LOAD&PUSH 4)
320   (GETVALUE&PUSH 0)                   ; *X*
322   (CALL2&JMPIF 20 L215)               ; ALIKE1
326   L326
326   (T)
327   (SETVALUE 2)                        ; FLAG
329   L329
329   (UNBIND1)
330   (SKIP 2)
332   (LOAD&CDR&STORE 1)
334   (LOAD&CDR&STORE 0)
336   L336
336   (LOAD&PUSH 1)
337   (CALLS1&JMPIF 146 L200)             ; ENDP
341   (LOAD&CAR&PUSH 1)
343   (LOAD&PUSH 1)
344   (CALLS1&JMPIFNOT 146 L285)          ; ENDP
347   (SKIP 3)
349   L349
349   (SKIP 1)
351   (GETVALUE 6)                        ; TRUNCLIST
353   (CDR&PUSH)
354   (GETVALUE&PUSH 3)                   ; V*
356   (PUSH-UNBOUND 1)
358   (CALLS2 133)                        ; GETF
360   (CDR&PUSH)
361   (LOAD&PUSH 0)
362   (CALLS2&JMPIF 8 L222)               ; NUMBERP
366   (SKIP 1)
368   (JMPIFNOT L383)
370   L370
370   (GETVALUE 6)                        ; TRUNCLIST
372   (CDR&PUSH)
373   (GETVALUE&PUSH 3)                   ; V*
375   (PUSH-UNBOUND 1)
377   (CALLS2 133)                        ; GETF
379   (CAR)
380   (JMPIF L233)
383   L383
383   (GETVALUE 6)                        ; TRUNCLIST
385   (JMPIF L246)
388   (CONST&PUSH 9)                      ; MRAT
389   (CONST&PUSH 22)                     ; SIMP
390   (GETVALUE&PUSH 1)                   ; VARLIST
392   (GETVALUE&PUSH 4)                   ; GENVAR
394   (LIST&PUSH 4)
396   (GETVALUE 2)                        ; FLAG
398   (JMPIF L271)
401   (LOAD&CDR&PUSH 25)
403   (GETVALUE&PUSH 3)                   ; V*
405   (CALL2 26)                          ; RATDERIVATIVE
407   (CONS)
408   L408
408   (UNBIND1)
409   (SKIP 1)
411   (UNBIND 6)
413   (SKIP&RET 3)


Disassembly of function #:|(DEFUN RATDX1 (U V) ...)-10|
(CONST 0) = RATDX1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATDX1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATDX1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATDX1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATDX1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATDX1
8     (SKIP&RET 1)


Disassembly of function RATDX1
(CONST 0) = 1
(CONST 1) = RATDP
(CONST 2) = RATTIMES
(CONST 3) = RATDIF
(CONST 4) = 2
(CONST 5) = PEXPT
(CONST 6) = RATQUOTIENT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
22 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CONST 0)                           ; 1
2     (CONS&PUSH)
3     (LOAD&PUSH 3)
4     (CALL1&PUSH 1)                      ; RATDP
6     (T&PUSH)
7     (CALL&PUSH 3 2)                     ; RATTIMES
10    (LOAD&PUSH 3)
11    (CONST 0)                           ; 1
12    (CONS&PUSH)
13    (LOAD&PUSH 3)
14    (CALL1&PUSH 1)                      ; RATDP
16    (T&PUSH)
17    (CALL&PUSH 3 2)                     ; RATTIMES
20    (CALL2&PUSH 3)                      ; RATDIF
22    (LOAD&PUSH 2)
23    (CONST&PUSH 4)                      ; 2
24    (CALL2&PUSH 5)                      ; PEXPT
26    (CONST 0)                           ; 1
27    (CONS&PUSH)
28    (CALL2 6)                           ; RATQUOTIENT
30    (SKIP&RET 3)


Disassembly of function #:|(DEFUN RATDP (P) ...)-11|
(CONST 0) = RATDP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATDP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATDP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATDP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATDP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATDP
8     (SKIP&RET 1)


Disassembly of function RATDP
(CONST 0) = P
(CONST 1) = (0 . 1)
(CONST 2) = DIFF
(CONST 3) = X
(CONST 4) = FIXNUMP
(CONST 5) = FOO
(CONST 6) = 1
(CONST 7) = RATDP1
(CONST 8) = RATDP2
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X P)
62 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (GETVALUE 0)                        ; P
5     (JMPIFATOM L41)
7     (GETVALUE 0)                        ; P
9     (CAR&PUSH)
10    (CONST&PUSH 2)                      ; DIFF
11    (PUSH-UNBOUND 1)
13    (CALLS2 132)                        ; GET
15    (CAR)
16    (BIND 3)                            ; X
18    (GETVALUE&PUSH 3)                   ; X
20    (CALL1&JMPIF 4 L32)                 ; FIXNUMP
23    (GETVALUE 3)                        ; X
25    (JMPIFCONSP L63)
27    (GETVALUE&PUSH 3)                   ; X
29    (CALLS2&JMPIFNOT 15 L44)            ; FLOATP
32    L32
32    (GETVALUE&PUSH 3)                   ; X
34    (CALLS2 145)                        ; ZEROP
36    (UNBIND1)
37    (JMPIFNOT L64)
39    (JMP L47)
41    L41
41    (CONST 1)                           ; (0 . 1)
42    (JMP L87)
44    L44
44    (UNBIND1)
45    (JMPIFNOT L64)
47    L47
47    (GETVALUE 0)                        ; P
49    (CAR&PUSH)
50    (CONST&PUSH 5)                      ; FOO
51    (CONST&PUSH 6)                      ; 1
52    (LIST&PUSH 3)
54    (CONST 6)                           ; 1
55    (CONS&PUSH)
56    (GETVALUE 0)                        ; P
58    (CDR&PUSH)
59    (CALL2 7)                           ; RATDP1
61    (JMP L87)
63    L63
63    (UNBIND1)
64    L64
64    (GETVALUE 0)                        ; P
66    (CAR&PUSH)
67    (CONST&PUSH 5)                      ; FOO
68    (CONST&PUSH 6)                      ; 1
69    (LIST&PUSH 3)
71    (CONST 6)                           ; 1
72    (CONS&PUSH)
73    (GETVALUE 0)                        ; P
75    (CAR&PUSH)
76    (CONST&PUSH 2)                      ; DIFF
77    (PUSH-UNBOUND 1)
79    (CALLS2&PUSH 132)                   ; GET
81    (GETVALUE 0)                        ; P
83    (CDR&PUSH)
84    (CALL 3 8)                          ; RATDP2
87    L87
87    (UNBIND1)
88    (SKIP&RET 2)


Disassembly of function #:|(DEFUN RATDP1 (X V) ...)-12|
(CONST 0) = RATDP1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATDP1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATDP1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATDP1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATDP1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATDP1
8     (SKIP&RET 1)


Disassembly of function RATDP1
(CONST 0) = X
(CONST 1) = (0 . 1)
(CONST 2) = 0
(CONST 3) = RATDP
(CONST 4) = FOO
(CONST 5) = RATTIMES
(CONST 6) = RATPLUS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
35 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD&JMPIFNOT 4 L41)
6     (LOAD&CAR&PUSH 4)
8     (JMPIFEQTO 2 L44)                   ; 0
11    (LOAD&CAR&PUSH 4)
13    (CONST&PUSH 4)                      ; FOO
14    (GETVALUE&PUSH 0)                   ; X
16    (PUSH-UNBOUND 3)
18    (CALLS1&PUSH 172)                   ; SUBST
20    (LOAD 5)
21    (CDR)
22    (CAR&PUSH)
23    (CALL1&PUSH 3)                      ; RATDP
25    (T&PUSH)
26    (CALL&PUSH 3 5)                     ; RATTIMES
29    (GETVALUE&PUSH 0)                   ; X
31    (LOAD 6)
32    (CDR)
33    (CDR&PUSH)
34    (JSR&PUSH L0)
36    (CALL2 6)                           ; RATPLUS
38    L38
38    (UNBIND1)
39    (SKIP&RET 3)
41    L41
41    (CONST 1)                           ; (0 . 1)
42    (JMP L38)
44    L44
44    (LOAD 4)
45    (CDR)
46    (CAR&PUSH)
47    (CALL1 3)                           ; RATDP
49    (JMP L38)


Disassembly of function #:|(DEFUN RATDP2 (X DX V) ...)-13|
(CONST 0) = RATDP2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATDP2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATDP2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATDP2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATDP2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATDP2
8     (SKIP&RET 1)


Disassembly of function RATDP2
(CONST 0) = X
(CONST 1) = (0 . 1)
(CONST 2) = 0
(CONST 3) = RATDP
(CONST 4) = 1
(CONST 5) = RATTIMES
(CONST 6) = FOO
(CONST 7) = RATPLUS
(CONST 8) = PTIMES
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
84 byte-code instructions:
0     L0
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD&JMPIFNOT 4 L82)
7     (LOAD&CAR&PUSH 4)
9     (JMPIFEQTO 2 L85)                   ; 0
13    (LOAD&CAR&PUSH 4)
15    (JMPIFEQTO 4 L92)                   ; 1
19    (GETVALUE&PUSH 0)                   ; X
21    (LOAD&PUSH 6)
22    (LOAD 6)
23    (CDR)
24    (CDR&PUSH)
25    (JSR&PUSH L0)
27    (LOAD&PUSH 6)
28    (LOAD&CAR&PUSH 6)
30    (CALLS2&PUSH 151)                   ; 1-
32    (CONST&PUSH 6)                      ; FOO
33    (GETVALUE&PUSH 0)                   ; X
35    (PUSH-UNBOUND 3)
37    (CALLS1&PUSH 172)                   ; SUBST
39    (LOAD&CAR&PUSH 7)
41    (LOAD 8)
42    (CDR)
43    (CAR&PUSH)
44    (CALL2&PUSH 8)                      ; PTIMES
46    (CONST 4)                           ; 1
47    (CONS&PUSH)
48    (T&PUSH)
49    (CALL&PUSH 3 5)                     ; RATTIMES
52    (T&PUSH)
53    (CALL&PUSH 3 5)                     ; RATTIMES
56    (LOAD 6)
57    (CDR)
58    (CAR&PUSH)
59    (CALL1&PUSH 3)                      ; RATDP
61    (LOAD&CAR&PUSH 7)
63    (CONST&PUSH 6)                      ; FOO
64    (GETVALUE&PUSH 0)                   ; X
66    (PUSH-UNBOUND 3)
68    (CALLS1 172)                        ; SUBST
70    L70
70    (PUSH)
71    (T&PUSH)
72    (CALL&PUSH 3 5)                     ; RATTIMES
75    (CALL2&PUSH 7)                      ; RATPLUS
77    (CALL2 7)                           ; RATPLUS
79    L79
79    (UNBIND1)
80    (SKIP&RET 4)
82    L82
82    (CONST 1)                           ; (0 . 1)
83    (JMP L79)
85    L85
85    (LOAD 4)
86    (CDR)
87    (CAR&PUSH)
88    (CALL1 3)                           ; RATDP
90    (JMP L79)
92    L92
92    (GETVALUE&PUSH 0)                   ; X
94    (LOAD&PUSH 6)
95    (LOAD 6)
96    (CDR)
97    (CDR&PUSH)
98    (JSR&PUSH L0)
101   (LOAD&PUSH 6)
102   (LOAD 6)
103   (CDR)
104   (CAR&PUSH)
105   (CONST 4)                           ; 1
106   (CONS&PUSH)
107   (T&PUSH)
108   (CALL&PUSH 3 5)                     ; RATTIMES
111   (CONST&PUSH 4)                      ; 1
112   (CONST&PUSH 6)                      ; FOO
113   (GETVALUE&PUSH 0)                   ; X
115   (PUSH-UNBOUND 3)
117   (CALLS1&PUSH 172)                   ; SUBST
119   (LOAD 7)
120   (CDR)
121   (CAR&PUSH)
122   (CALL1 3)                           ; RATDP
124   (JMP L70)


Disassembly of function #:|(DEFMFUN RATDERIVATIVE (RAT VAR) ...)-14|
(CONST 0) = RATDERIVATIVE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATDERIVATIVE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATDERIVATIVE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATDERIVATIVE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATDERIVATIVE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATDERIVATIVE
8     (SKIP&RET 1)


Disassembly of function RATDERIVATIVE
(CONST 0) = VAR
(CONST 1) = NUM
(CONST 2) = 1
(CONST 3) = PDERIVATIVE
(CONST 4) = PGCDCOFACTS
(CONST 5) = PTIMES
(CONST 6) = PDIFFERENCE
(CONST 7) = RATREDUCE
(CONST 8) = X
(CONST 9) = FIXNUMP
(CONST 10) = 2
(CONST 11) = PEXPT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X NUM VAR)
writes special variable : (NUM)
75 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; VAR
3     (LOAD&CAR&PUSH 5)
5     (LOAD&CDR&PUSH 6)
7     (LOAD 1)
8     (BIND 1)                            ; NUM
10    (LOAD&PUSH 3)
11    (JMPIFEQTO 2 L75)                   ; 1
14    (LOAD&PUSH 3)
15    (LOAD&PUSH 4)
16    (GETVALUE&PUSH 0)                   ; VAR
18    (CALL2&PUSH 3)                      ; PDERIVATIVE
20    (CALL2 4)                           ; PGCDCOFACTS
22    (STORE 3)
23    (CDR)
24    (CAR&PUSH)
25    (GETVALUE&PUSH 1)                   ; NUM
27    (GETVALUE&PUSH 0)                   ; VAR
29    (CALL2&PUSH 3)                      ; PDERIVATIVE
31    (CALL2&PUSH 5)                      ; PTIMES
33    (GETVALUE&PUSH 1)                   ; NUM
35    (LOAD 5)
36    (CDR)
37    (CDR)
38    (CAR&PUSH)
39    (CALL2&PUSH 5)                      ; PTIMES
41    (CALL2&PUSH 6)                      ; PDIFFERENCE
43    (LOAD&CAR&PUSH 4)
45    (CALL2 7)                           ; RATREDUCE
47    (SETVALUE 1)                        ; NUM
49    (CAR)
50    (BIND 8)                            ; X
52    (GETVALUE&PUSH 8)                   ; X
54    (CALL1&JMPIF 9 L66)                 ; FIXNUMP
57    (GETVALUE 8)                        ; X
59    (JMPIFCONSP L92)
61    (GETVALUE&PUSH 8)                   ; X
63    (CALLS2&JMPIFNOT 15 L85)            ; FLOATP
66    L66
66    (GETVALUE&PUSH 8)                   ; X
68    (CALLS2 145)                        ; ZEROP
70    (UNBIND1)
71    (JMPIFNOT L93)
73    (JMP L88)
75    L75
75    (GETVALUE&PUSH 1)                   ; NUM
77    (GETVALUE&PUSH 0)                   ; VAR
79    (CALL2&PUSH 3)                      ; PDERIVATIVE
81    (CONST 2)                           ; 1
82    (CONS)
83    (JMP L108)
85    L85
85    (UNBIND1)
86    (JMPIFNOT L93)
88    L88
88    (GETVALUE 1)                        ; NUM
90    (JMP L108)
92    L92
92    (UNBIND1)
93    L93
93    (GETVALUE&PUSH 1)                   ; NUM
95    (GETVALUE 1)                        ; NUM
97    (CDR&PUSH)
98    (LOAD 5)
99    (CDR)
100   (CAR&PUSH)
101   (CONST&PUSH 10)                     ; 2
102   (CALL2&PUSH 11)                     ; PEXPT
104   (CALL2&PUSH 5)                      ; PTIMES
106   (CALLS1 170)                        ; RPLACD
108   L108
108   (UNBIND1)
109   (SKIP 2)
111   (UNBIND1)
112   (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN RATDIF (X Y) ...)-15|
(CONST 0) = RATDIF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATDIF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATDIF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATDIF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATDIF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATDIF
8     (SKIP&RET 1)


Disassembly of function RATDIF
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = RATMINUS
(CONST 3) = RATPLUS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X)
10 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE&PUSH 0)                   ; X
8     (GETVALUE&PUSH 1)                   ; Y
10    (CALL1&PUSH 2)                      ; RATMINUS
12    (CALL2 3)                           ; RATPLUS
14    (UNBIND 2)
16    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN RATFACT (X FN) ...)-16|
(CONST 0) = RATFACT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATFACT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATFACT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATFACT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATFACT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATFACT
8     (SKIP&RET 1)


Disassembly of function RATFACT
(CONST 0) = X
(CONST 1) = $KEEPFLOAT
(CONST 2) = PFLOATP
(CONST 3) = FLOATFACT
(CONST 4) = 1
(CONST 5) = -1
(CONST 6) = FIXMULT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X $KEEPFLOAT)
37 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (GETVALUE 1)                        ; $KEEPFLOAT
5     (JMPIFNOT L21)
7     (GETVALUE 0)                        ; X
9     (CAR&PUSH)
10    (CALL1&JMPIF 2 L19)                 ; PFLOATP
13    (GETVALUE 0)                        ; X
15    (CDR&PUSH)
16    (CALL1&JMPIFNOT 2 L21)              ; PFLOATP
19    L19
19    (CONST 3)                           ; FLOATFACT
20    (STORE 4)
21    L21
21    (GETVALUE 0)                        ; X
23    (CDR&PUSH)
24    (JMPIFNOTEQTO 4 L36)                ; 1
27    (LOAD&PUSH 4)
28    (GETVALUE 0)                        ; X
30    (CAR&PUSH)
31    (FUNCALL 1)
33    L33
33    (UNBIND1)
34    (SKIP&RET 3)
36    L36
36    (LOAD&PUSH 4)
37    (GETVALUE 0)                        ; X
39    (CAR&PUSH)
40    (FUNCALL&PUSH 1)
42    (LOAD&PUSH 5)
43    (GETVALUE 0)                        ; X
45    (CDR&PUSH)
46    (FUNCALL&PUSH 1)
48    (CONST&PUSH 5)                      ; -1
49    (CALL2&PUSH 6)                      ; FIXMULT
51    (CALLSR 2 35)                       ; NCONC
54    (JMP L33)


Disassembly of function #:|(DEFUN FLOATFACT (P) ...)-17|
(CONST 0) = FLOATFACT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FLOATFACT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FLOATFACT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FLOATFACT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FLOATFACT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FLOATFACT
8     (SKIP&RET 1)


Disassembly of function FLOATFACT
(CONST 0) = P
(CONST 1) = PTERMCONT
(CONST 2) = MONOM->FACL
(CONST 3) = 1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
28 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (NIL&PUSH)
4     (GETVALUE&PUSH 0)                   ; P
6     (CALL1&PUSH 1)                      ; PTERMCONT
8     (LOAD&CAR&STORE 0 1)
11    (LOAD 0)
12    (CDR)
13    (CAR)
14    (STORE 0)
15    (LOAD&PUSH 1)
16    (CALL1 2)                           ; MONOM->FACL
18    (STORE 1)
19    (LOAD&PUSH 0)
20    (JMPIFEQTO 3 L36)                   ; 1
23    (LOAD&PUSH 1)
24    (LOAD&PUSH 1)
25    (CONST&PUSH 3)                      ; 1
26    (LIST&PUSH 2)
28    (CALLSR 2 34)                       ; APPEND
31    (SKIP 2)
33    L33
33    (UNBIND1)
34    (SKIP&RET 2)
36    L36
36    (LOAD 1)
37    (SKIP 2)
39    (JMP L33)


Disassembly of function #:|(DEFUN RATINVERT (Y) ...)-18|
(CONST 0) = RATINVERT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATINVERT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATINVERT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATINVERT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATINVERT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATINVERT
8     (SKIP&RET 1)


Disassembly of function RATINVERT
(CONST 0) = Y
(CONST 1) = X
(CONST 2) = FIXNUMP
(CONST 3) = "QUOTIENT by ZERO"
(CONST 4) = ERRRJF
(CONST 5) = MODULUS
(CONST 6) = CRECIP
(CONST 7) = PCTIMES
(CONST 8) = 1
(CONST 9) = $KEEPFLOAT
(CONST 10) = 1.0
(CONST 11) = PMINUSP
(CONST 12) = PMINUS
(CONST 13) = RATALGDENOM
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($KEEPFLOAT MODULUS X Y)
103 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; Y
3     (GETVALUE 0)                        ; Y
5     (CAR)
6     (BIND 1)                            ; X
8     (GETVALUE&PUSH 1)                   ; X
10    (CALL1&JMPIF 2 L23)                 ; FIXNUMP
13    (GETVALUE 1)                        ; X
15    (JMPIFCONSP L37)
17    (GETVALUE&PUSH 1)                   ; X
19    (CALLS2&JMPIFNOT 15 L120)           ; FLOATP
23    L23
23    (GETVALUE&PUSH 1)                   ; X
25    (CALLS2 145)                        ; ZEROP
27    (UNBIND1)
28    (JMPIFNOT L124)
31    L31
31    (CONST&PUSH 3)                      ; "QUOTIENT by ZERO"
32    (CALL1 4)                           ; ERRRJF
34    (JMP L158)
37    L37
37    (UNBIND1)
38    (GETVALUE 5)                        ; MODULUS
40    (JMPIFNOT L134)
43    (JMP L128)
46    L46
46    (GETVALUE 0)                        ; Y
48    (CAR&PUSH)
49    (CALL1&PUSH 6)                      ; CRECIP
51    (GETVALUE 0)                        ; Y
53    (CDR&PUSH)
54    (CALL2&PUSH 7)                      ; PCTIMES
56    (CONST 8)                           ; 1
57    (CONS)
58    (JMP L158)
61    L61
61    (GETVALUE&PUSH 1)                   ; X
63    (GETVALUE&PUSH 0)                   ; Y
65    (CALLS2 181)                        ; TRUNCATE
67    (JMP L95)
69    L69
69    (CONST&PUSH 10)                     ; 1.0
70    (GETVALUE 0)                        ; Y
72    (CAR)
73    (BIND 0)                            ; Y
75    (LOAD 3)
76    (BIND 1)                            ; X
78    (GETVALUE&PUSH 1)                   ; X
80    (CALLS2&JMPIFNOT 12 L88)            ; INTEGERP
83    (GETVALUE&PUSH 0)                   ; Y
85    (CALLS2&JMPIF 12 L61)               ; INTEGERP
88    L88
88    (GETVALUE&PUSH 1)                   ; X
90    (GETVALUE&PUSH 0)                   ; Y
92    (CALLSR 1 56)                       ; /
95    L95
95    (UNBIND 2)
97    (STORE 0)
98    (GETVALUE 0)                        ; Y
100   (CDR&PUSH)
101   (CALL2&PUSH 7)                      ; PCTIMES
103   (CONST 8)                           ; 1
104   (CONS)
105   (JMP L158)
107   L107
107   (GETVALUE 0)                        ; Y
109   (CDR&PUSH)
110   (CALL1&PUSH 12)                     ; PMINUS
112   (GETVALUE 0)                        ; Y
114   (CAR&PUSH)
115   (CALL1 12)                          ; PMINUS
117   (CONS)
118   (JMP L158)
120   L120
120   (UNBIND1)
121   (JMPIF L31)
124   L124
124   (GETVALUE 5)                        ; MODULUS
126   (JMPIFNOT L134)
128   L128
128   (GETVALUE 0)                        ; Y
130   (CAR)
131   (JMPIFATOM L46)
134   L134
134   (GETVALUE 9)                        ; $KEEPFLOAT
136   (JMPIFNOT L145)
138   (GETVALUE 0)                        ; Y
140   (CAR&PUSH)
141   (CALLS2&JMPIF 15 L69)               ; FLOATP
145   L145
145   (GETVALUE 0)                        ; Y
147   (CAR&PUSH)
148   (CALL1&JMPIF 11 L107)               ; PMINUSP
151   (GETVALUE 0)                        ; Y
153   (CDR&PUSH)
154   (GETVALUE 0)                        ; Y
156   (CAR)
157   (CONS)
158   L158
158   (PUSH)
159   (CALL1 13)                          ; RATALGDENOM
161   (UNBIND1)
162   (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN RATMINUS (X) ...)-19|
(CONST 0) = RATMINUS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATMINUS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATMINUS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATMINUS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATMINUS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATMINUS
8     (SKIP&RET 1)


Disassembly of function RATMINUS
(CONST 0) = X
(CONST 1) = PMINUS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
10 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (CAR&PUSH)
6     (CALL1&PUSH 1)                      ; PMINUS
8     (GETVALUE 0)                        ; X
10    (CDR)
11    (CONS)
12    (UNBIND1)
13    (SKIP&RET 2)


Disassembly of function #:|(DEFUN RATALGDENOM (X) ...)-20|
(CONST 0) = RATALGDENOM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATALGDENOM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATALGDENOM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATALGDENOM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATALGDENOM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATALGDENOM
8     (SKIP&RET 1)


Disassembly of function RATALGDENOM
(CONST 0) = X
(CONST 1) = $RATALGDENOM
(CONST 2) = ALG
(CONST 3) = ERRRJFFLAG
(CONST 4) = RATERR
(CONST 5) = 1
(CONST 6) = RAINV
(CONST 7) = RATTIMES
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X $RATALGDENOM)
41 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 1)                        ; $RATALGDENOM
5     (JMPIFNOT L44)
7     (GETVALUE 0)                        ; X
9     (CDR)
10    (JMPIFATOM L48)
12    (GETVALUE 0)                        ; X
14    (CDR&PUSH)
15    (CALL1&JMPIFNOT 2 L55)              ; ALG
18    (T)
19    (BIND 3)                            ; ERRRJFFLAG
21    (CONST 4)                           ; RATERR
22    (CATCH-OPEN L52)
24    (GETVALUE 0)                        ; X
26    (CAR&PUSH)
27    (CONST 5)                           ; 1
28    (CONS&PUSH)
29    (GETVALUE 0)                        ; X
31    (CDR&PUSH)
32    (CALL1&PUSH 6)                      ; RAINV
34    (T&PUSH)
35    (CALL 3 7)                          ; RATTIMES
38    (CATCH-CLOSE)
39    (UNBIND1)
40    (JMPIF1 L57)
42    (JMP L55)
44    L44
44    (GETVALUE 0)                        ; X
46    (JMP L57)
48    L48
48    (GETVALUE 0)                        ; X
50    (JMP L57)
52    L52
52    (UNBIND1)
53    (JMPIF1 L57)
55    L55
55    (GETVALUE 0)                        ; X
57    L57
57    (UNBIND1)
58    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN RATREDUCE (X Y &AUX ...) ...)-21|
(CONST 0) = RATREDUCE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATREDUCE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATREDUCE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATREDUCE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATREDUCE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATREDUCE
8     (SKIP&RET 1)


Disassembly of function RATREDUCE
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = B
(CONST 3) = FIXNUMP
(CONST 4) = "QUOTIENT by ZERO"
(CONST 5) = ERRRJF
(CONST 6) = (0 . 1)
(CONST 7) = 1
(CONST 8) = $KEEPFLOAT
(CONST 9) = $FLOAT
(CONST 10) = PFLOATP
(CONST 11) = 1.0
(CONST 12) = QUOT
(CONST 13) = PCTIMES
(CONST 14) = PGCDCOFACTS
(CONST 15) = RATALGDENOM
(CONST 16) = MODULUS
(CONST 17) = CRECIP
(CONST 18) = PMINUSP
(CONST 19) = PMINUS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (MODULUS $FLOAT $KEEPFLOAT B X Y)
writes special variable : (B)
124 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (NIL)
7     (BIND 2)                            ; B
9     (GETVALUE 1)                        ; Y
11    (BIND 0)                            ; X
13    (GETVALUE&PUSH 0)                   ; X
15    (CALL1&JMPIF 3 L27)                 ; FIXNUMP
18    (GETVALUE 0)                        ; X
20    (JMPIFCONSP L45)
22    (GETVALUE&PUSH 0)                   ; X
24    (CALLS2&JMPIFNOT 15 L36)            ; FLOATP
27    L27
27    (GETVALUE&PUSH 0)                   ; X
29    (CALLS2 145)                        ; ZEROP
31    (UNBIND1)
32    (JMPIFNOT L46)
34    (JMP L39)
36    L36
36    (UNBIND1)
37    (JMPIFNOT L46)
39    L39
39    (CONST&PUSH 4)                      ; "QUOTIENT by ZERO"
40    (CALL1 5)                           ; ERRRJF
42    (JMP L200)
45    L45
45    (UNBIND1)
46    L46
46    (GETVALUE 0)                        ; X
48    (BIND 0)                            ; X
50    (GETVALUE&PUSH 0)                   ; X
52    (CALL1&JMPIF 3 L65)                 ; FIXNUMP
55    (GETVALUE 0)                        ; X
57    (JMPIFCONSP L131)
60    (GETVALUE&PUSH 0)                   ; X
62    (CALLS2&JMPIFNOT 15 L74)            ; FLOATP
65    L65
65    (GETVALUE&PUSH 0)                   ; X
67    (CALLS2 145)                        ; ZEROP
69    (UNBIND1)
70    (JMPIFNOT L132)
72    (JMP L77)
74    L74
74    (UNBIND1)
75    (JMPIFNOT L132)
77    L77
77    (CONST 6)                           ; (0 . 1)
78    (JMP L200)
81    L81
81    (GETVALUE&PUSH 0)                   ; X
83    (CONST 7)                           ; 1
84    (CONS)
85    (JMP L200)
88    L88
88    (CONST&PUSH 11)                     ; 1.0
89    (GETVALUE&PUSH 1)                   ; Y
91    (CALL2&PUSH 12)                     ; QUOT
93    (GETVALUE&PUSH 0)                   ; X
95    (CALL2&PUSH 13)                     ; PCTIMES
97    (CONST 7)                           ; 1
98    (CONS)
99    (JMP L200)
102   L102
102   (GETVALUE 2)                        ; B
104   (CDR&PUSH)
105   (CALL1&PUSH 17)                     ; CRECIP
107   (GETVALUE 2)                        ; B
109   (CAR&PUSH)
110   (CALL2&PUSH 13)                     ; PCTIMES
112   (CONST 7)                           ; 1
113   (CONS)
114   (JMP L200)
117   L117
117   (GETVALUE 2)                        ; B
119   (CAR&PUSH)
120   (CALL1&PUSH 19)                     ; PMINUS
122   (GETVALUE 2)                        ; B
124   (CDR&PUSH)
125   (CALL1 19)                          ; PMINUS
127   (CONS)
128   (JMP L200)
131   L131
131   (UNBIND1)
132   L132
132   (GETVALUE&PUSH 1)                   ; Y
134   (JMPIFEQTO 7 L81)                   ; 1
137   (GETVALUE 8)                        ; $KEEPFLOAT
139   (JMPIFNOT L161)
141   (GETVALUE 1)                        ; Y
143   (JMPIFCONSP L161)
145   (GETVALUE 9)                        ; $FLOAT
147   (JMPIF L88)
149   (GETVALUE&PUSH 1)                   ; Y
151   (CALLS2&JMPIF 15 L88)               ; FLOATP
155   (GETVALUE&PUSH 0)                   ; X
157   (CALL1&JMPIF 10 L88)                ; PFLOATP
161   L161
161   (GETVALUE&PUSH 0)                   ; X
163   (GETVALUE&PUSH 1)                   ; Y
165   (CALL2 14)                          ; PGCDCOFACTS
167   (SETVALUE 2)                        ; B
169   (CDR&PUSH)
170   (GETVALUE 2)                        ; B
172   (CDR)
173   (CDR)
174   (CAR&PUSH)
175   (CALLS1&PUSH 170)                   ; RPLACD
177   (CALL1 15)                          ; RATALGDENOM
179   (SETVALUE 2)                        ; B
181   (GETVALUE 16)                       ; MODULUS
183   (JMPIFNOT L191)
185   (GETVALUE 2)                        ; B
187   (CDR)
188   (JMPIFATOM L102)
191   L191
191   (GETVALUE 2)                        ; B
193   (CDR&PUSH)
194   (CALL1&JMPIF 18 L117)               ; PMINUSP
198   (GETVALUE 2)                        ; B
200   L200
200   (UNBIND 3)
202   (SKIP&RET 3)


Disassembly of function #:|(DEFUN PTIMES* (P Q) ...)-22|
(CONST 0) = PTIMES*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PTIMES*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PTIMES*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PTIMES*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PTIMES*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PTIMES*
8     (SKIP&RET 1)


Disassembly of function PTIMES*
(CONST 0) = P
(CONST 1) = $RATWTLVL
(CONST 2) = 0
(CONST 3) = WTPTIMES
(CONST 4) = PTIMES
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (P $RATWTLVL)
16 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (GETVALUE 1)                        ; $RATWTLVL
5     (JMPIF L15)
7     (GETVALUE&PUSH 0)                   ; P
9     (LOAD&PUSH 5)
10    (CALL2 4)                           ; PTIMES
12    L12
12    (UNBIND1)
13    (SKIP&RET 3)
15    L15
15    (GETVALUE&PUSH 0)                   ; P
17    (LOAD&PUSH 5)
18    (CONST&PUSH 2)                      ; 0
19    (CALL 3 3)                          ; WTPTIMES
22    (JMP L12)


Disassembly of function #:|(DEFMFUN RATTIMES (X Y GCDSW) ...)-23|
(CONST 0) = RATTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATTIMES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATTIMES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATTIMES
8     (SKIP&RET 1)


Disassembly of function RATTIMES
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = $RATFAC
(CONST 3) = FACRTIMES
(CONST 4) = $ALGEBRAIC
(CONST 5) = RALGP
(CONST 6) = RATREDUCE
(CONST 7) = 1
(CONST 8) = PTIMES*
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X $ALGEBRAIC $RATFAC)
109 byte-code instructions:
0     L0
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD 5)
4     (BIND 1)                            ; Y
6     (GETVALUE 2)                        ; $RATFAC
8     (JMPIF L70)
10    (GETVALUE 4)                        ; $ALGEBRAIC
12    (JMPIFNOT L27)
14    (LOAD&JMPIFNOT 7 L27)
17    (GETVALUE&PUSH 0)                   ; X
19    (CALL1&JMPIFNOT 5 L27)              ; RALGP
22    (GETVALUE&PUSH 1)                   ; Y
24    (CALL1&JMPIF 5 L81)                 ; RALGP
27    L27
27    (GETVALUE 0)                        ; X
29    (CDR&PUSH)
30    (JMPIFEQTO 7 L129)                  ; 1
34    (GETVALUE 1)                        ; Y
36    (CDR&PUSH)
37    (JMPIFEQTO 7 L152)                  ; 1
41    (LOAD&JMPIFNOT 7 L160)
45    (GETVALUE 0)                        ; X
47    (CAR&PUSH)
48    (GETVALUE 1)                        ; Y
50    (CDR&PUSH)
51    (CALL2&PUSH 6)                      ; RATREDUCE
53    (GETVALUE 1)                        ; Y
55    (CAR&PUSH)
56    (GETVALUE 0)                        ; X
58    (CDR&PUSH)
59    (CALL2 6)                           ; RATREDUCE
61    L61
61    (PUSH)
62    (NIL)
63    L63
63    (PUSH)
64    (JSR L0)
67    (JMP L177)
70    L70
70    (GETVALUE&PUSH 0)                   ; X
72    (GETVALUE&PUSH 1)                   ; Y
74    (LOAD&PUSH 9)
75    (CALL 3 3)                          ; FACRTIMES
78    (JMP L177)
81    L81
81    (GETVALUE&PUSH 0)                   ; X
83    (GETVALUE&PUSH 1)                   ; Y
85    (NIL&PUSH)
86    (JSR&PUSH L0)
89    (LOAD&CAR&PUSH 0)
91    (LOAD&CDR&PUSH 1)
93    (CALL2 6)                           ; RATREDUCE
95    (SKIP 1)
97    (JMP L177)
100   L100
100   (GETVALUE 0)                        ; X
102   (CAR&PUSH)
103   (GETVALUE 1)                        ; Y
105   (CAR&PUSH)
106   (CALL2&PUSH 8)                      ; PTIMES*
108   (CONST 7)                           ; 1
109   (CONS)
110   (JMP L177)
113   L113
113   (GETVALUE 0)                        ; X
115   (CAR&PUSH)
116   (GETVALUE 1)                        ; Y
118   (CDR&PUSH)
119   (CALL2&PUSH 6)                      ; RATREDUCE
121   (GETVALUE 1)                        ; Y
123   (CAR&PUSH)
124   (CONST 7)                           ; 1
125   (CONS)
126   (JMP L61)
129   L129
129   (GETVALUE 1)                        ; Y
131   (CDR&PUSH)
132   (JMPIFEQTO 7 L100)                  ; 1
135   (LOAD&JMPIF 7 L113)
138   (GETVALUE 0)                        ; X
140   (CAR&PUSH)
141   (GETVALUE 1)                        ; Y
143   (CAR&PUSH)
144   (CALL2&PUSH 8)                      ; PTIMES*
146   (GETVALUE 1)                        ; Y
148   (CDR)
149   (CONS)
150   (JMP L177)
152   L152
152   (GETVALUE&PUSH 1)                   ; Y
154   (GETVALUE&PUSH 0)                   ; X
156   (LOAD 9)
157   (JMP L63)
160   L160
160   (GETVALUE 0)                        ; X
162   (CAR&PUSH)
163   (GETVALUE 1)                        ; Y
165   (CAR&PUSH)
166   (CALL2&PUSH 8)                      ; PTIMES*
168   (GETVALUE 0)                        ; X
170   (CDR&PUSH)
171   (GETVALUE 1)                        ; Y
173   (CDR&PUSH)
174   (CALL2 8)                           ; PTIMES*
176   (CONS)
177   L177
177   (UNBIND 2)
179   (SKIP&RET 4)


Disassembly of function #:|(DEFMFUN RATEXPT (X N) ...)-24|
(CONST 0) = RATEXPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATEXPT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATEXPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATEXPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATEXPT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATEXPT
8     (SKIP&RET 1)


Disassembly of function RATEXPT
(CONST 0) = X
(CONST 1) = 0
(CONST 2) = (1 . 1)
(CONST 3) = 1
(CONST 4) = RATINVERT
(CONST 5) = $RATWTLVL
(CONST 6) = WTPEXPT
(CONST 7) = RATREDUCE
(CONST 8) = $ALGEBRAIC
(CONST 9) = PEXPT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X $ALGEBRAIC $RATWTLVL)
61 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD&PUSH 4)
4     (JMPIFEQTO 1 L40)                   ; 0
7     (LOAD&PUSH 4)
8     (JMPIFEQTO 3 L43)                   ; 1
11    (LOAD&PUSH 4)
12    (CALLS2&JMPIF 147 L47)              ; MINUSP
15    (GETVALUE 5)                        ; $RATWTLVL
17    (JMPIF L59)
19    (GETVALUE 8)                        ; $ALGEBRAIC
21    (JMPIFNOT L73)
23    (GETVALUE 0)                        ; X
25    (CAR&PUSH)
26    (LOAD&PUSH 5)
27    (CALL2&PUSH 9)                      ; PEXPT
29    (GETVALUE 0)                        ; X
31    (CDR&PUSH)
32    (LOAD&PUSH 6)
33    (CALL2 9)                           ; PEXPT
35    L35
35    (PUSH)
36    (CALL2 7)                           ; RATREDUCE
38    (JMP L86)
40    L40
40    (CONST 2)                           ; (1 . 1)
41    (JMP L86)
43    L43
43    (GETVALUE 0)                        ; X
45    (JMP L86)
47    L47
47    (GETVALUE&PUSH 0)                   ; X
49    (LOAD&PUSH 5)
50    (CALLSR&PUSH 0 54)                  ; -
53    (JSR&PUSH L0)
55    (CALL1 4)                           ; RATINVERT
57    (JMP L86)
59    L59
59    (GETVALUE 0)                        ; X
61    (CAR&PUSH)
62    (LOAD&PUSH 5)
63    (CALL2&PUSH 6)                      ; WTPEXPT
65    (GETVALUE 0)                        ; X
67    (CDR&PUSH)
68    (LOAD&PUSH 6)
69    (CALL2 6)                           ; WTPEXPT
71    (JMP L35)
73    L73
73    (GETVALUE 0)                        ; X
75    (CAR&PUSH)
76    (LOAD&PUSH 5)
77    (CALL2&PUSH 9)                      ; PEXPT
79    (GETVALUE 0)                        ; X
81    (CDR&PUSH)
82    (LOAD&PUSH 6)
83    (CALL2 9)                           ; PEXPT
85    (CONS)
86    L86
86    (UNBIND1)
87    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN RATPLUS (X Y &AUX ...) ...)-25|
(CONST 0) = RATPLUS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATPLUS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATPLUS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATPLUS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATPLUS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATPLUS
8     (SKIP&RET 1)


Disassembly of function RATPLUS
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = $RATFAC
(CONST 3) = FACRPLUS
(CONST 4) = $RATWTLVL
(CONST 5) = 0
(CONST 6) = WTPTIMES
(CONST 7) = PPLUS
(CONST 8) = RATREDUCE
(CONST 9) = $ALGEBRAIC
(CONST 10) = RALGP
(CONST 11) = PTIMESCHK
(CONST 12) = 1
(CONST 13) = PTIMES
(CONST 14) = PGCDCOFACTS
(CONST 15) = FIXNUMP
(CONST 16) = (0 . 1)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X $ALGEBRAIC $RATWTLVL $RATFAC)
191 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (PUSH-NIL 2)
8     (GETVALUE 2)                        ; $RATFAC
10    (JMPIF L65)
12    (GETVALUE 4)                        ; $RATWTLVL
14    (JMPIF L74)
16    (GETVALUE 9)                        ; $ALGEBRAIC
18    (JMPIFNOT L160)
21    (GETVALUE&PUSH 0)                   ; X
23    (CALL1&JMPIFNOT 10 L160)            ; RALGP
27    (GETVALUE&PUSH 1)                   ; Y
29    (CALL1&JMPIFNOT 10 L160)            ; RALGP
33    (GETVALUE 0)                        ; X
35    (CAR&PUSH)
36    (GETVALUE 1)                        ; Y
38    (CDR&PUSH)
39    (CALL2&PUSH 11)                     ; PTIMESCHK
41    (GETVALUE 1)                        ; Y
43    (CAR&PUSH)
44    (GETVALUE 0)                        ; X
46    (CDR&PUSH)
47    (CALL2&PUSH 11)                     ; PTIMESCHK
49    (CALL2&PUSH 7)                      ; PPLUS
51    (GETVALUE 0)                        ; X
53    (CDR&PUSH)
54    (GETVALUE 1)                        ; Y
56    (CDR&PUSH)
57    (CALL2 11)                          ; PTIMESCHK
59    L59
59    (PUSH)
60    (CALL2 8)                           ; RATREDUCE
62    (JMP L295)
65    L65
65    (GETVALUE&PUSH 0)                   ; X
67    (GETVALUE&PUSH 1)                   ; Y
69    (CALL2 3)                           ; FACRPLUS
71    (JMP L295)
74    L74
74    (GETVALUE 0)                        ; X
76    (CAR&PUSH)
77    (GETVALUE 1)                        ; Y
79    (CDR&PUSH)
80    (CONST&PUSH 5)                      ; 0
81    (CALL&PUSH 3 6)                     ; WTPTIMES
84    (GETVALUE 1)                        ; Y
86    (CAR&PUSH)
87    (GETVALUE 0)                        ; X
89    (CDR&PUSH)
90    (CONST&PUSH 5)                      ; 0
91    (CALL&PUSH 3 6)                     ; WTPTIMES
94    (CALL2&PUSH 7)                      ; PPLUS
96    (GETVALUE 0)                        ; X
98    (CDR&PUSH)
99    (GETVALUE 1)                        ; Y
101   (CDR&PUSH)
102   (CONST&PUSH 5)                      ; 0
103   (CALL 3 6)                          ; WTPTIMES
106   (JMP L59)
108   L108
108   (GETVALUE 1)                        ; Y
110   (JMP L295)
113   L113
113   (GETVALUE 0)                        ; X
115   (CAR&PUSH)
116   (GETVALUE 1)                        ; Y
118   (CAR&PUSH)
119   (CALL2&PUSH 7)                      ; PPLUS
121   (CONST 12)                          ; 1
122   (CONS)
123   (JMP L295)
126   L126
126   (GETVALUE 0)                        ; X
128   (CAR&PUSH)
129   (JMPIFEQTO 5 L108)                  ; 0
132   (GETVALUE 1)                        ; Y
134   (CDR&PUSH)
135   (JMPIFEQTO 12 L113)                 ; 1
138   (GETVALUE 0)                        ; X
140   (CAR&PUSH)
141   (GETVALUE 1)                        ; Y
143   (CDR&PUSH)
144   (CALL2&PUSH 13)                     ; PTIMES
146   (GETVALUE 1)                        ; Y
148   (CAR&PUSH)
149   (CALL2&PUSH 7)                      ; PPLUS
151   (GETVALUE 1)                        ; Y
153   (JMP L193)
155   L155
155   (GETVALUE 0)                        ; X
157   (JMP L295)
160   L160
160   (GETVALUE 0)                        ; X
162   (CDR&PUSH)
163   (JMPIFEQTO 12 L126)                 ; 1
166   (GETVALUE 1)                        ; Y
168   (CDR&PUSH)
169   (JMPIFNOTEQTO 12 L198)              ; 1
172   (GETVALUE 1)                        ; Y
174   (CAR&PUSH)
175   (JMPIFEQTO 5 L155)                  ; 0
178   (GETVALUE 1)                        ; Y
180   (CAR&PUSH)
181   (GETVALUE 0)                        ; X
183   (CDR&PUSH)
184   (CALL2&PUSH 13)                     ; PTIMES
186   (GETVALUE 0)                        ; X
188   (CAR&PUSH)
189   (CALL2&PUSH 7)                      ; PPLUS
191   (GETVALUE 0)                        ; X
193   L193
193   (CDR)
194   (CONS)
195   (JMP L295)
198   L198
198   (GETVALUE 0)                        ; X
200   (CDR&PUSH)
201   (GETVALUE 1)                        ; Y
203   (CDR&PUSH)
204   (CALL2 14)                          ; PGCDCOFACTS
206   (STORE 1)
207   (GETVALUE 0)                        ; X
209   (CAR&PUSH)
210   (LOAD 2)
211   (CDR)
212   (CDR)
213   (CAR&PUSH)
214   (CALL2&PUSH 13)                     ; PTIMES
216   (GETVALUE 1)                        ; Y
218   (CAR&PUSH)
219   (LOAD 3)
220   (CDR)
221   (CAR&PUSH)
222   (CALL2&PUSH 13)                     ; PTIMES
224   (CALL2 7)                           ; PPLUS
226   (STORE 0)
227   (BIND 0)                            ; X
229   (GETVALUE&PUSH 0)                   ; X
231   (CALL1&JMPIF 15 L243)               ; FIXNUMP
234   (GETVALUE 0)                        ; X
236   (JMPIFCONSP L267)
238   (GETVALUE&PUSH 0)                   ; X
240   (CALLS2&JMPIFNOT 15 L252)           ; FLOATP
243   L243
243   (GETVALUE&PUSH 0)                   ; X
245   (CALLS2 145)                        ; ZEROP
247   (UNBIND1)
248   (JMPIFNOT L268)
250   (JMP L255)
252   L252
252   (UNBIND1)
253   (JMPIFNOT L268)
255   L255
255   (CONST 16)                          ; (0 . 1)
256   (JMP L295)
258   L258
258   (LOAD&PUSH 0)
259   (GETVALUE 0)                        ; X
261   (CDR&PUSH)
262   (GETVALUE 1)                        ; Y
264   (CDR)
265   (JMP L291)
267   L267
267   (UNBIND1)
268   L268
268   (LOAD&CAR&PUSH 1)
270   (JMPIFEQTO 12 L258)                 ; 1
273   (LOAD&PUSH 0)
274   (LOAD&CAR&PUSH 2)
276   (CALL2 8)                           ; RATREDUCE
278   (STORE 0)
279   (CAR&PUSH)
280   (LOAD&CDR&PUSH 1)
282   (LOAD 3)
283   (CDR)
284   (CAR&PUSH)
285   (LOAD 4)
286   (CDR)
287   (CDR)
288   (CAR&PUSH)
289   (CALL2 13)                          ; PTIMES
291   L291
291   (PUSH)
292   (CALL2 13)                          ; PTIMES
294   (CONS)
295   L295
295   (SKIP 2)
297   (UNBIND 2)
299   (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN RATQUOTIENT (X Y) ...)-26|
(CONST 0) = RATQUOTIENT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RATQUOTIENT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATQUOTIENT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RATQUOTIENT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RATQUOTIENT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RATQUOTIENT
8     (SKIP&RET 1)


Disassembly of function RATQUOTIENT
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = RATINVERT
(CONST 3) = RATTIMES
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X)
11 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE&PUSH 0)                   ; X
8     (GETVALUE&PUSH 1)                   ; Y
10    (CALL1&PUSH 2)                      ; RATINVERT
12    (T&PUSH)
13    (CALL 3 3)                          ; RATTIMES
16    (UNBIND 2)
18    (SKIP&RET 3)


Wrote file binary-clisp/rat3b.fas
Wrote file /cygdrive/e/temp/maxima/src/rat3b.lis