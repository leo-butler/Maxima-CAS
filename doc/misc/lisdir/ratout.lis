Listing of compilation of file /cygdrive/e/temp/maxima/src/ratout.lisp
on 2002-12-17 13:33:45 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/ratout.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE RATOUT)-2|
(CONST 0) = RATOUT
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; RATOUT
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL $ALGEBRAIC ERRRJFFLAG ...) (*LEXPR $RAT) ...)-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(LOAD-MACSYMA-MACROS RATMAC)-4|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE MODGCD))-5|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL $GCD XV ...))-6|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN NEWGCD (X Y MODULUS ...) ...)-7|
(CONST 0) = NEWGCD
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NEWGCD>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NEWGCD
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NEWGCD
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NEWGCD>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NEWGCD
8     (SKIP&RET 1)


Disassembly of function NEWGCD
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = MODULUS
(CONST 3) = HMODULUS
(CONST 4) = SETQMODULUS
(CONST 5) = CGCD
(CONST 6) = PCONTENT1
(CONST 7) = B
(CONST 8) = OLDCONTENT1
(CONST 9) = PQUOTIENT
(CONST 10) = PGCDP
(CONST 11) = PGCDM
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B Y X MODULUS)
114 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD 5)
4     (BIND 1)                            ; Y
6     (LOAD 7)
7     (BIND 2)                            ; MODULUS
9     (NIL)
10    (BIND 3)                            ; HMODULUS
12    (GETVALUE&PUSH 2)                   ; MODULUS
14    (CALL1 4)                           ; SETQMODULUS
16    (GETVALUE 0)                        ; X
18    (JMPIFATOM L54)
20    (GETVALUE 1)                        ; Y
22    (JMPIFCONSP L82)
24    (GETVALUE&PUSH 1)                   ; Y
26    (CALLS2&JMPIF 145 L70)              ; ZEROP
29    (GETVALUE 0)                        ; X
31    (CDR&PUSH)
32    (GETVALUE 1)                        ; Y
34    L34
34    (PUSH)
35    (CALL2 6)                           ; PCONTENT1
37    (JMP L169)
40    L40
40    (GETVALUE 1)                        ; Y
42    (JMP L169)
45    L45
45    (GETVALUE&PUSH 0)                   ; X
47    (GETVALUE&PUSH 1)                   ; Y
49    (CALL2 5)                           ; CGCD
51    (JMP L169)
54    L54
54    (GETVALUE&PUSH 0)                   ; X
56    (CALLS2&JMPIF 145 L40)              ; ZEROP
59    (GETVALUE 1)                        ; Y
61    (JMPIFATOM L45)
63    (GETVALUE 1)                        ; Y
65    (CDR&PUSH)
66    (GETVALUE 0)                        ; X
68    (JMP L34)
70    L70
70    (GETVALUE 0)                        ; X
72    (JMP L169)
75    L75
75    (GETVALUE 0)                        ; X
77    (CDR&PUSH)
78    (GETVALUE 1)                        ; Y
80    (JMP L133)
82    L82
82    (GETVALUE 0)                        ; X
84    (CAR&PUSH)
85    (GETVALUE 1)                        ; Y
87    (CAR)
88    (BIND 7)                            ; B
90    (LOAD&PUSH 3)
91    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
93    (GETVALUE&PUSH 7)                   ; B
95    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
97    (CALLSR 1 48)                       ; >
100   (UNBIND1)
101   (SKIP 1)
103   (JMPIF L75)
105   (GETVALUE 1)                        ; Y
107   (CAR&PUSH)
108   (GETVALUE 0)                        ; X
110   (CAR)
111   (BIND 7)                            ; B
113   (LOAD&PUSH 3)
114   (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
116   (GETVALUE&PUSH 7)                   ; B
118   (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
120   (CALLSR 1 48)                       ; >
123   (UNBIND1)
124   (SKIP 1)
126   (JMPIFNOT L168)
128   (GETVALUE 1)                        ; Y
130   (CDR&PUSH)
131   (GETVALUE 0)                        ; X
133   L133
133   (PUSH)
134   (CALL2 8)                           ; OLDCONTENT1
136   (JMP L169)
138   L138
138   (PUSH)
139   (GETVALUE&PUSH 0)                   ; X
141   (LOAD&PUSH 2)
142   (CALL2&PUSH 9)                      ; PQUOTIENT
144   (GETVALUE&PUSH 1)                   ; Y
146   (LOAD&PUSH 3)
147   (CALL2&PUSH 9)                      ; PQUOTIENT
149   (LIST 3)
151   (SKIP 1)
153   (JMP L185)
155   L155
155   (GETVALUE&PUSH 0)                   ; X
157   (GETVALUE&PUSH 1)                   ; Y
159   (GETVALUE&PUSH 2)                   ; MODULUS
161   (CALL 3 10)                         ; PGCDP
164   (SKIP 1)
166   (JMP L185)
168   L168
168   (NIL)
169   L169
169   (PUSH)
170   (LOAD&JMPIF 0 L138)
173   (GETVALUE 2)                        ; MODULUS
175   (JMPIF L155)
177   (GETVALUE&PUSH 0)                   ; X
179   (GETVALUE&PUSH 1)                   ; Y
181   (CALL2 11)                          ; PGCDM
183   (SKIP 1)
185   L185
185   (UNBIND 4)
187   (SKIP&RET 4)


Disassembly of function #:|(DEFUN PMODCONTENT (P) ...)-8|
(CONST 0) = PMODCONTENT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PMODCONTENT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PMODCONTENT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PMODCONTENT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PMODCONTENT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PMODCONTENT
8     (SKIP&RET 1)


Disassembly of function PMODCONTENT
(CONST 0) = P
(CONST 1) = *VAR
(CONST 2) = *CHK
(CONST 3) = *RES
(CONST 4) = *MAX
(CONST 5) = GCD
(CONST 6) = 0
(CONST 7) = PNEXT
(CONST 8) = XV
(CONST 9) = B
(CONST 10) = 1
(CONST 11) = PGATH1
(CONST 12) = PGATH3
(CONST 13) = X
(CONST 14) = FIXNUMP
(CONST 15) = UNIVAR
(CONST 16) = PGCDU
(CONST 17) = PQUOTIENT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*MAX GCD X *RES *VAR B *CHK XV P)
writes special variables : (GCD *RES *VAR *MAX *CHK)
117 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (NIL)
4     (BIND 1)                            ; *VAR
6     (NIL)
7     (BIND 2)                            ; *CHK
9     (NIL)
10    (BIND 3)                            ; *RES
12    (NIL)
13    (BIND 4)                            ; *MAX
15    (NIL)
16    (BIND 5)                            ; GCD
18    (GETVALUE 0)                        ; P
20    (CAR)
21    (SETVALUE 2)                        ; *CHK
23    (CONST 6)                           ; 0
24    (SETVALUE 4)                        ; *MAX
26    (GETVALUE 0)                        ; P
28    (CDR&PUSH)
29    (NIL&PUSH)
30    (CALL2 7)                           ; PNEXT
32    (SETVALUE 1)                        ; *VAR
34    (GETVALUE&PUSH 8)                   ; XV
36    (GETVALUE 2)                        ; *CHK
38    (BIND 9)                            ; B
40    (LOAD&PUSH 3)
41    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
43    (GETVALUE&PUSH 9)                   ; B
45    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
47    (CALLSR 1 48)                       ; >
50    (UNBIND1)
51    (SKIP 1)
53    (JMPIF L184)
56    (GETVALUE 1)                        ; *VAR
58    (JMPIFNOT L106)
60    (GETVALUE 0)                        ; P
62    (CDR&PUSH)
63    (CALL1 11)                          ; PGATH1
65    L65
65    (CONST 6)                           ; 0
66    (SETVALUE 3)                        ; *RES
68    (GETVALUE 0)                        ; P
70    (CDR&PUSH)
71    (CALL1 12)                          ; PGATH3
73    L73
73    (GETVALUE 3)                        ; *RES
75    (JMPIFCONSP L137)
77    (GETVALUE 3)                        ; *RES
79    (BIND 13)                           ; X
81    (GETVALUE&PUSH 13)                  ; X
83    (CALL1&JMPIF 14 L96)                ; FIXNUMP
86    (GETVALUE 13)                       ; X
88    (JMPIFCONSP L183)
91    (GETVALUE&PUSH 13)                  ; X
93    (CALLS2&JMPIFNOT 15 L112)           ; FLOATP
96    L96
96    (GETVALUE&PUSH 13)                  ; X
98    (CALLS2 145)                        ; ZEROP
100   (UNBIND1)
101   (JMPIFNOT L184)
104   (JMP L158)
106   L106
106   (GETVALUE&PUSH 0)                   ; P
108   (CONST 10)                          ; 1
109   (JMP L187)
112   L112
112   (UNBIND1)
113   (JMPIFNOT L184)
116   (JMP L158)
118   L118
118   (GETVALUE&PUSH 3)                   ; *RES
120   (JSR L0)
123   (CAR)
124   (SETVALUE 3)                        ; *RES
126   (JMP L73)
128   L128
128   (PUSH)
129   (GETVALUE&PUSH 3)                   ; *RES
131   (CALL2 16)                          ; PGCDU
133   (SETVALUE 5)                        ; GCD
135   (JMP L158)
137   L137
137   (GETVALUE 3)                        ; *RES
139   (CAR&PUSH)
140   (GETVALUE 2)                        ; *CHK
142   (JMPIFNOTEQ L184)
144   (GETVALUE 3)                        ; *RES
146   (CDR&PUSH)
147   (CALL1&JMPIFNOT 15 L118)            ; UNIVAR
150   (GETVALUE 5)                        ; GCD
152   (JMPIF L128)
154   (GETVALUE 3)                        ; *RES
156   (SETVALUE 5)                        ; GCD
158   L158
158   (GETVALUE 5)                        ; GCD
160   (JMPIFATOM L184)
162   (GETVALUE&PUSH 4)                   ; *MAX
164   (CALLS2 151)                        ; 1-
166   (SETVALUE 4)                        ; *MAX
168   (PUSH)
169   (CALLS2&JMPIFNOT 147 L65)           ; MINUSP
173   (GETVALUE&PUSH 5)                   ; GCD
175   (GETVALUE&PUSH 0)                   ; P
177   (GETVALUE&PUSH 5)                   ; GCD
179   (CALL2 17)                          ; PQUOTIENT
181   (JMP L187)
183   L183
183   (UNBIND1)
184   L184
184   (CONST&PUSH 10)                     ; 1
185   (GETVALUE 0)                        ; P
187   L187
187   (PUSH)
188   (LIST 2)
190   (UNBIND 6)
192   (SKIP&RET 2)


Disassembly of function #:|(DEFUN PGATHERCOEF (P *CHK *RES) ...)-9|
(CONST 0) = PGATHERCOEF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PGATHERCOEF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PGATHERCOEF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PGATHERCOEF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PGATHERCOEF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PGATHERCOEF
8     (SKIP&RET 1)


Disassembly of function PGATHERCOEF
(CONST 0) = P
(CONST 1) = *CHK
(CONST 2) = *RES
(CONST 3) = 1
(CONST 4) = PGATH2
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*CHK P)
20 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; P
3     (LOAD 5)
4     (BIND 1)                            ; *CHK
6     (LOAD 7)
7     (BIND 2)                            ; *RES
9     (GETVALUE 0)                        ; P
11    (CAR&PUSH)
12    (GETVALUE 1)                        ; *CHK
14    (JMPIFNOTEQ L26)
16    (GETVALUE 0)                        ; P
18    (CDR&PUSH)
19    (NIL&PUSH)
20    (CALL2 4)                           ; PGATH2
22    L22
22    (UNBIND 3)
24    (SKIP&RET 4)
26    L26
26    (CONST 3)                           ; 1
27    (JMP L22)


Disassembly of function #:|(DEFUN PGATH1 (P) ...)-10|
(CONST 0) = PGATH1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PGATH1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PGATH1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PGATH1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PGATH1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PGATH1
8     (SKIP&RET 1)


Disassembly of function PGATH1
(CONST 0) = P
(CONST 1) = *MAX
(CONST 2) = *VAR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*MAX *VAR P)
writes special variable : (*MAX)
34 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (GETVALUE 0)                        ; P
5     (JMPIFNOT L44)
7     (GETVALUE 0)                        ; P
9     (CDR)
10    (CAR)
11    (JMPIFATOM L35)
13    (GETVALUE 0)                        ; P
15    (CDR)
16    (CAR)
17    (CAR&PUSH)
18    (GETVALUE 2)                        ; *VAR
20    (JMPIFNOTEQ L35)
22    (GETVALUE&PUSH 1)                   ; *MAX
24    (GETVALUE 0)                        ; P
26    (CDR)
27    (CAR)
28    (CDR)
29    (CAR&PUSH)
30    (CALLSR 1 51)                       ; MAX
33    (SETVALUE 1)                        ; *MAX
35    L35
35    (GETVALUE 0)                        ; P
37    (CDR)
38    (CDR&PUSH)
39    (JSR L0)
41    L41
41    (UNBIND1)
42    (SKIP&RET 2)
44    L44
44    (GETVALUE 1)                        ; *MAX
46    (JMP L41)


Disassembly of function #:|(DEFUN PGATH2 (P VMAX) ...)-11|
(CONST 0) = PGATH2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PGATH2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PGATH2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PGATH2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PGATH2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PGATH2
8     (SKIP&RET 1)


Disassembly of function PGATH2
(CONST 0) = P
(CONST 1) = *RES
(CONST 2) = PDEGREER
(CONST 3) = VGREAT
(CONST 4) = *CHK
(CONST 5) = LEADCOEFFICIENT
(CONST 6) = PSIMP
(CONST 7) = PPLUS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*CHK *RES P)
writes special variable : (*RES)
61 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (NIL&PUSH)
4     (GETVALUE 0)                        ; P
6     (JMPIFNOT L64)
8     (GETVALUE 0)                        ; P
10    (CDR)
11    (CAR)
12    (JMPIFATOM L52)
14    (GETVALUE 0)                        ; P
16    (CDR)
17    (CAR&PUSH)
18    (CALL1 2)                           ; PDEGREER
20    (STORE 0)
21    (PUSH)
22    (LOAD&PUSH 6)
23    (CALL2&JMPIF 3 L70)                 ; VGREAT
26    (LOAD&PUSH 5)
27    (LOAD&PUSH 1)
28    (CALLS2&JMPIFNOT 2 L52)             ; EQUAL
31    (GETVALUE&PUSH 1)                   ; *RES
33    (GETVALUE&PUSH 4)                   ; *CHK
35    (GETVALUE 0)                        ; P
37    (CAR&PUSH)
38    (GETVALUE 0)                        ; P
40    (CDR)
41    (CAR&PUSH)
42    (CALL1&PUSH 5)                      ; LEADCOEFFICIENT
44    (LIST&PUSH 2)
46    (CALL2&PUSH 6)                      ; PSIMP
48    (CALL2 7)                           ; PPLUS
50    (SETVALUE 1)                        ; *RES
52    L52
52    (GETVALUE 0)                        ; P
54    (CDR)
55    (CDR&PUSH)
56    (LOAD&PUSH 6)
57    (JSR L0)
59    (SKIP 1)
61    L61
61    (UNBIND1)
62    (SKIP&RET 3)
64    L64
64    (GETVALUE 1)                        ; *RES
66    (SKIP 1)
68    (JMP L61)
70    L70
70    (GETVALUE&PUSH 4)                   ; *CHK
72    (GETVALUE 0)                        ; P
74    (CAR&PUSH)
75    (GETVALUE 0)                        ; P
77    (CDR)
78    (CAR&PUSH)
79    (CALL1&PUSH 5)                      ; LEADCOEFFICIENT
81    (LIST&PUSH 2)
83    (CALL2 6)                           ; PSIMP
85    (SETVALUE 1)                        ; *RES
87    (LOAD 0)
88    (STORE 5)
89    (JMP L52)


Disassembly of function #:|(DEFUN PGATH3 (P) ...)-12|
(CONST 0) = PGATH3
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PGATH3>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PGATH3
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PGATH3
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PGATH3>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PGATH3
8     (SKIP&RET 1)


Disassembly of function PGATH3
(CONST 0) = P
(CONST 1) = *RES
(CONST 2) = *MAX
(CONST 3) = 0
(CONST 4) = *VAR
(CONST 5) = PTERM
(CONST 6) = *CHK
(CONST 7) = PSIMP
(CONST 8) = PPLUS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*CHK *RES *MAX *VAR P)
writes special variable : (*RES)
61 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (NIL&PUSH)
4     (GETVALUE 0)                        ; P
6     (JMPIFNOT L64)
8     (GETVALUE 0)                        ; P
10    (CDR)
11    (CAR)
12    (JMPIFATOM L70)
14    (GETVALUE 0)                        ; P
16    (CDR)
17    (CAR)
18    (CAR&PUSH)
19    (GETVALUE 4)                        ; *VAR
21    (JMPIFEQ L77)
23    (GETVALUE&PUSH 2)                   ; *MAX
25    (JMPIFNOTEQTO 3 L53)                ; 0
28    L28
28    (GETVALUE 0)                        ; P
30    (CDR)
31    (CAR)
32    (STORE 0)
33    L33
33    (LOAD&PUSH 0)
34    (JMPIFEQTO 3 L53)                   ; 0
37    (GETVALUE&PUSH 1)                   ; *RES
39    (GETVALUE&PUSH 6)                   ; *CHK
41    (GETVALUE 0)                        ; P
43    (CAR&PUSH)
44    (LOAD&PUSH 3)
45    (LIST&PUSH 2)
47    (CALL2&PUSH 7)                      ; PSIMP
49    (CALL2 8)                           ; PPLUS
51    (SETVALUE 1)                        ; *RES
53    L53
53    (GETVALUE 0)                        ; P
55    (CDR)
56    (CDR&PUSH)
57    (JSR L0)
59    (SKIP 1)
61    L61
61    (UNBIND1)
62    (SKIP&RET 2)
64    L64
64    (GETVALUE 1)                        ; *RES
66    (SKIP 1)
68    (JMP L61)
70    L70
70    (GETVALUE&PUSH 2)                   ; *MAX
72    (JMPIFNOTEQTO 3 L53)                ; 0
75    (JMP L28)
77    L77
77    (GETVALUE 0)                        ; P
79    (CDR)
80    (CAR)
81    (CDR&PUSH)
82    (GETVALUE&PUSH 2)                   ; *MAX
84    (CALL2 5)                           ; PTERM
86    (STORE 0)
87    (JMP L33)


Disassembly of function #:|(DEFUN PNEXT (X *L) ...)-13|
(CONST 0) = PNEXT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PNEXT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PNEXT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PNEXT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PNEXT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PNEXT
8     (SKIP&RET 1)


Disassembly of function PNEXT
(CONST 0) = X
(CONST 1) = *L
(CONST 2) = PNEXT1
(CONST 3) = POINTERGP
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*L X)
19 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; *L
6     (GETVALUE&PUSH 0)                   ; X
8     (CALL1 2)                           ; PNEXT1
10    (GETVALUE 1)                        ; *L
12    (JMPIFNOT L27)
14    (GETVALUE&PUSH 1)                   ; *L
16    (CONST&SYMBOL-FUNCTION&PUSH 3)      ; POINTERGP
18    (PUSH-UNBOUND 3)
20    (CALLS2 103)                        ; SORT
22    (CAR)
23    L23
23    (UNBIND 2)
25    (SKIP&RET 3)
27    L27
27    (NIL)
28    (JMP L23)


Disassembly of function #:|(DEFUN PNEXT1 (X) ...)-14|
(CONST 0) = PNEXT1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PNEXT1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PNEXT1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PNEXT1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PNEXT1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PNEXT1
8     (SKIP&RET 1)


Disassembly of function PNEXT1
(CONST 0) = X
(CONST 1) = *L
(CONST 2) = MEMQ
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*L X)
writes special variable : (*L)
33 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFNOT L42)
7     (GETVALUE 0)                        ; X
9     (CDR)
10    (CAR)
11    (JMPIFATOM L33)
13    (GETVALUE 0)                        ; X
15    (CDR)
16    (CAR)
17    (CAR&PUSH)
18    (GETVALUE&PUSH 1)                   ; *L
20    (CALL2&JMPIF 2 L33)                 ; MEMQ
23    (GETVALUE 0)                        ; X
25    (CDR)
26    (CAR)
27    (CAR&PUSH)
28    (GETVALUE 1)                        ; *L
30    (CONS)
31    (SETVALUE 1)                        ; *L
33    L33
33    (GETVALUE 0)                        ; X
35    (CDR)
36    (CDR&PUSH)
37    (JSR L0)
39    L39
39    (UNBIND1)
40    (SKIP&RET 2)
42    L42
42    (GETVALUE 1)                        ; *L
44    (JMP L39)


Disassembly of function #:|(DEFUN VGREAT (X Y) ...)-15|
(CONST 0) = VGREAT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE VGREAT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; VGREAT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; VGREAT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE VGREAT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; VGREAT
8     (SKIP&RET 1)


Disassembly of function VGREAT
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = B
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B Y X)
69 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE 0)                        ; X
8     (JMPIFNOT L73)
10    (GETVALUE 1)                        ; Y
12    (JMPIFNOT L76)
14    (GETVALUE 0)                        ; X
16    (CAR&PUSH)
17    (GETVALUE 1)                        ; Y
19    (CAR)
20    (BIND 2)                            ; B
22    (LOAD&PUSH 3)
23    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
25    (GETVALUE&PUSH 2)                   ; B
27    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
29    (CALLSR 1 48)                       ; >
32    (UNBIND1)
33    (SKIP 1)
35    (JMPIF L79)
37    (GETVALUE 0)                        ; X
39    (CAR&PUSH)
40    (GETVALUE 1)                        ; Y
42    (CAR)
43    (JMPIFNOTEQ L82)
45    (GETVALUE 0)                        ; X
47    (CDR)
48    (CAR&PUSH)
49    (GETVALUE 1)                        ; Y
51    (CDR)
52    (CAR&PUSH)
53    (CALLSR&JMPIF 1 48 L85)             ; >
57    (GETVALUE 0)                        ; X
59    (CDR)
60    (CAR&PUSH)
61    (GETVALUE 1)                        ; Y
63    (CDR)
64    (CAR&PUSH)
65    (CALLS2&JMPIF 2 L88)                ; EQUAL
68    (NIL)
69    L69
69    (UNBIND 2)
71    (SKIP&RET 3)
73    L73
73    (NIL)
74    (JMP L69)
76    L76
76    (T)
77    (JMP L69)
79    L79
79    (T)
80    (JMP L69)
82    L82
82    (NIL)
83    (JMP L69)
85    L85
85    (T)
86    (JMP L69)
88    L88
88    (GETVALUE 0)                        ; X
90    (CDR)
91    (CDR&PUSH)
92    (GETVALUE 1)                        ; Y
94    (CDR)
95    (CDR&PUSH)
96    (JSR L0)
99    (JMP L69)


Disassembly of function #:|(DEFUN PDEGREER (X) ...)-16|
(CONST 0) = PDEGREER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PDEGREER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PDEGREER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PDEGREER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PDEGREER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PDEGREER
8     (SKIP&RET 1)


Disassembly of function PDEGREER
(CONST 0) = X
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
23 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFATOM L26)
7     (GETVALUE 0)                        ; X
9     (CAR&PUSH)
10    (GETVALUE 0)                        ; X
12    (CDR)
13    (CAR&PUSH)
14    (GETVALUE 0)                        ; X
16    (CDR)
17    (CDR)
18    (CAR&PUSH)
19    (JSR L0)
21    (CONS)
22    (CONS)
23    L23
23    (UNBIND1)
24    (SKIP&RET 2)
26    L26
26    (NIL)
27    (JMP L23)


Disassembly of function #:|(DEFUN PGCDP (BIGF1 BIGF2 MODULUS) ...)-17|
(CONST 0) = PGCDP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PGCDP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PGCDP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PGCDP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PGCDP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PGCDP
8     (SKIP&RET 1)


Disassembly of function PGCDP
(CONST 0) = BIGF1
(CONST 1) = BIGF2
(CONST 2) = MODULUS
(CONST 3) = XV
(CONST 4) = B
(CONST 5) = HMODULUS
(CONST 6) = SETQMODULUS
(CONST 7) = UNIVAR
(CONST 8) = PGCDU
(CONST 9) = PQUOTIENT
(CONST 10) = PMODCONTENT
(CONST 11) = 0
(CONST 12) = PDEGREER
(CONST 13) = VGREAT
(CONST 14) = -1
(CONST 15) = LSH
(CONST 16) = PGATHERCOEF
(CONST 17) = PDEGREE
(CONST 18) = PTIMES
(CONST 19) = 1
(CONST 20) = CPLUS
(CONST 21) = PCSUBST
(CONST 22) = NEWGCD
(CONST 23) = PTIMESCHK
(CONST 24) = LAGRANGE33
(CONST 25) = PQUOTIENTCHK
(CONST 26) = LEADCOEFFICIENT
(CONST 27) = MONICGCD
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B XV BIGF2 BIGF1 MODULUS)
writes special variables : (B BIGF2 BIGF1 XV)
313 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; BIGF1
3     (LOAD 5)
4     (BIND 1)                            ; BIGF2
6     (LOAD 7)
7     (BIND 2)                            ; MODULUS
9     (PUSH-NIL 10)
11    (NIL)
12    (BIND 3)                            ; XV
14    (NIL&PUSH)
15    (NIL)
16    (BIND 4)                            ; B
18    (PUSH-NIL 11)
20    (NIL)
21    (BIND 5)                            ; HMODULUS
23    (GETVALUE&PUSH 2)                   ; MODULUS
25    (CALL1 6)                           ; SETQMODULUS
27    (GETVALUE 0)                        ; BIGF1
29    (CDR&PUSH)
30    (CALL1&JMPIFNOT 7 L40)              ; UNIVAR
33    (GETVALUE 1)                        ; BIGF2
35    (CDR&PUSH)
36    (CALL1&JMPIF 7 L186)                ; UNIVAR
40    L40
40    (GETVALUE 0)                        ; BIGF1
42    (CAR)
43    (SETVALUE 3)                        ; XV
45    (GETVALUE&PUSH 0)                   ; BIGF1
47    (CALL1 10)                          ; PMODCONTENT
49    (SETVALUE 0)                        ; BIGF1
51    (GETVALUE&PUSH 1)                   ; BIGF2
53    (CALL1 10)                          ; PMODCONTENT
55    (SETVALUE 1)                        ; BIGF2
57    (GETVALUE 0)                        ; BIGF1
59    (CAR)
60    (STORE 29)
62    (PUSH)
63    (GETVALUE 1)                        ; BIGF2
65    (CAR)
66    (STORE 29)
68    (PUSH)
69    (CALL2 8)                           ; PGCDU
71    (STORE 30)
73    (GETVALUE 0)                        ; BIGF1
75    (CDR)
76    (CAR)
77    (SETVALUE 0)                        ; BIGF1
79    (GETVALUE 1)                        ; BIGF2
81    (CDR)
82    (CAR)
83    (SETVALUE 1)                        ; BIGF2
85    (CONST 11)                          ; 0
86    (STORE 27)
88    (GETVALUE&PUSH 1)                   ; BIGF2
90    (CALL1 12)                          ; PDEGREER
92    (STORE 17)
94    (GETVALUE&PUSH 0)                   ; BIGF1
96    (CALL1 12)                          ; PDEGREER
98    (STORE 5)
99    (LOAD&PUSH 17)
100   (LOAD&PUSH 6)
101   (CALL2&JMPIFNOT 13 L107)            ; VGREAT
104   (LOAD 5)
105   (STORE 17)
107   L107
107   (GETVALUE&PUSH 2)                   ; MODULUS
109   (CONST&PUSH 14)                     ; -1
110   (CALL2 15)                          ; LSH
112   (SETVALUE 4)                        ; B
114   (GETVALUE&PUSH 0)                   ; BIGF1
116   (GETVALUE&PUSH 3)                   ; XV
118   (CONST&PUSH 11)                     ; 0
119   (CALL 3 16)                         ; PGATHERCOEF
122   (STORE 4)
123   (PUSH)
124   (GETVALUE&PUSH 1)                   ; BIGF2
126   (GETVALUE&PUSH 3)                   ; XV
128   (CONST&PUSH 11)                     ; 0
129   (CALL 3 16)                         ; PGATHERCOEF
132   (STORE 4)
133   (PUSH)
134   (CALL2 8)                           ; PGCDU
136   (STORE 13)
138   (LOAD&PUSH 3)
139   (JMPIFEQTO 11 L509)                 ; 0
143   (LOAD&PUSH 13)
144   (GETVALUE&PUSH 3)                   ; XV
146   (CALL2 17)                          ; PDEGREE
148   (STORE 12)
150   (PUSH)
151   (GETVALUE&PUSH 0)                   ; BIGF1
153   (GETVALUE&PUSH 3)                   ; XV
155   (CALL2&PUSH 17)                     ; PDEGREE
157   (CALLSR&STORE 2 53 11)              ; +
161   (LOAD&PUSH 12)
162   (GETVALUE&PUSH 1)                   ; BIGF2
164   (GETVALUE&PUSH 3)                   ; XV
166   (CALL2&PUSH 17)                     ; PDEGREE
168   (CALLSR&STORE 2 53 10)              ; +
172   (LOAD&PUSH 4)
173   (LOAD&PUSH 4)
174   (CALL2 18)                          ; PTIMES
176   (STORE 3)
177   (LOAD&PUSH 11)
178   (LOAD&PUSH 11)
179   (CALLSR&STORE 1 51 12)              ; MAX
183   (JMP L443)
186   L186
186   (GETVALUE&PUSH 0)                   ; BIGF1
188   (GETVALUE&PUSH 1)                   ; BIGF2
190   (CALL2 8)                           ; PGCDU
192   (STORE 26)
194   (PUSH)
195   (GETVALUE&PUSH 0)                   ; BIGF1
197   (LOAD&PUSH 28)
199   (CALL2&PUSH 9)                      ; PQUOTIENT
201   (GETVALUE&PUSH 1)                   ; BIGF2
203   (LOAD&PUSH 29)
205   (CALL2 9)                           ; PQUOTIENT
207   (JMP L531)
210   L210
210   (GETVALUE&PUSH 3)                   ; XV
212   (CONST&PUSH 19)                     ; 1
213   (CONST&PUSH 19)                     ; 1
214   (CONST&PUSH 11)                     ; 0
215   (GETVALUE&PUSH 4)                   ; B
217   (CALLSR&PUSH 0 54)                  ; -
220   (LIST 5)
222   (STORE 26)
224   (LOAD 6)
225   (STORE 23)
227   (LOAD 25)
229   (STORE 22)
231   (LOAD 24)
233   (STORE 21)
235   (JMP L398)
238   L238
238   (LOAD&PUSH 23)
239   (CALL1 10)                          ; PMODCONTENT
241   (CDR)
242   (CAR)
243   (STORE 23)
245   (PUSH)
246   (GETVALUE&PUSH 3)                   ; XV
248   (CONST&PUSH 11)                     ; 0
249   (CALL 3 16)                         ; PGATHERCOEF
252   (STORE 26)
254   (LOAD&PUSH 30)
256   (LOAD&PUSH 24)
257   (CALL2&PUSH 23)                     ; PTIMESCHK
259   (LOAD&PUSH 30)
261   (LOAD&PUSH 32)
263   (CALL2&PUSH 9)                      ; PQUOTIENT
265   (LOAD&PUSH 24)
266   (LOAD&PUSH 29)
268   (CALL2&PUSH 25)                     ; PQUOTIENTCHK
270   (CALL2&PUSH 23)                     ; PTIMESCHK
272   (LOAD&PUSH 30)
274   (LOAD&PUSH 33)
276   (CALL2&PUSH 9)                      ; PQUOTIENT
278   (LOAD&PUSH 24)
279   (LOAD&PUSH 30)
281   (CALL2&PUSH 25)                     ; PQUOTIENTCHK
283   (CALL2&PUSH 23)                     ; PTIMESCHK
285   (LOAD&PUSH 26)
287   (CALL1&PUSH 26)                     ; LEADCOEFFICIENT
289   (CALL 4 27)                         ; MONICGCD
292   (UNBIND1)
293   (SKIP 11)
295   (UNBIND1)
296   (SKIP 1)
298   (UNBIND1)
299   (SKIP 10)
301   (JMP L543)
304   L304
304   (LOAD 24)
306   (CDR)
307   (CAR)
308   (STORE 25)
310   (LOAD 24)
312   (CDR)
313   (CDR)
314   (CAR)
315   (STORE 24)
317   (LOAD&PUSH 6)
318   (CALL1 12)                          ; PDEGREER
320   (STORE 5)
321   (PUSH)
322   (LOAD&PUSH 18)
323   (CALL2&JMPIF 13 L443)               ; VGREAT
327   (LOAD&PUSH 17)
328   (LOAD&PUSH 6)
329   (CALL2&JMPIFNOT 13 L338)            ; VGREAT
332   (CONST 11)                          ; 0
333   (STORE 27)
335   (LOAD 5)
336   (STORE 17)
338   L338
338   (LOAD&INC&STORE 27)
340   (PUSH)
341   (JMPIFEQTO 19 L210)                 ; 1
345   (LOAD&PUSH 23)
346   (LOAD&PUSH 7)
347   (LOAD&PUSH 28)
349   (GETVALUE&PUSH 4)                   ; B
351   (CALL 4 24)                         ; LAGRANGE33
354   (STORE 23)
356   (LOAD&PUSH 22)
357   (LOAD&PUSH 26)
359   (LOAD&PUSH 28)
361   (GETVALUE&PUSH 4)                   ; B
363   (CALL 4 24)                         ; LAGRANGE33
366   (STORE 22)
368   (LOAD&PUSH 21)
369   (LOAD&PUSH 25)
371   (LOAD&PUSH 28)
373   (GETVALUE&PUSH 4)                   ; B
375   (CALL 4 24)                         ; LAGRANGE33
378   (STORE 21)
380   (LOAD&PUSH 26)
382   (GETVALUE&PUSH 3)                   ; XV
384   (CONST&PUSH 19)                     ; 1
385   (CONST&PUSH 19)                     ; 1
386   (CONST&PUSH 11)                     ; 0
387   (GETVALUE&PUSH 4)                   ; B
389   (CALLSR&PUSH 0 54)                  ; -
392   (LIST&PUSH 5)
394   (CALL2 18)                          ; PTIMES
396   (STORE 26)
398   L398
398   (LOAD&PUSH 27)
400   (LOAD&PUSH 13)
401   (CALLSR&JMPIFNOT 1 48 L443)         ; >
405   (LOAD&PUSH 11)
406   (LOAD&PUSH 24)
407   (GETVALUE&PUSH 3)                   ; XV
409   (CALL2 17)                          ; PDEGREE
411   (STORE 6)
412   (PUSH)
413   (LOAD&PUSH 24)
414   (GETVALUE&PUSH 3)                   ; XV
416   (CALL2&PUSH 17)                     ; PDEGREE
418   (CALLSR&PUSH 2 53)                  ; +
421   (CALLSR&JMPIFNOT 1 45 L440)         ; =
425   (LOAD&PUSH 10)
426   (LOAD&PUSH 6)
427   (LOAD&PUSH 23)
428   (GETVALUE&PUSH 3)                   ; XV
430   (CALL2&PUSH 17)                     ; PDEGREE
432   (CALLSR&PUSH 2 53)                  ; +
435   (CALLSR&JMPIF 1 45 L238)            ; =
440   L440
440   (CONST 11)                          ; 0
441   (STORE 27)
443   L443
443   (GETVALUE&PUSH 4)                   ; B
445   (CONST&PUSH 19)                     ; 1
446   (CALL2 20)                          ; CPLUS
448   (SETVALUE 4)                        ; B
450   (LOAD&PUSH 3)
451   (GETVALUE&PUSH 4)                   ; B
453   (GETVALUE&PUSH 3)                   ; XV
455   (CALL&PUSH 3 21)                    ; PCSUBST
458   (JMPIFEQTO 11 L443)                 ; 0
461   (LOAD&PUSH 13)
462   (GETVALUE&PUSH 4)                   ; B
464   (GETVALUE&PUSH 3)                   ; XV
466   (CALL 3 21)                         ; PCSUBST
469   (STORE 9)
471   (GETVALUE&PUSH 0)                   ; BIGF1
473   (GETVALUE&PUSH 4)                   ; B
475   (GETVALUE&PUSH 3)                   ; XV
477   (CALL 3 21)                         ; PCSUBST
480   (STORE 8)
482   (GETVALUE&PUSH 1)                   ; BIGF2
484   (GETVALUE&PUSH 4)                   ; B
486   (GETVALUE&PUSH 3)                   ; XV
488   (CALL 3 21)                         ; PCSUBST
491   (STORE 7)
492   (LOAD&PUSH 9)
493   (LOAD&PUSH 9)
494   (LOAD&PUSH 9)
495   (GETVALUE&PUSH 2)                   ; MODULUS
497   (CALL 3 22)                         ; NEWGCD
500   (STORE 25)
502   (CAR&PUSH)
503   (CALL2 23)                          ; PTIMESCHK
505   (STORE 6)
506   (JMPIFCONSP L304)
509   L509
509   (LOAD&PUSH 30)
511   (LOAD&PUSH 30)
513   (LOAD&PUSH 32)
515   (CALL2&PUSH 9)                      ; PQUOTIENT
517   (GETVALUE&PUSH 0)                   ; BIGF1
519   (CALL2&PUSH 23)                     ; PTIMESCHK
521   (LOAD&PUSH 30)
523   (LOAD&PUSH 33)
525   (CALL2&PUSH 9)                      ; PQUOTIENT
527   (GETVALUE&PUSH 1)                   ; BIGF2
529   (CALL2 23)                          ; PTIMESCHK
531   L531
531   (PUSH)
532   (LIST 3)
534   (UNBIND1)
535   (SKIP 11)
537   (UNBIND1)
538   (SKIP 1)
540   (UNBIND1)
541   (SKIP 10)
543   L543
543   (UNBIND 3)
545   (SKIP&RET 4)


Disassembly of function #:|(DEFUN MONICGCD (GCD X Y ...) ...)-18|
(CONST 0) = MONICGCD
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MONICGCD>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MONICGCD
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MONICGCD
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MONICGCD>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MONICGCD
8     (SKIP&RET 1)


Disassembly of function MONICGCD
(CONST 0) = GCD
(CONST 1) = X
(CONST 2) = Y
(CONST 3) = 1
(CONST 4) = CRECIP
(CONST 5) = PTIMES
4 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X GCD)
28 byte-code instructions:
0     (LOAD 4)
1     (BIND 0)                            ; GCD
3     (LOAD 6)
4     (BIND 1)                            ; X
6     (LOAD 8)
7     (BIND 2)                            ; Y
9     (LOAD&PUSH 10)
10    (JMPIFEQTO 3 L37)                   ; 1
13    (LOAD&PUSH 10)
14    (CALL1&PUSH 4)                      ; CRECIP
16    (GETVALUE&PUSH 0)                   ; GCD
18    (CALL2&PUSH 5)                      ; PTIMES
20    (LOAD&PUSH 11)
21    (GETVALUE&PUSH 1)                   ; X
23    (CALL2&PUSH 5)                      ; PTIMES
25    (LOAD&PUSH 12)
26    (GETVALUE&PUSH 2)                   ; Y
28    (CALL2 5)                           ; PTIMES
30    L30
30    (PUSH)
31    (LIST 3)
33    (UNBIND 3)
35    (SKIP&RET 5)
37    L37
37    (GETVALUE&PUSH 0)                   ; GCD
39    (GETVALUE&PUSH 1)                   ; X
41    (GETVALUE 2)                        ; Y
43    (JMP L30)


Disassembly of function #:|(DEFUN PGCDM (BIGF1 BIGF2) ...)-19|
(CONST 0) = PGCDM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PGCDM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PGCDM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PGCDM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PGCDM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PGCDM
8     (SKIP&RET 1)


Disassembly of function PGCDM
(CONST 0) = BIGF1
(CONST 1) = BIGF2
(CONST 2) = P
(CONST 3) = NONLINDEG
(CONST 4) = MODULUS
(CONST 5) = HMODULUS
(CONST 6) = BIGF1TILDE
(CONST 7) = BIGF2TILDE
(CONST 8) = XV
(CONST 9) = *ALPHA
(CONST 10) = PCONTENT
(CONST 11) = CGCD
(CONST 12) = LEADCOEFFICIENT
(CONST 13) = 0
(CONST 14) = PDEGREER
(CONST 15) = VGREAT
(CONST 16) = 2
(CONST 17) = MAXCOEFFICIENT
(CONST 18) = NEWPRIME
(CONST 19) = SETQMODULUS
(CONST 20) = PMOD
(CONST 21) = NEWGCD
(CONST 22) = PTIMESCHK
(CONST 23) = 1
(CONST 24) = PQUOTIENT
(CONST 25) = LAGRANGE3
(CONST 26) = NORM
(CONST 27) = LAST-GOOD-PRIME
(CONST 28) = CQUOTIENT
(CONST 29) = PQUOTIENTCHK
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (MODULUS P BIGF2 BIGF1 *ALPHA)
writes special variables : (LAST-GOOD-PRIME MODULUS BIGF2 BIGF1 XV P)
255 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; BIGF1
3     (LOAD 4)
4     (BIND 1)                            ; BIGF2
6     (PUSH-NIL 9)
8     (NIL)
9     (BIND 2)                            ; P
11    (NIL)
12    (BIND 3)                            ; NONLINDEG
14    (PUSH-NIL 3)
16    (NIL)
17    (BIND 4)                            ; MODULUS
19    (NIL)
20    (BIND 5)                            ; HMODULUS
22    (NIL)
23    (BIND 6)                            ; BIGF1TILDE
25    (NIL)
26    (BIND 7)                            ; BIGF2TILDE
28    (PUSH-NIL 5)
30    (NIL)
31    (BIND 8)                            ; XV
33    (NIL&PUSH)
34    (GETVALUE 9)                        ; *ALPHA
36    (SETVALUE 2)                        ; P
38    (GETVALUE 0)                        ; BIGF1
40    (CAR)
41    (SETVALUE 8)                        ; XV
43    (GETVALUE&PUSH 0)                   ; BIGF1
45    (CALL1 10)                          ; PCONTENT
47    (STORE 35)
49    (GETVALUE&PUSH 1)                   ; BIGF2
51    (CALL1 10)                          ; PCONTENT
53    (STORE 34)
55    (LOAD&CAR&STORE 35 37)
58    (PUSH)
59    (LOAD&CAR&STORE 35 37)
62    (PUSH)
63    (CALL2 11)                          ; CGCD
65    (STORE 38)
67    (LOAD 35)
69    (CDR)
70    (CAR)
71    (SETVALUE 0)                        ; BIGF1
73    (LOAD 34)
75    (CDR)
76    (CAR)
77    (SETVALUE 1)                        ; BIGF2
79    (GETVALUE&PUSH 0)                   ; BIGF1
81    (CALL1 12)                          ; LEADCOEFFICIENT
83    (STORE 35)
85    (GETVALUE&PUSH 1)                   ; BIGF2
87    (CALL1 12)                          ; LEADCOEFFICIENT
89    (STORE 34)
91    (LOAD&PUSH 35)
93    (LOAD&PUSH 35)
95    (CALL2 11)                          ; CGCD
97    (STORE 0)
98    (CONST 13)                          ; 0
99    (STORE 33)
101   (GETVALUE&PUSH 0)                   ; BIGF1
103   (CALL1 14)                          ; PDEGREER
105   (STORE 31)
107   (GETVALUE&PUSH 1)                   ; BIGF2
109   (CALL1 14)                          ; PDEGREER
111   (STORE 32)
113   (PUSH)
114   (LOAD&PUSH 32)
116   (CALL2&JMPIFNOT 15 L123)            ; VGREAT
119   (LOAD 31)
121   (STORE 32)
123   L123
123   (CONST&PUSH 16)                     ; 2
124   (LOAD&PUSH 1)
125   (GETVALUE&PUSH 0)                   ; BIGF1
127   (CALL1&PUSH 17)                     ; MAXCOEFFICIENT
129   (GETVALUE&PUSH 1)                   ; BIGF2
131   (CALL1&PUSH 17)                     ; MAXCOEFFICIENT
133   (CALLSR&PUSH 1 51)                  ; MAX
136   (CALLSR&STORE 3 55 30)              ; *
140   (JMP L200)
142   L142
142   (NIL)
143   (SETVALUE 4)                        ; MODULUS
145   (CONST 23)                          ; 1
147   (STORE 4)
148   (GETVALUE 0)                        ; BIGF1
150   (STORE 6)
151   (GETVALUE 1)                        ; BIGF2
153   (STORE 5)
154   (JMP L391)
157   L157
157   (GETVALUE&PUSH 0)                   ; BIGF1
159   (CALL1&PUSH 20)                     ; PMOD
161   (LOAD&CAR&PUSH 22)
163   (CALL2 24)                          ; PQUOTIENT
165   (STORE 22)
167   (GETVALUE&PUSH 1)                   ; BIGF2
169   (CALL1&PUSH 20)                     ; PMOD
171   (LOAD&CAR&PUSH 22)
173   (CALL2 24)                          ; PQUOTIENT
175   (STORE 21)
177   (JMP L270)
180   L180
180   (GETVALUE 2)                        ; P
182   (STORE 7)
183   (LOAD 8)
184   (STORE 4)
185   (LOAD 22)
187   (STORE 6)
188   (LOAD 21)
190   (STORE 5)
191   (JMP L341)
194   L194
194   (GETVALUE&PUSH 2)                   ; P
196   (CALL1 18)                          ; NEWPRIME
198   (SETVALUE 2)                        ; P
200   L200
200   (LOAD&PUSH 35)
202   (GETVALUE&PUSH 2)                   ; P
204   (CALLS2&PUSH 184)                   ; REM
206   (JMPIFEQTO 13 L194)                 ; 0
209   (LOAD&PUSH 34)
211   (GETVALUE&PUSH 2)                   ; P
213   (CALLS2&PUSH 184)                   ; REM
215   (JMPIFEQTO 13 L194)                 ; 0
218   (GETVALUE&PUSH 2)                   ; P
220   (CALL1 19)                          ; SETQMODULUS
222   (LOAD&PUSH 0)
223   (CALL1 20)                          ; PMOD
225   (STORE 23)
227   (PUSH)
228   (GETVALUE&PUSH 0)                   ; BIGF1
230   (CALL1&PUSH 20)                     ; PMOD
232   (GETVALUE&PUSH 1)                   ; BIGF2
234   (CALL1&PUSH 20)                     ; PMOD
236   (GETVALUE&PUSH 4)                   ; MODULUS
238   (CALL 3 21)                         ; NEWGCD
241   (STORE 22)
243   (CAR&PUSH)
244   (CALL2 22)                          ; PTIMESCHK
246   (STORE 8)
248   (JMPIFATOM L142)
251   (LOAD 21)
253   (CDR)
254   (JMPIFNOT L157)
257   (LOAD 21)
259   (CDR)
260   (CAR)
261   (STORE 22)
263   (LOAD 21)
265   (CDR)
266   (CDR)
267   (CAR)
268   (STORE 21)
270   L270
270   (LOAD&PUSH 8)
271   (CALL1 14)                          ; PDEGREER
273   (STORE 31)
275   (PUSH)
276   (LOAD&PUSH 33)
278   (CALL2&JMPIF 15 L194)               ; VGREAT
282   (LOAD&PUSH 32)
284   (LOAD&PUSH 32)
286   (CALL2&JMPIFNOT 15 L296)            ; VGREAT
289   (CONST 13)                          ; 0
290   (STORE 33)
292   (LOAD 31)
294   (STORE 32)
296   L296
296   (LOAD&INC&STORE 33)
298   (NIL&PUSH)
299   (CALL1 19)                          ; SETQMODULUS
301   (LOAD&PUSH 33)
303   (JMPIFEQTO 23 L180)                 ; 1
307   (LOAD&PUSH 4)
308   (LOAD&PUSH 9)
309   (GETVALUE&PUSH 2)                   ; P
311   (LOAD&PUSH 10)
312   (CALL 4 25)                         ; LAGRANGE3
315   (STORE 4)
316   (LOAD&PUSH 6)
317   (LOAD&PUSH 23)
318   (GETVALUE&PUSH 2)                   ; P
320   (LOAD&PUSH 10)
321   (CALL 4 25)                         ; LAGRANGE3
324   (STORE 6)
325   (LOAD&PUSH 5)
326   (LOAD&PUSH 22)
327   (GETVALUE&PUSH 2)                   ; P
329   (LOAD&PUSH 10)
330   (CALL 4 25)                         ; LAGRANGE3
333   (STORE 5)
334   (GETVALUE&PUSH 2)                   ; P
336   (LOAD&PUSH 8)
337   (CALLSR&STORE 2 55 7)               ; *
341   L341
341   (LOAD&PUSH 30)
343   (LOAD&PUSH 8)
344   (CALLSR&JMPIF 1 48 L194)            ; >
349   (CONST&PUSH 16)                     ; 2
350   (LOAD&PUSH 5)
351   (CALL1 26)                          ; NORM
353   (STORE 24)
355   (PUSH)
356   (LOAD&PUSH 8)
357   (CALL1&PUSH 17)                     ; MAXCOEFFICIENT
359   (CALLSR&PUSH 2 55)                  ; *
362   (LOAD&PUSH 25)
364   (LOAD&PUSH 8)
365   (CALL1&PUSH 17)                     ; MAXCOEFFICIENT
367   (CALLSR&PUSH 2 55)                  ; *
370   (CALLSR&PUSH 1 51)                  ; MAX
373   (CALLSR&PUSH 2 55)                  ; *
376   (LOAD&PUSH 8)
377   (CALLSR&JMPIF 1 48 L194)            ; >
382   (NIL&PUSH)
383   (CALL1 19)                          ; SETQMODULUS
385   (LOAD&PUSH 4)
386   (CALL1 10)                          ; PCONTENT
388   (CDR)
389   (CAR)
390   (STORE 4)
391   L391
391   (GETVALUE 2)                        ; P
393   (SETVALUE 27)                       ; LAST-GOOD-PRIME
395   (LOAD&PUSH 4)
396   (CALL1 12)                          ; LEADCOEFFICIENT
398   (STORE 7)
399   (LOAD&PUSH 38)
401   (LOAD&PUSH 5)
402   (CALL2&PUSH 22)                     ; PTIMESCHK
404   (LOAD&PUSH 38)
406   (LOAD&PUSH 40)
408   (CALL2&PUSH 28)                     ; CQUOTIENT
410   (LOAD&PUSH 8)
411   (LOAD&PUSH 10)
412   (CALL2&PUSH 29)                     ; PQUOTIENTCHK
414   (CALL2&PUSH 22)                     ; PTIMESCHK
416   (LOAD&PUSH 38)
418   (LOAD&PUSH 41)
420   (CALL2&PUSH 28)                     ; CQUOTIENT
422   (LOAD&PUSH 8)
423   (LOAD&PUSH 11)
424   (CALL2&PUSH 29)                     ; PQUOTIENTCHK
426   (CALL2&PUSH 22)                     ; PTIMESCHK
428   (LIST 3)
430   (SKIP 1)
432   (UNBIND1)
433   (SKIP 5)
435   (UNBIND 4)
437   (SKIP 3)
439   (UNBIND 2)
441   (SKIP 9)
443   (UNBIND 2)
445   (SKIP&RET 3)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE KRONEC))-20|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN PKRONECK (P) ...)-21|
(CONST 0) = PKRONECK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PKRONECK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PKRONECK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PKRONECK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PKRONECK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PKRONECK
8     (SKIP&RET 1)


Disassembly of function PKRONECK
(CONST 0) = P
(CONST 1) = L
(CONST 2) = *P
(CONST 3) = ERRRJFFLAG
(CONST 4) = 2
(CONST 5) = QUOT
(CONST 6) = 1
(CONST 7) = $FACTORFLAG
(CONST 8) = PFACTOR2
(CONST 9) = P1
(CONST 10) = *L
(CONST 11) = #(NIL)
(CONST 12) = (#(ERROR 109) 1 . 1)
(CONST 13) = PINTERPOLATE
(CONST 14) = ERRSET
(CONST 15) = PREM
(CONST 16) = X
(CONST 17) = FIXNUMP
(CONST 18) = MODULUS
(CONST 19) = PMONICIZE
(CONST 20) = PMINUSP
(CONST 21) = PMINUS
(CONST 22) = PQUOTIENT
(CONST 23) = -1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (MODULUS X ERRSET *P *L L P)
writes special variables : (P ERRRJFFLAG *P *L L)
164 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (PUSH-NIL 2)
5     (NIL)
6     (BIND 1)                            ; L
8     (NIL)
9     (BIND 2)                            ; *P
11    (PUSH-NIL 2)
13    (NIL)
14    (BIND 3)                            ; ERRRJFFLAG
16    (GETVALUE 0)                        ; P
18    (CDR)
19    (CAR&PUSH)
20    (CONST&PUSH 4)                      ; 2
21    (CALL2 5)                           ; QUOT
23    (STORE 12)
25    (CONST 6)                           ; 1
26    (STORE 11)
28    L28
28    (LOAD&PUSH 11)
29    (LOAD&PUSH 13)
30    (CALLSR&JMPIF 1 48 L95)             ; >
34    (GETVALUE 0)                        ; P
36    (BIND 0)                            ; P
38    (T)
39    (BIND 7)                            ; $FACTORFLAG
41    (GETVALUE&PUSH 0)                   ; P
43    (LOAD&PUSH 18)
44    (CALL2 8)                           ; PFACTOR2
46    (UNBIND 2)
48    (PUSH)
49    (CALLS2&PUSH 72)                    ; REVERSE
51    (CALL1 9)                           ; P1
53    (SETVALUE 1)                        ; L
55    (GETVALUE 1)                        ; L
57    (JMPIFNOT L215)
60    L60
60    (GETVALUE 1)                        ; L
62    (CAR)
63    (SETVALUE 10)                       ; *L
65    (GETVALUE 0)                        ; P
67    (CAR)
68    (SETVALUE 2)                        ; *P
70    (T)
71    (SETVALUE 3)                        ; ERRRJFFLAG
73    (NIL&PUSH)
74    (TAGBODY-OPEN 11 L148)              ; #(NIL)
78    (HANDLER-OPEN 12 L109)              ; (#(ERROR 109) 1 . 1)
80    (GETVALUE&PUSH 10)                  ; *L
82    (GETVALUE&PUSH 2)                   ; *P
84    (CALL2&PUSH 13)                     ; PINTERPOLATE
86    (LIST 1)
88    (SKIP 4)
90    (TAGBODY-CLOSE)
91    (SKIP 1)
93    (JMP L155)
95    L95
95    (GETVALUE&PUSH 0)                   ; P
97    (LOAD 5)
98    (CONS)
99    (UNBIND1)
100   (SKIP 2)
102   (UNBIND 2)
104   (SKIP 2)
106   (JMP L272)
109   L109
109   (HANDLER-BEGIN&PUSH)
110   (LOAD 0)
111   (STOREI 0 0 4)
115   (GO-I 0 0 2 0)
120   L120
120   (LOAD&PUSH 4)
121   (CALLSR 0 29)                       ; ERROR
124   L124
124   (GETVALUE 1)                        ; L
126   (JMPIFNOT L215)
129   (JMP L60)
132   L132
132   (UNBIND1)
133   (GETVALUE 1)                        ; L
135   (JMPIFNOT L215)
138   (JMP L60)
141   L141
141   (LOAD&CDR&PUSH 3)
143   (CALL1 19)                          ; PMONICIZE
145   (JMP L236)
148   L148
148   (GETVALUE 14)                       ; ERRSET
150   (JMPIF L120)
152   (TAGBODY-CLOSE)
153   (SKIP 1)
155   L155
155   (STORE 3)
156   (NIL)
157   (SETVALUE 3)                        ; ERRRJFFLAG
159   (GETVALUE 1)                        ; L
161   (CDR)
162   (SETVALUE 1)                        ; L
164   (LOAD 3)
165   (JMPIFATOM L124)
167   (LOAD&CAR&STORE 3 3)
170   (LOAD 3)
171   (JMPIFATOM L210)
173   (GETVALUE 0)                        ; P
175   (CAR&PUSH)
176   (LOAD&CAR&PUSH 4)
178   (CALLS2&JMPIFNOT 2 L210)            ; EQUAL
181   (GETVALUE&PUSH 0)                   ; P
183   (LOAD&PUSH 4)
184   (CALL2 15)                          ; PREM
186   (BIND 16)                           ; X
188   (GETVALUE&PUSH 16)                  ; X
190   (CALL1&JMPIF 17 L203)               ; FIXNUMP
193   (GETVALUE 16)                       ; X
195   (JMPIFCONSP L132)
198   (GETVALUE&PUSH 16)                  ; X
200   (CALLS2&JMPIFNOT 15 L220)           ; FLOATP
203   L203
203   (GETVALUE&PUSH 16)                  ; X
205   (CALLS2 145)                        ; ZEROP
207   (UNBIND1)
208   (JMPIF L223)
210   L210
210   (GETVALUE 1)                        ; L
212   (JMPIF L60)
215   L215
215   (LOAD&INC&STORE 11)
217   (JMP L28)
220   L220
220   (UNBIND1)
221   (JMPIFNOT L210)
223   L223
223   (GETVALUE 18)                       ; MODULUS
225   (JMPIF L141)
228   (LOAD&PUSH 3)
229   (CALL1&JMPIFNOT 20 L236)            ; PMINUSP
232   (LOAD&PUSH 3)
233   (CALL1 21)                          ; PMINUS
235   (STORE 3)
236   L236
236   (GETVALUE&PUSH 0)                   ; P
238   (LOAD&PUSH 4)
239   (CALL2 22)                          ; PQUOTIENT
241   (SETVALUE 0)                        ; P
243   (CDR)
244   (CAR&PUSH)
245   (CONST&PUSH 4)                      ; 2
246   (CALL2 5)                           ; QUOT
248   (STORE 12)
250   (LOAD&PUSH 3)
251   (LOAD&CONS&STORE 4)
253   (GETVALUE&PUSH 0)                   ; P
255   (JMPIFEQTO 6 L264)                  ; 1
258   (GETVALUE&PUSH 0)                   ; P
260   (JMPIFNOTEQTO 23 L28)               ; -1
264   L264
264   (LOAD 4)
265   (UNBIND1)
266   (SKIP 2)
268   (UNBIND 2)
270   (SKIP 2)
272   L272
272   (UNBIND1)
273   (SKIP&RET 2)


Disassembly of function #:|(DEFUN PFACTOR2 (P I) ...)-22|
(CONST 0) = PFACTOR2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PFACTOR2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PFACTOR2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PFACTOR2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PFACTOR2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PFACTOR2
8     (SKIP&RET 1)


Disassembly of function PFACTOR2
(CONST 0) = P
(CONST 1) = 0
(CONST 2) = PCSUBST
(CONST 3) = PFACTOR
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
22 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (LOAD&PUSH 4)
4     (CONST&PUSH 1)                      ; 0
5     (CALLSR&JMPIF 1 47 L30)             ; <
9     (GETVALUE&PUSH 0)                   ; P
11    (LOAD&PUSH 5)
12    (GETVALUE 0)                        ; P
14    (CAR&PUSH)
15    (CALL&PUSH 3 2)                     ; PCSUBST
18    (CALL1&PUSH 3)                      ; PFACTOR
20    (GETVALUE&PUSH 0)                   ; P
22    (LOAD&DEC&PUSH 6)
24    (JSR L0)
26    (CONS)
27    L27
27    (UNBIND1)
28    (SKIP&RET 3)
30    L30
30    (NIL)
31    (JMP L27)


Disassembly of function #:|(DEFUN POWERSET (X N) ...)-23|
(CONST 0) = POWERSET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POWERSET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POWERSET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POWERSET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POWERSET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POWERSET
8     (SKIP&RET 1)


Disassembly of function POWERSET
(CONST 0) = X
(CONST 1) = (1 NIL)
(CONST 2) = 1
(CONST 3) = (1)
(CONST 4) = PTTS1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
21 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFNOT L25)
7     (GETVALUE&PUSH 0)                   ; X
9     (JMPIFEQTO 2 L28)                   ; 1
12    (CONST&PUSH 2)                      ; 1
13    (GETVALUE&PUSH 0)                   ; X
15    (LOAD&PUSH 6)
16    (GETVALUE&PUSH 0)                   ; X
18    (CALL 3 4)                          ; PTTS1
21    (CONS)
22    L22
22    (UNBIND1)
23    (SKIP&RET 3)
25    L25
25    (CONST 1)                           ; (1 NIL)
26    (JMP L22)
28    L28
28    (CONST 3)                           ; (1)
29    (JMP L22)


Disassembly of function #:|(DEFUN ALLPRODS (X Y) ...)-24|
(CONST 0) = ALLPRODS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ALLPRODS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ALLPRODS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ALLPRODS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ALLPRODS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ALLPRODS
8     (SKIP&RET 1)


Disassembly of function ALLPRODS
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = AP1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X)
27 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE 0)                        ; X
8     (JMPIFNOT L35)
10    (GETVALUE 1)                        ; Y
12    (JMPIFNOT L38)
14    (GETVALUE 0)                        ; X
16    (CAR&PUSH)
17    (GETVALUE&PUSH 1)                   ; Y
19    (CALL2&PUSH 2)                      ; AP1
21    (GETVALUE 0)                        ; X
23    (CDR&PUSH)
24    (GETVALUE&PUSH 1)                   ; Y
26    (JSR&PUSH L0)
28    (CALLSR 2 35)                       ; NCONC
31    L31
31    (UNBIND 2)
33    (SKIP&RET 3)
35    L35
35    (NIL)
36    (JMP L31)
38    L38
38    (NIL)
39    (JMP L31)


Disassembly of function #:|(DEFUN AL1 (F R LEN) ...)-25|
(CONST 0) = AL1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE AL1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; AL1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; AL1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE AL1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; AL1
8     (SKIP&RET 1)


Disassembly of function AL1
(CONST 0) = F
(CONST 1) = SS
(CONST 2) = 1
(CONST 3) = *Y*
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (SS *Y* F)
writes special variable : (SS)
79 byte-code instructions:
0     L0
0     (LOAD 3)
1     (BIND 0)                            ; F
3     (NIL)
4     (BIND 1)                            ; SS
6     (LOAD&PUSH 7)
7     (JMPIFEQTO 2 L25)                   ; 1
10    (LOAD&JMPIFNOT 8 L61)
13    (LOAD&CAR&PUSH 8)
15    (LOAD&CDR&PUSH 9)
17    (LOAD&DEC&PUSH 9)
19    (JSR&PUSH L0)
21    (LOAD&PUSH 0)
22    (JMP L109)
25    L25
25    (NIL&PUSH)
26    (GETVALUE&PUSH 0)                   ; F
28    (JMP L47)
30    L30
30    (LOAD&CAR&PUSH 0)
32    (LOAD 0)
33    (BIND 3)                            ; *Y*
35    (GETVALUE&PUSH 3)                   ; *Y*
37    (NIL)
38    (CONS)
39    (UNBIND1)
40    (PUSH)
41    (LOAD&CONS&STORE 2)
43    (SKIP 1)
45    (LOAD&CDR&STORE 0)
47    L47
47    (LOAD&PUSH 0)
48    (CALLS1&JMPIFNOT 146 L30)           ; ENDP
51    (SKIP 1)
53    (LOAD&PUSH 0)
54    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
56    (SKIP 1)
58    (UNBIND1)
59    (JMP L118)
61    L61
61    (NIL)
62    (UNBIND1)
63    (JMP L118)
65    L65
65    (LOAD&CAR&PUSH 0)
67    (LOAD 0)
68    (BIND 3)                            ; *Y*
70    (GETVALUE&PUSH 1)                   ; SS
72    (NIL&PUSH)
73    (GETVALUE&PUSH 0)                   ; F
75    (JMP L89)
77    L77
77    (LOAD&CAR&PUSH 0)
79    (LOAD&PUSH 0)
80    (GETVALUE 3)                        ; *Y*
82    (CONS&PUSH)
83    (LOAD&CONS&STORE 2)
85    (SKIP 1)
87    (LOAD&CDR&STORE 0)
89    L89
89    (LOAD&PUSH 0)
90    (CALLS1&JMPIFNOT 146 L77)           ; ENDP
93    (SKIP 1)
95    (LOAD&PUSH 0)
96    (CALLS1&STORE 164 0)                ; SYSTEM::LIST-NREVERSE
99    (CALLSR 2 35)                       ; NCONC
102   (SETVALUE 1)                        ; SS
104   (UNBIND1)
105   (SKIP 1)
107   (LOAD&CDR&STORE 0)
109   L109
109   (LOAD&PUSH 0)
110   (CALLS1&JMPIFNOT 146 L65)           ; ENDP
113   (SKIP 2)
115   (GETVALUE 1)                        ; SS
117   (UNBIND1)
118   L118
118   (UNBIND1)
119   (SKIP&RET 4)


Disassembly of function #:|(DEFUN AP1 (X L) ...)-26|
(CONST 0) = AP1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE AP1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; AP1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; AP1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE AP1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; AP1
8     (SKIP&RET 1)


Disassembly of function AP1
(CONST 0) = X
(CONST 1) = L
(CONST 2) = PTIMES
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X L)
22 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; L
6     (GETVALUE 1)                        ; L
8     (JMPIFNOT L29)
10    (GETVALUE&PUSH 0)                   ; X
12    (GETVALUE 1)                        ; L
14    (CAR&PUSH)
15    (CALL2&PUSH 2)                      ; PTIMES
17    (GETVALUE&PUSH 0)                   ; X
19    (GETVALUE 1)                        ; L
21    (CDR&PUSH)
22    (JSR L0)
24    (CONS)
25    L25
25    (UNBIND 2)
27    (SKIP&RET 3)
29    L29
29    (NIL)
30    (JMP L25)


Disassembly of function #:|(DEFUN PTTS1 (X N Y) ...)-27|
(CONST 0) = PTTS1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PTTS1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PTTS1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PTTS1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PTTS1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PTTS1
8     (SKIP&RET 1)


Disassembly of function PTTS1
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = 1
(CONST 3) = PTIMES
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X Y)
22 byte-code instructions:
0     L0
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (LOAD&PUSH 8)
7     (JMPIFEQTO 2 L29)                   ; 1
10    (GETVALUE&PUSH 1)                   ; Y
12    (GETVALUE&PUSH 0)                   ; X
14    (LOAD&DEC&PUSH 10)
16    (GETVALUE&PUSH 0)                   ; X
18    (GETVALUE&PUSH 1)                   ; Y
20    (CALL2&PUSH 3)                      ; PTIMES
22    (JSR L0)
24    (CONS)
25    L25
25    (UNBIND 2)
27    (SKIP&RET 4)
29    L29
29    (GETVALUE&PUSH 1)                   ; Y
31    (LIST 1)
33    (JMP L25)


Disassembly of function #:|(DEFUN P1 (L) ...)-28|
(CONST 0) = P1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE P1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; P1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; P1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE P1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; P1
8     (SKIP&RET 1)


Disassembly of function P1
(CONST 0) = L
(CONST 1) = P11
(CONST 2) = AL1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
22 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (NIL&PUSH)
4     (CONST&SYMBOL-FUNCTION&PUSH 1)      ; P11
6     (GETVALUE&PUSH 0)                   ; L
8     (CALLSR&STORE 0 22 0)               ; MAPCAR
12    (GETVALUE 0)                        ; L
14    (JMPIFNOT L32)
16    (LOAD&CAR&PUSH 0)
18    (LOAD&CDR&PUSH 1)
20    (LOAD&PUSH 2)
21    (CALLS2&PUSH 71)                    ; LENGTH
23    (CALL 3 2)                          ; AL1
26    (CDR)
27    (SKIP 1)
29    L29
29    (UNBIND1)
30    (SKIP&RET 2)
32    L32
32    (NIL)
33    (SKIP 1)
35    (JMP L29)


Disassembly of function #:|(DEFUN P11 (ELE) ...)-29|
(CONST 0) = P11
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE P11>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; P11
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; P11
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE P11>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; P11
8     (SKIP&RET 1)


Disassembly of function P11
(CONST 0) = POWERSET
(CONST 1) = ALLPRODS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
23 byte-code instructions:
0     L0
0     (LOAD 1)
1     (CDR)
2     (CDR)
3     (JMPIFNOT L21)
5     (LOAD&CAR&PUSH 1)
7     (LOAD 2)
8     (CDR)
9     (CAR&PUSH)
10    (CALL2&PUSH 0)                      ; POWERSET
12    (LOAD 2)
13    (CDR)
14    (CDR&PUSH)
15    (JSR&PUSH L0)
17    (CALL2 1)                           ; ALLPRODS
19    (SKIP&RET 2)
21    L21
21    (LOAD&CAR&PUSH 1)
23    (LOAD 2)
24    (CDR)
25    (CAR&PUSH)
26    (CALL2 0)                           ; POWERSET
28    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PINTERPOLATE (L VAR) ...)-30|
(CONST 0) = PINTERPOLATE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PINTERPOLATE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PINTERPOLATE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PINTERPOLATE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PINTERPOLATE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PINTERPOLATE
8     (SKIP&RET 1)


Disassembly of function PINTERPOLATE
(CONST 0) = L
(CONST 1) = VAR
(CONST 2) = 1
(CONST 3) = PINTERPOLATE2
(CONST 4) = -2
(CONST 5) = PINTERPOLATE1
(CONST 6) = PSIMP
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L VAR)
16 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; L
3     (LOAD 4)
4     (BIND 1)                            ; VAR
6     (GETVALUE&PUSH 1)                   ; VAR
8     (GETVALUE&PUSH 0)                   ; L
10    (CONST&PUSH 2)                      ; 1
11    (CALL2&PUSH 3)                      ; PINTERPOLATE2
13    (CONST&PUSH 4)                      ; -2
14    (GETVALUE&PUSH 0)                   ; L
16    (CALLS2&PUSH 71)                    ; LENGTH
18    (CALLSR&PUSH 2 53)                  ; +
21    (CALL2&PUSH 5)                      ; PINTERPOLATE1
23    (CALL2 6)                           ; PSIMP
25    (UNBIND 2)
27    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PINTERPOLATE1 (X N) ...)-31|
(CONST 0) = PINTERPOLATE1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PINTERPOLATE1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PINTERPOLATE1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PINTERPOLATE1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PINTERPOLATE1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PINTERPOLATE1
8     (SKIP&RET 1)


Disassembly of function PINTERPOLATE1
(CONST 0) = X
(CONST 1) = 1
(CONST 2) = PINTERPOLATE5
(CONST 3) = PINTERPOLATE4
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
12 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2&PUSH 72)                    ; REVERSE
7     (CONST&PUSH 1)                      ; 1
8     (LOAD&PUSH 6)
9     (LOAD&PUSH 7)
10    (CALL&PUSH 4 2)                     ; PINTERPOLATE5
13    (LOAD&INC&PUSH 5)
15    (CALL2 3)                           ; PINTERPOLATE4
17    (UNBIND1)
18    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PINTERPOLATE2 (X N) ...)-32|
(CONST 0) = PINTERPOLATE2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PINTERPOLATE2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PINTERPOLATE2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PINTERPOLATE2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PINTERPOLATE2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PINTERPOLATE2
8     (SKIP&RET 1)


Disassembly of function PINTERPOLATE2
(CONST 0) = X
(CONST 1) = PINTERPOLATE3
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
20 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (CDR)
6     (JMPIFNOT L24)
8     (GETVALUE 0)                        ; X
10    (CAR&PUSH)
11    (GETVALUE&PUSH 0)                   ; X
13    (LOAD&PUSH 6)
14    (CALL2&PUSH 1)                      ; PINTERPOLATE3
16    (LOAD&INC&PUSH 6)
18    (JSR L0)
20    (CONS)
21    L21
21    (UNBIND1)
22    (SKIP&RET 3)
24    L24
24    (GETVALUE 0)                        ; X
26    (JMP L21)


Disassembly of function #:|(DEFUN PINTERPOLATE3 (X N) ...)-33|
(CONST 0) = PINTERPOLATE3
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PINTERPOLATE3>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PINTERPOLATE3
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PINTERPOLATE3
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PINTERPOLATE3>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PINTERPOLATE3
8     (SKIP&RET 1)


Disassembly of function PINTERPOLATE3
(CONST 0) = X
(CONST 1) = PDIFFERENCE
(CONST 2) = PQUOTIENT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
25 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (CDR)
6     (JMPIFNOT L30)
8     (GETVALUE 0)                        ; X
10    (CDR)
11    (CAR&PUSH)
12    (GETVALUE 0)                        ; X
14    (CAR&PUSH)
15    (CALL2&PUSH 1)                      ; PDIFFERENCE
17    (LOAD&PUSH 5)
18    (CALL2&PUSH 2)                      ; PQUOTIENT
20    (GETVALUE 0)                        ; X
22    (CDR&PUSH)
23    (LOAD&PUSH 6)
24    (JSR L0)
26    (CONS)
27    L27
27    (UNBIND1)
28    (SKIP&RET 3)
30    L30
30    (NIL)
31    (JMP L27)


Disassembly of function #:|(DEFUN PINTERPOLATE4 (X N) ...)-34|
(CONST 0) = PINTERPOLATE4
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PINTERPOLATE4>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PINTERPOLATE4
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PINTERPOLATE4
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PINTERPOLATE4>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PINTERPOLATE4
8     (SKIP&RET 1)


Disassembly of function PINTERPOLATE4
(CONST 0) = X
(CONST 1) = FIXNUMP
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
47 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFNOT L35)
7     (GETVALUE 0)                        ; X
9     (CAR)
10    (BIND 0)                            ; X
12    (GETVALUE&PUSH 0)                   ; X
14    (CALL1&JMPIF 1 L26)                 ; FIXNUMP
17    (GETVALUE 0)                        ; X
19    (JMPIFCONSP L50)
21    (GETVALUE&PUSH 0)                   ; X
23    (CALLS2&JMPIFNOT 15 L38)            ; FLOATP
26    L26
26    (GETVALUE&PUSH 0)                   ; X
28    (CALLS2 145)                        ; ZEROP
30    (UNBIND1)
31    (JMPIFNOT L51)
33    (JMP L41)
35    L35
35    (NIL)
36    (JMP L64)
38    L38
38    (UNBIND1)
39    (JMPIFNOT L51)
41    L41
41    (GETVALUE 0)                        ; X
43    (CDR&PUSH)
44    (LOAD&DEC&PUSH 5)
46    (JSR L0)
48    (JMP L64)
50    L50
50    (UNBIND1)
51    L51
51    (LOAD&PUSH 4)
52    (GETVALUE 0)                        ; X
54    (CAR&PUSH)
55    (GETVALUE 0)                        ; X
57    (CDR&PUSH)
58    (LOAD&DEC&PUSH 7)
60    (JSR L0)
62    (CONS)
63    (CONS)
64    L64
64    (UNBIND1)
65    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PINTERPOLATE5 (X I J ...) ...)-35|
(CONST 0) = PINTERPOLATE5
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PINTERPOLATE5>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PINTERPOLATE5
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PINTERPOLATE5
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PINTERPOLATE5>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PINTERPOLATE5
8     (SKIP&RET 1)


Disassembly of function PINTERPOLATE5
(CONST 0) = X
(CONST 1) = PINTERPOLATE6
4 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
23 byte-code instructions:
0     L0
0     (LOAD 4)
1     (BIND 0)                            ; X
3     (LOAD&PUSH 6)
4     (LOAD&PUSH 5)
5     (CALLSR&JMPIF 1 48 L30)             ; >
9     (GETVALUE 0)                        ; X
11    (CAR&PUSH)
12    (GETVALUE&PUSH 0)                   ; X
14    (LOAD&PUSH 8)
15    (LOAD&PUSH 8)
16    (CALL 3 1)                          ; PINTERPOLATE6
19    (CONS&PUSH)
20    (LOAD&INC&PUSH 7)
22    (LOAD&DEC&PUSH 7)
24    (LOAD&PUSH 7)
25    (JSR L0)
27    L27
27    (UNBIND1)
28    (SKIP&RET 5)
30    L30
30    (GETVALUE 0)                        ; X
32    (JMP L27)


Disassembly of function #:|(DEFUN PINTERPOLATE6 (X I J) ...)-36|
(CONST 0) = PINTERPOLATE6
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PINTERPOLATE6>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PINTERPOLATE6
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PINTERPOLATE6
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PINTERPOLATE6>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PINTERPOLATE6
8     (SKIP&RET 1)


Disassembly of function PINTERPOLATE6
(CONST 0) = X
(CONST 1) = PCTIMES
(CONST 2) = PDIFFERENCE
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
26 byte-code instructions:
0     L0
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD&PUSH 5)
4     (CALLS2&JMPIF 145 L31)              ; ZEROP
7     (GETVALUE 0)                        ; X
9     (CDR)
10    (CAR&PUSH)
11    (LOAD&PUSH 5)
12    (GETVALUE 0)                        ; X
14    (CAR&PUSH)
15    (CALL2&PUSH 1)                      ; PCTIMES
17    (CALL2&PUSH 2)                      ; PDIFFERENCE
19    (GETVALUE 0)                        ; X
21    (CDR&PUSH)
22    (LOAD&DEC&PUSH 7)
24    (LOAD&PUSH 7)
25    (JSR L0)
27    (CONS)
28    L28
28    (UNBIND1)
29    (SKIP&RET 4)
31    L31
31    (GETVALUE 0)                        ; X
33    (CDR)
34    (JMP L28)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE FASTT))-37|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $FASTTIMES (X Y) ...)-38|
(CONST 0) = $FASTTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $FASTTIMES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $FASTTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $FASTTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $FASTTIMES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $FASTTIMES
8     (SKIP&RET 1)


Disassembly of function $FASTTIMES
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = MRAT
(CONST 3) = 1
(CONST 4) = FPTIMES
(CONST 5) = "Use FASTTIMES only on CRE polynomials with same varlists"
(CONST 6) = MERROR
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X)
45 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE 0)                        ; X
8     (JMPIFATOM L44)
10    (GETVALUE 1)                        ; Y
12    (JMPIFATOM L44)
14    (GETVALUE 0)                        ; X
16    (CAR&PUSH)
17    (GETVALUE 1)                        ; Y
19    (CAR&PUSH)
20    (CALLS2&JMPIFNOT 2 L44)             ; EQUAL
23    (GETVALUE 0)                        ; X
25    (CAR)
26    (CAR&PUSH)
27    (JMPIFNOTEQTO 2 L44)                ; MRAT
30    (GETVALUE 0)                        ; X
32    (CDR)
33    (CDR&PUSH)
34    (JMPIFNOTEQTO 3 L44)                ; 1
37    (GETVALUE 1)                        ; Y
39    (CDR)
40    (CDR&PUSH)
41    (JMPIFEQTO 3 L51)                   ; 1
44    L44
44    (CONST&PUSH 5)                      ; "Use FASTTIMES only on CRE polynomials with same varlists"
45    (CALL1 6)                           ; MERROR
47    L47
47    (UNBIND 2)
49    (SKIP&RET 3)
51    L51
51    (GETVALUE 0)                        ; X
53    (CAR&PUSH)
54    (GETVALUE 0)                        ; X
56    (CDR)
57    (CAR&PUSH)
58    (GETVALUE 1)                        ; Y
60    (CDR)
61    (CAR&PUSH)
62    (CALL2&PUSH 4)                      ; FPTIMES
64    (CONST 3)                           ; 1
65    (CONS)
66    (CONS)
67    (JMP L47)


Disassembly of function #:|(DEFUN FPTIMES (X Y) ...)-39|
(CONST 0) = FPTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FPTIMES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FPTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FPTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FPTIMES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FPTIMES
8     (SKIP&RET 1)


Disassembly of function FPTIMES
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = FIXNUMP
(CONST 3) = 0
(CONST 4) = PCTIMES
(CONST 5) = UNIVAR
(CONST 6) = PTIMES1
(CONST 7) = FPTIMES1
(CONST 8) = B
(CONST 9) = PCTIMES1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B Y X)
124 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE 0)                        ; X
8     (BIND 0)                            ; X
10    (GETVALUE&PUSH 0)                   ; X
12    (CALL1&JMPIF 2 L24)                 ; FIXNUMP
15    (GETVALUE 0)                        ; X
17    (JMPIFCONSP L38)
19    (GETVALUE&PUSH 0)                   ; X
21    (CALLS2&JMPIFNOT 15 L33)            ; FLOATP
24    L24
24    (GETVALUE&PUSH 0)                   ; X
26    (CALLS2 145)                        ; ZEROP
28    (UNBIND1)
29    (JMPIFNOT L39)
31    (JMP L69)
33    L33
33    (UNBIND1)
34    (JMPIFNOT L39)
36    (JMP L69)
38    L38
38    (UNBIND1)
39    L39
39    (GETVALUE 1)                        ; Y
41    (BIND 0)                            ; X
43    (GETVALUE&PUSH 0)                   ; X
45    (CALL1&JMPIF 2 L57)                 ; FIXNUMP
48    (GETVALUE 0)                        ; X
50    (JMPIFCONSP L79)
52    (GETVALUE&PUSH 0)                   ; X
54    (CALLS2&JMPIFNOT 15 L66)            ; FLOATP
57    L57
57    (GETVALUE&PUSH 0)                   ; X
59    (CALLS2 145)                        ; ZEROP
61    (UNBIND1)
62    (JMPIFNOT L80)
64    (JMP L69)
66    L66
66    (UNBIND1)
67    (JMPIFNOT L80)
69    L69
69    (CONST 3)                           ; 0
70    (JMP L190)
73    L73
73    (GETVALUE&PUSH 0)                   ; X
75    (GETVALUE 1)                        ; Y
77    (JMP L92)
79    L79
79    (UNBIND1)
80    L80
80    (GETVALUE 0)                        ; X
82    (JMPIFATOM L73)
84    (GETVALUE 1)                        ; Y
86    (JMPIFCONSP L148)
88    (GETVALUE&PUSH 1)                   ; Y
90    (GETVALUE 0)                        ; X
92    L92
92    (PUSH)
93    (CALL2 4)                           ; PCTIMES
95    (JMP L190)
98    L98
98    (GETVALUE 0)                        ; X
100   (CAR&PUSH)
101   (GETVALUE 0)                        ; X
103   (CDR&PUSH)
104   (GETVALUE 1)                        ; Y
106   (CDR&PUSH)
107   (CALL2 6)                           ; PTIMES1
109   (CONS)
110   (JMP L190)
113   L113
113   (GETVALUE 0)                        ; X
115   (CDR&PUSH)
116   (CALL1&JMPIF 5 L98)                 ; UNIVAR
119   (GETVALUE 1)                        ; Y
121   (CDR&PUSH)
122   (CALL1&JMPIF 5 L98)                 ; UNIVAR
125   (GETVALUE 0)                        ; X
127   (CAR&PUSH)
128   (GETVALUE 0)                        ; X
130   (CDR&PUSH)
131   (GETVALUE 1)                        ; Y
133   (CDR&PUSH)
134   (CALL2 7)                           ; FPTIMES1
136   (CONS)
137   (JMP L190)
139   L139
139   (GETVALUE 0)                        ; X
141   (CAR&PUSH)
142   (GETVALUE&PUSH 1)                   ; Y
144   (GETVALUE 0)                        ; X
146   (JMP L186)
148   L148
148   (GETVALUE 0)                        ; X
150   (CAR&PUSH)
151   (GETVALUE 1)                        ; Y
153   (CAR)
154   (JMPIFEQ L113)
156   (GETVALUE 0)                        ; X
158   (CAR&PUSH)
159   (GETVALUE 1)                        ; Y
161   (CAR)
162   (BIND 8)                            ; B
164   (LOAD&PUSH 3)
165   (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
167   (GETVALUE&PUSH 8)                   ; B
169   (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
171   (CALLSR 1 48)                       ; >
174   (UNBIND1)
175   (SKIP 1)
177   (JMPIF L139)
179   (GETVALUE 1)                        ; Y
181   (CAR&PUSH)
182   (GETVALUE&PUSH 0)                   ; X
184   (GETVALUE 1)                        ; Y
186   L186
186   (CDR&PUSH)
187   (CALL2 9)                           ; PCTIMES1
189   (CONS)
190   L190
190   (UNBIND 2)
192   (SKIP&RET 3)


Disassembly of function #:|(DEFUN FPTIMES1 (F G) ...)-40|
(CONST 0) = FPTIMES1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FPTIMES1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FPTIMES1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FPTIMES1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FPTIMES1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FPTIMES1
8     (SKIP&RET 1)


Disassembly of function FPTIMES1
(CONST 0) = F
(CONST 1) = B
(CONST 2) = PCTIMES1
(CONST 3) = LSFT
(CONST 4) = -1
(CONST 5) = LSH
(CONST 6) = HALFSPLIT
(CONST 7) = PPLUS1
(CONST 8) = PDIFFER1
(CONST 9) = 1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B F)
writes special variables : (B F)
103 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; F
3     (NIL&PUSH)
4     (NIL)
5     (BIND 1)                            ; B
7     (PUSH-NIL 2)
9     (GETVALUE 0)                        ; F
11    (JMPIFNOT L41)
13    (LOAD&JMPIFNOT 10 L41)
16    (GETVALUE 0)                        ; F
18    (CDR)
19    (CDR)
20    (JMPIFNOT L50)
22    (LOAD 10)
23    (CDR)
24    (CDR)
25    (JMPIF L61)
27    (LOAD 10)
28    (CDR)
29    (CAR&PUSH)
30    (GETVALUE&PUSH 0)                   ; F
32    (CALL2&PUSH 2)                      ; PCTIMES1
34    (LOAD 11)
35    L35
35    (CAR&PUSH)
36    (CALL2 3)                           ; LSFT
38    (JMP L152)
41    L41
41    (NIL)
42    (SKIP 2)
44    (UNBIND1)
45    (SKIP 1)
47    (JMP L157)
50    L50
50    (GETVALUE 0)                        ; F
52    (CDR)
53    (CAR&PUSH)
54    (LOAD&PUSH 11)
55    (CALL2&PUSH 2)                      ; PCTIMES1
57    (GETVALUE 0)                        ; F
59    (JMP L35)
61    L61
61    (GETVALUE 0)                        ; F
63    (CAR&PUSH)
64    (LOAD&CAR&PUSH 11)
66    (CALLSR&PUSH 1 51)                  ; MAX
69    (CALLS2&PUSH 150)                   ; 1+
71    (CONST&PUSH 4)                      ; -1
72    (CALL2 5)                           ; LSH
74    (STORE 0)
75    (GETVALUE&PUSH 0)                   ; F
77    (LOAD&PUSH 1)
78    (CALL2 6)                           ; HALFSPLIT
80    (SETVALUE 0)                        ; F
82    (LOAD&PUSH 10)
83    (LOAD&PUSH 1)
84    (CALL2 6)                           ; HALFSPLIT
86    (STORE 10)
88    (GETVALUE 0)                        ; F
90    (CAR&PUSH)
91    (LOAD&CAR&PUSH 11)
93    (JSR L0)
96    (STORE 5)
97    (GETVALUE 0)                        ; F
99    (CAR&PUSH)
100   (GETVALUE 0)                        ; F
102   (CDR&PUSH)
103   (CALL2&PUSH 7)                      ; PPLUS1
105   (LOAD&CAR&PUSH 11)
107   (LOAD&CDR&PUSH 12)
109   (CALL2&PUSH 7)                      ; PPLUS1
111   (JSR L0)
114   (SETVALUE 1)                        ; B
116   (GETVALUE 0)                        ; F
118   (CDR&PUSH)
119   (LOAD&CDR&PUSH 11)
121   (JSR L0)
124   (STORE 1)
125   (GETVALUE&PUSH 1)                   ; B
127   (LOAD&PUSH 6)
128   (CALL2&PUSH 8)                      ; PDIFFER1
130   (LOAD&PUSH 2)
131   (CALL2 8)                           ; PDIFFER1
133   (SETVALUE 1)                        ; B
135   (LOAD&PUSH 5)
136   (LOAD&PUSH 1)
137   (CONST&PUSH 9)                      ; 1
138   (CALL2&PUSH 5)                      ; LSH
140   (CALL2&PUSH 3)                      ; LSFT
142   (GETVALUE&PUSH 1)                   ; B
144   (LOAD&PUSH 2)
145   (CALL2&PUSH 3)                      ; LSFT
147   (LOAD&PUSH 3)
148   (CALL2&PUSH 7)                      ; PPLUS1
150   (CALL2 7)                           ; PPLUS1
152   L152
152   (SKIP 2)
154   (UNBIND1)
155   (SKIP 1)
157   L157
157   (UNBIND1)
158   (SKIP&RET 3)


Disassembly of function #:|(DEFUN HALFSPLIT (P D) ...)-41|
(CONST 0) = HALFSPLIT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE HALFSPLIT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; HALFSPLIT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; HALFSPLIT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE HALFSPLIT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; HALFSPLIT
8     (SKIP&RET 1)


Disassembly of function HALFSPLIT
(CONST 0) = P
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
writes special variable : (P)
38 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (NIL&PUSH)
4     (GETVALUE 0)                        ; P
6     (BIND 0)                            ; P
8     (GETVALUE 0)                        ; P
10    (JMPIFNOT L45)
12    L12
12    (GETVALUE 0)                        ; P
14    (CAR&PUSH)
15    (LOAD&PUSH 9)
16    (CALLSR&JMPIF 1 47 L45)             ; <
20    (GETVALUE 0)                        ; P
22    (CDR)
23    (CAR&PUSH)
24    (GETVALUE 0)                        ; P
26    (CAR&PUSH)
27    (LOAD&PUSH 10)
28    (CALLSR&PUSH 1 54)                  ; -
31    (LOAD 5)
32    (CONS)
33    (CONS)
34    (STORE 3)
35    (GETVALUE 0)                        ; P
37    (CDR)
38    (CDR)
39    (SETVALUE 0)                        ; P
41    (GETVALUE 0)                        ; P
43    (JMPIF L12)
45    L45
45    (LOAD&PUSH 3)
46    (CALLS2&PUSH 73)                    ; NREVERSE
48    (GETVALUE 0)                        ; P
50    (CONS)
51    (UNBIND1)
52    (SKIP 1)
54    (UNBIND1)
55    (SKIP&RET 3)


Disassembly of function #:|(DEFUN LSFT (P N) ...)-42|
(CONST 0) = LSFT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LSFT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LSFT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LSFT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LSFT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LSFT
8     (SKIP&RET 1)


Disassembly of function LSFT
(CONST 0) = P
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
19 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (GETVALUE&PUSH 0)                   ; P
5     (LOAD&JMPIFNOT 0 L23)
8     L8
8     (LOAD&PUSH 0)
9     (LOAD&CAR&PUSH 1)
11    (LOAD&PUSH 7)
12    (CALLSR&PUSH 2 53)                  ; +
15    (CALLS1 168)                        ; RPLACA
17    (CDR)
18    (CDR)
19    (STORE 0)
20    (LOAD&JMPIF 0 L8)
23    L23
23    (SKIP 1)
25    (GETVALUE 0)                        ; P
27    (UNBIND1)
28    (SKIP&RET 3)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE RATWT) (SPECIAL WTSOFAR XWEIGHT ...) ...)-43|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $RATWEIGHT N ...)-44|
(CONST 0) = $RATWEIGHT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $RATWEIGHT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $RATWEIGHT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $RATWEIGHT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $RATWEIGHT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $RATWEIGHT
8     (SKIP&RET 1)


Disassembly of function $RATWEIGHT
(CONST 0) = "RATWEIGHT takes an even number of arguments."
(CONST 1) = MERROR
(CONST 2) = 1
(CONST 3) = *I*
(CONST 4) = NARG1
(CONST 5) = *RATWEIGHTS
(CONST 6) = ZL-ASSOC
(CONST 7) = 2
(CONST 8) = (MLIST SIMP)
(CONST 9) = DOT2L
(CONST 10) = $RATWEIGHTS
(CONST 11) = 0
(CONST 12) = (MLIST)
(CONST 13) = LISTIFY1
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (*RATWEIGHTS *I* $RATWEIGHTS)
writes special variables : ($RATWEIGHTS *I* *RATWEIGHTS)
57 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (LOAD&PUSH 0)
4     (CALLS2&JMPIFNOT 148 L10)           ; ODDP
7     (CONST&PUSH 0)                      ; "RATWEIGHT takes an even number of arguments."
8     (CALL1 1)                           ; MERROR
10    L10
10    (CONST 2)                           ; 1
11    (BIND 3)                            ; *I*
13    (JMP L60)
15    L15
15    (GETVALUE 10)                       ; $RATWEIGHTS
17    (SKIP&RET 3)
19    L19
19    (GETVALUE&PUSH 3)                   ; *I*
21    (LOAD&PUSH 6)
22    (CALL2&PUSH 4)                      ; NARG1
24    (GETVALUE&PUSH 5)                   ; *RATWEIGHTS
26    (CALL2&JMPIF 6 L42)                 ; ZL-ASSOC
29    (GETVALUE&PUSH 3)                   ; *I*
31    (LOAD&PUSH 6)
32    (CALL2&PUSH 4)                      ; NARG1
34    (LIST&PUSH 1)
36    (GETVALUE 5)                        ; *RATWEIGHTS
38    (CONS)
39    (SETVALUE 5)                        ; *RATWEIGHTS
41    (CAR)
42    L42
42    (PUSH)
43    (GETVALUE&PUSH 3)                   ; *I*
45    (CALLS2&PUSH 150)                   ; 1+
47    (LOAD&PUSH 7)
48    (CALL2&PUSH 4)                      ; NARG1
50    (CALLS1 170)                        ; RPLACD
52    (GETVALUE&PUSH 3)                   ; *I*
54    (CONST&PUSH 7)                      ; 2
55    (CALLSR 2 53)                       ; +
58    (SETVALUE 3)                        ; *I*
60    L60
60    (GETVALUE&PUSH 3)                   ; *I*
62    (LOAD&PUSH 4)
63    (CALLSR&JMPIFNOT 1 48 L19)          ; >
67    (UNBIND1)
68    (CONST&PUSH 8)                      ; (MLIST SIMP)
69    (GETVALUE&PUSH 5)                   ; *RATWEIGHTS
71    (CALL1 9)                           ; DOT2L
73    (CONS)
74    (SETVALUE 10)                       ; $RATWEIGHTS
76    (LOAD&PUSH 0)
77    (CONST&PUSH 11)                     ; 0
78    (CALLSR&JMPIF 1 45 L15)             ; =
83    (CONST&PUSH 12)                     ; (MLIST)
84    (LOAD&PUSH 1)
85    (LOAD&PUSH 4)
86    (CALL2 13)                          ; LISTIFY1
88    (CONS)
89    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PWEIGHT (X) ...)-45|
(CONST 0) = PWEIGHT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PWEIGHT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PWEIGHT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PWEIGHT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PWEIGHT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PWEIGHT
8     (SKIP&RET 1)


Disassembly of function PWEIGHT
(CONST 0) = X
(CONST 1) = $RATWEIGHT
(CONST 2) = 0
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
11 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CONST&PUSH 1)                      ; $RATWEIGHT
6     (PUSH-UNBOUND 1)
8     (CALLS2 132)                        ; GET
10    (JMPIF1 L13)
12    (CONST 2)                           ; 0
13    L13
13    (UNBIND1)
14    (SKIP&RET 2)


Disassembly of function #:|(DEFUN WTPTIMES (X Y WTSOFAR) ...)-46|
(CONST 0) = WTPTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE WTPTIMES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; WTPTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; WTPTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE WTPTIMES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; WTPTIMES
8     (SKIP&RET 1)


Disassembly of function WTPTIMES
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = WTSOFAR
(CONST 3) = FIXNUMP
(CONST 4) = $RATWTLVL
(CONST 5) = 0
(CONST 6) = WTPCTIMES
(CONST 7) = PWEIGHT
(CONST 8) = WTPTIMES1
(CONST 9) = ALG
(CONST 10) = PALGSIMP
(CONST 11) = B
(CONST 12) = WTPCTIMES1
(CONST 13) = PSIMP
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B $RATWTLVL WTSOFAR Y X)
123 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD 5)
4     (BIND 1)                            ; Y
6     (LOAD 7)
7     (BIND 2)                            ; WTSOFAR
9     (GETVALUE 0)                        ; X
11    (BIND 0)                            ; X
13    (GETVALUE&PUSH 0)                   ; X
15    (CALL1&JMPIF 3 L27)                 ; FIXNUMP
18    (GETVALUE 0)                        ; X
20    (JMPIFCONSP L41)
22    (GETVALUE&PUSH 0)                   ; X
24    (CALLS2&JMPIFNOT 15 L36)            ; FLOATP
27    L27
27    (GETVALUE&PUSH 0)                   ; X
29    (CALLS2 145)                        ; ZEROP
31    (UNBIND1)
32    (JMPIFNOT L42)
34    (JMP L72)
36    L36
36    (UNBIND1)
37    (JMPIFNOT L42)
39    (JMP L72)
41    L41
41    (UNBIND1)
42    L42
42    (GETVALUE 1)                        ; Y
44    (BIND 0)                            ; X
46    (GETVALUE&PUSH 0)                   ; X
48    (CALL1&JMPIF 3 L60)                 ; FIXNUMP
51    (GETVALUE 0)                        ; X
53    (JMPIFCONSP L82)
55    (GETVALUE&PUSH 0)                   ; X
57    (CALLS2&JMPIFNOT 15 L69)            ; FLOATP
60    L60
60    (GETVALUE&PUSH 0)                   ; X
62    (CALLS2 145)                        ; ZEROP
64    (UNBIND1)
65    (JMPIFNOT L83)
67    (JMP L72)
69    L69
69    (UNBIND1)
70    (JMPIFNOT L83)
72    L72
72    (CONST 5)                           ; 0
73    (JMP L196)
76    L76
76    (GETVALUE&PUSH 0)                   ; X
78    (GETVALUE 1)                        ; Y
80    (JMP L103)
82    L82
82    (UNBIND1)
83    L83
83    (GETVALUE&PUSH 2)                   ; WTSOFAR
85    (GETVALUE&PUSH 4)                   ; $RATWTLVL
87    (CALLSR&JMPIF 1 48 L72)             ; >
91    (GETVALUE 0)                        ; X
93    (JMPIFATOM L76)
95    (GETVALUE 1)                        ; Y
97    (JMPIFCONSP L147)
99    (GETVALUE&PUSH 1)                   ; Y
101   (GETVALUE 0)                        ; X
103   L103
103   (PUSH)
104   (CALL2 6)                           ; WTPCTIMES
106   (JMP L196)
109   L109
109   (GETVALUE 0)                        ; X
111   (CAR&PUSH)
112   (GETVALUE 0)                        ; X
114   (CDR&PUSH)
115   (GETVALUE 1)                        ; Y
117   (CDR&PUSH)
118   (GETVALUE 0)                        ; X
120   (CAR&PUSH)
121   (CALL1&PUSH 7)                      ; PWEIGHT
123   (CALL&PUSH 3 8)                     ; WTPTIMES1
126   (GETVALUE&PUSH 0)                   ; X
128   (CALL1&PUSH 9)                      ; ALG
130   (CALL 3 10)                         ; PALGSIMP
133   (JMP L196)
135   L135
135   (GETVALUE 0)                        ; X
137   (CAR&PUSH)
138   (GETVALUE&PUSH 1)                   ; Y
140   (GETVALUE 0)                        ; X
142   (CDR&PUSH)
143   (GETVALUE 0)                        ; X
145   (JMP L188)
147   L147
147   (GETVALUE 0)                        ; X
149   (CAR&PUSH)
150   (GETVALUE 1)                        ; Y
152   (CAR)
153   (JMPIFEQ L109)
155   (GETVALUE 0)                        ; X
157   (CAR&PUSH)
158   (GETVALUE 1)                        ; Y
160   (CAR)
161   (BIND 11)                           ; B
163   (LOAD&PUSH 3)
164   (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
166   (GETVALUE&PUSH 11)                  ; B
168   (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
170   (CALLSR 1 48)                       ; >
173   (UNBIND1)
174   (SKIP 1)
176   (JMPIF L135)
178   (GETVALUE 1)                        ; Y
180   (CAR&PUSH)
181   (GETVALUE&PUSH 0)                   ; X
183   (GETVALUE 1)                        ; Y
185   (CDR&PUSH)
186   (GETVALUE 1)                        ; Y
188   L188
188   (CAR&PUSH)
189   (CALL1&PUSH 7)                      ; PWEIGHT
191   (CALL&PUSH 3 12)                    ; WTPCTIMES1
194   (CALL2 13)                          ; PSIMP
196   L196
196   (UNBIND 3)
198   (SKIP&RET 4)


Disassembly of function #:|(DEFUN WTPTIMES1 (*X* Y XWEIGHT) ...)-47|
(CONST 0) = WTPTIMES1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE WTPTIMES1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; WTPTIMES1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; WTPTIMES1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE WTPTIMES1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; WTPTIMES1
8     (SKIP&RET 1)


Disassembly of function WTPTIMES1
(CONST 0) = *X*
(CONST 1) = Y
(CONST 2) = XWEIGHT
(CONST 3) = U*
(CONST 4) = V
(CONST 5) = WTPTIMES2
(CONST 6) = WTPTIMES3
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (U* *X* Y)
writes special variables : (*X* V U*)
27 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; *X*
3     (LOAD 5)
4     (BIND 1)                            ; Y
6     (LOAD 7)
7     (BIND 2)                            ; XWEIGHT
9     (NIL)
10    (BIND 3)                            ; U*
12    (NIL)
13    (BIND 4)                            ; V
15    (GETVALUE&PUSH 1)                   ; Y
17    (CALL1 5)                           ; WTPTIMES2
19    (SETVALUE 3)                        ; U*
21    (SETVALUE 4)                        ; V
23    (JMP L29)
25    L25
25    (GETVALUE&PUSH 1)                   ; Y
27    (CALL1 6)                           ; WTPTIMES3
29    L29
29    (GETVALUE 0)                        ; *X*
31    (CDR)
32    (CDR)
33    (SETVALUE 0)                        ; *X*
35    (JMPIF L25)
37    (GETVALUE 3)                        ; U*
39    (UNBIND 5)
41    (SKIP&RET 4)


Disassembly of function #:|(DEFUN WTPTIMES2 (Y) ...)-48|
(CONST 0) = WTPTIMES2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE WTPTIMES2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; WTPTIMES2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; WTPTIMES2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE WTPTIMES2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; WTPTIMES2
8     (SKIP&RET 1)


Disassembly of function WTPTIMES2
(CONST 0) = Y
(CONST 1) = XWEIGHT
(CONST 2) = *X*
(CONST 3) = WTSOFAR
(CONST 4) = $RATWTLVL
(CONST 5) = WTPTIMES
(CONST 6) = PCOEFADD
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($RATWTLVL WTSOFAR *X* XWEIGHT Y)
49 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; Y
3     (GETVALUE 0)                        ; Y
5     (JMPIFNOT L68)
7     (GETVALUE&PUSH 1)                   ; XWEIGHT
9     (GETVALUE 2)                        ; *X*
11    (CAR&PUSH)
12    (GETVALUE 0)                        ; Y
14    (CAR&PUSH)
15    (CALLSR&PUSH 2 53)                  ; +
18    (CALLSR&PUSH 2 55)                  ; *
21    (GETVALUE&PUSH 3)                   ; WTSOFAR
23    (CALLSR&PUSH 2 53)                  ; +
26    (LOAD&PUSH 0)
27    (GETVALUE&PUSH 4)                   ; $RATWTLVL
29    (CALLSR&JMPIF 1 48 L71)             ; >
33    (GETVALUE 2)                        ; *X*
35    (CAR&PUSH)
36    (GETVALUE 0)                        ; Y
38    (CAR&PUSH)
39    (CALLSR&PUSH 2 53)                  ; +
42    (GETVALUE 2)                        ; *X*
44    (CDR)
45    (CAR&PUSH)
46    (GETVALUE 0)                        ; Y
48    (CDR)
49    (CAR&PUSH)
50    (LOAD&PUSH 3)
51    (CALL&PUSH 3 5)                     ; WTPTIMES
54    (GETVALUE 0)                        ; Y
56    (CDR)
57    (CDR&PUSH)
58    (JSR&PUSH L0)
60    (CALL 3 6)                          ; PCOEFADD
63    (SKIP 1)
65    L65
65    (UNBIND1)
66    (SKIP&RET 2)
68    L68
68    (NIL)
69    (JMP L65)
71    L71
71    (GETVALUE 0)                        ; Y
73    (CDR)
74    (CDR&PUSH)
75    (JSR L0)
78    (SKIP 1)
80    (JMP L65)


Disassembly of function #:|(DEFUN WTPTIMES3 (Y) ...)-49|
(CONST 0) = WTPTIMES3
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE WTPTIMES3>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; WTPTIMES3
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; WTPTIMES3
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE WTPTIMES3>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; WTPTIMES3
8     (SKIP&RET 1)


Disassembly of function WTPTIMES3
(CONST 0) = Y
(CONST 1) = 0
(CONST 2) = *X*
(CONST 3) = WTSOFAR
(CONST 4) = XWEIGHT
(CONST 5) = WTPTIMES
(CONST 6) = X
(CONST 7) = FIXNUMP
(CONST 8) = V
(CONST 9) = U*
(CONST 10) = PPLUS1
(CONST 11) = PPLUS
(CONST 12) = PDIFFER1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (U* V X XWEIGHT WTSOFAR *X* Y)
writes special variables : (Y U* V)
256 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; Y
3     (CONST&PUSH 1)                      ; 0
4     (PUSH-NIL 2)
6     (GETVALUE 0)                        ; Y
8     (JMPIFNOT L394)
11    L11
11    (GETVALUE 2)                        ; *X*
13    (CAR&PUSH)
14    (GETVALUE 0)                        ; Y
16    (CAR&PUSH)
17    (CALLSR&STORE 2 53 2)               ; +
21    (GETVALUE 0)                        ; Y
23    (CDR)
24    (CAR&PUSH)
25    (GETVALUE 2)                        ; *X*
27    (CDR)
28    (CAR&PUSH)
29    (GETVALUE&PUSH 3)                   ; WTSOFAR
31    (GETVALUE&PUSH 4)                   ; XWEIGHT
33    (LOAD&PUSH 6)
34    (CALLSR&PUSH 2 55)                  ; *
37    (CALLSR&PUSH 2 53)                  ; +
40    (CALL 3 5)                          ; WTPTIMES
43    (STORE 0)
44    (BIND 6)                            ; X
46    (GETVALUE&PUSH 6)                   ; X
48    (CALL1&JMPIF 7 L138)                ; FIXNUMP
52    (GETVALUE 6)                        ; X
54    (JMPIFCONSP L149)
57    (GETVALUE&PUSH 6)                   ; X
59    (CALLS2&JMPIF 15 L138)              ; FLOATP
63    (UNBIND1)
64    (JMPIF L383)
67    L67
67    (GETVALUE 8)                        ; V
69    (JMPIFNOT L155)
72    L72
72    (LOAD&PUSH 2)
73    (GETVALUE 8)                        ; V
75    (CAR&PUSH)
76    (CALLSR&JMPIF 1 48 L155)            ; >
81    (LOAD&PUSH 2)
82    (GETVALUE 8)                        ; V
84    (CAR&PUSH)
85    (CALLS2&JMPIFNOT 2 L193)            ; EQUAL
89    (LOAD&PUSH 0)
90    (GETVALUE 8)                        ; V
92    (CDR)
93    (CAR&PUSH)
94    (CALL2 11)                          ; PPLUS
96    (STORE 0)
97    (BIND 6)                            ; X
99    (GETVALUE&PUSH 6)                   ; X
101   (CALL1&JMPIF 7 L165)                ; FIXNUMP
104   (GETVALUE 6)                        ; X
106   (JMPIFCONSP L376)
109   (GETVALUE&PUSH 6)                   ; X
111   (CALLS2&JMPIF 15 L165)              ; FLOATP
114   (UNBIND1)
115   (JMPIFNOT L377)
118   L118
118   (GETVALUE&PUSH 9)                   ; U*
120   (GETVALUE 8)                        ; V
122   (CAR&PUSH)
123   (GETVALUE 8)                        ; V
125   (CDR)
126   (CAR&PUSH)
127   (LIST&PUSH 2)
129   (CALL2 12)                          ; PDIFFER1
131   L131
131   (SETVALUE 8)                        ; V
133   (SETVALUE 9)                        ; U*
135   (JMP L383)
138   L138
138   (GETVALUE&PUSH 6)                   ; X
140   (CALLS2 145)                        ; ZEROP
142   (UNBIND1)
143   (JMPIFNOT L67)
146   (JMP L383)
149   L149
149   (UNBIND1)
150   (GETVALUE 8)                        ; V
152   (JMPIF L72)
155   L155
155   (GETVALUE&PUSH 9)                   ; U*
157   (LOAD&PUSH 3)
158   (LOAD&PUSH 2)
159   (LIST&PUSH 2)
161   (CALL2 10)                          ; PPLUS1
163   (JMP L131)
165   L165
165   (GETVALUE&PUSH 6)                   ; X
167   (CALLS2 145)                        ; ZEROP
169   (UNBIND1)
170   (JMPIFNOT L377)
173   (JMP L118)
175   L175
175   (LOAD&PUSH 1)
176   (LOAD&PUSH 3)
177   (LOAD&PUSH 2)
178   (LOAD 4)
179   (CDR)
180   (CONS)
181   (CONS&PUSH)
182   (CALLS1 170)                        ; RPLACD
184   (JMP L277)
187   L187
187   (GETVALUE 8)                        ; V
189   (CDR)
190   (CDR)
191   (SETVALUE 8)                        ; V
193   L193
193   (GETVALUE 8)                        ; V
195   (CDR)
196   (CDR)
197   (JMPIFNOT L209)
199   (GETVALUE 8)                        ; V
201   (CDR)
202   (CDR)
203   (CAR&PUSH)
204   (LOAD&PUSH 3)
205   (CALLSR&JMPIF 1 48 L187)            ; >
209   L209
209   (GETVALUE 8)                        ; V
211   (CDR)
212   (STORE 1)
213   L213
213   (LOAD 1)
214   (CDR)
215   (JMPIFNOT L175)
217   (LOAD 1)
218   (CDR)
219   (CAR&PUSH)
220   (LOAD&PUSH 3)
221   (CALLSR&JMPIF 1 47 L175)            ; <
225   (LOAD 1)
226   (CDR)
227   (CDR)
228   (CAR&PUSH)
229   (LOAD&PUSH 1)
230   (CALL2 11)                          ; PPLUS
232   (STORE 0)
233   (BIND 6)                            ; X
235   (GETVALUE&PUSH 6)                   ; X
237   (CALL1&JMPIF 7 L249)                ; FIXNUMP
240   (GETVALUE 6)                        ; X
242   (JMPIFCONSP L270)
244   (GETVALUE&PUSH 6)                   ; X
246   (CALLS2&JMPIFNOT 15 L258)           ; FLOATP
249   L249
249   (GETVALUE&PUSH 6)                   ; X
251   (CALLS2 145)                        ; ZEROP
253   (UNBIND1)
254   (JMPIFNOT L271)
256   (JMP L261)
258   L258
258   (UNBIND1)
259   (JMPIFNOT L271)
261   L261
261   (LOAD&PUSH 1)
262   (LOAD 2)
263   (CDR)
264   (CDR)
265   (CDR&PUSH)
266   (CALLS1 170)                        ; RPLACD
268   (JMP L281)
270   L270
270   (UNBIND1)
271   L271
271   (LOAD 1)
272   (CDR)
273   (CDR&PUSH)
274   (LOAD&PUSH 1)
275   (CALLS1 168)                        ; RPLACA
277   L277
277   (LOAD 1)
278   (CDR)
279   (CDR)
280   (STORE 1)
281   L281
281   (GETVALUE 0)                        ; Y
283   (CDR)
284   (CDR)
285   (SETVALUE 0)                        ; Y
287   (JMPIFNOT L394)
290   (GETVALUE 2)                        ; *X*
292   (CDR)
293   (CAR&PUSH)
294   (GETVALUE 0)                        ; Y
296   (CDR)
297   (CAR&PUSH)
298   (GETVALUE&PUSH 3)                   ; WTSOFAR
300   (GETVALUE&PUSH 4)                   ; XWEIGHT
302   (GETVALUE 2)                        ; *X*
304   (CAR&PUSH)
305   (GETVALUE 0)                        ; Y
307   (CAR&PUSH)
308   (CALLSR&STORE 2 53 6)               ; +
312   (PUSH)
313   (CALLSR&PUSH 2 55)                  ; *
316   (CALLSR&PUSH 2 53)                  ; +
319   (CALL 3 5)                          ; WTPTIMES
322   (STORE 0)
323   (BIND 6)                            ; X
325   (GETVALUE&PUSH 6)                   ; X
327   (CALL1&JMPIF 7 L339)                ; FIXNUMP
330   (GETVALUE 6)                        ; X
332   (JMPIFCONSP L355)
334   (GETVALUE&PUSH 6)                   ; X
336   (CALLS2&JMPIFNOT 15 L349)           ; FLOATP
339   L339
339   (GETVALUE&PUSH 6)                   ; X
341   (CALLS2 145)                        ; ZEROP
343   (UNBIND1)
344   (JMPIFNOT L356)
346   (JMP L281)
349   L349
349   (UNBIND1)
350   (JMPIFNOT L356)
352   (JMP L281)
355   L355
355   (UNBIND1)
356   L356
356   (LOAD 1)
357   (CDR)
358   (JMPIFNOT L213)
361   (LOAD 1)
362   (CDR)
363   (CAR&PUSH)
364   (LOAD&PUSH 3)
365   (CALLSR&JMPIFNOT 1 48 L213)         ; >
370   (LOAD 1)
371   (CDR)
372   (CDR)
373   (STORE 1)
374   (JMP L356)
376   L376
376   (UNBIND1)
377   L377
377   (GETVALUE 8)                        ; V
379   (CDR&PUSH)
380   (LOAD&PUSH 1)
381   (CALLS1 168)                        ; RPLACA
383   L383
383   (GETVALUE 0)                        ; Y
385   (CDR)
386   (CDR)
387   (SETVALUE 0)                        ; Y
389   (GETVALUE 0)                        ; Y
391   (JMPIF L11)
394   L394
394   (NIL)
395   (SKIP 3)
397   (UNBIND1)
398   (SKIP&RET 2)


Disassembly of function #:|(DEFUN WTPCTIMES (C P) ...)-50|
(CONST 0) = WTPCTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE WTPCTIMES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; WTPCTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; WTPCTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE WTPCTIMES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; WTPCTIMES
8     (SKIP&RET 1)


Disassembly of function WTPCTIMES
(CONST 0) = P
(CONST 1) = CTIMES
(CONST 2) = PWEIGHT
(CONST 3) = WTPCTIMES1
(CONST 4) = PSIMP
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
22 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (GETVALUE 0)                        ; P
5     (JMPIFATOM L27)
7     (GETVALUE 0)                        ; P
9     (CAR&PUSH)
10    (LOAD&PUSH 6)
11    (GETVALUE 0)                        ; P
13    (CDR&PUSH)
14    (GETVALUE 0)                        ; P
16    (CAR&PUSH)
17    (CALL1&PUSH 2)                      ; PWEIGHT
19    (CALL&PUSH 3 3)                     ; WTPCTIMES1
22    (CALL2 4)                           ; PSIMP
24    L24
24    (UNBIND1)
25    (SKIP&RET 3)
27    L27
27    (LOAD&PUSH 5)
28    (GETVALUE&PUSH 0)                   ; P
30    (CALL2 1)                           ; CTIMES
32    (JMP L24)


Disassembly of function #:|(DEFUN WTPCTIMES1 (C X XWT) ...)-51|
(CONST 0) = WTPCTIMES1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE WTPCTIMES1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; WTPCTIMES1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; WTPCTIMES1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE WTPCTIMES1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; WTPCTIMES1
8     (SKIP&RET 1)


Disassembly of function WTPCTIMES1
(CONST 0) = X
(CONST 1) = WTSOFAR
(CONST 2) = WTPTIMES
(CONST 3) = FIXNUMP
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (WTSOFAR X)
65 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (NIL&PUSH)
4     (GETVALUE 0)                        ; X
6     (JMPIFNOT L54)
8     (LOAD&PUSH 7)
9     (GETVALUE 0)                        ; X
11    (CDR)
12    (CAR&PUSH)
13    (GETVALUE&PUSH 1)                   ; WTSOFAR
15    (LOAD&PUSH 8)
16    (GETVALUE 0)                        ; X
18    (CAR&PUSH)
19    (CALLSR&PUSH 2 55)                  ; *
22    (CALLSR&PUSH 2 53)                  ; +
25    (CALL 3 2)                          ; WTPTIMES
28    (STORE 0)
29    (BIND 0)                            ; X
31    (GETVALUE&PUSH 0)                   ; X
33    (CALL1&JMPIF 3 L45)                 ; FIXNUMP
36    (GETVALUE 0)                        ; X
38    (JMPIFCONSP L75)
40    (GETVALUE&PUSH 0)                   ; X
42    (CALLS2&JMPIFNOT 15 L59)            ; FLOATP
45    L45
45    (GETVALUE&PUSH 0)                   ; X
47    (CALLS2 145)                        ; ZEROP
49    (UNBIND1)
50    (JMPIFNOT L76)
52    (JMP L62)
54    L54
54    (NIL)
55    (SKIP 1)
57    (JMP L93)
59    L59
59    (UNBIND1)
60    (JMPIFNOT L76)
62    L62
62    (LOAD&PUSH 7)
63    (GETVALUE 0)                        ; X
65    (CDR)
66    (CDR&PUSH)
67    (LOAD&PUSH 7)
68    (JSR L0)
71    (SKIP 1)
73    (JMP L93)
75    L75
75    (UNBIND1)
76    L76
76    (GETVALUE 0)                        ; X
78    (CAR&PUSH)
79    (LOAD&PUSH 1)
80    (LOAD&PUSH 9)
81    (GETVALUE 0)                        ; X
83    (CDR)
84    (CDR&PUSH)
85    (LOAD&PUSH 9)
86    (JSR L0)
89    (CONS)
90    (CONS)
91    (SKIP 1)
93    L93
93    (UNBIND1)
94    (SKIP&RET 4)


Disassembly of function #:|(DEFUN WTPEXPT (X N) ...)-52|
(CONST 0) = WTPEXPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE WTPEXPT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; WTPEXPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; WTPEXPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE WTPEXPT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; WTPEXPT
8     (SKIP&RET 1)


Disassembly of function WTPEXPT
(CONST 0) = X
(CONST 1) = 0
(CONST 2) = 1
(CONST 3) = WTPTIMES
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
24 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD&PUSH 4)
4     (CONST&PUSH 1)                      ; 0
5     (CALLSR&JMPIF 1 45 L30)             ; =
9     (LOAD&PUSH 4)
10    (CONST&PUSH 2)                      ; 1
11    (CALLSR&JMPIF 1 45 L33)             ; =
15    (GETVALUE&PUSH 0)                   ; X
17    (GETVALUE&PUSH 0)                   ; X
19    (LOAD&DEC&PUSH 6)
21    (JSR&PUSH L0)
23    (CONST&PUSH 1)                      ; 0
24    (CALL 3 3)                          ; WTPTIMES
27    L27
27    (UNBIND1)
28    (SKIP&RET 3)
30    L30
30    (CONST 2)                           ; 1
31    (JMP L27)
33    L33
33    (GETVALUE 0)                        ; X
35    (JMP L27)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE HORNER))-53|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $HORNER NARGS ...)-54|
(CONST 0) = $HORNER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $HORNER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $HORNER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $HORNER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $HORNER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $HORNER
8     (SKIP&RET 1)


Disassembly of function $HORNER
(CONST 0) = 0
(CONST 1) = $HORNER
(CONST 2) = WNA-ERR
(CONST 3) = $RATVARS
(CONST 4) = 1
(CONST 5) = NARG1
(CONST 6) = TAYCHK2RAT
(CONST 7) = LISTIFY1
(CONST 8) = L
(CONST 9) = $RATFAC
(CONST 10) = VARLIST
(CONST 11) = GENVAR
(CONST 12) = X
(CONST 13) = MBAGP
(CONST 14) = $RAT
(CONST 15) = Y
(CONST 16) = DISREP
(CONST 17) = PUTPROP
(CONST 18) = HORNREP
(CONST 19) = DIV*
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (Y X L $RATVARS)
writes special variable : (X)
109 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (LOAD&PUSH 0)
4     (CONST&PUSH 0)                      ; 0
5     (CALLSR&JMPIFNOT 1 45 L12)          ; =
9     (CONST&PUSH 1)                      ; $HORNER
10    (CALL1 2)                           ; WNA-ERR
12    L12
12    (NIL&PUSH)
13    (GETVALUE 3)                        ; $RATVARS
15    (CDR&PUSH)
16    (PUSH-NIL 2)
18    (CONST&PUSH 4)                      ; 1
19    (LOAD&PUSH 7)
20    (CALL2&PUSH 5)                      ; NARG1
22    (CALL1&PUSH 6)                      ; TAYCHK2RAT
24    (LOAD&PUSH 5)
25    (LOAD&PUSH 8)
26    (CALL2 7)                           ; LISTIFY1
28    (CDR)
29    (BIND 8)                            ; L
31    (LOAD 7)
32    (BIND 9)                            ; $RATFAC
34    (LOAD 9)
35    (BIND 10)                           ; VARLIST
37    (LOAD 11)
38    (BIND 11)                           ; GENVAR
40    (LOAD 13)
41    (BIND 12)                           ; X
43    (LOAD&PUSH 15)
44    (CALL1&JMPIF 13 L70)                ; MBAGP
47    (CONST&PUSH 14)                     ; $RAT
48    (LOAD&PUSH 16)
49    (GETVALUE 8)                        ; L
51    (CONS)
52    (APPLY 0)
54    (SETVALUE 12)                       ; X
56    (CAR)
57    (CDR)
58    (CDR)
59    (CDR)
60    (CAR&PUSH)
61    (LOAD&PUSH 0)
62    (GETVALUE 12)                       ; X
64    (CAR)
65    (CDR)
66    (CDR)
67    (CAR&PUSH)
68    (JMP L129)
70    L70
70    (LOAD&CAR&PUSH 15)
72    (NIL&PUSH)
73    (LOAD&CDR&PUSH 17)
75    (JMP L92)
77    L77
77    (LOAD&CAR&PUSH 0)
79    (CONST&PUSH 1)                      ; $HORNER
80    (LOAD&PUSH 1)
81    (GETVALUE 8)                        ; L
83    (CONS)
84    (APPLY&PUSH 0)
86    (LOAD&CONS&STORE 2)
88    (SKIP 1)
90    (LOAD&CDR&STORE 0)
92    L92
92    (LOAD&PUSH 0)
93    (CALLS1&JMPIFNOT 146 L77)           ; ENDP
96    (SKIP 1)
98    (LOAD&PUSH 0)
99    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
101   (SKIP 1)
103   (CONS)
104   (JMP L157)
106   L106
106   (SKIP 2)
108   (JMP L141)
110   L110
110   (LOAD&CAR&PUSH 1)
112   (LOAD 1)
113   (BIND 15)                           ; Y
115   (GETVALUE&PUSH 15)                  ; Y
117   (LOAD&PUSH 4)
118   (CONST&PUSH 16)                     ; DISREP
119   (CALL 3 17)                         ; PUTPROP
122   (UNBIND1)
123   (SKIP 2)
125   (LOAD&CDR&STORE 1)
127   (LOAD&CDR&STORE 0)
129   L129
129   (LOAD&PUSH 1)
130   (CALLS1&JMPIF 146 L106)             ; ENDP
133   (LOAD&CAR&PUSH 1)
135   (LOAD&PUSH 1)
136   (CALLS1&JMPIFNOT 146 L110)          ; ENDP
139   (SKIP 3)
141   L141
141   (SKIP 1)
143   (GETVALUE 12)                       ; X
145   (CDR)
146   (CAR&PUSH)
147   (CALL1&PUSH 18)                     ; HORNREP
149   (GETVALUE 12)                       ; X
151   (CDR)
152   (CDR&PUSH)
153   (CALL1&PUSH 18)                     ; HORNREP
155   (CALL2 19)                          ; DIV*
157   L157
157   (UNBIND 5)
159   (SKIP&RET 8)


Disassembly of function #:|(DEFUN HORNREP (P) ...)-55|
(CONST 0) = HORNREP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE HORNREP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; HORNREP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; HORNREP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE HORNREP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; HORNREP
8     (SKIP&RET 1)


Disassembly of function HORNREP
(CONST 0) = P
(CONST 1) = DISREP
(CONST 2) = HORN+
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
18 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (GETVALUE 0)                        ; P
5     (JMPIFATOM L23)
7     (GETVALUE 0)                        ; P
9     (CDR&PUSH)
10    (GETVALUE 0)                        ; P
12    (CAR&PUSH)
13    (CONST&PUSH 1)                      ; DISREP
14    (PUSH-UNBOUND 1)
16    (CALLS2&PUSH 132)                   ; GET
18    (CALL2 2)                           ; HORN+
20    L20
20    (UNBIND1)
21    (SKIP&RET 2)
23    L23
23    (GETVALUE 0)                        ; P
25    (JMP L20)


Disassembly of function #:|(DEFUN HORN+ (L VAR) ...)-56|
(CONST 0) = HORN+
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE HORN+>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; HORN+
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; HORN+
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE HORN+>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; HORN+
8     (SKIP&RET 1)


Disassembly of function HORN+
(CONST 0) = L
(CONST 1) = VAR
(CONST 2) = HORNREP
(CONST 3) = 0
(CONST 4) = (MTIMES)
(CONST 5) = (MEXPT)
(CONST 6) = (MPLUS)
(CONST 7) = (MTIMES)
(CONST 8) = (MEXPT)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VAR L)
writes special variable : (L)
55 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; L
3     (LOAD 4)
4     (BIND 1)                            ; VAR
6     (PUSH-NIL 2)
8     (GETVALUE 0)                        ; L
10    (CDR)
11    (CAR&PUSH)
12    (CALL1 2)                           ; HORNREP
14    (STORE 1)
15    (JMP L48)
17    L17
17    (LOAD 1)
18    (SKIP 2)
20    (JMP L76)
22    L22
22    (CONST&PUSH 6)                      ; (MPLUS)
23    (GETVALUE 0)                        ; L
25    (CDR)
26    (CAR&PUSH)
27    (CALL1&PUSH 2)                      ; HORNREP
29    (CONST&PUSH 7)                      ; (MTIMES)
30    (CONST&PUSH 8)                      ; (MEXPT)
31    (GETVALUE&PUSH 1)                   ; VAR
33    (LOAD&PUSH 5)
34    (GETVALUE 0)                        ; L
36    (CAR&PUSH)
37    (CALLSR&PUSH 1 54)                  ; -
40    (LIST&PUSH 3)
42    (LOAD&PUSH 5)
43    (LIST&PUSH 3)
45    (LIST 3)
47    (STORE 1)
48    L48
48    (GETVALUE 0)                        ; L
50    (CAR)
51    (STORE 0)
52    (GETVALUE 0)                        ; L
54    (CDR)
55    (CDR)
56    (SETVALUE 0)                        ; L
58    (JMPIF L22)
60    (LOAD&PUSH 0)
61    (JMPIFEQTO 3 L17)                   ; 0
64    (CONST&PUSH 4)                      ; (MTIMES)
65    (CONST&PUSH 5)                      ; (MEXPT)
66    (GETVALUE&PUSH 1)                   ; VAR
68    (LOAD&PUSH 3)
69    (LIST&PUSH 3)
71    (LOAD&PUSH 3)
72    (LIST 3)
74    (SKIP 2)
76    L76
76    (UNBIND 2)
78    (SKIP&RET 3)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE PFRAC) (SPECIAL Y RISCHPF ...))-57|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (*LEXPR PARTFRAC))-58|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $PARTFRAC (EXP VAR) ...)-59|
(CONST 0) = $PARTFRAC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $PARTFRAC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $PARTFRAC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $PARTFRAC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $PARTFRAC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $PARTFRAC
8     (SKIP&RET 1)


Disassembly of function $PARTFRAC
(CONST 0) = EXP
(CONST 1) = VAR
(CONST 2) = (MEQUAL MLIST $MATRIX)
(CONST 3) = MEMQ
(CONST 4) = AMONG
(CONST 5) = $SAVEFACTORS
(CONST 6) = CHECKFACTORS
(CONST 7) = VARLIST
(CONST 8) = $RATFAC
(CONST 9) = $ALGEBRAIC
(CONST 10) = RATFORM
(CONST 11) = GENVAR
(CONST 12) = TAYCHK2RAT
(CONST 13) = RATF
(CONST 14) = PARTFRAC
(CONST 15) = PARTFRACA
(CONST 16) = DISREP
(CONST 17) = (MPLUS)
(CONST 18) = L
(CONST 19) = (MTIMES)
(CONST 20) = (MEXPT)
(CONST 21) = ADD2*
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L VAR EXP)
writes special variables : (VAR RATFORM EXP)
142 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; EXP
3     (LOAD 4)
4     (BIND 1)                            ; VAR
6     (GETVALUE 0)                        ; EXP
8     (JMPIFATOM L19)
10    (GETVALUE 0)                        ; EXP
12    (CAR)
13    (CAR&PUSH)
14    (CONST&PUSH 2)                      ; (MEQUAL MLIST $MATRIX)
15    (CALL2&JMPIF 3 L109)                ; MEMQ
19    L19
19    (GETVALUE 1)                        ; VAR
21    (JMPIFCONSP L31)
23    (GETVALUE&PUSH 1)                   ; VAR
25    (GETVALUE&PUSH 0)                   ; EXP
27    (CALL2&JMPIFNOT 4 L147)             ; AMONG
31    L31
31    (T)
32    (BIND 5)                            ; $SAVEFACTORS
34    (NIL)
35    (BIND 6)                            ; CHECKFACTORS
37    (GETVALUE&PUSH 1)                   ; VAR
39    (LIST 1)
41    (BIND 7)                            ; VARLIST
43    (NIL)
44    (BIND 8)                            ; $RATFAC
46    (NIL)
47    (BIND 9)                            ; $ALGEBRAIC
49    (NIL)
50    (BIND 10)                           ; RATFORM
52    (NIL)
53    (BIND 11)                           ; GENVAR
55    (GETVALUE&PUSH 0)                   ; EXP
57    (CALL1 12)                          ; TAYCHK2RAT
59    (SETVALUE 0)                        ; EXP
61    (CAR)
62    (SETVALUE 10)                       ; RATFORM
64    (GETVALUE 0)                        ; EXP
66    (CDR)
67    (SETVALUE 0)                        ; EXP
69    (GETVALUE&PUSH 1)                   ; VAR
71    (CALL1 13)                          ; RATF
73    (CDR)
74    (CAR)
75    (CAR)
76    (SETVALUE 1)                        ; VAR
78    (GETVALUE&PUSH 0)                   ; EXP
80    (GETVALUE&PUSH 1)                   ; VAR
82    (CALL2 14)                          ; PARTFRAC
84    (SETVALUE 0)                        ; EXP
86    (CAR&PUSH)
87    (CONST&SYMBOL-FUNCTION&PUSH 15)     ; PARTFRACA
89    (GETVALUE 0)                        ; EXP
91    (CDR&PUSH)
92    (CALLSR 0 26)                       ; MAPCAN
95    (CONS)
96    (SETVALUE 0)                        ; EXP
98    (CAR&PUSH)
99    (CALL1&PUSH 16)                     ; DISREP
101   (CONST&PUSH 17)                     ; (MPLUS)
102   (NIL&PUSH)
103   (GETVALUE 0)                        ; EXP
105   (CDR&PUSH)
106   (JMP L208)
109   L109
109   (GETVALUE 0)                        ; EXP
111   (CAR&PUSH)
112   (NIL&PUSH)
113   (GETVALUE 0)                        ; EXP
115   (CDR&PUSH)
116   (JMP L132)
118   L118
118   (LOAD&CAR&PUSH 0)
120   (LOAD&PUSH 0)
121   (GETVALUE&PUSH 1)                   ; VAR
123   (JSR&PUSH L0)
126   (LOAD&CONS&STORE 2)
128   (SKIP 1)
130   (LOAD&CDR&STORE 0)
132   L132
132   (LOAD&PUSH 0)
133   (CALLS1&JMPIFNOT 146 L118)          ; ENDP
136   (SKIP 1)
138   (LOAD&PUSH 0)
139   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
141   (SKIP 1)
143   (CONS)
144   (JMP L224)
147   L147
147   (GETVALUE 0)                        ; EXP
149   (JMP L224)
152   L152
152   (LOAD&CAR&PUSH 0)
154   (LOAD 0)
155   (BIND 18)                           ; L
157   (PUSH-NIL 2)
159   (GETVALUE 18)                       ; L
161   (BIND 0)                            ; EXP
163   (GETVALUE 0)                        ; EXP
165   (CAR)
166   (STORE 4)
167   (GETVALUE 0)                        ; EXP
169   (CDR)
170   (SETVALUE 0)                        ; EXP
172   (CAR)
173   (STORE 3)
174   (GETVALUE 0)                        ; EXP
176   (CDR)
177   (CAR)
178   (SETVALUE 0)                        ; EXP
180   (CONST&PUSH 19)                     ; (MTIMES)
181   (LOAD&PUSH 5)
182   (CALL1&PUSH 16)                     ; DISREP
184   (CONST&PUSH 20)                     ; (MEXPT)
185   (LOAD&PUSH 6)
186   (CALL1&PUSH 16)                     ; DISREP
188   (GETVALUE&PUSH 0)                   ; EXP
190   (CALLSR&PUSH 0 54)                  ; -
193   (LIST&PUSH 3)
195   (LIST 3)
197   (UNBIND1)
198   (SKIP 2)
200   (UNBIND1)
201   (PUSH)
202   (LOAD&CONS&STORE 2)
204   (SKIP 1)
206   (LOAD&CDR&STORE 0)
208   L208
208   (LOAD&PUSH 0)
209   (CALLS1&JMPIFNOT 146 L152)          ; ENDP
212   (SKIP 1)
214   (LOAD&PUSH 0)
215   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
217   (SKIP 1)
219   (CONS&PUSH)
220   (CALL2 21)                          ; ADD2*
222   (UNBIND 7)
224   L224
224   (UNBIND 2)
226   (SKIP&RET 3)


Disassembly of function #:|(DEFUN PARTFRACA (LLIST) ...)-60|
(CONST 0) = PARTFRACA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PARTFRACA>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PARTFRACA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PARTFRACA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PARTFRACA>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PARTFRACA
8     (SKIP&RET 1)


Disassembly of function PARTFRACA
(CONST 0) = EXP
(CONST 1) = RATDIVIDE
(CONST 2) = N
(CONST 3) = X
(CONST 4) = FIXNUMP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (N X EXP)
writes special variables : (N EXP)
69 byte-code instructions:
0     (PUSH-NIL 2)
2     (LOAD 3)
3     (BIND 0)                            ; EXP
5     (GETVALUE 0)                        ; EXP
7     (CAR)
8     (STORE 4)
9     (GETVALUE 0)                        ; EXP
11    (CDR)
12    (SETVALUE 0)                        ; EXP
14    (CAR)
15    (STORE 3)
16    (GETVALUE 0)                        ; EXP
18    (CDR)
19    (CAR)
20    (SETVALUE 0)                        ; EXP
22    (LOAD&PUSH 4)
23    (LOAD&PUSH 4)
24    (CALL2&PUSH 1)                      ; RATDIVIDE
26    (GETVALUE 0)                        ; EXP
28    (BIND 2)                            ; N
30    (NIL&PUSH)
31    L31
31    (LOAD 4)
32    (CAR)
33    (CAR)
34    (BIND 3)                            ; X
36    (GETVALUE&PUSH 3)                   ; X
38    (CALL1&JMPIF 4 L50)                 ; FIXNUMP
41    (GETVALUE 3)                        ; X
43    (JMPIFCONSP L59)
45    (GETVALUE&PUSH 3)                   ; X
47    (CALLS2&JMPIFNOT 15 L83)            ; FLOATP
50    L50
50    (GETVALUE&PUSH 3)                   ; X
52    (CALLS2 145)                        ; ZEROP
54    (UNBIND1)
55    (JMPIFNOT L60)
57    (JMP L86)
59    L59
59    (UNBIND1)
60    L60
60    (LOAD&CDR&PUSH 4)
62    (LOAD&PUSH 9)
63    (GETVALUE&PUSH 2)                   ; N
65    (LIST&PUSH 3)
67    (LOAD&CONS&STORE 0)
69    (LOAD&CAR&PUSH 4)
71    (LOAD&PUSH 9)
72    (CALL2 1)                           ; RATDIVIDE
74    (STORE 4)
75    (GETVALUE&PUSH 2)                   ; N
77    (CALLS2 151)                        ; 1-
79    (SETVALUE 2)                        ; N
81    (JMP L31)
83    L83
83    (UNBIND1)
84    (JMPIFNOT L60)
86    L86
86    (LOAD&CDR&PUSH 4)
88    (LOAD&PUSH 9)
89    (GETVALUE&PUSH 2)                   ; N
91    (LIST&PUSH 3)
93    (LOAD 1)
94    (CONS)
95    (SKIP 1)
97    (UNBIND1)
98    (SKIP 1)
100   (UNBIND1)
101   (SKIP&RET 4)


Disassembly of function #:|(DEFUN PARTFRAC (RAT VAR &OPTIONAL ...) ...)-61|
(CONST 0) = PARTFRAC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PARTFRAC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PARTFRAC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PARTFRAC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PARTFRAC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PARTFRAC
8     (SKIP&RET 1)


Disassembly of function PARTFRAC
(CONST 0) = VAR
(CONST 1) = PDIVIDE
(CONST 2) = WHOLEPART
(CONST 3) = RATQU
(CONST 4) = NUM
(CONST 5) = X
(CONST 6) = FIXNUMP
(CONST 7) = B
(CONST 8) = OLDCONTENT
(CONST 9) = PFACTOR
(CONST 10) = Y
(CONST 11) = PARNUMER
(CONST 12) = PDEGREE
(CONST 13) = PEXPT
(CONST 14) = PQUOTIENT
(CONST 15) = BPROG
(CONST 16) = RATTI
(CONST 17) = RATDIVIDE
2 required arguments
1 optional argument
No rest parameter
No keyword parameters
reads special variables: (PARNUMER Y B VAR WHOLEPART X NUM)
writes special variables : (PARNUMER Y NUM WHOLEPART)
162 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; VAR
3     (UNBOUND->NIL 4)
5     (NIL&PUSH)
6     (LOAD&CAR&PUSH 7)
8     (LOAD&CDR&PUSH 8)
10    (CALL2&PUSH 1)                      ; PDIVIDE
12    (LOAD 1)
13    (BIND 2)                            ; WHOLEPART
15    (LOAD 3)
16    (CAR)
17    (SETVALUE 2)                        ; WHOLEPART
19    (LOAD 3)
20    (CDR)
21    (CAR)
22    (STORE 3)
23    (NIL&PUSH)
24    (LOAD&PUSH 4)
25    (LOAD&CDR&PUSH 13)
27    (CALL2&PUSH 3)                      ; RATQU
29    (LOAD 1)
30    (BIND 4)                            ; NUM
32    (LOAD 3)
33    (CAR)
34    (SETVALUE 4)                        ; NUM
36    (LOAD&CDR&STORE 3)
38    (GETVALUE 4)                        ; NUM
40    (BIND 5)                            ; X
42    (GETVALUE&PUSH 5)                   ; X
44    (CALL1&JMPIF 6 L56)                 ; FIXNUMP
47    (GETVALUE 5)                        ; X
49    (JMPIFCONSP L72)
51    (GETVALUE&PUSH 5)                   ; X
53    (CALLS2&JMPIFNOT 15 L65)            ; FLOATP
56    L56
56    (GETVALUE&PUSH 5)                   ; X
58    (CALLS2 145)                        ; ZEROP
60    (UNBIND1)
61    (JMPIFNOT L73)
63    (JMP L68)
65    L65
65    (UNBIND1)
66    (JMPIFNOT L73)
68    L68
68    (GETVALUE 2)                        ; WHOLEPART
70    (JMP L99)
72    L72
72    (UNBIND1)
73    L73
73    (LOAD 3)
74    (JMPIFATOM L97)
76    (GETVALUE&PUSH 0)                   ; VAR
78    (LOAD 4)
79    (CAR)
80    (BIND 7)                            ; B
82    (LOAD&PUSH 3)
83    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
85    (GETVALUE&PUSH 7)                   ; B
87    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
89    (CALLSR 1 48)                       ; >
92    (UNBIND1)
93    (SKIP 1)
95    (JMPIFNOT L105)
97    L97
97    (LOAD 16)
99    L99
99    (PUSH)
100   (NIL)
101   (CONS)
102   (JMP L235)
105   L105
105   (NIL&PUSH)
106   (LOAD&PUSH 4)
107   (CALL1&PUSH 8)                      ; OLDCONTENT
109   (LOAD&CAR&STORE 0 1)
112   (LOAD 0)
113   (CDR)
114   (CAR)
115   (STORE 0)
116   (LOAD&JMPIF 16 L122)
119   (LOAD&PUSH 0)
120   (CALL1 9)                           ; PFACTOR
122   L122
122   (PUSH)
123   (NIL&PUSH)
124   (NIL)
125   (BIND 10)                           ; Y
127   (NIL)
128   (BIND 11)                           ; PARNUMER
130   (LOAD&JMPIFNOT 7 L226)
134   L134
134   (LOAD&CAR&PUSH 7)
136   (GETVALUE&PUSH 0)                   ; VAR
138   (CALL2&PUSH 12)                     ; PDEGREE
140   (CALLS2&JMPIF 145 L218)             ; ZEROP
144   (LOAD&CAR&PUSH 7)
146   (LOAD 8)
147   (CDR)
148   (CAR&PUSH)
149   (CALL2 13)                          ; PEXPT
151   (STORE 6)
152   (LOAD&PUSH 8)
153   (LOAD&PUSH 7)
154   (CALL2 14)                          ; PQUOTIENT
156   (STORE 8)
158   (LOAD&PUSH 6)
159   (LOAD&PUSH 9)
160   (CALL2 15)                          ; BPROG
162   (SETVALUE 10)                       ; Y
164   (GETVALUE&PUSH 4)                   ; NUM
166   (GETVALUE 10)                       ; Y
168   (CDR&PUSH)
169   (T&PUSH)
170   (CALL&PUSH 3 16)                    ; RATTI
173   (LOAD&PUSH 7)
174   (CALL2 17)                          ; RATDIVIDE
176   (CDR)
177   (STORE 18)
179   (PUSH)
180   (LOAD&PUSH 10)
181   (CALL2&PUSH 3)                      ; RATQU
183   (LOAD&CAR&PUSH 8)
185   (LOAD 9)
186   (CDR)
187   (CAR&PUSH)
188   (LIST&PUSH 3)
190   (GETVALUE 11)                       ; PARNUMER
192   (CONS)
193   (SETVALUE 11)                       ; PARNUMER
195   (GETVALUE&PUSH 4)                   ; NUM
197   (GETVALUE 10)                       ; Y
199   (CAR&PUSH)
200   (T&PUSH)
201   (CALL&PUSH 3 16)                    ; RATTI
204   (LOAD&PUSH 10)
205   (CALL2&PUSH 3)                      ; RATQU
207   (LOAD&PUSH 9)
208   (CALL2 17)                          ; RATDIVIDE
210   (CDR)
211   (STORE 9)
213   (CAR)
214   (SETVALUE 4)                        ; NUM
216   (LOAD&CDR&STORE 9)
218   L218
218   (LOAD 7)
219   (CDR)
220   (CDR)
221   (STORE 7)
222   (LOAD&JMPIF 7 L134)
226   L226
226   (GETVALUE&PUSH 2)                   ; WHOLEPART
228   (GETVALUE 11)                       ; PARNUMER
230   (CONS)
231   (UNBIND 2)
233   (SKIP 4)
235   L235
235   (UNBIND1)
236   (SKIP 2)
238   (UNBIND1)
239   (SKIP 2)
241   (UNBIND1)
242   (SKIP&RET 4)


Disassembly of function #:|(DECLARE-TOP (UNSPECIAL EXP F ...))-62|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE RATDIF) (SPECIAL VARLIST GENVAR ...))-63|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $RATDIFF (P X) ...)-64|
(CONST 0) = $RATDIFF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $RATDIFF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $RATDIFF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $RATDIFF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $RATDIFF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $RATDIFF
8     (SKIP&RET 1)


Disassembly of function $RATDIFF
(CONST 0) = P
(CONST 1) = X
(CONST 2) = $RATP
(CONST 3) = TRUNC
(CONST 4) = MEMQ
(CONST 5) = $TAYTORAT
(CONST 6) = MINIMIZE-VARLIST
(CONST 7) = VARLIST
(CONST 8) = GENVAR
(CONST 9) = NEWVAR
(CONST 10) = #<COMPILED-CLOSURE $RATDIFF-1>
(CONST 11) = ANDMAPC
(CONST 12) = "RATDIFF variable is embedded in kernel"
(CONST 13) = MERROR
(CONST 14) = RATF
(CONST 15) = RATDERIVATIVE
(CONST 16) = $RATDISREP
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VARLIST X P)
writes special variables : (X P)
65 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (LOAD 4)
4     (BIND 1)                            ; X
6     (GETVALUE&PUSH 0)                   ; P
8     (CALL1&JMPIFNOT 2 L27)              ; $RATP
11    (CONST&PUSH 3)                      ; TRUNC
12    (GETVALUE 0)                        ; P
14    (CAR)
15    (CDR&PUSH)
16    (CALL2&JMPIF 4 L97)                 ; MEMQ
20    (GETVALUE 0)                        ; P
22    L22
22    (PUSH)
23    (CALL1 6)                           ; MINIMIZE-VARLIST
25    (SETVALUE 0)                        ; P
27    L27
27    (GETVALUE&PUSH 0)                   ; P
29    (CALL1&PUSH 2)                      ; $RATP
31    (NIL)
32    (BIND 7)                            ; VARLIST
34    (NIL)
35    (BIND 8)                            ; GENVAR
37    (GETVALUE&PUSH 1)                   ; X
39    (CALL1 9)                           ; NEWVAR
41    (GETVALUE&PUSH 0)                   ; P
43    (CALL1 9)                           ; NEWVAR
45    (CONST&PUSH 10)                     ; #<COMPILED-CLOSURE $RATDIFF-1>
46    (GETVALUE&PUSH 7)                   ; VARLIST
48    (CALL2&JMPIF 11 L54)                ; ANDMAPC
51    (CONST&PUSH 12)                     ; "RATDIFF variable is embedded in kernel"
52    (CALL1 13)                          ; MERROR
54    L54
54    (GETVALUE&PUSH 0)                   ; P
56    (CALL1 14)                          ; RATF
58    (SETVALUE 0)                        ; P
60    (GETVALUE&PUSH 1)                   ; X
62    (CALL1 14)                          ; RATF
64    (CDR)
65    (CAR)
66    (CAR)
67    (SETVALUE 1)                        ; X
69    (GETVALUE 0)                        ; P
71    (CAR&PUSH)
72    (GETVALUE 0)                        ; P
74    (CDR&PUSH)
75    (GETVALUE&PUSH 1)                   ; X
77    (CALL2 15)                          ; RATDERIVATIVE
79    (CONS)
80    (SETVALUE 0)                        ; P
82    (LOAD&JMPIF 6 L104)
85    (GETVALUE&PUSH 0)                   ; P
87    (CALL1 16)                          ; $RATDISREP
89    L89
89    (UNBIND 2)
91    (SKIP 1)
93    (UNBIND 2)
95    (SKIP&RET 3)
97    L97
97    (GETVALUE&PUSH 0)                   ; P
99    (CALL1 5)                           ; $TAYTORAT
101   (JMP L22)
104   L104
104   (GETVALUE 0)                        ; P
106   (JMP L89)


Disassembly of function $RATDIFF-1
(CONST 0) = EXP
(CONST 1) = X
(CONST 2) = ALIKE1
(CONST 3) = FREE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (EXP X)
12 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; EXP
3     (GETVALUE&PUSH 1)                   ; X
5     (GETVALUE&PUSH 0)                   ; EXP
7     (CALL2 2)                           ; ALIKE1
9     (JMPIF1 L17)
11    (GETVALUE&PUSH 0)                   ; EXP
13    (GETVALUE&PUSH 1)                   ; X
15    (CALL2 3)                           ; FREE
17    L17
17    (UNBIND1)
18    (SKIP&RET 2)


Disassembly of function #:|(DECLARE-TOP (UNSPECIAL X))-65|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE PFET) (SPECIAL $PFEFORMAT VARLIST ...))-66|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $PFET (M) ...)-67|
(CONST 0) = $PFET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $PFET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $PFET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $PFET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $PFET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $PFET
8     (SKIP&RET 1)


Disassembly of function $PFET
(CONST 0) = M
(CONST 1) = $PFEFORMAT
(CONST 2) = VARLIST
(CONST 3) = $FACTORFLAG
(CONST 4) = NEWVAR
(CONST 5) = PFET1
(CONST 6) = SIMPLIFY
(CONST 7) = MPLUS
(CONST 8) = (MPLUS)
(CONST 9) = $RATEXPAND
(CONST 10) = (MPLUS)
(CONST 11) = SSSQFR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VARLIST M)
writes special variables : (M $PFEFORMAT)
75 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; M
3     (NIL&PUSH)
4     (NIL)
5     (BIND 1)                            ; $PFEFORMAT
7     (NIL)
8     (BIND 2)                            ; VARLIST
10    (NIL)
11    (BIND 3)                            ; $FACTORFLAG
13    (T)
14    (SETVALUE 1)                        ; $PFEFORMAT
16    (GETVALUE&PUSH 0)                   ; M
18    (CALL1 4)                           ; NEWVAR
20    (GETVALUE 2)                        ; VARLIST
22    (STORE 9)
24    (PUSH)
25    (JMP L74)
27    L27
27    (GETVALUE 0)                        ; M
29    (JMP L99)
32    L32
32    (CONST&PUSH 8)                      ; (MPLUS)
33    (CONST&SYMBOL-FUNCTION&PUSH 9)      ; $RATEXPAND
35    (GETVALUE 0)                        ; M
37    (CDR&PUSH)
38    (CALLSR 0 22)                       ; MAPCAR
41    (CONS)
42    (JMP L99)
44    L44
44    (GETVALUE 0)                        ; M
46    (JMP L114)
49    L49
49    (CONST&PUSH 10)                     ; (MPLUS)
50    (CONST&SYMBOL-FUNCTION&PUSH 11)     ; SSSQFR
52    (GETVALUE 0)                        ; M
54    (CDR&PUSH)
55    (CALLSR 0 22)                       ; MAPCAR
58    (CONS)
59    (JMP L114)
61    L61
61    (LOAD&CAR&PUSH 0)
63    (GETVALUE&PUSH 0)                   ; M
65    (LOAD&PUSH 1)
66    (CALL2 5)                           ; PFET1
68    (SETVALUE 0)                        ; M
70    (SKIP 1)
72    (LOAD&CDR&STORE 0)
74    L74
74    (LOAD&PUSH 0)
75    (CALLS1&JMPIFNOT 146 L61)           ; ENDP
78    (SKIP 1)
80    (GETVALUE&PUSH 0)                   ; M
82    (CALL1 6)                           ; SIMPLIFY
84    (SETVALUE 0)                        ; M
86    (JMPIFATOM L27)
88    (GETVALUE 0)                        ; M
90    (CAR)
91    (CAR&PUSH)
92    (JMPIFEQTO 7 L32)                   ; MPLUS
95    (GETVALUE&PUSH 0)                   ; M
97    (CALL1 9)                           ; $RATEXPAND
99    L99
99    (SETVALUE 0)                        ; M
101   (JMPIFATOM L44)
103   (GETVALUE 0)                        ; M
105   (CAR)
106   (CAR&PUSH)
107   (JMPIFEQTO 7 L49)                   ; MPLUS
110   (GETVALUE&PUSH 0)                   ; M
112   (CALL1 11)                          ; SSSQFR
114   L114
114   (UNBIND 3)
116   (SKIP 1)
118   (UNBIND1)
119   (SKIP&RET 2)


Disassembly of function #:|(DEFUN SSSQFR (X) ...)-68|
(CONST 0) = SSSQFR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SSSQFR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SSSQFR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SSSQFR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SSSQFR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SSSQFR
8     (SKIP&RET 1)


Disassembly of function SSSQFR
(CONST 0) = X
(CONST 1) = DOSIMP
(CONST 2) = $SQFR
(CONST 3) = SIMPLIFY
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
9 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (T)
4     (BIND 1)                            ; DOSIMP
6     (GETVALUE&PUSH 0)                   ; X
8     (CALL1&PUSH 2)                      ; $SQFR
10    (CALL1 3)                           ; SIMPLIFY
12    (UNBIND 2)
14    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PFET1 (M V) ...)-69|
(CONST 0) = PFET1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PFET1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PFET1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PFET1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PFET1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PFET1
8     (SKIP&RET 1)


Disassembly of function PFET1
(CONST 0) = M
(CONST 1) = V
(CONST 2) = MPLUS
(CONST 3) = (MPLUS)
(CONST 4) = $PARTFRAC
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (V M)
42 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; M
3     (LOAD 4)
4     (BIND 1)                            ; V
6     (GETVALUE 0)                        ; M
8     (JMPIFATOM L27)
10    (GETVALUE 0)                        ; M
12    (CAR)
13    (CAR&PUSH)
14    (JMPIFEQTO 2 L31)                   ; MPLUS
17    (GETVALUE&PUSH 0)                   ; M
19    (GETVALUE&PUSH 1)                   ; V
21    (CALL2 4)                           ; $PARTFRAC
23    L23
23    (UNBIND 2)
25    (SKIP&RET 3)
27    L27
27    (GETVALUE 0)                        ; M
29    (JMP L23)
31    L31
31    (CONST&PUSH 3)                      ; (MPLUS)
32    (NIL&PUSH)
33    (GETVALUE 0)                        ; M
35    (CDR&PUSH)
36    (JMP L51)
38    L38
38    (LOAD&CAR&PUSH 0)
40    (LOAD&PUSH 0)
41    (GETVALUE&PUSH 1)                   ; V
43    (CALL2&PUSH 4)                      ; $PARTFRAC
45    (LOAD&CONS&STORE 2)
47    (SKIP 1)
49    (LOAD&CDR&STORE 0)
51    L51
51    (LOAD&PUSH 0)
52    (CALLS1&JMPIFNOT 146 L38)           ; ENDP
55    (SKIP 1)
57    (LOAD&PUSH 0)
58    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
60    (SKIP 1)
62    (CONS)
63    (JMP L23)


Disassembly of function #:|(DECLARE-TOP (UNSPECIAL M V))-70|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Wrote file binary-clisp/ratout.fas
Wrote file /cygdrive/e/temp/maxima/src/ratout.lis