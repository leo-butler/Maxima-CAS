Listing of compilation of file /cygdrive/e/temp/maxima/src/lesfac.lisp
on 2002-12-17 13:33:26 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/lesfac.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE LESFAC)-2|
(CONST 0) = LESFAC
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; LESFAC
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (GENPREFIX LSF) (SPECIAL *FNEWVARSW FACLIST ...))-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(LOAD-MACSYMA-MACROS RZMAC RATMAC)-4|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN NEWSYM2 (P E &AUX ...) ...)-5|
(CONST 0) = NEWSYM2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NEWSYM2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NEWSYM2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NEWSYM2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NEWSYM2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NEWSYM2
8     (SKIP&RET 1)


Disassembly of function NEWSYM2
(CONST 0) = DISREP
(CONST 1) = PUTPROP
(CONST 2) = GENVAR
(CONST 3) = VARLIST
(CONST 4) = UNHACKED
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VARLIST GENVAR)
writes special variables : (VARLIST GENVAR)
26 byte-code instructions:
0     (PUSH-UNBOUND 1)
2     (CALLS2&PUSH 143)                   ; GENSYM
4     (LOAD&PUSH 0)
5     (LOAD&PUSH 3)
6     (CONST&PUSH 0)                      ; DISREP
7     (CALL 3 1)                          ; PUTPROP
10    (LOAD&PUSH 0)
11    (GETVALUE 2)                        ; GENVAR
13    (CAR&PUSH)
14    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
16    (CALLS2&PUSH 151)                   ; 1-
18    (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
20    (LOAD&PUSH 0)
21    (GETVALUE 2)                        ; GENVAR
23    (CONS)
24    (SETVALUE 2)                        ; GENVAR
26    (LOAD&PUSH 2)
27    (GETVALUE 3)                        ; VARLIST
29    (CONS)
30    (SETVALUE 3)                        ; VARLIST
32    (LOAD&PUSH 0)
33    (LOAD&PUSH 4)
34    (CONST&PUSH 4)                      ; UNHACKED
35    (CALL 3 1)                          ; PUTPROP
38    (POP)
39    (SKIP&RET 3)


Disassembly of function #:|(DEFUN GETUNHACK (GEN) ...)-6|
(CONST 0) = GETUNHACK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GETUNHACK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GETUNHACK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GETUNHACK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GETUNHACK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GETUNHACK
8     (SKIP&RET 1)


Disassembly of function GETUNHACK
(CONST 0) = UNHACKED
(CONST 1) = PGET
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CONST&PUSH 0)                      ; UNHACKED
2     (PUSH-UNBOUND 1)
4     (CALLS2 132)                        ; GET
6     (JMPIF1 L13)
8     (LOAD&PUSH 1)
9     (CALL1 1)                           ; PGET
11    (SKIP&RET 2)
13    L13
13    (SKIP&RET 2)


Disassembly of function #:|(DEFMACRO GETDIS (X) ...)-7|
(CONST 0) = GETDIS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GETDIS>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; GETDIS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GETDIS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GETDIS>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; GETDIS
10    (SKIP&RET 1)


Disassembly of function GETDIS
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = GET
(CONST 4) = ('DISREP)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; GET
14    (GETVALUE&PUSH 2)                   ; X
16    (CONST 4)                           ; ('DISREP)
17    (LIST* 2)
19    (UNBIND1)
20    (SKIP&RET 3)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO CONS1 (X) ...)-8|
(CONST 0) = CONS1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CONS1>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONS1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CONS1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CONS1>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; CONS1
10    (SKIP&RET 1)


Disassembly of function CONS1
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = CONS
(CONST 4) = (1)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L22)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; CONS
14    (GETVALUE&PUSH 2)                   ; X
16    (CONST 4)                           ; (1)
17    (LIST* 2)
19    (UNBIND1)
20    (SKIP&RET 3)
22    L22
22    (LOAD&PUSH 2)
23    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
25    (SKIP&RET 3)


Disassembly of function #:|(DEFUN FRPOLY? (R) ...)-9|
(CONST 0) = FRPOLY?
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FRPOLY?>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FRPOLY?
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FRPOLY?
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FRPOLY?>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FRPOLY?
8     (SKIP&RET 1)


Disassembly of function FRPOLY?
(CONST 0) = 1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (LOAD&CDR&PUSH 1)
2     (CONST 0)                           ; 1
3     (EQ)
4     (SKIP&RET 2)


Disassembly of function #:|(DEFMACRO SETCALL (&REST L) ...)-10|
(CONST 0) = SETCALL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SETCALL>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SETCALL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SETCALL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SETCALL>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SETCALL
10    (SKIP&RET 1)


Disassembly of function SETCALL
(CONST 0) = SETCALL
(CONST 1) = FNCALL
(CONST 2) = A
(CONST 3) = B
(CONST 4) = (PROG1 (CAR (SETQ A FNCALL)) (SETQ B (CADDR A) A (CADR A)))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
25 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (CONST&PUSH 0)                      ; SETCALL
3     (LOAD&CONS&STORE 0)
5     (CONST&PUSH 1)                      ; FNCALL
6     (LOAD 1)
7     (CDR)
8     (CONS&PUSH)
9     (CONST&PUSH 2)                      ; A
10    (LOAD 2)
11    (CDR)
12    (CDR)
13    (CAR)
14    (CONS&PUSH)
15    (CONST&PUSH 3)                      ; B
16    (LOAD 3)
17    (CDR)
18    (CDR)
19    (CDR)
20    (CAR)
21    (CONS&PUSH)
22    (LIST&PUSH 3)
24    (CONST&PUSH 4)                      ; (PROG1 (CAR #) (SETQ B # A #))
25    (PUSH-UNBOUND 3)
27    (CALLS1 178)                        ; SUBLIS
29    (SKIP&RET 4)


Disassembly of function #:|(DEFUN PQUOCOF (P Q) ...)-11|
(CONST 0) = PQUOCOF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PQUOCOF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PQUOCOF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PQUOCOF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PQUOCOF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PQUOCOF
8     (SKIP&RET 1)


Disassembly of function PQUOCOF
(CONST 0) = TESTDIVIDE
(CONST 1) = 1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALL2&PUSH 0)                      ; TESTDIVIDE
4     (LOAD&JMPIF 0 L15)
7     (CONST&PUSH 1)                      ; 1
8     (LOAD&PUSH 4)
9     (LOAD 4)
10    L10
10    (PUSH)
11    (LIST 3)
13    (SKIP&RET 4)
15    L15
15    (LOAD&PUSH 2)
16    (LOAD&PUSH 1)
17    (CONST 1)                           ; 1
18    (JMP L10)


Disassembly of function #:|(DEFUN POLYST (A) ...)-12|
(CONST 0) = POLYST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POLYST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POLYST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POLYST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POLYST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POLYST
8     (SKIP&RET 1)


Disassembly of function POLYST
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
19 byte-code instructions:
0     L0
0     (LOAD 1)
1     (JMPIFATOM L18)
3     (LOAD&CAR&PUSH 1)
5     (LOAD 2)
6     (CDR)
7     (CAR)
8     (CONS&PUSH)
9     (LOAD 2)
10    (CDR)
11    (CDR)
12    (CAR&PUSH)
13    (JSR L0)
15    (CONS)
16    (SKIP&RET 2)
18    L18
18    (LOAD&PUSH 1)
19    (LIST 1)
21    (SKIP&RET 2)


Disassembly of function #:|(DEFUN CDINF (A B BOTH) ...)-13|
(CONST 0) = CDINF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CDINF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CDINF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CDINF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CDINF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CDINF
8     (SKIP&RET 1)


Disassembly of function CDINF
(CONST 0) = 1
(CONST 1) = CD1
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
36 byte-code instructions:
0     (LOAD 3)
1     (JMPIFATOM L35)
3     (LOAD 2)
4     (JMPIFATOM L35)
6     (LOAD&PUSH 3)
7     (CALLS1&PUSH 161)                   ; COPY-TREE
9     (NIL)
10    (CONS)
11    (STORE 3)
12    (LOAD&JMPIF 1 L40)
15    (LOAD 2)
16    L16
16    (PUSH)
17    (NIL)
18    (CONS)
19    (STORE 2)
20    (LOAD&PUSH 3)
21    (LOAD&PUSH 3)
22    (LOAD&PUSH 3)
23    (CALL&PUSH 3 1)                     ; CD1
26    (LOAD&CAR&PUSH 4)
28    (LOAD 4)
29    (CAR)
30    L30
30    (PUSH)
31    (LIST 3)
33    (SKIP&RET 4)
35    L35
35    (CONST&PUSH 0)                      ; 1
36    (LOAD&PUSH 4)
37    (LOAD 4)
38    (JMP L30)
40    L40
40    (LOAD&PUSH 2)
41    (CALLS1 161)                        ; COPY-TREE
43    (JMP L16)


Disassembly of function #:|(DEFUN CD1 (A B BOTH) ...)-14|
(CONST 0) = CD1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CD1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CD1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CD1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CD1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CD1
8     (SKIP&RET 1)


Disassembly of function CD1
(CONST 0) = 1
(CONST 1) = PGET
(CONST 2) = PEXPT
(CONST 3) = PTIMES
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
99 byte-code instructions:
0     L0
0     (LOAD 3)
1     (CAR)
2     (JMPIFATOM L47)
4     (LOAD 2)
5     (CAR)
6     (JMPIFATOM L47)
8     (LOAD 3)
9     (CAR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CAR)
13    (CAR)
14    (JMPIFEQ L73)
16    (LOAD 3)
17    (CAR)
18    (CAR&PUSH)
19    (LOAD 3)
20    (CAR)
21    (CAR&PUSH)
22    (LOAD&PUSH 1)
23    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
25    (LOAD&PUSH 1)
26    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
28    (CALLSR 1 48)                       ; >
31    (SKIP 2)
33    (JMPIF L114)
36    (LOAD&PUSH 3)
37    (LOAD 3)
38    (CAR)
39    (CDR)
40    (CDR)
41    L41
41    (PUSH)
42    (LOAD&PUSH 3)
43    (JMPTAIL 3 7 L0)
47    L47
47    (CONST 0)                           ; 1
48    (SKIP&RET 4)
50    L50
50    (LOAD 4)
51    (CAR)
52    (CDR)
53    (CAR&PUSH)
54    (LOAD 4)
55    (CAR)
56    (CDR)
57    (CAR&PUSH)
58    (CALLSR 2 53)                       ; +
61    (JMP L85)
63    L63
63    (LOAD&PUSH 4)
64    (LOAD 5)
65    (CAR)
66    (CDR)
67    (CDR)
68    (CAR&PUSH)
69    (CALLS1 168)                        ; RPLACA
71    (JMP L102)
73    L73
73    (LOAD 3)
74    (CAR)
75    (CAR&PUSH)
76    (CALL1&PUSH 1)                      ; PGET
78    (LOAD&JMPIF 2 L50)
81    (LOAD 4)
82    (CAR)
83    (CDR)
84    (CAR)
85    L85
85    (PUSH)
86    (LOAD&PUSH 5)
87    (LOAD 6)
88    (CAR)
89    (CDR)
90    (CDR)
91    (CAR&PUSH)
92    (CALLS1 168)                        ; RPLACA
94    (LOAD&JMPIF 3 L63)
97    (LOAD 4)
98    (CAR)
99    (CDR)
100   (CDR)
101   (STORE 4)
102   L102
102   (CALL2&PUSH 2)                      ; PEXPT
104   (LOAD&PUSH 4)
105   (LOAD&PUSH 4)
106   (LOAD&PUSH 4)
107   (JSR&PUSH L0)
110   (CALL2 3)                           ; PTIMES
112   (SKIP&RET 4)
114   L114
114   (LOAD 3)
115   (CAR)
116   (CDR)
117   (CDR&PUSH)
118   (LOAD 3)
119   (JMP L41)


Disassembly of function #:|(DEFUN LMAKE (P L) ...)-15|
(CONST 0) = LMAKE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LMAKE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LMAKE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LMAKE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LMAKE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LMAKE
8     (SKIP&RET 1)


Disassembly of function LMAKE
(CONST 0) = UNHACKED
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
41 byte-code instructions:
0     L0
0     (LOAD 2)
1     (JMPIFATOM L33)
3     (LOAD&CAR&PUSH 2)
5     (CONST&PUSH 0)                      ; UNHACKED
6     (PUSH-UNBOUND 1)
8     (CALLS2&JMPIF 132 L38)              ; GET
11    (LOAD 2)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (LOAD&PUSH 2)
16    (JSR L0)
18    (STORE 1)
19    (PUSH)
20    (LOAD&CAR&PUSH 3)
22    (LOAD 4)
23    (CDR)
24    (CAR&PUSH)
25    (LOAD&CAR&PUSH 4)
27    (LIST&PUSH 3)
29    (CALLS1 168)                        ; RPLACA
31    (SKIP&RET 3)
33    L33
33    (LOAD&PUSH 2)
34    (LOAD 2)
35    (CONS)
36    (SKIP&RET 3)
38    L38
38    (LOAD 2)
39    (CDR)
40    (CDR)
41    (CAR&PUSH)
42    (LOAD&CAR&PUSH 3)
44    (LOAD 4)
45    (CDR)
46    (CAR)
47    (CONS&PUSH)
48    (LOAD 3)
49    (CONS&PUSH)
50    (JMPTAIL 2 5 L0)


Disassembly of function #:|(DEFUN LMAKE2 (P L) ...)-16|
(CONST 0) = LMAKE2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LMAKE2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LMAKE2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LMAKE2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LMAKE2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LMAKE2
8     (SKIP&RET 1)


Disassembly of function LMAKE2
(CONST 0) = LMAKE
(CONST 1) = X
(CONST 2) = GETUNHACK
(CONST 3) = 1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
35 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALL2 0)                           ; LMAKE
4     (STORE 1)
5     (CDR&PUSH)
6     (LOAD&PUSH 0)
7     (JMP L32)
9     L9
9     (LOAD 1)
10    (CDR)
11    (SKIP&RET 3)
13    L13
13    (LOAD&CAR&PUSH 0)
15    (LOAD 0)
16    (BIND 1)                            ; X
18    (GETVALUE&PUSH 1)                   ; X
20    (GETVALUE 1)                        ; X
22    (CAR&PUSH)
23    (CALL1&PUSH 2)                      ; GETUNHACK
25    (CALLS1 168)                        ; RPLACA
27    (UNBIND1)
28    (SKIP 1)
30    (LOAD&CDR&STORE 0)
32    L32
32    (LOAD&PUSH 0)
33    (CALLS1&JMPIFNOT 146 L13)           ; ENDP
36    (SKIP 2)
38    (LOAD&CAR&PUSH 1)
40    (JMPIFEQTO 3 L9)                    ; 1
43    (LOAD&PUSH 1)
44    (LOAD&CAR&PUSH 2)
46    (CONST 3)                           ; 1
47    (CONS&PUSH)
48    (CALLS1 168)                        ; RPLACA
50    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PMAKE (L) ...)-17|
(CONST 0) = PMAKE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PMAKE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PMAKE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PMAKE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PMAKE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PMAKE
8     (SKIP&RET 1)


Disassembly of function PMAKE
(CONST 0) = 1
(CONST 1) = 0
(CONST 2) = CEXPT
(CONST 3) = PTIMES
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
42 byte-code instructions:
0     (LOAD&JMPIF 1 L25)
3     L3
3     (CONST 0)                           ; 1
4     (SKIP&RET 2)
6     L6
6     (LOAD&CDR&PUSH 1)
8     (JMPTAIL 1 3 L22)
12    L12
12    (LOAD 1)
13    (CAR)
14    (CAR&PUSH)
15    (LOAD 2)
16    (CAR)
17    (CDR&PUSH)
18    (CALL2 2)                           ; CEXPT
20    (JMP L48)
22    L22
22    (LOAD&JMPIFNOT 1 L3)
25    L25
25    (CONST&PUSH 1)                      ; 0
26    (LOAD 2)
27    (CAR)
28    (CDR&PUSH)
29    (CALLSR&JMPIF 1 45 L6)              ; =
33    (LOAD 1)
34    (CAR)
35    (CAR&PUSH)
36    (CALLS2&JMPIF 8 L12)                ; NUMBERP
39    (LOAD 1)
40    (CAR)
41    (CAR&PUSH)
42    (LOAD 2)
43    (CAR)
44    (CDR&PUSH)
45    (CONST&PUSH 0)                      ; 1
46    (LIST 3)
48    L48
48    (PUSH)
49    (LOAD&CDR&PUSH 2)
51    (JSR&PUSH L22)
53    (CALL2 3)                           ; PTIMES
55    (SKIP&RET 2)


Disassembly of function #:|(DEFUN FACMGCD (PL) ...)-18|
(CONST 0) = FACMGCD
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FACMGCD>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FACMGCD
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FACMGCD
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FACMGCD>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FACMGCD
8     (SKIP&RET 1)


Disassembly of function FACMGCD
(CONST 0) = FPGCDCO
(CONST 1) = 1
(CONST 2) = PTIMES
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
60 byte-code instructions:
0     (LOAD&CDR&PUSH 1)
2     (NIL&PUSH)
3     (LOAD&CAR&PUSH 3)
5     (LOAD&JMPIFNOT 2 L66)
8     L8
8     (LOAD&PUSH 0)
9     (LOAD&CAR&PUSH 3)
11    (CALL2 0)                           ; FPGCDCO
13    (STORE 0)
14    (CAR&PUSH)
15    (JMPIFEQTO 1 L73)                   ; 1
18    (LOAD&JMPIFNOT 1 L77)
21    (LOAD 0)
22    (CDR)
23    (CAR&PUSH)
24    (JMPIFEQTO 1 L48)                   ; 1
27    (LOAD&PUSH 1)
28    (LOAD&JMPIFNOT 0 L46)
31    L31
31    (LOAD&PUSH 0)
32    (LOAD 2)
33    (CDR)
34    (CAR&PUSH)
35    (LOAD&CAR&PUSH 2)
37    (CALL2&PUSH 2)                      ; PTIMES
39    (CALLS1 168)                        ; RPLACA
41    (LOAD&CDR&STORE 0)
43    (LOAD&JMPIF 0 L31)
46    L46
46    (SKIP 1)
48    L48
48    (LOAD&CDR&PUSH 2)
50    (LOAD 1)
51    (CDR)
52    (CDR)
53    (CAR&PUSH)
54    (LOAD 3)
55    (CONS&PUSH)
56    (LOAD&CAR&STORE 2 2)
59    (POP&STORE 2)
61    (POP&STORE 2)
63    (LOAD&JMPIF 2 L8)
66    L66
66    (LOAD&PUSH 0)
67    (LOAD&PUSH 2)
68    (CALLS2 73)                         ; NREVERSE
70    L70
70    (CONS)
71    (SKIP&RET 5)
73    L73
73    (CONST&PUSH 1)                      ; 1
74    (LOAD 5)
75    (JMP L70)
77    L77
77    (LOAD 0)
78    (CDR)
79    (CAR&PUSH)
80    (LIST 1)
82    (STORE 1)
83    (JMP L48)


Disassembly of function #:|(DEFUN FPGCDCO (P Q) ...)-19|
(CONST 0) = FPGCDCO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FPGCDCO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FPGCDCO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FPGCDCO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FPGCDCO>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FPGCDCO
8     (SKIP&RET 1)


Disassembly of function FPGCDCO
(CONST 0) = $RATFAC
(CONST 1) = PGCDCOFACTS
(CONST 2) = LMAKE
(CONST 3) = PMAKE
(CONST 4) = LGCD1
(CONST 5) = PTIMESCHK
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
57 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; $RATFAC
3     (NIL&PUSH)
4     (LOAD 6)
5     (JMPIFATOM L72)
8     (LOAD 5)
9     (JMPIFATOM L72)
11    (LOAD&PUSH 6)
12    (LOAD&PUSH 6)
13    (CALL2 1)                           ; PGCDCOFACTS
15    (STORE 6)
16    (CAR&PUSH)
17    (LOAD 7)
18    (CDR)
19    (CDR)
20    (CAR)
21    (STORE 6)
22    (LOAD 7)
23    (CDR)
24    (CAR)
25    (STORE 7)
26    (LOAD&PUSH 7)
27    (NIL&PUSH)
28    (CALL2 2)                           ; LMAKE
30    (STORE 7)
31    (LOAD&PUSH 6)
32    (NIL&PUSH)
33    (CALL2 2)                           ; LMAKE
35    (STORE 6)
36    (CONST&PUSH 3)                      ; PMAKE
37    (LOAD&CDR&PUSH 8)
39    (LOAD&CDR&PUSH 8)
41    (CALL2&PUSH 4)                      ; LGCD1
43    (CALLSR&STORE 0 22 1)               ; MAPCAR
47    (CAR&PUSH)
48    (CALL2&PUSH 5)                      ; PTIMESCHK
50    (LOAD&CAR&PUSH 7)
52    (LOAD 2)
53    (CDR)
54    (CAR&PUSH)
55    (CALL2&PUSH 5)                      ; PTIMESCHK
57    (LOAD&CAR&PUSH 7)
59    (LOAD 3)
60    (CDR)
61    (CDR)
62    (CAR&PUSH)
63    (CALL2&PUSH 5)                      ; PTIMESCHK
65    (LIST 3)
67    L67
67    (SKIP 1)
69    (UNBIND1)
70    (SKIP&RET 3)
72    L72
72    (LOAD&PUSH 6)
73    (LOAD&PUSH 6)
74    (CALL2 1)                           ; PGCDCOFACTS
76    (JMP L67)


Disassembly of function #:|(DEFUN LGCD1 (A B) ...)-20|
(CONST 0) = LGCD1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LGCD1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LGCD1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LGCD1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LGCD1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LGCD1
8     (SKIP&RET 1)


Disassembly of function LGCD1
(CONST 0) = X
(CONST 1) = GETUNHACK
(CONST 2) = 1
(CONST 3) = PIRREDP
(CONST 4) = PQUOCOF
(CONST 5) = PGCDCOFACTS
(CONST 6) = TESTDIVIDE
(CONST 7) = MAKPRODG
(CONST 8) = 0
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
243 byte-code instructions:
0     (PUSH-NIL 8)
2     (LOAD&PUSH 10)
3     (JMP L57)
5     L5
5     (CONST 2)                           ; 1
6     (JMP L134)
9     L9
9     (LOAD 0)
10    (CAR)
11    (CAR&PUSH)
12    (CALL1&JMPIF 3 L5)                  ; PIRREDP
15    (LOAD&PUSH 8)
16    (LOAD&PUSH 2)
17    (CALL2 4)                           ; PQUOCOF
19    (STORE 8)
21    (CAR&PUSH)
22    (LOAD 9)
23    (CDR)
24    (CDR)
25    (CAR)
26    (STORE 2)
27    (LOAD 9)
28    (CDR)
29    (CAR)
30    (STORE 9)
32    (POP)
33    (JMP L134)
36    L36
36    (LOAD&PUSH 1)
37    (LOAD&PUSH 9)
38    (CALL2 4)                           ; PQUOCOF
40    (JMP L121)
43    L43
43    (LOAD&CAR&PUSH 0)
45    (LOAD 0)
46    (BIND 0)                            ; X
48    (LOAD 14)
49    (UNBIND1)
50    (PUSH)
51    (LOAD&CONS&STORE 2)
53    (SKIP 1)
55    (LOAD&CDR&STORE 0)
57    L57
57    (LOAD&PUSH 0)
58    (CALLS1&JMPIFNOT 146 L43)           ; ENDP
61    (SKIP 1)
63    (LOAD&PUSH 0)
64    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
66    (SKIP 1)
68    (STORE 6)
69    (LOAD&PUSH 9)
70    (LOAD&PUSH 7)
71    (LOAD&JMPIFNOT 1 L342)
75    L75
75    (LOAD 1)
76    (CAR)
77    (CAR&PUSH)
78    (CALL1&PUSH 1)                      ; GETUNHACK
80    (LOAD&CAR&PUSH 1)
82    (LOAD&JMPIFNOT 0 L330)
86    L86
86    (LOAD 0)
87    (CAR)
88    (CDR&PUSH)
89    (CALLS2&JMPIF 145 L324)             ; ZEROP
93    (CONST 2)                           ; 1
94    (STORE 5)
95    (STORE 4)
96    (LOAD 0)
97    (CAR)
98    (CAR&PUSH)
99    (CALL1 1)                           ; GETUNHACK
101   (STORE 8)
103   (LOAD 3)
104   (CAR)
105   (CAR&PUSH)
106   (CALL1&JMPIF 3 L9)                  ; PIRREDP
110   (LOAD 0)
111   (CAR)
112   (CAR&PUSH)
113   (CALL1&JMPIF 3 L36)                 ; PIRREDP
117   (LOAD&PUSH 1)
118   (LOAD&PUSH 9)
119   (CALL2 5)                           ; PGCDCOFACTS
121   L121
121   (STORE 1)
122   (CAR&PUSH)
123   (LOAD 2)
124   (CDR)
125   (CDR)
126   (CAR)
127   (STORE 9)
129   (LOAD 2)
130   (CDR)
131   (CAR)
132   (STORE 2)
133   (POP)
134   L134
134   (STORE 7)
135   (PUSH)
136   (JMPIFEQTO 2 L324)                  ; 1
140   (LOAD&PUSH 1)
141   (JMPIFNOTEQTO 2 L154)               ; 1
144   (JMP L161)
146   L146
146   (SKIP 2)
148   (JMP L332)
151   L151
151   (STORE 1)
152   (LOAD&INC&STORE 5)
154   L154
154   (LOAD&PUSH 1)
155   (LOAD&PUSH 8)
156   (CALL2 6)                           ; TESTDIVIDE
158   (STORE 6)
159   (JMPIF L151)
161   L161
161   (LOAD&PUSH 5)
162   (CONST&PUSH 2)                      ; 1
163   (CALLSR&JMPIFNOT 1 45 L193)         ; =
167   (LOAD&PUSH 8)
168   (JMPIFEQTO 2 L193)                  ; 1
171   (LOAD&PUSH 8)
172   (LOAD&PUSH 8)
173   (CALL2&PUSH 6)                      ; TESTDIVIDE
175   (LOAD&JMPIFNOT 0 L191)
178   L178
178   (LOAD 0)
179   (STORE 9)
181   (LOAD&INC&STORE 5)
183   (LOAD&PUSH 9)
184   (LOAD&PUSH 9)
185   (CALL2 6)                           ; TESTDIVIDE
187   (STORE 0)
188   (LOAD&JMPIF 0 L178)
191   L191
191   (SKIP 1)
193   L193
193   (LOAD&PUSH 7)
194   (T&PUSH)
195   (CALL2&PUSH 7)                      ; MAKPRODG
197   (LOAD&PUSH 6)
198   (LOAD 5)
199   (CAR)
200   (CDR&PUSH)
201   (CALLSR&STORE 2 55 6)               ; *
205   (PUSH)
206   (LOAD&PUSH 6)
207   (LOAD 3)
208   (CAR)
209   (CDR&PUSH)
210   (CALLSR&STORE 2 55 6)               ; *
214   (PUSH)
215   (CALLSR 1 52)                       ; MIN
218   (CONS&PUSH)
219   (LOAD&CONS&STORE 9)
221   (LOAD&PUSH 5)
222   (LOAD 10)
223   (CAR)
224   (CDR&PUSH)
225   (CALLSR&JMPIFNOT 1 48 L260)         ; >
229   (LOAD&PUSH 3)
230   (PUSH-UNBOUND 1)
232   (CALLS1&PUSH 156)                   ; LAST
234   (LOAD 10)
235   (CAR)
236   (CAR&PUSH)
237   (LOAD&PUSH 7)
238   (LOAD 12)
239   (CAR)
240   (CDR&PUSH)
241   (CALLSR 1 54)                       ; -
244   (CONS&PUSH)
245   (NIL)
246   (CONS&PUSH)
247   (CALLS1 170)                        ; RPLACD
249   (LOAD&PUSH 2)
250   (PUSH-UNBOUND 1)
252   (CALLS1&PUSH 156)                   ; LAST
254   (LOAD&CDR&PUSH 1)
256   (NIL)
257   (CONS&PUSH)
258   (CALLS1 170)                        ; RPLACD
260   L260
260   (LOAD&PUSH 4)
261   (LOAD 10)
262   (CAR)
263   (CDR&PUSH)
264   (CALLSR&JMPIFNOT 1 48 L288)         ; >
268   (LOAD&PUSH 0)
269   (PUSH-UNBOUND 1)
271   (CALLS1&PUSH 156)                   ; LAST
273   (LOAD 10)
274   (CAR)
275   (CAR&PUSH)
276   (LOAD&PUSH 6)
277   (LOAD 12)
278   (CAR)
279   (CDR&PUSH)
280   (CALLSR 1 54)                       ; -
283   (CONS&PUSH)
284   (NIL)
285   (CONS&PUSH)
286   (CALLS1 170)                        ; RPLACD
288   L288
288   (LOAD&CAR&PUSH 3)
290   (LOAD&PUSH 2)
291   (T&PUSH)
292   (CALL2&PUSH 7)                      ; MAKPRODG
294   (CALLS1 168)                        ; RPLACA
296   (LOAD&CAR&PUSH 0)
298   (LOAD&PUSH 9)
299   (T&PUSH)
300   (CALL2&PUSH 7)                      ; MAKPRODG
302   (CALLS1 168)                        ; RPLACA
304   (LOAD&PUSH 8)
305   (JMPIFNOTEQTO 2 L313)               ; 1
308   (LOAD&CAR&PUSH 0)
310   (CONST&PUSH 8)                      ; 0
311   (CALLS1 170)                        ; RPLACD
313   L313
313   (LOAD&PUSH 1)
314   (JMPIFNOTEQTO 2 L324)               ; 1
317   (LOAD&CAR&PUSH 3)
319   (CONST&PUSH 8)                      ; 0
320   (CALLS1&JMPIF 170 L146)             ; RPLACD
324   L324
324   (LOAD&CDR&STORE 0)
326   (LOAD&JMPIF 0 L86)
330   L330
330   (SKIP 2)
332   L332
332   (LOAD&CDR&PUSH 1)
334   (LOAD&CDR&STORE 1)
336   (POP&STORE 1)
338   (LOAD&JMPIF 1 L75)
342   L342
342   (SKIP 2)
344   (LOAD&PUSH 5)
345   (LOAD&PUSH 10)
346   (LOAD&PUSH 10)
347   (LIST 3)
349   (SKIP&RET 10)


Disassembly of function #:|(DEFUN MAKPRODG (P SW) ...)-21|
(CONST 0) = MAKPRODG
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKPRODG>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKPRODG
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKPRODG
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKPRODG>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAKPRODG
8     (SKIP&RET 1)


Disassembly of function MAKPRODG
(CONST 0) = MAKPROD
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD 2)
1     (JMPIFATOM L10)
3     (LOAD&PUSH 2)
4     (LOAD&PUSH 2)
5     (CALL2 0)                           ; MAKPROD
7     (CAR)
8     (SKIP&RET 3)
10    L10
10    (LOAD 2)
11    (SKIP&RET 3)


Disassembly of function #:|(DEFUN DOPGCDCOFACTS (X Y) ...)-22|
(CONST 0) = DOPGCDCOFACTS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DOPGCDCOFACTS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DOPGCDCOFACTS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DOPGCDCOFACTS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DOPGCDCOFACTS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DOPGCDCOFACTS
8     (SKIP&RET 1)


Disassembly of function DOPGCDCOFACTS
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = $GCD
(CONST 3) = $RATFAC
(CONST 4) = *GCDL*
(CONST 5) = MEMQ
(CONST 6) = $EZ
(CONST 7) = PGCDCOFACTS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X *GCDL* $GCD)
writes special variable : ($GCD)
19 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE 2)                        ; $GCD
8     (BIND 2)                            ; $GCD
10    (NIL)
11    (BIND 3)                            ; $RATFAC
13    (GETVALUE&PUSH 2)                   ; $GCD
15    (GETVALUE&PUSH 4)                   ; *GCDL*
17    (CALL2&JMPIF 5 L23)                 ; MEMQ
20    (CONST 6)                           ; $EZ
21    (SETVALUE 2)                        ; $GCD
23    L23
23    (GETVALUE&PUSH 0)                   ; X
25    (GETVALUE&PUSH 1)                   ; Y
27    (CALL2 7)                           ; PGCDCOFACTS
29    (UNBIND 4)
31    (SKIP&RET 3)


Disassembly of function #:|(DEFUN FACRPLUS (X Y) ...)-23|
(CONST 0) = FACRPLUS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FACRPLUS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FACRPLUS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FACRPLUS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FACRPLUS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FACRPLUS
8     (SKIP&RET 1)


Disassembly of function FACRPLUS
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = DOPGCDCOFACTS
(CONST 3) = FPGCDCO
(CONST 4) = PTIMESCHK
(CONST 5) = PFLATTEN
(CONST 6) = PPLUS
(CONST 7) = MAKPROD
(CONST 8) = $ALGEBRAIC
(CONST 9) = PTIMES
(CONST 10) = CDINF
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($ALGEBRAIC Y X)
writes special variables : (Y X)
125 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE 0)                        ; X
8     (CAR&PUSH)
9     (GETVALUE 0)                        ; X
11    (CDR&PUSH)
12    (GETVALUE 1)                        ; Y
14    (CAR&PUSH)
15    (GETVALUE 1)                        ; Y
17    (CDR&PUSH)
18    (LOAD&PUSH 3)
19    (LOAD&PUSH 2)
20    (CALL2 2)                           ; DOPGCDCOFACTS
22    (STORE 3)
23    (CAR&PUSH)
24    (LOAD 4)
25    (CDR)
26    (CDR)
27    (CAR)
28    (STORE 2)
29    (LOAD 4)
30    (CDR)
31    (CAR)
32    (STORE 4)
33    (POP)
34    (SETVALUE 0)                        ; X
36    (LOAD&PUSH 2)
37    (LOAD&PUSH 1)
38    (CALL2 3)                           ; FPGCDCO
40    (STORE 2)
41    (CAR&PUSH)
42    (LOAD 3)
43    (CDR)
44    (CDR)
45    (CAR)
46    (STORE 1)
47    (LOAD 3)
48    (CDR)
49    (CAR)
50    (STORE 3)
51    (POP)
52    (SETVALUE 1)                        ; Y
54    (LOAD&PUSH 3)
55    (LOAD&PUSH 1)
56    (CALL2&PUSH 4)                      ; PTIMESCHK
58    (CALL1&PUSH 5)                      ; PFLATTEN
60    (LOAD&PUSH 3)
61    (LOAD&PUSH 3)
62    (CALL2&PUSH 4)                      ; PTIMESCHK
64    (CALL1&PUSH 5)                      ; PFLATTEN
66    (CALL2&PUSH 6)                      ; PPLUS
68    (NIL&PUSH)
69    (CALL2 7)                           ; MAKPROD
71    (STORE 3)
72    (LOAD&PUSH 2)
73    (LOAD&PUSH 1)
74    (CALL2 4)                           ; PTIMESCHK
76    (STORE 2)
77    (GETVALUE 8)                        ; $ALGEBRAIC
79    (JMPIF L142)
81    (GETVALUE&PUSH 1)                   ; Y
83    (LOAD&PUSH 3)
84    (NIL&PUSH)
85    (CALL 3 10)                         ; CDINF
88    (SETVALUE 1)                        ; Y
90    (CAR&PUSH)
91    (GETVALUE 1)                        ; Y
93    (CDR)
94    (CDR)
95    (CAR)
96    (STORE 3)
97    (GETVALUE 1)                        ; Y
99    (CDR)
100   (CAR)
101   (SETVALUE 1)                        ; Y
103   (POP&STORE 1)
105   (GETVALUE&PUSH 1)                   ; Y
107   (LOAD&PUSH 4)
108   (CALL2 3)                           ; FPGCDCO
110   (SETVALUE 1)                        ; Y
112   (CDR)
113   (CDR)
114   (CAR)
115   (STORE 3)
116   (GETVALUE 1)                        ; Y
118   (CDR)
119   (CAR)
120   (SETVALUE 1)                        ; Y
122   (GETVALUE&PUSH 0)                   ; X
124   (LOAD&PUSH 4)
125   (CALL2&PUSH 9)                      ; PTIMES
127   (GETVALUE&PUSH 1)                   ; Y
129   (LOAD&PUSH 3)
130   (LOAD&PUSH 5)
131   (CALL2&PUSH 4)                      ; PTIMESCHK
133   (CALL2 4)                           ; PTIMESCHK
135   L135
135   (CONS)
136   (SKIP 4)
138   (UNBIND 2)
140   (SKIP&RET 3)
142   L142
142   (GETVALUE&PUSH 1)                   ; Y
144   (LOAD&PUSH 3)
145   (CALL2 4)                           ; PTIMESCHK
147   (SETVALUE 1)                        ; Y
149   (PUSH)
150   (LOAD&PUSH 4)
151   (CALL2 3)                           ; FPGCDCO
153   (SETVALUE 1)                        ; Y
155   (CDR)
156   (CDR)
157   (CAR)
158   (STORE 3)
159   (GETVALUE 1)                        ; Y
161   (CDR)
162   (CAR)
163   (SETVALUE 1)                        ; Y
165   (GETVALUE&PUSH 0)                   ; X
167   (LOAD&PUSH 4)
168   (CALL2&PUSH 9)                      ; PTIMES
170   (GETVALUE 1)                        ; Y
172   (JMP L135)


Disassembly of function #:|(DEFUN MFACPPLUS (L) ...)-24|
(CONST 0) = MFACPPLUS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MFACPPLUS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MFACPPLUS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MFACPPLUS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MFACPPLUS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MFACPPLUS
8     (SKIP&RET 1)


Disassembly of function MFACPPLUS
(CONST 0) = $GCD
(CONST 1) = $EZ
(CONST 2) = $RATFAC
(CONST 3) = CONTODR
(CONST 4) = 0
(CONST 5) = OLDCONTENT2
(CONST 6) = X
(CONST 7) = FIXNUMP
(CONST 8) = PQUOTIENT
(CONST 9) = PFLATTEN
(CONST 10) = PPLUS
(CONST 11) = MAKPROD
(CONST 12) = PTIMES
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X $GCD)
67 byte-code instructions:
0     (GETVALUE 0)                        ; $GCD
2     (JMPIF L5)
4     (CONST 1)                           ; $EZ
5     L5
5     (BIND 0)                            ; $GCD
7     (NIL)
8     (BIND 2)                            ; $RATFAC
10    (NIL&PUSH)
11    (LOAD&PUSH 8)
12    (CALLS1&PUSH 158)                   ; COPY-LIST
14    (CONST&PUSH 3)                      ; CONTODR
15    (PUSH-UNBOUND 3)
17    (CALLS2&PUSH 103)                   ; SORT
19    (CONST&PUSH 4)                      ; 0
20    (CALL2 5)                           ; OLDCONTENT2
22    (STORE 0)
23    (BIND 6)                            ; X
25    (GETVALUE&PUSH 6)                   ; X
27    (CALL1&JMPIF 7 L39)                 ; FIXNUMP
30    (GETVALUE 6)                        ; X
32    (JMPIFCONSP L54)
34    (GETVALUE&PUSH 6)                   ; X
36    (CALLS2&JMPIFNOT 15 L48)            ; FLOATP
39    L39
39    (GETVALUE&PUSH 6)                   ; X
41    (CALLS2 145)                        ; ZEROP
43    (UNBIND1)
44    (JMPIFNOT L55)
46    (JMP L51)
48    L48
48    (UNBIND1)
49    (JMPIFNOT L55)
51    L51
51    (LOAD 0)
52    (JMP L96)
54    L54
54    (UNBIND1)
55    L55
55    (LOAD&CAR&PUSH 8)
57    (LOAD&PUSH 1)
58    (CALL2&PUSH 8)                      ; PQUOTIENT
60    (CALL1&PUSH 9)                      ; PFLATTEN
62    (LOAD&CDR&PUSH 9)
64    (LOAD&JMPIFNOT 0 L84)
67    L67
67    (LOAD&PUSH 1)
68    (LOAD&CAR&PUSH 1)
70    (LOAD&PUSH 4)
71    (CALL2&PUSH 8)                      ; PQUOTIENT
73    (CALL1&PUSH 9)                      ; PFLATTEN
75    (CALL2&PUSH 10)                     ; PPLUS
77    (LOAD&CDR&STORE 1)
79    (POP&STORE 1)
81    (LOAD&JMPIF 0 L67)
84    L84
84    (LOAD&PUSH 2)
85    (LOAD&PUSH 2)
86    (NIL&PUSH)
87    (CALL2&PUSH 11)                     ; MAKPROD
89    (CALL2 12)                          ; PTIMES
91    (SKIP 2)
93    (JMPIF1 L96)
95    (NIL)
96    L96
96    (SKIP 1)
98    (UNBIND 2)
100   (SKIP&RET 2)


Disassembly of function #:|(DEFUN FACRTIMES (X Y GCDSW) ...)-25|
(CONST 0) = FACRTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FACRTIMES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FACRTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FACRTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FACRTIMES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FACRTIMES
8     (SKIP&RET 1)


Disassembly of function FACRTIMES
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = PTIMES
(CONST 3) = PTIMESCHK
(CONST 4) = CDINF
(CONST 5) = FPGCDCO
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X)
writes special variables : (Y X)
73 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD 5)
4     (BIND 1)                            ; Y
6     (LOAD&JMPIFNOT 7 L89)
10    (GETVALUE 0)                        ; X
12    (CAR&PUSH)
13    (GETVALUE 1)                        ; Y
15    (CAR&PUSH)
16    (T&PUSH)
17    (CALL&PUSH 3 4)                     ; CDINF
20    (GETVALUE 0)                        ; X
22    (CDR&PUSH)
23    (GETVALUE 1)                        ; Y
25    (CDR&PUSH)
26    (T&PUSH)
27    (CALL&PUSH 3 4)                     ; CDINF
30    (LOAD 1)
31    (CDR)
32    (CAR&PUSH)
33    (LOAD 1)
34    (CDR)
35    (CDR)
36    (CAR&PUSH)
37    (CALL2 5)                           ; FPGCDCO
39    (SETVALUE 0)                        ; X
41    (LOAD 1)
42    (CDR)
43    (CDR)
44    (CAR&PUSH)
45    (LOAD 1)
46    (CDR)
47    (CAR&PUSH)
48    (CALL2 5)                           ; FPGCDCO
50    (SETVALUE 1)                        ; Y
52    (LOAD&CAR&PUSH 1)
54    (GETVALUE 0)                        ; X
56    (CDR)
57    (CAR&PUSH)
58    (GETVALUE 1)                        ; Y
60    (CDR)
61    (CAR&PUSH)
62    (CALL2&PUSH 2)                      ; PTIMES
64    (CALL2&PUSH 2)                      ; PTIMES
66    (LOAD&CAR&PUSH 1)
68    (GETVALUE 0)                        ; X
70    (CDR)
71    (CDR)
72    (CAR&PUSH)
73    (GETVALUE 1)                        ; Y
75    (CDR)
76    (CDR)
77    (CAR&PUSH)
78    (CALL2&PUSH 3)                      ; PTIMESCHK
80    (CALL2 3)                           ; PTIMESCHK
82    (CONS)
83    (SKIP 2)
85    L85
85    (UNBIND 2)
87    (SKIP&RET 4)
89    L89
89    (GETVALUE 0)                        ; X
91    (CAR&PUSH)
92    (GETVALUE 1)                        ; Y
94    (CAR&PUSH)
95    (CALL2&PUSH 2)                      ; PTIMES
97    (GETVALUE 0)                        ; X
99    (CDR&PUSH)
100   (GETVALUE 1)                        ; Y
102   (CDR&PUSH)
103   (CALL2 3)                           ; PTIMESCHK
105   (CONS)
106   (JMP L85)


Disassembly of function #:|(DEFUN PFACPROD (POLY) ...)-26|
(CONST 0) = PFACPROD
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PFACPROD>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PFACPROD
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PFACPROD
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PFACPROD>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PFACPROD
8     (SKIP&RET 1)


Disassembly of function PFACPROD
(CONST 0) = CFACTOR
(CONST 1) = PGET
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
20 byte-code instructions:
0     L0
0     (LOAD 1)
1     (JMPIFATOM L23)
3     (LOAD 1)
4     (CDR)
5     (CDR)
6     (CAR&PUSH)
7     (JSR&PUSH L0)
9     (LOAD&CAR&PUSH 2)
11    (CALL1&PUSH 1)                      ; PGET
13    (LOAD 3)
14    (CDR)
15    (CAR&PUSH)
16    (LIST&PUSH 2)
18    (CALLSR 2 35)                       ; NCONC
21    (SKIP&RET 2)
23    L23
23    (LOAD&PUSH 1)
24    (CALL1 0)                           ; CFACTOR
26    (SKIP&RET 2)


Disassembly of function #:|(DEFUN FPCONTENT (POLY) ...)-27|
(CONST 0) = FPCONTENT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FPCONTENT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FPCONTENT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FPCONTENT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FPCONTENT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FPCONTENT
8     (SKIP&RET 1)


Disassembly of function FPCONTENT
(CONST 0) = $RATFAC
(CONST 1) = OLDCONTENT
(CONST 2) = LOWDEG
(CONST 3) = 0
(CONST 4) = 1
(CONST 5) = PTIMES
(CONST 6) = PQUOTIENT
(CONST 7) = PMINUSP
(CONST 8) = PMINUS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
49 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; $RATFAC
3     (LOAD&PUSH 4)
4     (CALL1 1)                           ; OLDCONTENT
6     (STORE 4)
7     (CDR)
8     (CAR)
9     (CDR&PUSH)
10    (CALL1&PUSH 2)                      ; LOWDEG
12    (LOAD&PUSH 0)
13    (CONST&PUSH 3)                      ; 0
14    (CALLSR&JMPIFNOT 1 48 L41)          ; >
18    (LOAD 5)
19    (CDR)
20    (CAR)
21    (CAR&PUSH)
22    (LOAD&PUSH 1)
23    (CONST&PUSH 4)                      ; 1
24    (LIST 3)
26    (STORE 0)
27    (LOAD&CAR&PUSH 5)
29    (LOAD&PUSH 1)
30    (CALL2&PUSH 5)                      ; PTIMES
32    (LOAD 6)
33    (CDR)
34    (CAR&PUSH)
35    (LOAD&PUSH 2)
36    (CALL2&PUSH 6)                      ; PQUOTIENT
38    (LIST 2)
40    (STORE 5)
41    L41
41    (SKIP 1)
43    (LOAD 4)
44    (CDR)
45    (CAR&PUSH)
46    (CALL1&JMPIF 7 L53)                 ; PMINUSP
49    (LOAD 4)
50    L50
50    (UNBIND1)
51    (SKIP&RET 2)
53    L53
53    (LOAD&CAR&PUSH 4)
55    (CALL1&PUSH 8)                      ; PMINUS
57    (LOAD 5)
58    (CDR)
59    (CAR&PUSH)
60    (CALL1&PUSH 8)                      ; PMINUS
62    (LIST 2)
64    (JMP L50)


Disassembly of function #:|(DEFMFUN LOWDEG (P) ...)-28|
(CONST 0) = LOWDEG
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LOWDEG>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LOWDEG
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LOWDEG
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LOWDEG>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LOWDEG
8     (SKIP&RET 1)


Disassembly of function LOWDEG
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 1)
1     (JMP L7)
3     L3
3     (LOAD 0)
4     (CDR)
5     (CDR)
6     (STORE 0)
7     L7
7     (LOAD 0)
8     (CDR)
9     (CDR)
10    (JMPIF L3)
12    (LOAD 0)
13    (CAR)
14    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MAKPROD (POLY CONTSWITCH) ...)-29|
(CONST 0) = MAKPROD
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKPROD>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKPROD
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKPROD
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKPROD>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAKPROD
8     (SKIP&RET 1)


Disassembly of function MAKPROD
(CONST 0) = PUREPROD
(CONST 1) = 1
(CONST 2) = PTIMES
(CONST 3) = MAKPROD1
(CONST 4) = FPCONTENT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
44 byte-code instructions:
0     L0
0     (LOAD&PUSH 2)
1     (CALL1&JMPIF 0 L31)                 ; PUREPROD
4     (LOAD 2)
5     (CDR)
6     (CDR)
7     (CDR)
8     (JMPIFNOT L34)
10    (LOAD&JMPIF 1 L51)
13    (LOAD&PUSH 2)
14    (CALL1 4)                           ; FPCONTENT
16    (STORE 2)
17    (CAR&PUSH)
18    (LOAD&PUSH 2)
19    (JSR&PUSH L0)
21    (LOAD 3)
22    (CDR)
23    (CAR&PUSH)
24    (CALL1 3)                           ; MAKPROD1
26    L26
26    (PUSH)
27    (CALL2 2)                           ; PTIMES
29    (SKIP&RET 3)
31    L31
31    (LOAD 2)
32    (SKIP&RET 3)
34    L34
34    (LOAD&CAR&PUSH 2)
36    (LOAD 3)
37    (CDR)
38    (CAR&PUSH)
39    (CONST&PUSH 1)                      ; 1
40    (LIST&PUSH 3)
42    (LOAD 3)
43    (CDR)
44    (CDR)
45    (CAR&PUSH)
46    (LOAD&PUSH 3)
47    (JSR L0)
49    (JMP L26)
51    L51
51    (LOAD&PUSH 2)
52    (CALL1 3)                           ; MAKPROD1
54    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MAKPROD1 (POLY*) ...)-30|
(CONST 0) = MAKPROD1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKPROD1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKPROD1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKPROD1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKPROD1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAKPROD1
8     (SKIP&RET 1)


Disassembly of function MAKPROD1
(CONST 0) = POLY*
(CONST 1) = VARLIST
(CONST 2) = GENVAR
(CONST 3) = PDIS
(CONST 4) = 1
(CONST 5) = RES
(CONST 6) = ALIKE1
(CONST 7) = PGET
(CONST 8) = MAKSYMP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POLY* GENVAR VARLIST)
29 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; POLY*
3     (GETVALUE&PUSH 1)                   ; VARLIST
5     (GETVALUE&PUSH 2)                   ; GENVAR
7     (GETVALUE&PUSH 0)                   ; POLY*
9     (CALL1&PUSH 3)                      ; PDIS
11    (CONST 4)                           ; 1
12    (BIND 5)                            ; RES
14    (LOAD&JMPIFNOT 5 L32)
17    L17
17    (LOAD&PUSH 3)
18    (LOAD&CAR&PUSH 6)
20    (CALL2&JMPIF 6 L42)                 ; ALIKE1
23    (LOAD&CDR&PUSH 5)
25    (LOAD&CDR&STORE 5)
27    (POP&STORE 5)
29    (LOAD&JMPIF 5 L17)
32    L32
32    (GETVALUE&PUSH 0)                   ; POLY*
34    (CALL1 8)                           ; MAKSYMP
36    L36
36    (UNBIND1)
37    (SKIP 3)
39    (UNBIND1)
40    (SKIP&RET 2)
42    L42
42    (LOAD&CAR&PUSH 4)
44    (CALL1 7)                           ; PGET
46    (JMP L36)


Disassembly of function #:|(DEFUN MAKSYM (P) ...)-31|
(CONST 0) = MAKSYM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKSYM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKSYM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKSYM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKSYM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAKSYM
8     (SKIP&RET 1)


Disassembly of function MAKSYM
(CONST 0) = PDIS
(CONST 1) = NEWSYM2
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (LOAD&PUSH 1)
1     (LOAD&PUSH 2)
2     (CALL1&PUSH 0)                      ; PDIS
4     (CALL2 1)                           ; NEWSYM2
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN MAKSYMP (P) ...)-32|
(CONST 0) = MAKSYMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKSYMP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKSYMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKSYMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKSYMP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAKSYMP
8     (SKIP&RET 1)


Disassembly of function MAKSYMP
(CONST 0) = MAKSYM
(CONST 1) = PGET
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
9 byte-code instructions:
0     (LOAD 1)
1     (JMPIFATOM L10)
3     (LOAD&PUSH 1)
4     (CALL1&PUSH 0)                      ; MAKSYM
6     (CALL1 1)                           ; PGET
8     (SKIP&RET 2)
10    L10
10    (LOAD 1)
11    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PFLATTEN (H) ...)-33|
(CONST 0) = PFLATTEN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PFLATTEN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PFLATTEN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PFLATTEN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PFLATTEN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PFLATTEN
8     (SKIP&RET 1)


Disassembly of function PFLATTEN
(CONST 0) = LISTOVARS
(CONST 1) = GETUNHACK
(CONST 2) = $RATFAC
(CONST 3) = PFLAT1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
34 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&PUSH 2)
2     (CALL1 0)                           ; LISTOVARS
4     (JMP L20)
6     L6
6     (LOAD&CAR&PUSH 0)
8     (CALL1&PUSH 1)                      ; GETUNHACK
10    (LOAD 0)
11    (NOT)
12    (JMPIFNOT L27)
14    (SKIP 1)
16    (JMPIFNOT L36)
18    L18
18    (LOAD 0)
19    (CDR)
20    L20
20    (STORE 0)
21    (LOAD&JMPIF 0 L6)
24    (LOAD 2)
25    (SKIP&RET 3)
27    L27
27    (LOAD&CAR&PUSH 1)
29    (LOAD 1)
30    (CAR)
31    (EQ)
32    (SKIP 1)
34    (JMPIF L18)
36    L36
36    (NIL)
37    (BIND 2)                            ; $RATFAC
39    (LOAD&PUSH 5)
40    (CALL1 3)                           ; PFLAT1
42    (UNBIND1)
43    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PFLAT1 (P) ...)-34|
(CONST 0) = PFLAT1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PFLAT1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PFLAT1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PFLAT1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PFLAT1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PFLAT1
8     (SKIP&RET 1)


Disassembly of function PFLAT1
(CONST 0) = GETUNHACK
(CONST 1) = PEXPT
(CONST 2) = PTIMES
(CONST 3) = PPLUS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
68 byte-code instructions:
0     L0
0     (LOAD 1)
1     (JMPIFATOM L70)
4     (LOAD 1)
5     (CDR)
6     (CDR)
7     (CDR)
8     (JMPIFNOT L73)
10    (LOAD&CAR&PUSH 1)
12    (CALL1&PUSH 0)                      ; GETUNHACK
14    (LOAD 2)
15    (CDR)
16    (CAR&PUSH)
17    (LOAD 3)
18    (CDR)
19    (CDR)
20    (CDR&PUSH)
21    (LOAD 4)
22    (CDR)
23    (CDR)
24    (CAR&PUSH)
25    (JSR&PUSH L0)
27    (LOAD&JMPIFNOT 1 L61)
30    L30
30    (LOAD&PUSH 0)
31    (LOAD&PUSH 4)
32    (LOAD&PUSH 4)
33    (LOAD&CAR&PUSH 4)
35    (CALLSR&PUSH 1 54)                  ; -
38    (CALL2&PUSH 1)                      ; PEXPT
40    (CALL2&PUSH 2)                      ; PTIMES
42    (LOAD 2)
43    (CDR)
44    (CAR&PUSH)
45    (JSR&PUSH L0)
47    (CALL2 3)                           ; PPLUS
49    (STORE 0)
50    (LOAD&CAR&PUSH 1)
52    (LOAD 2)
53    (CDR)
54    (CDR)
55    (STORE 2)
56    (POP&STORE 2)
58    (LOAD&JMPIF 1 L30)
61    L61
61    (LOAD&PUSH 0)
62    (LOAD&PUSH 4)
63    (LOAD&PUSH 4)
64    (CALL2&PUSH 1)                      ; PEXPT
66    (CALL2 2)                           ; PTIMES
68    (SKIP&RET 6)
70    L70
70    (LOAD 1)
71    (SKIP&RET 2)
73    L73
73    (LOAD&CAR&PUSH 1)
75    (CALL1&PUSH 0)                      ; GETUNHACK
77    (LOAD 2)
78    (CDR)
79    (CAR&PUSH)
80    (CALL2&PUSH 1)                      ; PEXPT
82    (LOAD 2)
83    (CDR)
84    (CDR)
85    (CAR&PUSH)
86    (JSR&PUSH L0)
89    (CALL2 2)                           ; PTIMES
91    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PIRREDP (X) ...)-35|
(CONST 0) = PIRREDP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PIRREDP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PIRREDP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PIRREDP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PIRREDP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PIRREDP
8     (SKIP&RET 1)


Disassembly of function PIRREDP
(CONST 0) = X
(CONST 1) = DISREP
(CONST 2) = IRREDUCIBLE
(CONST 3) = MEMQ
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
writes special variable : (X)
19 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CONST&PUSH 1)                      ; DISREP
6     (PUSH-UNBOUND 1)
8     (CALLS2 132)                        ; GET
10    (SETVALUE 0)                        ; X
12    (JMPIFNOT1 L26)
14    (PUSH)
15    (CALLS2 5)                          ; ATOM
17    (JMPIF1 L26)
19    (CONST&PUSH 2)                      ; IRREDUCIBLE
20    (GETVALUE 0)                        ; X
22    (CAR)
23    (CDR&PUSH)
24    (CALL2 3)                           ; MEMQ
26    L26
26    (UNBIND1)
27    (SKIP&RET 2)


Disassembly of function #:|(DEFUN KNOWNFACTORS (D) ...)-36|
(CONST 0) = KNOWNFACTORS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KNOWNFACTORS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KNOWNFACTORS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KNOWNFACTORS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KNOWNFACTORS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KNOWNFACTORS
8     (SKIP&RET 1)


Disassembly of function KNOWNFACTORS
(CONST 0) = DISREP
(CONST 1) = MTIMES
(CONST 2) = 1
(CONST 3) = PTIMES
(CONST 4) = GETUNHACK
(CONST 5) = PEXPT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
47 byte-code instructions:
0     L0
0     (NIL&PUSH)
1     (LOAD 2)
2     (JMPIFATOM L44)
4     (LOAD&CAR&PUSH 2)
6     (CONST&PUSH 0)                      ; DISREP
7     (PUSH-UNBOUND 1)
9     (CALLS2&STORE 132 0)                ; GET
12    (JMPIFATOM L47)
14    (LOAD 0)
15    (CAR)
16    (CAR&PUSH)
17    (JMPIFNOTEQTO 1 L47)                ; MTIMES
20    (LOAD&CAR&PUSH 2)
22    (CALL1 4)                           ; GETUNHACK
24    (STORE 0)
25    (LOAD 2)
26    (CDR)
27    (CDR)
28    (CAR&PUSH)
29    (JSR&PUSH L0)
31    (LOAD&PUSH 1)
32    (JSR&PUSH L0)
34    (LOAD 4)
35    (CDR)
36    (CAR&PUSH)
37    (CALL2 5)                           ; PEXPT
39    L39
39    (PUSH)
40    (CALL2 3)                           ; PTIMES
42    (SKIP&RET 3)
44    L44
44    (LOAD 2)
45    (SKIP&RET 3)
47    L47
47    (LOAD 2)
48    (CDR)
49    (CDR)
50    (CAR&PUSH)
51    (JSR&PUSH L0)
53    (LOAD&CAR&PUSH 3)
55    (LOAD 4)
56    (CDR)
57    (CAR&PUSH)
58    (CONST&PUSH 2)                      ; 1
59    (LIST 3)
61    (JMP L39)


Wrote file binary-clisp/lesfac.fas
Wrote file /cygdrive/e/temp/maxima/src/lesfac.lis