Listing of compilation of file /cygdrive/e/temp/maxima/src/scs.lisp
on 2002-12-17 13:35:42 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/scs.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE SCS)-2|
(CONST 0) = SCS
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; SCS
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (*EXPR $RATSUBST CONSSIZE))-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $SCSIMP N ...)-4|
(CONST 0) = $SCSIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $SCSIMP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $SCSIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $SCSIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $SCSIMP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $SCSIMP
8     (SKIP&RET 1)


Disassembly of function $SCSIMP
(CONST 0) = N
(CONST 1) = 1
(CONST 2) = NARG1
(CONST 3) = MEQUAL
(CONST 4) = SUB
(CONST 5) = SCS
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variable: (N)
46 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 71)                         ; LENGTH
3     (BIND 0)                            ; N
5     (GETVALUE&PUSH 0)                   ; N
7     (NIL&PUSH)
8     (JMP L45)
10    L10
10    (LOAD&PUSH 1)
11    (LOAD&PUSH 7)
12    (CALL2 2)                           ; NARG1
14    (JMP L40)
16    L16
16    (LOAD&PUSH 1)
17    (LOAD&PUSH 7)
18    (CALL2 2)                           ; NARG1
20    (CAR)
21    (CAR&PUSH)
22    (JMPIFNOTEQTO 3 L10)                ; MEQUAL
25    (LOAD&PUSH 1)
26    (LOAD&PUSH 7)
27    (CALL2 2)                           ; NARG1
29    (CDR)
30    (CAR&PUSH)
31    (LOAD&PUSH 2)
32    (LOAD&PUSH 8)
33    (CALL2 2)                           ; NARG1
35    (CDR)
36    (CDR)
37    (CAR&PUSH)
38    (CALL2 4)                           ; SUB
40    L40
40    (PUSH)
41    (LOAD&CONS&STORE 0)
43    (LOAD&DEC&STORE 1)
45    L45
45    (CONST&PUSH 1)                      ; 1
46    (LOAD&PUSH 2)
47    (CALLSR&JMPIFNOT 1 45 L16)          ; =
51    (CONST&PUSH 1)                      ; 1
52    (LOAD&PUSH 7)
53    (CALL2&PUSH 2)                      ; NARG1
55    (LOAD&PUSH 1)
56    (CALL2 5)                           ; SCS
58    (SKIP 2)
60    (UNBIND1)
61    (SKIP&RET 2)


Disassembly of function #:|(DEFUN SCS (X ZRS) ...)-5|
(CONST 0) = SCS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SCS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SCS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SCS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SCS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SCS
8     (SKIP&RET 1)


Disassembly of function SCS
(CONST 0) = X
(CONST 1) = CONSSIZE
(CONST 2) = NX
(CONST 3) = FLAG
(CONST 4) = L
(CONST 5) = 0
(CONST 6) = SUBSCS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (NX L FLAG X)
writes special variables : (X FLAG L NX)
56 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (T&PUSH)
4     (GETVALUE&PUSH 0)                   ; X
6     (CALL1&PUSH 1)                      ; CONSSIZE
8     (NIL)
9     (BIND 2)                            ; NX
11    (NIL&PUSH)
12    (LOAD 5)
13    (BIND 3)                            ; FLAG
15    (GETVALUE 3)                        ; FLAG
17    (JMPIFNOT L64)
19    L19
19    (LOAD 13)
20    (BIND 4)                            ; L
22    (GETVALUE 4)                        ; L
24    (JMPIFNOT L56)
26    L26
26    (CONST&PUSH 5)                      ; 0
27    (GETVALUE 4)                        ; L
29    (CAR&PUSH)
30    (GETVALUE&PUSH 0)                   ; X
32    (CALL 3 6)                          ; SUBSCS
35    (SETVALUE 2)                        ; NX
37    (PUSH)
38    (CALL1 1)                           ; CONSSIZE
40    (STORE 6)
41    (PUSH)
42    (LOAD&PUSH 11)
43    (CALLSR&JMPIF 1 47 L75)             ; <
47    (GETVALUE 4)                        ; L
49    (CDR)
50    (SETVALUE 4)                        ; L
52    (GETVALUE 4)                        ; L
54    (JMPIF L26)
56    L56
56    (NIL)
57    (SETVALUE 3)                        ; FLAG
59    L59
59    (UNBIND1)
60    (GETVALUE 3)                        ; FLAG
62    (JMPIF L19)
64    L64
64    (GETVALUE 0)                        ; X
66    (UNBIND1)
67    (SKIP 1)
69    (UNBIND1)
70    (SKIP 2)
72    (UNBIND1)
73    (SKIP&RET 3)
75    L75
75    (GETVALUE 2)                        ; NX
77    (SETVALUE 0)                        ; X
79    (LOAD 6)
80    (STORE 10)
82    (JMP L59)


Disassembly of function #:|(DEFUN SUBSCS (A B C) ...)-6|
(CONST 0) = SUBSCS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SUBSCS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SUBSCS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SUBSCS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SUBSCS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SUBSCS
8     (SKIP&RET 1)


Disassembly of function SUBSCS
(CONST 0) = A
(CONST 1) = B
(CONST 2) = C
(CONST 3) = SUBSC
(CONST 4) = MPLUS
(CONST 5) = CONSSIZE
(CONST 6) = L
(CONST 7) = RECONC
(CONST 8) = ADDN
(CONST 9) = SUB
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L C A B)
writes special variables : (L C)
69 byte-code instructions:
0     L0
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 5)
4     (BIND 1)                            ; B
6     (LOAD 7)
7     (BIND 2)                            ; C
9     (GETVALUE 1)                        ; B
11    (JMPIFATOM L20)
13    (GETVALUE 1)                        ; B
15    (CAR)
16    (CAR&PUSH)
17    (JMPIFEQTO 4 L33)                   ; MPLUS
20    L20
20    (GETVALUE&PUSH 0)                   ; A
22    (GETVALUE&PUSH 1)                   ; B
24    (GETVALUE&PUSH 2)                   ; C
26    (CALL 3 3)                          ; SUBSC
29    L29
29    (UNBIND 3)
31    (SKIP&RET 4)
33    L33
33    (GETVALUE 1)                        ; B
35    (CDR&PUSH)
36    (GETVALUE&PUSH 2)                   ; C
38    (CALL1&PUSH 5)                      ; CONSSIZE
40    (PUSH-NIL 3)
42    (LOAD 4)
43    (BIND 6)                            ; L
45    (GETVALUE 6)                        ; L
47    (JMPIFNOT L100)
49    L49
49    (GETVALUE&PUSH 0)                   ; A
51    (LOAD&PUSH 6)
52    (GETVALUE 6)                        ; L
54    (CDR&PUSH)
55    (CALL2&PUSH 7)                      ; RECONC
57    (T&PUSH)
58    (CALL2&PUSH 8)                      ; ADDN
60    (CALL2&PUSH 9)                      ; SUB
62    (GETVALUE 6)                        ; L
64    (CAR&PUSH)
65    (GETVALUE&PUSH 2)                   ; C
67    (JSR L0)
70    (STORE 4)
71    (PUSH)
72    (CALL1 5)                           ; CONSSIZE
74    (STORE 3)
75    (GETVALUE 6)                        ; L
77    (CAR&PUSH)
78    (LOAD&CONS&STORE 5)
80    (LOAD&PUSH 3)
81    (LOAD&PUSH 7)
82    (CALLSR&JMPIFNOT 1 47 L91)          ; <
86    (LOAD 4)
87    (SETVALUE 2)                        ; C
89    (LOAD 3)
90    (STORE 6)
91    L91
91    (GETVALUE 6)                        ; L
93    (CDR)
94    (SETVALUE 6)                        ; L
96    (GETVALUE 6)                        ; L
98    (JMPIF L49)
100   L100
100   (GETVALUE 2)                        ; C
102   (UNBIND1)
103   (SKIP 5)
105   (JMP L29)


Disassembly of function #:|(DEFUN SUBSC (A B C) ...)-7|
(CONST 0) = SUBSC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SUBSC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SUBSC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SUBSC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SUBSC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SUBSC
8     (SKIP&RET 1)


Disassembly of function SUBSC
(CONST 0) = A
(CONST 1) = B
(CONST 2) = C
(CONST 3) = $RATSUBST
(CONST 4) = $EXPAND
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (C B A)
13 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 5)
4     (BIND 1)                            ; B
6     (LOAD 7)
7     (BIND 2)                            ; C
9     (GETVALUE&PUSH 0)                   ; A
11    (GETVALUE&PUSH 1)                   ; B
13    (GETVALUE&PUSH 2)                   ; C
15    (CALL&PUSH 3 3)                     ; $RATSUBST
18    (CALL1 4)                           ; $EXPAND
20    (UNBIND 3)
22    (SKIP&RET 4)


Disassembly of function #:|(DEFMFUN $DISTRIB (EXP) ...)-8|
(CONST 0) = $DISTRIB
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $DISTRIB>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $DISTRIB
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $DISTRIB
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $DISTRIB>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $DISTRIB
8     (SKIP&RET 1)


Disassembly of function $DISTRIB
(CONST 0) = EXP
(CONST 1) = MNUMP
(CONST 2) = MTIMES
(CONST 3) = $DISTRIB
(CONST 4) = MPLUSP
(CONST 5) = L
(CONST 6) = M
(CONST 7) = DSTRB
(CONST 8) = ADDN
(CONST 9) = MEQUAL
(CONST 10) = (MEQUAL)
(CONST 11) = MRAT
(CONST 12) = RATDISREP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (M L EXP)
writes special variables : (L EXP M)
117 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; EXP
3     (GETVALUE&PUSH 0)                   ; EXP
5     (CALL1&JMPIF 1 L42)                 ; MNUMP
8     (GETVALUE&PUSH 0)                   ; EXP
10    (CALLS2&JMPIF 6 L42)                ; SYMBOLP
13    (GETVALUE 0)                        ; EXP
15    (CAR)
16    (CAR&PUSH)
17    (JMPIFEQTO 2 L88)                   ; MTIMES
21    (GETVALUE 0)                        ; EXP
23    (CAR)
24    (CAR&PUSH)
25    (JMPIFEQTO 9 L152)                  ; MEQUAL
29    (GETVALUE 0)                        ; EXP
31    (CAR)
32    (CAR&PUSH)
33    (JMPIFEQTO 11 L173)                 ; MRAT
37    (GETVALUE 0)                        ; EXP
39    L39
39    (UNBIND1)
40    (SKIP&RET 2)
42    L42
42    (GETVALUE 0)                        ; EXP
44    (JMP L39)
46    L46
46    (GETVALUE 0)                        ; EXP
48    (CAR)
49    (CDR)
50    (JMP L109)
52    L52
52    (GETVALUE 5)                        ; L
54    (CAR)
55    (CDR)
56    (BIND 6)                            ; M
58    (NIL&PUSH)
59    (GETVALUE 6)                        ; M
61    (JMPIFNOT L81)
63    L63
63    (GETVALUE 6)                        ; M
65    (CAR&PUSH)
66    (LOAD&PUSH 8)
67    (LOAD&PUSH 2)
68    (CALL 3 7)                          ; DSTRB
71    (STORE 0)
72    (GETVALUE 6)                        ; M
74    (CDR)
75    (SETVALUE 6)                        ; M
77    (GETVALUE 6)                        ; M
79    (JMPIF L63)
81    L81
81    (LOAD 0)
82    (STORE 7)
83    (SKIP 1)
85    (UNBIND1)
86    (JMP L133)
88    L88
88    (CONST&PUSH 3)                      ; $DISTRIB
89    (GETVALUE 0)                        ; EXP
91    (CDR&PUSH)
92    (CALLSR 0 22)                       ; MAPCAR
95    (SETVALUE 0)                        ; EXP
97    (CDR&PUSH)
98    (GETVALUE 0)                        ; EXP
100   (CAR&PUSH)
101   (CALL1&JMPIF 4 L46)                 ; MPLUSP
104   (GETVALUE 0)                        ; EXP
106   (CAR&PUSH)
107   (LIST 1)
109   L109
109   (PUSH)
110   (LOAD 1)
111   (BIND 5)                            ; L
113   (GETVALUE 5)                        ; L
115   (JMPIFNOT L142)
117   L117
117   (GETVALUE 5)                        ; L
119   (CAR&PUSH)
120   (CALL1&JMPIF 4 L52)                 ; MPLUSP
124   (GETVALUE 5)                        ; L
126   (CAR&PUSH)
127   (LOAD&PUSH 4)
128   (NIL&PUSH)
129   (CALL 3 7)                          ; DSTRB
132   (STORE 3)
133   L133
133   (GETVALUE 5)                        ; L
135   (CDR)
136   (SETVALUE 5)                        ; L
138   (GETVALUE 5)                        ; L
140   (JMPIF L117)
142   L142
142   (LOAD&PUSH 3)
143   (T&PUSH)
144   (CALL2 8)                           ; ADDN
146   (UNBIND1)
147   (SKIP 2)
149   (JMP L39)
152   L152
152   (CONST&PUSH 10)                     ; (MEQUAL)
153   (GETVALUE 0)                        ; EXP
155   (CDR)
156   (CAR&PUSH)
157   (JSR&PUSH L0)
160   (GETVALUE 0)                        ; EXP
162   (CDR)
163   (CDR)
164   (CAR&PUSH)
165   (JSR&PUSH L0)
168   (LIST 3)
170   (JMP L39)
173   L173
173   (GETVALUE&PUSH 0)                   ; EXP
175   (CALL1&PUSH 12)                     ; RATDISREP
177   (JSR L0)
180   (JMP L39)


Disassembly of function #:|(DEFUN DSTRB (X L NL) ...)-9|
(CONST 0) = DSTRB
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DSTRB>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DSTRB
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DSTRB
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DSTRB>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DSTRB
8     (SKIP&RET 1)


Disassembly of function DSTRB
(CONST 0) = X
(CONST 1) = L
(CONST 2) = MUL
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X L)
writes special variable : (L)
21 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; X
3     (LOAD 5)
4     (BIND 1)                            ; L
6     (GETVALUE 1)                        ; L
8     (JMPIFNOT L28)
10    L10
10    (GETVALUE&PUSH 0)                   ; X
12    (GETVALUE 1)                        ; L
14    (CAR&PUSH)
15    (CALL2&PUSH 2)                      ; MUL
17    (LOAD&CONS&STORE 7)
19    (GETVALUE 1)                        ; L
21    (CDR)
22    (SETVALUE 1)                        ; L
24    (GETVALUE 1)                        ; L
26    (JMPIF L10)
28    L28
28    (LOAD 7)
29    (UNBIND 2)
31    (SKIP&RET 4)


Disassembly of function #:|(DEFMFUN $FACOUT (X Y) ...)-10|
(CONST 0) = $FACOUT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $FACOUT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $FACOUT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $FACOUT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $FACOUT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $FACOUT
8     (SKIP&RET 1)


Disassembly of function $FACOUT
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = MPLUS
(CONST 3) = L
(CONST 4) = DIV
(CONST 5) = ADDN
(CONST 6) = MUL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L X Y)
40 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE 1)                        ; Y
8     (CAR)
9     (CAR&PUSH)
10    (JMPIFNOTEQTO 2 L21)                ; MPLUS
13    (GETVALUE&PUSH 0)                   ; X
15    (NIL&PUSH)
16    (GETVALUE 1)                        ; Y
18    (CDR&PUSH)
19    (JMP L44)
21    L21
21    (GETVALUE 1)                        ; Y
23    (JMP L59)
25    L25
25    (LOAD&CAR&PUSH 0)
27    (LOAD 0)
28    (BIND 3)                            ; L
30    (GETVALUE&PUSH 3)                   ; L
32    (GETVALUE&PUSH 0)                   ; X
34    (CALL2 4)                           ; DIV
36    (UNBIND1)
37    (PUSH)
38    (LOAD&CONS&STORE 2)
40    (SKIP 1)
42    (LOAD&CDR&STORE 0)
44    L44
44    (LOAD&PUSH 0)
45    (CALLS1&JMPIFNOT 146 L25)           ; ENDP
48    (SKIP 1)
50    (LOAD&PUSH 0)
51    (CALLS1&STORE 164 0)                ; SYSTEM::LIST-NREVERSE
54    (T&PUSH)
55    (CALL2&PUSH 5)                      ; ADDN
57    (CALL2 6)                           ; MUL
59    L59
59    (UNBIND 2)
61    (SKIP&RET 3)


Wrote file binary-clisp/scs.fas
Wrote file /cygdrive/e/temp/maxima/src/scs.lis