Listing of compilation of file /cygdrive/e/temp/maxima/src/trans4.lisp
on 2002-12-17 13:33:56 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/trans4.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE TRANS4)-2|
(CONST 0) = TRANS4
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRANS4
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(TRANSL-MODULE TRANS4)-3|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DEF%TR MNCTIMES (FORM) ...)-4-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR MNCTIMES (FORM) ...)-4-2-1|>
(CONST 1) = MNCTIMES
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR MNCTIMES (FORM) ...)-4-2-1|>
1     (CONST&PUSH 1)                      ; MNCTIMES
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR MNCTIMES (FORM) ...)-4-2-1|
(CONST 0) = TR-ARGS
(CONST 1) = 2
(CONST 2) = $ANY
(CONST 3) = NCMUL2
(CONST 4) = NCMULN
(CONST 5) = LIST
(CONST 6) = (NIL)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&CDR&PUSH 1)
2     (CALL1 0)                           ; TR-ARGS
4     (STORE 1)
5     (PUSH)
6     (CALLS2&PUSH 71)                    ; LENGTH
8     (CONST&PUSH 1)                      ; 2
9     (CALLSR&JMPIF 1 45 L23)             ; =
13    (CONST&PUSH 2)                      ; $ANY
14    (CONST&PUSH 4)                      ; NCMULN
15    (CONST&PUSH 5)                      ; LIST
16    (LOAD 4)
17    (CONS&PUSH)
18    (CONST 6)                           ; (NIL)
19    (LIST* 3)
21    (SKIP&RET 2)
23    L23
23    (CONST&PUSH 2)                      ; $ANY
24    (CONST&PUSH 3)                      ; NCMUL2
25    (LOAD 3)
26    (LIST* 2)
28    (SKIP&RET 2)


Disassembly of function #:|(DEF%TR MNCEXPT (FORM) ...)-5-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR MNCEXPT (FORM) ...)-5-2-1|>
(CONST 1) = MNCEXPT
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR MNCEXPT (FORM) ...)-5-2-1|>
1     (CONST&PUSH 1)                      ; MNCEXPT
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR MNCEXPT (FORM) ...)-5-2-1|
(CONST 0) = $ANY
(CONST 1) = NCPOWER
(CONST 2) = TR-ARGS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ANY
1     (CONST&PUSH 1)                      ; NCPOWER
2     (LOAD&CDR&PUSH 3)
4     (CALL1 2)                           ; TR-ARGS
6     (LIST* 2)
8     (SKIP&RET 2)


Disassembly of function #:|(COMMENT (DEFUN STRICT-UNION-MODE-OF-TFORMS # ...) (DEFMACRO DEF%MODAL1%TR # ...) ...)-6|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DEF%TR $REMAINDER (FORM) ...)-7-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR $REMAINDER (FORM) ...)-7-2-1|>
(CONST 1) = $REMAINDER
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR $REMAINDER (FORM) ...)-7-2-1|>
1     (CONST&PUSH 1)                      ; $REMAINDER
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $REMAINDER (FORM) ...)-7-2-1|
(CONST 0) = (2)
(CONST 1) = TR-NARGS-CHECK
(CONST 2) = TRANSLATE
(CONST 3) = N
(CONST 4) = 2
(CONST 5) = $FIXNUM
(CONST 6) = REMAINDER
(CONST 7) = $ANY
(CONST 8) = $REMAINDER
(CONST 9) = CDR
(CONST 10) = CALL-AND-SIMP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (N)
42 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CONST&PUSH 0)                      ; (2)
2     (CALL2&PUSH 1)                      ; TR-NARGS-CHECK
4     (CONST&PUSH 2)                      ; TRANSLATE
5     (LOAD&CDR&PUSH 3)
7     (CALLSR&PUSH 0 22)                  ; MAPCAR
10    (LOAD 1)
11    (BIND 3)                            ; N
13    (GETVALUE&PUSH 3)                   ; N
15    (CONST&PUSH 4)                      ; 2
16    (CALLSR&JMPIFNOT 1 45 L33)          ; =
20    (LOAD 3)
21    (CAR)
22    (CAR&PUSH)
23    (JMPIFNOTEQTO 5 L33)                ; $FIXNUM
26    (LOAD 3)
27    (CDR)
28    (CAR)
29    (CAR&PUSH)
30    (JMPIFEQTO 5 L46)                   ; $FIXNUM
33    L33
33    (CONST&PUSH 7)                      ; $ANY
34    (CONST&PUSH 8)                      ; $REMAINDER
35    (CONST&PUSH 9)                      ; CDR
36    (LOAD&PUSH 6)
37    (CALLSR&PUSH 0 22)                  ; MAPCAR
40    (CALL 3 10)                         ; CALL-AND-SIMP
43    L43
43    (UNBIND1)
44    (SKIP&RET 4)
46    L46
46    (CONST&PUSH 5)                      ; $FIXNUM
47    (CONST&PUSH 6)                      ; REMAINDER
48    (LOAD 5)
49    (CAR)
50    (CDR&PUSH)
51    (LOAD 6)
52    (CDR)
53    (CAR)
54    (CDR&PUSH)
55    (LIST 4)
57    (JMP L43)


Disassembly of function #:|(DEF%TR $BETA (FORM) ...)-8-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR $BETA (FORM) ...)-8-2-1|>
(CONST 1) = $BETA
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR $BETA (FORM) ...)-8-2-1|>
1     (CONST&PUSH 1)                      ; $BETA
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $BETA (FORM) ...)-8-2-1|
(CONST 0) = $ANY
(CONST 1) = SIMPLIFY
(CONST 2) = LIST
(CONST 3) = '($BETA)
(CONST 4) = TR-ARGS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
9 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ANY
1     (CONST&PUSH 1)                      ; SIMPLIFY
2     (CONST&PUSH 2)                      ; LIST
3     (CONST&PUSH 3)                      ; '($BETA)
4     (LOAD&CDR&PUSH 5)
6     (CALL1 4)                           ; TR-ARGS
8     (LIST*&PUSH 2)
10    (LIST 3)
12    (SKIP&RET 2)


Disassembly of function #:|(DEF%TR MFACTORIAL (FORM) ...)-9-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR MFACTORIAL (FORM) ...)-9-2-1|>
(CONST 1) = MFACTORIAL
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR MFACTORIAL (FORM) ...)-9-2-1|>
1     (CONST&PUSH 1)                      ; MFACTORIAL
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR MFACTORIAL (FORM) ...)-9-2-1|
(CONST 0) = TRANSLATE
(CONST 1) = $FIXNUM
(CONST 2) = $NUMBER
(CONST 3) = FACTORIAL
(CONST 4) = $ANY
(CONST 5) = SIMPLIFY
(CONST 6) = SYSTEM::BACKQUOTE
(CONST 7) = (MFACTORIAL)
(CONST 8) = SYSTEM::UNQUOTE
(CONST 9) = LIST
(CONST 10) = '(MFACTORIAL)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
30 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CAR&PUSH)
3     (CALL1 0)                           ; TRANSLATE
5     (STORE 1)
6     (CAR&PUSH)
7     (JMPIFEQTO 1 L34)                   ; $FIXNUM
10    (CONST&PUSH 4)                      ; $ANY
11    (CONST&PUSH 5)                      ; SIMPLIFY
12    (CONST&PUSH 6)                      ; SYSTEM::BACKQUOTE
13    (CONST&PUSH 7)                      ; (MFACTORIAL)
14    (CONST&PUSH 8)                      ; SYSTEM::UNQUOTE
15    (LOAD&CDR&PUSH 6)
17    (LIST&PUSH 2)
19    (LIST&PUSH 2)
21    (CONST&PUSH 9)                      ; LIST
22    (CONST&PUSH 10)                     ; '(MFACTORIAL)
23    (LOAD&CDR&PUSH 7)
25    (LIST&PUSH 3)
27    (LIST 3)
29    L29
29    (PUSH)
30    (LIST 3)
32    (SKIP&RET 2)
34    L34
34    (CONST&PUSH 2)                      ; $NUMBER
35    (CONST&PUSH 3)                      ; FACTORIAL
36    (LOAD 3)
37    (CDR)
38    (JMP L29)


Disassembly of function #:|(DEF%TR %SUM (FORM) ...)-10-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR %SUM (FORM) ...)-10-2-1|>
(CONST 1) = %SUM
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR %SUM (FORM) ...)-10-2-1|>
1     (CONST&PUSH 1)                      ; %SUM
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR %SUM (FORM) ...)-10-2-1|
(CONST 0) = $ANY
(CONST 1) = MEVAL
(CONST 2) = QUOTE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ANY
1     (CONST&PUSH 1)                      ; MEVAL
2     (CONST&PUSH 2)                      ; QUOTE
3     (LOAD&PUSH 4)
4     (LIST&PUSH 2)
6     (LIST 3)
8     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR %PRODUCT (FORM) ...)-11-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR %PRODUCT (FORM) ...)-11-2-1|>
(CONST 1) = %PRODUCT
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR %PRODUCT (FORM) ...)-11-2-1|>
1     (CONST&PUSH 1)                      ; %PRODUCT
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR %PRODUCT (FORM) ...)-11-2-1|
(CONST 0) = $ANY
(CONST 1) = MEVAL
(CONST 2) = QUOTE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ANY
1     (CONST&PUSH 1)                      ; MEVAL
2     (CONST&PUSH 2)                      ; QUOTE
3     (LOAD&PUSH 4)
4     (LIST&PUSH 2)
6     (LIST 3)
8     (SKIP&RET 2)


Disassembly of function #:|(MAPC #'(LAMBDA # #) '(# # # ...))-12|
(CONST 0) = 
((PROC-$MATCHDECLARE . $MATCHDECLARE) (PROC-$DEFMATCH . $DEFMATCH)
 (PROC-$DEFRULE . $DEFRULE) (PROC-$TELLSIMPAFTER . $TELLSIMPAFTER)
 (PROC-$TELLSIMP . $TELLSIMP))
(CONST 1) = X
(CONST 2) = AUTOLOAD
(CONST 3) = PUTPROP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
28 byte-code instructions:
0     (CONST&PUSH 0)                      ; (# # # ...)
1     (JMP L34)
3     L3
3     (LOAD&CAR&PUSH 0)
5     (LOAD 0)
6     (BIND 1)                            ; X
8     (GETVALUE 1)                        ; X
10    (CDR&PUSH)
11    (CONST&PUSH 2)                      ; AUTOLOAD
12    (PUSH-UNBOUND 1)
14    (CALLS2&PUSH 132)                   ; GET
16    (LOAD&JMPIFNOT 0 L27)
19    (GETVALUE 1)                        ; X
21    (CAR&PUSH)
22    (LOAD&PUSH 1)
23    (CONST&PUSH 2)                      ; AUTOLOAD
24    (CALL 3 3)                          ; PUTPROP
27    L27
27    (SKIP 1)
29    (UNBIND1)
30    (SKIP 1)
32    (LOAD&CDR&STORE 0)
34    L34
34    (LOAD&PUSH 0)
35    (CALLS1&JMPIFNOT 146 L3)            ; ENDP
38    (SKIP 1)
40    (CONST 0)                           ; (# # # ...)
41    (SKIP&RET 1)


Disassembly of function #:|(DEFUN YUK-SU-META-PROP (F FORM) ...)-13|
(CONST 0) = YUK-SU-META-PROP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE YUK-SU-META-PROP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; YUK-SU-META-PROP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; YUK-SU-META-PROP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE YUK-SU-META-PROP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; YUK-SU-META-PROP
8     (SKIP&RET 1)


Disassembly of function YUK-SU-META-PROP
(CONST 0) = F
(CONST 1) = META-PROP-P
(CONST 2) = META-PROP-L
(CONST 3) = $ANY
(CONST 4) = PROGN
(CONST 5) = 'COMPILE
(CONST 6) = PATCH-UP-MEVAL-IN-FSET
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (META-PROP-L F)
19 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; F
3     (T)
4     (BIND 1)                            ; META-PROP-P
6     (NIL)
7     (BIND 2)                            ; META-PROP-L
9     (GETVALUE&PUSH 0)                   ; F
11    (LOAD&CDR&PUSH 11)
13    (FUNCALL 1)
15    (CONST&PUSH 3)                      ; $ANY
16    (CONST&PUSH 4)                      ; PROGN
17    (CONST&PUSH 5)                      ; 'COMPILE
18    (CONST&SYMBOL-FUNCTION&PUSH 6)      ; PATCH-UP-MEVAL-IN-FSET
20    (GETVALUE&PUSH 2)                   ; META-PROP-L
22    (CALLS2&PUSH 73)                    ; NREVERSE
24    (CALLSR 0 22)                       ; MAPCAR
27    (LIST* 3)
29    (UNBIND 3)
31    (SKIP&RET 3)


Disassembly of function #:|(DEF%TR $MATCHDECLARE (FORM) ...)-14-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR $MATCHDECLARE (FORM) ...)-14-2-1|>
(CONST 1) = $MATCHDECLARE
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR $MATCHDECLARE (FORM) ...)-14-2-1|>
1     (CONST&PUSH 1)                      ; $MATCHDECLARE
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $MATCHDECLARE (FORM) ...)-14-2-1|
(CONST 0) = L
(CONST 1) = MLIST
(CONST 2) = $ANY.
(CONST 3) = PROGN
(CONST 4) = 'COMPILE
(CONST 5) = VAR
(CONST 6) = ($DEFINE_VARIABLE)
(CONST 7) = (MQUOTE)
(CONST 8) = ($ANY)
(CONST 9) = DTRANSLATE
(CONST 10) = (SUB_$MATCHDECLARE)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VAR L)
writes special variable : (L)
74 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (BIND 0)                            ; L
4     (NIL&PUSH)
5     (GETVALUE 0)                        ; L
7     (JMPIFNOT L41)
9     L9
9     (GETVALUE 0)                        ; L
11    (CAR)
12    (JMPIFATOM L48)
14    (GETVALUE 0)                        ; L
16    (CAR)
17    (CAR)
18    (CAR&PUSH)
19    (JMPIFNOTEQTO 1 L31)                ; MLIST
22    (GETVALUE 0)                        ; L
24    (CAR)
25    (CDR&PUSH)
26    (LOAD&PUSH 1)
27    (CALLSR&STORE 2 34 0)               ; APPEND
31    L31
31    (GETVALUE 0)                        ; L
33    (CDR)
34    (CDR)
35    (SETVALUE 0)                        ; L
37    (GETVALUE 0)                        ; L
39    (JMPIF L9)
41    L41
41    (CONST&PUSH 2)                      ; $ANY.
42    (CONST&PUSH 3)                      ; PROGN
43    (CONST&PUSH 4)                      ; 'COMPILE
44    (NIL&PUSH)
45    (LOAD&PUSH 4)
46    (JMP L81)
48    L48
48    (GETVALUE 0)                        ; L
50    (CAR&PUSH)
51    (LOAD&CONS&STORE 0)
53    (JMP L31)
55    L55
55    (LOAD&CAR&PUSH 0)
57    (LOAD 0)
58    (BIND 5)                            ; VAR
60    (CONST&PUSH 6)                      ; ($DEFINE_VARIABLE)
61    (GETVALUE&PUSH 5)                   ; VAR
63    (CONST&PUSH 7)                      ; (MQUOTE)
64    (GETVALUE&PUSH 5)                   ; VAR
66    (LIST&PUSH 2)
68    (CONST 8)                           ; ($ANY)
69    (LIST*&PUSH 3)
71    (CALL1 9)                           ; DTRANSLATE
73    (UNBIND1)
74    (PUSH)
75    (LOAD&CONS&STORE 2)
77    (SKIP 1)
79    (LOAD&CDR&STORE 0)
81    L81
81    (LOAD&PUSH 0)
82    (CALLS1&JMPIFNOT 146 L55)           ; ENDP
85    (SKIP 1)
87    (LOAD&PUSH 0)
88    (CALLS1&STORE 164 0)                ; SYSTEM::LIST-NREVERSE
91    (CONST&PUSH 10)                     ; (SUB_$MATCHDECLARE)
92    (LOAD 10)
93    (CDR)
94    (CONS&PUSH)
95    (CALL1&PUSH 9)                      ; DTRANSLATE
97    (LIST&PUSH 1)
99    (CALLSR 2 34)                       ; APPEND
102   (LIST*&PUSH 2)
104   (LIST 2)
106   (SKIP 1)
108   (UNBIND1)
109   (SKIP&RET 2)


Disassembly of function #:|(DEF%TR SUB_$MATCHDECLARE (FORM) ...)-15-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR SUB_$MATCHDECLARE (FORM) ...)-15-2-1|>
(CONST 1) = SUB_$MATCHDECLARE
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR SUB_$MATCHDECLARE (FORM) ...)-15-2-1|>
1     (CONST&PUSH 1)                      ; SUB_$MATCHDECLARE
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR SUB_$MATCHDECLARE (FORM) ...)-15-2-1|
(CONST 0) = PROC-$MATCHDECLARE
(CONST 1) = ($MATCHDECLARE)
(CONST 2) = YUK-SU-META-PROP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PROC-$MATCHDECLARE
1     (CONST&PUSH 1)                      ; ($MATCHDECLARE)
2     (LOAD 3)
3     (CDR)
4     (CONS&PUSH)
5     (CALL2 2)                           ; YUK-SU-META-PROP
7     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $DEFMATCH (FORM) ...)-16-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR $DEFMATCH (FORM) ...)-16-2-1|>
(CONST 1) = $DEFMATCH
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR $DEFMATCH (FORM) ...)-16-2-1|>
1     (CONST&PUSH 1)                      ; $DEFMATCH
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $DEFMATCH (FORM) ...)-16-2-1|
(CONST 0) = PROC-$DEFMATCH
(CONST 1) = YUK-SU-META-PROP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; PROC-$DEFMATCH
1     (LOAD&PUSH 2)
2     (CALL2 1)                           ; YUK-SU-META-PROP
4     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $TELLSIMP (FORM) ...)-17-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR $TELLSIMP (FORM) ...)-17-2-1|>
(CONST 1) = $TELLSIMP
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR $TELLSIMP (FORM) ...)-17-2-1|>
1     (CONST&PUSH 1)                      ; $TELLSIMP
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $TELLSIMP (FORM) ...)-17-2-1|
(CONST 0) = PROC-$TELLSIMP
(CONST 1) = YUK-SU-META-PROP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; PROC-$TELLSIMP
1     (LOAD&PUSH 2)
2     (CALL2 1)                           ; YUK-SU-META-PROP
4     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $TELLSIMPAFTER (FORM) ...)-18-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR $TELLSIMPAFTER (FORM) ...)-18-2-1|>
(CONST 1) = $TELLSIMPAFTER
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR $TELLSIMPAFTER (FORM) ...)-18-2-1|>
1     (CONST&PUSH 1)                      ; $TELLSIMPAFTER
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $TELLSIMPAFTER (FORM) ...)-18-2-1|
(CONST 0) = PROC-$TELLSIMPAFTER
(CONST 1) = YUK-SU-META-PROP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; PROC-$TELLSIMPAFTER
1     (LOAD&PUSH 2)
2     (CALL2 1)                           ; YUK-SU-META-PROP
4     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $DEFRULE (FORM) ...)-19-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEF%TR $DEFRULE (FORM) ...)-19-2-1|>
(CONST 1) = $DEFRULE
(CONST 2) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEF%TR $DEFRULE (FORM) ...)-19-2-1|>
1     (CONST&PUSH 1)                      ; $DEFRULE
2     (CONST&PUSH 2)                      ; TRANSLATE
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEF%TR $DEFRULE (FORM) ...)-19-2-1|
(CONST 0) = PROC-$DEFRULE
(CONST 1) = YUK-SU-META-PROP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; PROC-$DEFRULE
1     (LOAD&PUSH 2)
2     (CALL2 1)                           ; YUK-SU-META-PROP
4     (SKIP&RET 2)


Disassembly of function #:|(DEFUN PATCH-UP-MEVAL-IN-FSET (FORM) ...)-20|
(CONST 0) = PATCH-UP-MEVAL-IN-FSET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PATCH-UP-MEVAL-IN-FSET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PATCH-UP-MEVAL-IN-FSET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PATCH-UP-MEVAL-IN-FSET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PATCH-UP-MEVAL-IN-FSET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PATCH-UP-MEVAL-IN-FSET
8     (SKIP&RET 1)


Disassembly of function PATCH-UP-MEVAL-IN-FSET
(CONST 0) = FSET
(CONST 1) = "~%Translating rule or match ~:M"
(CONST 2) = TR-FORMAT
(CONST 3) = LISP->LISP-TR-LAMBDA
(CONST 4) = L
(CONST 5) = DEFUN
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
37 byte-code instructions:
0     (LOAD&CAR&PUSH 1)
2     (JMPIFNOTEQTO 0 L41)                ; FSET
5     (CONST&PUSH 1)                      ; "~%Translating rule or match ~:M"
6     (LOAD 2)
7     (CDR)
8     (CAR)
9     (CDR)
10    (CAR&PUSH)
11    (CALL2 2)                           ; TR-FORMAT
13    (LOAD 1)
14    (CDR)
15    (CDR)
16    (CAR)
17    (CDR)
18    (CAR&PUSH)
19    (CALL1 3)                           ; LISP->LISP-TR-LAMBDA
21    (BIND 4)                            ; L
23    (GETVALUE 4)                        ; L
25    (JMPIFNOT L44)
27    (CONST&PUSH 5)                      ; DEFUN
28    (LOAD 5)
29    (CDR)
30    (CAR)
31    (CDR)
32    (CAR&PUSH)
33    (GETVALUE 4)                        ; L
35    (CDR)
36    (LIST* 2)
38    L38
38    (UNBIND1)
39    (SKIP&RET 2)
41    L41
41    (LOAD 1)
42    (SKIP&RET 2)
44    L44
44    (LOAD 4)
45    (JMP L38)


Disassembly of function #:|(DEFVAR LISP->LISP-TR-LAMBDA T)-21|
(CONST 0) = (SPECIAL LISP->LISP-TR-LAMBDA)
(CONST 1) = LISP->LISP-TR-LAMBDA
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL LISP->LISP-TR-LAMBDA)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; LISP->LISP-TR-LAMBDA
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; LISP->LISP-TR-LAMBDA
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; LISP->LISP-TR-LAMBDA
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN LISP->LISP-TR-LAMBDA (L) ...)-22|
(CONST 0) = LISP->LISP-TR-LAMBDA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LISP->LISP-TR-LAMBDA>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LISP->LISP-TR-LAMBDA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LISP->LISP-TR-LAMBDA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LISP->LISP-TR-LAMBDA>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LISP->LISP-TR-LAMBDA
8     (SKIP&RET 1)


Disassembly of function LISP->LISP-TR-LAMBDA
(CONST 0) = L
(CONST 1) = LISP->LISP-TR-LAMBDA
(CONST 2) = TR-LISP->LISP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L LISP->LISP-TR-LAMBDA)
12 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (GETVALUE 1)                        ; LISP->LISP-TR-LAMBDA
5     (JMPIFNOT1 L15)
7     (CONST 1)                           ; LISP->LISP-TR-LAMBDA
8     (CATCH-OPEN L15)
10    (GETVALUE&PUSH 0)                   ; L
12    (CALL1 2)                           ; TR-LISP->LISP
14    (CATCH-CLOSE)
15    L15
15    (UNBIND1)
16    (SKIP&RET 2)


Disassembly of function #:|(DEFUN TR-LISP->LISP (EXP) ...)-23|
(CONST 0) = TR-LISP->LISP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TR-LISP->LISP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TR-LISP->LISP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TR-LISP->LISP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TR-LISP->LISP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TR-LISP->LISP
8     (SKIP&RET 1)


Disassembly of function TR-LISP->LISP
(CONST 0) = EXP
(CONST 1) = TRANSLATE-ATOM
(CONST 2) = TR-LISP->LISP
(CONST 3) = TR-LISP->LISP-DEFAULT
(CONST 4) = "Punting: non-symbolic operator"
(CONST 5) = TR-TELL
(CONST 6) = LISP->LISP-TR-LAMBDA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (EXP)
32 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; EXP
3     (GETVALUE 0)                        ; EXP
5     (JMPIFATOM L33)
7     (GETVALUE 0)                        ; EXP
9     (CAR&PUSH)
10    (LOAD&PUSH 0)
11    (CALLS2&JMPIFNOT 6 L40)             ; SYMBOLP
14    (LOAD&PUSH 0)
15    (CONST&PUSH 2)                      ; TR-LISP->LISP
16    (PUSH-UNBOUND 1)
18    (CALLS2&JMPIF 132 L23)              ; GET
21    (CONST&SYMBOL-FUNCTION 3)           ; TR-LISP->LISP-DEFAULT
23    L23
23    (PUSH)
24    (GETVALUE&PUSH 0)                   ; EXP
26    (FUNCALL 1)
28    (SKIP 1)
30    L30
30    (UNBIND1)
31    (SKIP&RET 2)
33    L33
33    (GETVALUE&PUSH 0)                   ; EXP
35    (CALL1 1)                           ; TRANSLATE-ATOM
37    (CDR)
38    (JMP L30)
40    L40
40    (CONST&PUSH 4)                      ; "Punting: non-symbolic operator"
41    (CALL1 5)                           ; TR-TELL
43    (CONST&PUSH 6)                      ; LISP->LISP-TR-LAMBDA
44    (NIL)
45    (THROW)


Disassembly of function #:|(DEFUN TR-LISP->LISP-DEFAULT (EXP) ...)-24|
(CONST 0) = TR-LISP->LISP-DEFAULT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TR-LISP->LISP-DEFAULT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TR-LISP->LISP-DEFAULT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TR-LISP->LISP-DEFAULT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TR-LISP->LISP-DEFAULT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TR-LISP->LISP-DEFAULT
8     (SKIP&RET 1)


Disassembly of function TR-LISP->LISP-DEFAULT
(CONST 0) = EXP
(CONST 1) = MACSYMA-SPECIAL-OP-P
(CONST 2) = "Punting: unhandled special operator ~:@M"
(CONST 3) = TR-TELL
(CONST 4) = LISP->LISP-TR-LAMBDA
(CONST 5) = TR-LISP->LISP-FUN
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (EXP)
17 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; EXP
3     (GETVALUE 0)                        ; EXP
5     (CAR&PUSH)
6     (CALL1&JMPIF 1 L16)                 ; MACSYMA-SPECIAL-OP-P
9     (GETVALUE&PUSH 0)                   ; EXP
11    (CALL1 5)                           ; TR-LISP->LISP-FUN
13    (UNBIND1)
14    (SKIP&RET 2)
16    L16
16    (CONST&PUSH 2)                      ; "Punting: unhandled special operator ~:@M"
17    (GETVALUE 0)                        ; EXP
19    (CAR&PUSH)
20    (CALL2 3)                           ; TR-TELL
22    (CONST&PUSH 4)                      ; LISP->LISP-TR-LAMBDA
23    (NIL)
24    (THROW)


Disassembly of function #:|(DEFUN TR-LISP->LISP-FUN (EXP) ...)-25|
(CONST 0) = TR-LISP->LISP-FUN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TR-LISP->LISP-FUN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TR-LISP->LISP-FUN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TR-LISP->LISP-FUN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TR-LISP->LISP-FUN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TR-LISP->LISP-FUN
8     (SKIP&RET 1)


Disassembly of function TR-LISP->LISP-FUN
(CONST 0) = EXP
(CONST 1) = MAPTR-LISP->LISP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (EXP)
10 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; EXP
3     (GETVALUE 0)                        ; EXP
5     (CAR&PUSH)
6     (GETVALUE 0)                        ; EXP
8     (CDR&PUSH)
9     (CALL1 1)                           ; MAPTR-LISP->LISP
11    (CONS)
12    (UNBIND1)
13    (SKIP&RET 2)


Disassembly of function #:|(DEFUN MAPTR-LISP->LISP (L) ...)-26|
(CONST 0) = MAPTR-LISP->LISP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAPTR-LISP->LISP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAPTR-LISP->LISP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAPTR-LISP->LISP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAPTR-LISP->LISP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAPTR-LISP->LISP
8     (SKIP&RET 1)


Disassembly of function MAPTR-LISP->LISP
(CONST 0) = L
(CONST 1) = TR-LISP->LISP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
7 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (CONST&SYMBOL-FUNCTION&PUSH 1)      ; TR-LISP->LISP
5     (GETVALUE&PUSH 0)                   ; L
7     (CALLSR 0 22)                       ; MAPCAR
10    (UNBIND1)
11    (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (DECLARE TR-LISP->LISP) (FORM) ...)-27-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (DECLARE TR-LISP->LISP) (FORM) ...)-27-2-1|>
(CONST 1) = DECLARE
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (DECLARE TR-LISP->LISP) (FORM) ...)-27-2-1|>
1     (CONST&PUSH 1)                      ; DECLARE
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (DECLARE TR-LISP->LISP) (FORM) ...)-27-2-1|
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (LOAD 1)
1     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (LAMBDA TR-LISP->LISP) (FORM) ...)-28-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (LAMBDA TR-LISP->LISP) (FORM) ...)-28-2-1|>
(CONST 1) = LAMBDA
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (LAMBDA TR-LISP->LISP) (FORM) ...)-28-2-1|>
1     (CONST&PUSH 1)                      ; LAMBDA
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (LAMBDA TR-LISP->LISP) (FORM) ...)-28-2-1|
(CONST 0) = TBIND
(CONST 1) = MAPTR-LISP->LISP
(CONST 2) = FUNCTION
(CONST 3) = LAMBDA
(CONST 4) = TUNBINDS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&CDR&PUSH 2)
3     (LOAD&CAR&STORE 0 1)
6     (LOAD&CDR&STORE 0)
8     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; TBIND
10    (LOAD&PUSH 2)
11    (CALLSR 0 24)                       ; MAPC
14    (LOAD&PUSH 0)
15    (CALL1 1)                           ; MAPTR-LISP->LISP
17    (STORE 0)
18    (CONST&PUSH 2)                      ; FUNCTION
19    (CONST&PUSH 3)                      ; LAMBDA
20    (LOAD&PUSH 3)
21    (CALL1&PUSH 4)                      ; TUNBINDS
23    (LOAD 3)
24    (LIST*&PUSH 2)
26    (LIST 2)
28    (SKIP&RET 4)


Disassembly of function #:|(DEFUN-PROP (PROG TR-LISP->LISP) (FORM) ...)-29-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (PROG TR-LISP->LISP) (FORM) ...)-29-2-1|>
(CONST 1) = PROG
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (PROG TR-LISP->LISP) (FORM) ...)-29-2-1|>
1     (CONST&PUSH 1)                      ; PROG
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (PROG TR-LISP->LISP) (FORM) ...)-29-2-1|
(CONST 0) = TBIND
(CONST 1) = X
(CONST 2) = TR-LISP->LISP
(CONST 3) = PROG
(CONST 4) = TUNBINDS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
41 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&CDR&PUSH 2)
3     (LOAD&CAR&STORE 0 1)
6     (LOAD&CDR&STORE 0)
8     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; TBIND
10    (LOAD&PUSH 2)
11    (CALLSR 0 24)                       ; MAPC
14    (NIL&PUSH)
15    (LOAD&PUSH 1)
16    (JMP L43)
18    L18
18    (GETVALUE 1)                        ; X
20    (JMP L35)
22    L22
22    (LOAD&CAR&PUSH 0)
24    (LOAD 0)
25    (BIND 1)                            ; X
27    (GETVALUE 1)                        ; X
29    (JMPIFATOM L18)
31    (GETVALUE&PUSH 1)                   ; X
33    (CALL1 2)                           ; TR-LISP->LISP
35    L35
35    (UNBIND1)
36    (PUSH)
37    (LOAD&CONS&STORE 2)
39    (SKIP 1)
41    (LOAD&CDR&STORE 0)
43    L43
43    (LOAD&PUSH 0)
44    (CALLS1&JMPIFNOT 146 L22)           ; ENDP
47    (SKIP 1)
49    (LOAD&PUSH 0)
50    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
52    (SKIP 1)
54    (STORE 0)
55    (CONST&PUSH 3)                      ; PROG
56    (LOAD&PUSH 2)
57    (CALL1&PUSH 4)                      ; TUNBINDS
59    (LOAD 2)
60    (LIST* 2)
62    (SKIP&RET 4)


Disassembly of function #:|(DEFUN-PROP (RETLIST TR-LISP->LISP) (FORM) ...)-30-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (RETLIST TR-LISP->LISP) (FORM) ...)-30-2-1|>
(CONST 1) = RETLIST
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (RETLIST TR-LISP->LISP) (FORM) ...)-30-2-1|>
1     (CONST&PUSH 1)                      ; RETLIST
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (RETLIST TR-LISP->LISP) (FORM) ...)-30-2-1|
(CONST 0) = MARRAYREF
(CONST 1) = (RETLIST_TR)
(CONST 2) = PUSH-AUTOLOAD-DEF
(CONST 3) = RETLIST_TR
(CONST 4) = QUOTE
(CONST 5) = TR-LISP->LISP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
28 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARRAYREF
1     (CONST&PUSH 1)                      ; (RETLIST_TR)
2     (CALL2 2)                           ; PUSH-AUTOLOAD-DEF
4     (CONST&PUSH 3)                      ; RETLIST_TR
5     (NIL&PUSH)
6     (LOAD&CDR&PUSH 3)
8     (JMP L29)
10    L10
10    (LOAD&CAR&PUSH 0)
12    (CONST&PUSH 4)                      ; QUOTE
13    (LOAD&PUSH 1)
14    (LIST&PUSH 2)
16    (LOAD&PUSH 1)
17    (CALL1&PUSH 5)                      ; TR-LISP->LISP
19    (LIST&PUSH 2)
21    (LOAD&PUSH 3)
22    (CALLS1&STORE 163 2)                ; NRECONC
25    (SKIP 1)
27    (LOAD&CDR&STORE 0)
29    L29
29    (LOAD&PUSH 0)
30    (CALLS1&JMPIFNOT 146 L10)           ; ENDP
33    (SKIP 1)
35    (LOAD&PUSH 0)
36    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
38    (SKIP 1)
40    (CONS)
41    (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP 'TR-LISP->LISP (FORM) ...)-31-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP 'TR-LISP->LISP (FORM) ...)-31-2-1|>
(CONST 1) = QUOTE
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP 'TR-LISP->LISP (FORM) ...)-31-2-1|>
1     (CONST&PUSH 1)                      ; QUOTE
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP 'TR-LISP->LISP (FORM) ...)-31-2-1|
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (LOAD 1)
1     (SKIP&RET 2)


Disassembly of function #:|(DEFPROP CATCH TR-LISP->LISP-FUN ...)-32|
(CONST 0) = CATCH
(CONST 1) = TR-LISP->LISP
(CONST 2) = TR-LISP->LISP-FUN
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; CATCH
1     (CONST&PUSH 1)                      ; TR-LISP->LISP
2     (CONST&PUSH 2)                      ; TR-LISP->LISP-FUN
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFPROP THROW TR-LISP->LISP-FUN ...)-33|
(CONST 0) = THROW
(CONST 1) = TR-LISP->LISP
(CONST 2) = TR-LISP->LISP-FUN
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; THROW
1     (CONST&PUSH 1)                      ; TR-LISP->LISP
2     (CONST&PUSH 2)                      ; TR-LISP->LISP-FUN
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFPROP RETURN TR-LISP->LISP-FUN ...)-34|
(CONST 0) = RETURN
(CONST 1) = TR-LISP->LISP
(CONST 2) = TR-LISP->LISP-FUN
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; RETURN
1     (CONST&PUSH 1)                      ; TR-LISP->LISP
2     (CONST&PUSH 2)                      ; TR-LISP->LISP-FUN
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFPROP FUNCTION TR-LISP->LISP-FUN ...)-35|
(CONST 0) = FUNCTION
(CONST 1) = TR-LISP->LISP
(CONST 2) = TR-LISP->LISP-FUN
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; FUNCTION
1     (CONST&PUSH 1)                      ; TR-LISP->LISP
2     (CONST&PUSH 2)                      ; TR-LISP->LISP-FUN
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFUN-PROP (SETQ TR-LISP->LISP) (FORM) ...)-36-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (SETQ TR-LISP->LISP) (FORM) ...)-36-2-1|>
(CONST 1) = SETQ
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (SETQ TR-LISP->LISP) (FORM) ...)-36-2-1|>
1     (CONST&PUSH 1)                      ; SETQ
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (SETQ TR-LISP->LISP) (FORM) ...)-36-2-1|
(CONST 0) = L
(CONST 1) = N
(CONST 2) = TR-LISP->LISP
(CONST 3) = SETQ
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (N L)
writes special variables : (L N)
33 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (BIND 0)                            ; L
4     (NIL)
5     (BIND 1)                            ; N
7     (GETVALUE 0)                        ; L
9     (JMPIFNOT L40)
11    L11
11    (GETVALUE 0)                        ; L
13    (CAR&PUSH)
14    (GETVALUE 1)                        ; N
16    (CONS)
17    (SETVALUE 1)                        ; N
19    (GETVALUE 0)                        ; L
21    (CDR)
22    (CAR&PUSH)
23    (CALL1&PUSH 2)                      ; TR-LISP->LISP
25    (GETVALUE 1)                        ; N
27    (CONS)
28    (SETVALUE 1)                        ; N
30    (GETVALUE 0)                        ; L
32    (CDR)
33    (CDR)
34    (SETVALUE 0)                        ; L
36    (GETVALUE 0)                        ; L
38    (JMPIF L11)
40    L40
40    (CONST&PUSH 3)                      ; SETQ
41    (GETVALUE&PUSH 1)                   ; N
43    (CALLS2 73)                         ; NREVERSE
45    (CONS)
46    (UNBIND 2)
48    (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (MSETQ TR-LISP->LISP) (FORM) ...)-37-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (MSETQ TR-LISP->LISP) (FORM) ...)-37-2-1|>
(CONST 1) = MSETQ
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (MSETQ TR-LISP->LISP) (FORM) ...)-37-2-1|>
1     (CONST&PUSH 1)                      ; MSETQ
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (MSETQ TR-LISP->LISP) (FORM) ...)-37-2-1|
(CONST 0) = (MSETQ)
(CONST 1) = TRANSLATE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; (MSETQ)
1     (LOAD 2)
2     (CDR)
3     (CONS&PUSH)
4     (CALL1 1)                           ; TRANSLATE
6     (CDR)
7     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (COND TR-LISP->LISP) (FORM) ...)-38-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (COND TR-LISP->LISP) (FORM) ...)-38-2-1|>
(CONST 1) = COND
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (COND TR-LISP->LISP) (FORM) ...)-38-2-1|>
1     (CONST&PUSH 1)                      ; COND
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (COND TR-LISP->LISP) (FORM) ...)-38-2-1|
(CONST 0) = COND
(CONST 1) = MAPTR-LISP->LISP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; COND
1     (CONST&SYMBOL-FUNCTION&PUSH 1)      ; MAPTR-LISP->LISP
3     (LOAD&CDR&PUSH 3)
5     (CALLSR 0 22)                       ; MAPCAR
8     (CONS)
9     (SKIP&RET 2)


Disassembly of function #:|(DEFPROP NOT TR-LISP->LISP-FUN ...)-39|
(CONST 0) = NOT
(CONST 1) = TR-LISP->LISP
(CONST 2) = TR-LISP->LISP-FUN
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; NOT
1     (CONST&PUSH 1)                      ; TR-LISP->LISP
2     (CONST&PUSH 2)                      ; TR-LISP->LISP-FUN
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFPROP AND TR-LISP->LISP-FUN ...)-40|
(CONST 0) = AND
(CONST 1) = TR-LISP->LISP
(CONST 2) = TR-LISP->LISP-FUN
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; AND
1     (CONST&PUSH 1)                      ; TR-LISP->LISP
2     (CONST&PUSH 2)                      ; TR-LISP->LISP-FUN
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFPROP OR TR-LISP->LISP-FUN ...)-41|
(CONST 0) = OR
(CONST 1) = TR-LISP->LISP
(CONST 2) = TR-LISP->LISP-FUN
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; OR
1     (CONST&PUSH 1)                      ; TR-LISP->LISP
2     (CONST&PUSH 2)                      ; TR-LISP->LISP-FUN
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFVAR UNBOUND-MEVAL-KLUDGE-FIX T)-42|
(CONST 0) = (SPECIAL UNBOUND-MEVAL-KLUDGE-FIX)
(CONST 1) = UNBOUND-MEVAL-KLUDGE-FIX
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL UNBOUND-MEVAL-KLUDGE-FIX)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; UNBOUND-MEVAL-KLUDGE-FIX
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; UNBOUND-MEVAL-KLUDGE-FIX
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; UNBOUND-MEVAL-KLUDGE-FIX
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN-PROP (MEVAL TR-LISP->LISP) (FORM) ...)-43-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (MEVAL TR-LISP->LISP) (FORM) ...)-43-2-1|>
(CONST 1) = MEVAL
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (MEVAL TR-LISP->LISP) (FORM) ...)-43-2-1|>
1     (CONST&PUSH 1)                      ; MEVAL
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (MEVAL TR-LISP->LISP) (FORM) ...)-43-2-1|
(CONST 0) = QUOTE
(CONST 1) = TRANSLATE
(CONST 2) = UNBOUND-MEVAL-KLUDGE-FIX
(CONST 3) = "Punting: Unbound MEVAL found!"
(CONST 4) = TR-TELL
(CONST 5) = LISP->LISP-TR-LAMBDA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (UNBOUND-MEVAL-KLUDGE-FIX)
25 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CAR)
3     (STORE 1)
4     (JMPIFATOM L11)
6     (LOAD&CAR&PUSH 1)
8     (JMPIFEQTO 0 L21)                   ; QUOTE
11    L11
11    (GETVALUE 2)                        ; UNBOUND-MEVAL-KLUDGE-FIX
13    (JMPIF L29)
15    (CONST&PUSH 3)                      ; "Punting: Unbound MEVAL found!"
16    (CALL1 4)                           ; TR-TELL
18    (CONST&PUSH 5)                      ; LISP->LISP-TR-LAMBDA
19    (NIL)
20    (THROW)
21    L21
21    (LOAD 1)
22    (CDR)
23    (CAR&PUSH)
24    (CALL1 1)                           ; TRANSLATE
26    (CDR)
27    (SKIP&RET 2)
29    L29
29    (LOAD 1)
30    (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (IS TR-LISP->LISP) (FORM) ...)-44-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFUN-PROP (IS TR-LISP->LISP) (FORM) ...)-44-2-1|>
(CONST 1) = IS
(CONST 2) = TR-LISP->LISP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFUN-PROP (IS TR-LISP->LISP) (FORM) ...)-44-2-1|>
1     (CONST&PUSH 1)                      ; IS
2     (CONST&PUSH 2)                      ; TR-LISP->LISP
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN-PROP (IS TR-LISP->LISP) (FORM) ...)-44-2-1|
(CONST 0) = QUOTE
(CONST 1) = ($IS)
(CONST 2) = TRANSLATE
(CONST 3) = "Punting: Unbound IS found!"
(CONST 4) = TR-TELL
(CONST 5) = LISP->LISP-TR-LAMBDA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD 1)
1     (CDR)
2     (CAR)
3     (STORE 1)
4     (JMPIFATOM L22)
6     (LOAD&CAR&PUSH 1)
8     (JMPIFNOTEQTO 0 L22)                ; QUOTE
11    (CONST&PUSH 1)                      ; ($IS)
12    (LOAD 2)
13    (CDR)
14    (CAR&PUSH)
15    (LIST&PUSH 2)
17    (CALL1 2)                           ; TRANSLATE
19    (CDR)
20    (SKIP&RET 2)
22    L22
22    (CONST&PUSH 3)                      ; "Punting: Unbound IS found!"
23    (CALL1 4)                           ; TR-TELL
25    (CONST&PUSH 5)                      ; LISP->LISP-TR-LAMBDA
26    (NIL)
27    (THROW)


Wrote file binary-clisp/trans4.fas
Wrote file /cygdrive/e/temp/maxima/src/trans4.lis