Listing of compilation of file /cygdrive/e/temp/maxima/src/algsys.lisp
on 2002-12-17 13:35:31 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/algsys.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE ALGSYS)-2|
(CONST 0) = ALGSYS
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; ALGSYS
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(LOAD-MACSYMA-MACROS RATMAC)-3|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(EVAL-WHEN (EVAL COMPILE))-4|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL $ALGDELTA $RATEPSILON ...) (*LEXPR $RATSIMP) ...)-5|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ALGDELTA 1.0E-4)-6-1|
(CONST 0) = $ALGDELTA
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 1.0E-4
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ALGDELTA
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ALGDELTA
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 1.0E-4
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ALGDELTA 1.0E-4)-6-2|
(CONST 0) = (SPECIAL $ALGDELTA)
(CONST 1) = $ALGDELTA
(CONST 2) = 1.0E-4
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ALGDELTA)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ALGDELTA
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ALGDELTA
8     (CONST&PUSH 2)                      ; 1.0E-4
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $ALGDELTA
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $%RNUM_LIST '(#) ...)-7-1|
(CONST 0) = $%RNUM_LIST
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = ((MLIST))
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $%RNUM_LIST
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $%RNUM_LIST
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; ((MLIST))
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $%RNUM_LIST '(#) ...)-7-2|
(CONST 0) = (SPECIAL $%RNUM_LIST)
(CONST 1) = $%RNUM_LIST
(CONST 2) = ((MLIST))
(CONST 3) = VARIABLE
(CONST 4) = 
"Upon exit from ALGSYS this is bound to a list of the %RNUMS
	 which where introduced into the expression. Useful for mapping
	 over and using as an argument to SUBST."
(CONST 5) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $%RNUM_LIST)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $%RNUM_LIST
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $%RNUM_LIST
8     (CONST&PUSH 2)                      ; ((MLIST))
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $%RNUM_LIST
12    (CONST&PUSH 3)                      ; VARIABLE
13    (CONST&PUSH 4)                      ; "Upon exit from ALGSYS this is bound to a list of the %RNUMS
	 which where introduced into the expression. Useful for mapping
	 over and using as an argument to SUBST."
14    (CALL 3 5)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $%RNUM_LIST
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $REALONLY NIL ...)-8-1|
(CONST 0) = $REALONLY
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $REALONLY
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $REALONLY
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $REALONLY NIL ...)-8-2|
(CONST 0) = (SPECIAL $REALONLY)
(CONST 1) = $REALONLY
(CONST 2) = VARIABLE
(CONST 3) = "If t only real solutions are returned."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $REALONLY)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $REALONLY
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $REALONLY
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $REALONLY
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "If t only real solutions are returned."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $REALONLY
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR REALONLYRATNUM NIL ...)-9-1|
(CONST 0) = REALONLYRATNUM
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; REALONLYRATNUM
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; REALONLYRATNUM
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR REALONLYRATNUM NIL ...)-9-2|
(CONST 0) = (SPECIAL REALONLYRATNUM)
(CONST 1) = REALONLYRATNUM
(CONST 2) = VARIABLE
(CONST 3) = 
"A REALROOTS hack for RWG.  Causes ALGSYS to retain rational numbers 
  returned by REALROOTS when REALONLY is TRUE."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL REALONLYRATNUM)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; REALONLYRATNUM
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; REALONLYRATNUM
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; REALONLYRATNUM
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "A REALROOTS hack for RWG.  Causes ALGSYS to retain rational numbers 
  returned by REALROOTS when REALONLY is TRUE."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; REALONLYRATNUM
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ALGEXACT NIL ...)-10-1|
(CONST 0) = $ALGEXACT
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ALGEXACT
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $ALGEXACT
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $ALGEXACT NIL ...)-10-2|
(CONST 0) = (SPECIAL $ALGEXACT)
(CONST 1) = $ALGEXACT
(CONST 2) = VARIABLE
(CONST 3) = 
"If t ALGSYS always calls SOLVE to try to MAXIMA-FIND exact
                        solutions."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $ALGEXACT)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $ALGEXACT
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $ALGEXACT
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $ALGEXACT
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "If t ALGSYS always calls SOLVE to try to MAXIMA-FIND exact
                        solutions."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $ALGEXACT
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR ALGNOTEXACT NIL ...)-11-1|
(CONST 0) = ALGNOTEXACT
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; ALGNOTEXACT
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; ALGNOTEXACT
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR ALGNOTEXACT NIL ...)-11-2|
(CONST 0) = (SPECIAL ALGNOTEXACT)
(CONST 1) = ALGNOTEXACT
(CONST 2) = VARIABLE
(CONST 3) = 
"A hack for RWG for univariate polys.  Causes SOLVE not to get called
  so that sqrts and cube roots will not be generated."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL ALGNOTEXACT)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; ALGNOTEXACT
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; ALGNOTEXACT
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; ALGNOTEXACT
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "A hack for RWG for univariate polys.  Causes SOLVE not to get called
  so that sqrts and cube roots will not be generated."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; ALGNOTEXACT
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO MERRSET (L) ...)-12|
(CONST 0) = MERRSET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MERRSET>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; MERRSET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MERRSET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MERRSET>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; MERRSET
10    (SKIP&RET 1)


Disassembly of function MERRSET
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = L
(CONST 3) = LET
(CONST 4) = ((ERRSET 'ERRBREAK1) (UNBIND (CONS BINDLIST LOCLIST)) VAL)
(CONST 5) = SETQ
(CONST 6) = VAL
(CONST 7) = ERRSET
(CONST 8) = (NIL)
(CONST 9) = ((COND ((NULL VAL) (ERRLFUN1 UNBIND))) VAL)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
25 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L31)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; L
13    (CONST&PUSH 3)                      ; LET
14    (CONST&PUSH 4)                      ; (# # VAL)
15    (CONST&PUSH 5)                      ; SETQ
16    (CONST&PUSH 6)                      ; VAL
17    (CONST&PUSH 7)                      ; ERRSET
18    (GETVALUE&PUSH 2)                   ; L
20    (CONST 8)                           ; (NIL)
21    (LIST*&PUSH 2)
23    (LIST&PUSH 3)
25    (CONST 9)                           ; ((COND (# #)) VAL)
26    (LIST* 3)
28    (UNBIND1)
29    (SKIP&RET 3)
31    L31
31    (LOAD&PUSH 2)
32    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
34    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN $ALGSYS (LHSLIST VARXLIST &AUX ...) ...)-13|
(CONST 0) = $ALGSYS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $ALGSYS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ALGSYS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $ALGSYS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $ALGSYS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $ALGSYS
8     (SKIP&RET 1)


Disassembly of function $ALGSYS
(CONST 0) = VARLIST
(CONST 1) = GENVAR
(CONST 2) = (MLIST)
(CONST 3) = $%RNUM_LIST
(CONST 4) = $LISTP
(CONST 5) = "Wrong type arg to ALGSYS:~%~M"
(CONST 6) = MERROR
(CONST 7) = "Wrong type arg to ALGSYS:~%~M"
(CONST 8) = 1.0E-7
(CONST 9) = $RATFAC
(CONST 10) = $BREAKUP
(CONST 11) = $SOLVEFACTORS
(CONST 12) = *ROOTS
(CONST 13) = *FAILURES
(CONST 14) = *IVAR*
(CONST 15) = $POLYFACTOR
(CONST 16) = $INFEVAL
(CONST 17) = $FLOAT
(CONST 18) = $NUMER
(CONST 19) = *TVARXLIST*
(CONST 20) = $RATPRINT
(CONST 21) = $RATEPSILON
(CONST 22) = $KEEPFLOAT
(CONST 23) = (MLIST SIMP)
(CONST 24) = $LISTOFVARS
(CONST 25) = VAR
(CONST 26) = CONSTANT
(CONST 27) = ORDERPOINTER
(CONST 28) = MEQHK
(CONST 29) = RATF
(CONST 30) = $%I
(CONST 31) = MNUMP
(CONST 32) = "Unacceptable variable to ALGSYS:~%~M"
(CONST 33) = PUTORDER
(CONST 34) = MBIND
(CONST 35) = ALGSYS
(CONST 36) = ROUNDROOTS1
(CONST 37) = ADDPARAM
(CONST 38) = BBSORTEQNS
(CONST 39) = ADDMLIST
(CONST 40) = MUNBIND
(CONST 41) = REMORDER
(CONST 42) = SSIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*TVARXLIST* VARLIST VAR $NUMER)
writes special variables : (*TVARXLIST* *IVAR* VAR $%RNUM_LIST)
218 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; VARLIST
3     (NIL)
4     (BIND 1)                            ; GENVAR
6     (CONST&PUSH 2)                      ; (MLIST)
7     (LIST 1)
9     (SETVALUE 3)                        ; $%RNUM_LIST
11    (LOAD&PUSH 8)
12    (CALL1&JMPIFNOT 4 L104)             ; $LISTP
16    (LOAD&PUSH 7)
17    (CALL1&JMPIF 4 L25)                 ; $LISTP
20    (CONST&PUSH 7)                      ; "Wrong type arg to ALGSYS:~%~M"
21    (LOAD 8)
22    L22
22    (PUSH)
23    (CALL2 6)                           ; MERROR
25    L25
25    (PUSH-NIL 4)
27    (CONST&PUSH 8)                      ; 1.0E-7
28    (NIL&PUSH)
29    (LOAD&CDR&PUSH 13)
31    (CALLS2 72)                         ; REVERSE
33    (BIND 0)                            ; VARLIST
35    (NIL)
36    (BIND 1)                            ; GENVAR
38    (NIL)
39    (BIND 9)                            ; $RATFAC
41    (NIL)
42    (BIND 10)                           ; $BREAKUP
44    (NIL)
45    (BIND 11)                           ; $SOLVEFACTORS
47    (NIL)
48    (BIND 12)                           ; *ROOTS
50    (NIL)
51    (BIND 13)                           ; *FAILURES
53    (NIL)
54    (BIND 14)                           ; *IVAR*
56    (NIL)
57    (BIND 15)                           ; $POLYFACTOR
59    (NIL&PUSH)
60    (NIL)
61    (BIND 16)                           ; $INFEVAL
63    (NIL&PUSH)
64    (NIL)
65    (BIND 17)                           ; $FLOAT
67    (GETVALUE&PUSH 18)                  ; $NUMER
69    (LOAD 40)
71    (BIND 19)                           ; *TVARXLIST*
73    (LOAD 41)
75    (BIND 20)                           ; $RATPRINT
77    (LOAD 43)
79    (BIND 21)                           ; $RATEPSILON
81    (LOAD 45)
83    (BIND 22)                           ; $KEEPFLOAT
85    (LOAD 16)
87    (BIND 18)                           ; $NUMER
89    (CONST&PUSH 23)                     ; (MLIST SIMP)
90    (LOAD&PUSH 66)
92    (LOAD&PUSH 66)
94    (LIST&PUSH 3)
96    (CALL1 24)                          ; $LISTOFVARS
98    (CDR&PUSH)
99    (NIL)
100   (BIND 25)                           ; VAR
102   (JMP L128)
104   L104
104   (CONST&PUSH 5)                      ; "Wrong type arg to ALGSYS:~%~M"
105   (LOAD 9)
106   (JMP L22)
109   L109
109   (LOAD 3)
110   (CAR)
111   (SETVALUE 25)                       ; VAR
113   (PUSH)
114   (CALLS2&JMPIFNOT 6 L126)            ; SYMBOLP
117   (GETVALUE&PUSH 25)                  ; VAR
119   (CALL1&JMPIF 26 L126)               ; CONSTANT
122   (GETVALUE&PUSH 25)                  ; VAR
124   (LOAD&CONS&STORE 27)
126   L126
126   (LOAD&CDR&STORE 3)
128   L128
128   (LOAD&PUSH 3)
129   (CALLS1&JMPIFNOT 146 L109)          ; ENDP
132   (UNBIND1)
133   (SKIP 1)
135   (GETVALUE&PUSH 0)                   ; VARLIST
137   (CALL1 27)                          ; ORDERPOINTER
139   (NIL&PUSH)
140   (LOAD&CDR&PUSH 66)
142   (JMP L159)
144   L144
144   (LOAD&CAR&PUSH 0)
146   (LOAD&PUSH 0)
147   (CALL1&PUSH 28)                     ; MEQHK
149   (CALL1 29)                          ; RATF
151   (CDR)
152   (CAR&PUSH)
153   (LOAD&CONS&STORE 2)
155   (SKIP 1)
157   (LOAD&CDR&STORE 0)
159   L159
159   (LOAD&PUSH 0)
160   (CALLS1&JMPIFNOT 146 L144)          ; ENDP
163   (SKIP 1)
165   (LOAD&PUSH 0)
166   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
168   (SKIP 1)
170   (STORE 56)
172   (CONST&PUSH 30)                     ; $%I
174   (CALL1 29)                          ; RATF
176   (CDR)
177   (CAR)
178   (CAR)
179   (SETVALUE 14)                       ; *IVAR*
181   (NIL&PUSH)
182   (LOAD&CDR&PUSH 65)
184   (JMP L212)
186   L186
186   (CONST&PUSH 32)                     ; "Unacceptable variable to ALGSYS:~%~M"
188   (LOAD&PUSH 1)
189   (CALL2 6)                           ; MERROR
191   (JMP L205)
193   L193
193   (LOAD&CAR&PUSH 0)
195   (LOAD&PUSH 0)
196   (CALL1&JMPIF 31 L186)               ; MNUMP
199   (LOAD&PUSH 0)
200   (CALL1 29)                          ; RATF
202   (CDR)
203   (CAR)
204   (CAR)
205   L205
205   (PUSH)
206   (LOAD&CONS&STORE 2)
208   (SKIP 1)
210   (LOAD&CDR&STORE 0)
212   L212
212   (LOAD&PUSH 0)
213   (CALLS1&JMPIFNOT 146 L193)          ; ENDP
216   (SKIP 1)
218   (LOAD&PUSH 0)
219   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
221   (SKIP 1)
223   (SETVALUE 19)                       ; *TVARXLIST*
225   (PUSH)
226   (CALL1 33)                          ; PUTORDER
228   (NIL&PUSH)
229   (UNWIND-PROTECT-OPEN L305)
232   (LOAD&PUSH 26)
234   (LOAD&PUSH 27)
236   (NIL&PUSH)
237   (CALL 3 34)                         ; MBIND
240   (T&STORE 2)
242   (NIL&PUSH)
243   (LOAD&PUSH 60)
245   (CALL1&PUSH 35)                     ; ALGSYS
247   (JMP L268)
249   L249
249   (LOAD&CAR&PUSH 0)
251   (LOAD&PUSH 0)
252   (CALL1&PUSH 36)                     ; ROUNDROOTS1
254   (LOAD&PUSH 71)
256   (CALL2&PUSH 37)                     ; ADDPARAM
258   (CALL1&PUSH 38)                     ; BBSORTEQNS
260   (CALL1&PUSH 39)                     ; ADDMLIST
262   (LOAD&CONS&STORE 2)
264   (SKIP 1)
266   (LOAD&CDR&STORE 0)
268   L268
268   (LOAD&PUSH 0)
269   (CALLS1&JMPIFNOT 146 L249)          ; ENDP
272   (SKIP 1)
274   (LOAD&PUSH 0)
275   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
277   (SKIP 1)
279   (STORE 57)
281   (VALUES0)
282   (UNWIND-PROTECT-NORMAL-EXIT)
283   (LOADI 0 0 0)
287   (JMPIFNOT L317)
289   (JMP L311)
291   L291
291   (T)
292   (BIND 18)                           ; $NUMER
294   (T)
295   (BIND 17)                           ; $FLOAT
297   (LOAD&PUSH 60)
299   (CALL1 42)                          ; SSIMPLIFYA
301   (UNBIND 2)
303   (JMP L335)
305   L305
305   (LOADI 0 0 0)
309   (JMPIFNOT L317)
311   L311
311   (LOADI&PUSH 0 0 24)
315   (CALL1 40)                          ; MUNBIND
317   L317
317   (UNWIND-PROTECT-CLOSE)
318   (SKIP 1)
320   (GETVALUE&PUSH 19)                  ; *TVARXLIST*
322   (CALL1 41)                          ; REMORDER
324   (LOAD&PUSH 54)
326   (CALL1 39)                          ; ADDMLIST
328   (STORE 54)
330   (LOAD&JMPIF 15 L291)
333   (LOAD 54)
335   L335
335   (UNBIND 5)
337   (SKIP 1)
339   (UNBIND1)
340   (SKIP 1)
342   (UNBIND1)
343   (SKIP 1)
345   (UNBIND 9)
347   (SKIP 6)
349   (UNBIND 2)
351   (SKIP&RET 3)


Disassembly of function #:|(DEFUN CONDENSESOLNL (TEMPSOLNL) ...)-14|
(CONST 0) = CONDENSESOLNL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CONDENSESOLNL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONDENSESOLNL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CONDENSESOLNL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CONDENSESOLNL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CONDENSESOLNL
8     (SKIP&RET 1)


Disassembly of function CONDENSESOLNL
(CONST 0) = #<COMPILED-CLOSURE CONDENSESOLNL-1>
(CONST 1) = SUBSETL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&PUSH 2)
2     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE CONDENSESOLNL-1>
3     (PUSH-UNBOUND 3)
5     (CALLS2&PUSH 103)                   ; SORT
7     (LOAD&PUSH 0)
8     (JMP L23)
10    L10
10    (LOAD&CDR&PUSH 0)
12    (LOAD&CAR&PUSH 1)
14    (CALL2&JMPIF 1 L21)                 ; SUBSETL
17    (LOAD&CAR&PUSH 0)
19    (LOAD&CONS&STORE 2)
21    L21
21    (LOAD&CDR&STORE 0)
23    L23
23    (LOAD&PUSH 0)
24    (CALLS1&JMPIFNOT 146 L10)           ; ENDP
27    (SKIP 2)
29    (POP)
30    (SKIP&RET 2)


Disassembly of function CONDENSESOLNL-1
(CONST 0) = A
(CONST 1) = B
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B A)
11 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; B
6     (GETVALUE&PUSH 0)                   ; A
8     (CALLS2&PUSH 71)                    ; LENGTH
10    (GETVALUE&PUSH 1)                   ; B
12    (CALLS2&PUSH 71)                    ; LENGTH
14    (CALLSR 1 48)                       ; >
17    (UNBIND 2)
19    (SKIP&RET 3)


Disassembly of function #:|(DEFUN SUBSETL (L1 S2) ...)-15|
(CONST 0) = SUBSETL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SUBSETL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SUBSETL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SUBSETL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SUBSETL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SUBSETL
8     (SKIP&RET 1)


Disassembly of function SUBSETL
(CONST 0) = L
(CONST 1) = M-SUBSET
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
writes special variable : (L)
29 byte-code instructions:
0     (LOAD&PUSH 1)
1     (NIL&PUSH)
2     (LIST&PUSH 1)
4     (CALLS2 2)                          ; EQUAL
6     (JMPIF1 L38)
8     (LOAD 2)
9     (BIND 0)                            ; L
11    (GETVALUE 0)                        ; L
13    (JMPIFNOT L31)
15    L15
15    (GETVALUE 0)                        ; L
17    (CAR&PUSH)
18    (LOAD&PUSH 5)
19    (CALL2&JMPIF 1 L35)                 ; M-SUBSET
22    (GETVALUE 0)                        ; L
24    (CDR)
25    (SETVALUE 0)                        ; L
27    (GETVALUE 0)                        ; L
29    (JMPIF L15)
31    L31
31    (NIL)
32    L32
32    (UNBIND1)
33    (SKIP&RET 3)
35    L35
35    (T)
36    (JMP L32)
38    L38
38    (SKIP&RET 3)


Disassembly of function #:|(DEFUN M-SUBSET (S1 S2) ...)-16|
(CONST 0) = M-SUBSET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE M-SUBSET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; M-SUBSET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; M-SUBSET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE M-SUBSET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; M-SUBSET
8     (SKIP&RET 1)


Disassembly of function M-SUBSET
(CONST 0) = S
(CONST 1) = MEMALIKE
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (S)
writes special variable : (S)
22 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; S
3     (GETVALUE 0)                        ; S
5     (JMPIFNOT L23)
7     L7
7     (GETVALUE 0)                        ; S
9     (CAR&PUSH)
10    (LOAD&PUSH 5)
11    (CALL2&JMPIFNOT 1 L27)              ; MEMALIKE
14    (GETVALUE 0)                        ; S
16    (CDR)
17    (SETVALUE 0)                        ; S
19    (GETVALUE 0)                        ; S
21    (JMPIF L7)
23    L23
23    (T)
24    L24
24    (UNBIND1)
25    (SKIP&RET 3)
27    L27
27    (NIL)
28    (JMP L24)


Disassembly of function #:|(DEFUN ALGSYS (TLHSLIST &AUX ANSW) ...)-17|
(CONST 0) = ALGSYS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ALGSYS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ALGSYS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ALGSYS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ALGSYS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ALGSYS
8     (SKIP&RET 1)


Disassembly of function ALGSYS
(CONST 0) = #.#'APPEND
(CONST 1) = ALGSYS0
(CONST 2) = LOFACTORS
(CONST 3) = DISTREP
(CONST 4) = CONDENSESOLNL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
12 byte-code instructions:
0     (NIL&PUSH)
1     (CONST&PUSH 0)                      ; #.#'APPEND
2     (CONST&SYMBOL-FUNCTION&PUSH 1)      ; ALGSYS0
4     (CONST&SYMBOL-FUNCTION&PUSH 2)      ; LOFACTORS
6     (LOAD&PUSH 5)
7     (CALLSR&PUSH 0 22)                  ; MAPCAR
10    (CALL1&PUSH 3)                      ; DISTREP
12    (CALLSR 0 22)                       ; MAPCAR
15    (APPLY&PUSH 0)
17    (CALL1 4)                           ; CONDENSESOLNL
19    (VALUES1)
20    (SKIP&RET 3)


Disassembly of function #:|(DEFUN ALGSYS0 (TLHSLIST) ...)-18|
(CONST 0) = ALGSYS0
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ALGSYS0>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ALGSYS0
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ALGSYS0
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ALGSYS0>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ALGSYS0
8     (SKIP&RET 1)


Disassembly of function ALGSYS0
(CONST 0) = ALGSYS1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&JMPIFNOT 1 L15)
3     (LOAD&PUSH 1)
4     (NIL&PUSH)
5     (LIST&PUSH 1)
7     (CALLS2&JMPIF 2 L20)                ; EQUAL
10    (LOAD&PUSH 1)
11    (CALL1 0)                           ; ALGSYS1
13    (SKIP&RET 2)
15    L15
15    (NIL&PUSH)
16    (LIST 1)
18    (SKIP&RET 2)
20    L20
20    (NIL)
21    (SKIP&RET 2)


Disassembly of function #:|(DEFUN ALGSYS1 (TLHSLIST &AUX ANSW) ...)-19|
(CONST 0) = ALGSYS1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ALGSYS1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ALGSYS1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ALGSYS1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ALGSYS1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ALGSYS1
8     (SKIP&RET 1)


Disassembly of function ALGSYS1
(CONST 0) = FINDLEASTVAR
(CONST 1) = ZL-DELETE
(CONST 2) = AMONG
(CONST 3) = PRESULTANT
(CONST 4) = ALGSYS
(CONST 5) = BAKALEVEL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
46 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&PUSH 2)
2     (CALL1&PUSH 0)                      ; FINDLEASTVAR
4     (PUSH-NIL 2)
6     (LOAD 2)
7     (CDR)
8     (STORE 1)
9     (LOAD&CAR&STORE 2 2)
12    (NIL&PUSH)
13    (LOAD&PUSH 3)
14    (LOAD&PUSH 7)
15    (CALLS1&PUSH 158)                   ; COPY-LIST
17    (CALL2&PUSH 1)                      ; ZL-DELETE
19    (JMP L44)
21    L21
21    (LOAD&PUSH 0)
22    (LOAD&PUSH 6)
23    (LOAD&PUSH 6)
24    (CALL 3 3)                          ; PRESULTANT
27    (JMP L37)
29    L29
29    (LOAD&CAR&PUSH 0)
31    (LOAD&PUSH 4)
32    (LOAD&PUSH 1)
33    (CALL2&JMPIF 2 L21)                 ; AMONG
36    (LOAD 0)
37    L37
37    (PUSH)
38    (LOAD&CONS&STORE 2)
40    (SKIP 1)
42    (LOAD&CDR&STORE 0)
44    L44
44    (LOAD&PUSH 0)
45    (CALLS1&JMPIFNOT 146 L29)           ; ENDP
48    (SKIP 1)
50    (LOAD&PUSH 0)
51    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
53    (SKIP 1)
55    (STORE 0)
56    (PUSH)
57    (CALL1&PUSH 4)                      ; ALGSYS
59    (LOAD&PUSH 6)
60    (LOAD&PUSH 3)
61    (CALL 3 5)                          ; BAKALEVEL
64    (VALUES1)
65    (SKIP&RET 6)


Disassembly of function #:|(DEFUN ADDMLIST (L) ...)-20|
(CONST 0) = ADDMLIST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ADDMLIST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ADDMLIST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ADDMLIST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ADDMLIST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ADDMLIST
8     (SKIP&RET 1)


Disassembly of function ADDMLIST
(CONST 0) = L
(CONST 1) = (MLIST)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
7 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (CONST&PUSH 1)                      ; (MLIST)
4     (GETVALUE 0)                        ; L
6     (CONS)
7     (UNBIND1)
8     (SKIP&RET 2)


Disassembly of function #:|(DEFMACRO WHAT-THE-$EV (&REST L) ...)-21|
(CONST 0) = WHAT-THE-$EV
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE WHAT-THE-$EV>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; WHAT-THE-$EV
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; WHAT-THE-$EV
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE WHAT-THE-$EV>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; WHAT-THE-$EV
10    (SKIP&RET 1)


Disassembly of function WHAT-THE-$EV
(CONST 0) = L
(CONST 1) = MEVAL
(CONST 2) = LIST
(CONST 3) = '($EV)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
11 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (CONST&PUSH 1)                      ; MEVAL
5     (CONST&PUSH 2)                      ; LIST
6     (CONST&PUSH 3)                      ; '($EV)
7     (GETVALUE 0)                        ; L
9     (LIST*&PUSH 2)
11    (LIST 2)
13    (UNBIND1)
14    (SKIP&RET 3)


Disassembly of function #:|(DEFUN ROOTSP (ASOLNSET EQN) ...)-22|
(CONST 0) = ROOTSP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ROOTSP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROOTSP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ROOTSP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ROOTSP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ROOTSP
8     (SKIP&RET 1)


Disassembly of function ROOTSP
(CONST 0) = $KEEPFLOAT
(CONST 1) = $NUMER
(CONST 2) = $FLOAT
(CONST 3) = ($EV)
(CONST 4) = MEVAL
(CONST 5) = COMPLEXNUMP
(CONST 6) = CABS
(CONST 7) = $ALGDELTA
(CONST 8) = 1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: ($ALGDELTA)
42 byte-code instructions:
0     (NIL&PUSH)
1     (T)
2     (BIND 0)                            ; $KEEPFLOAT
4     (T)
5     (BIND 1)                            ; $NUMER
7     (T)
8     (BIND 2)                            ; $FLOAT
10    (CONST&PUSH 3)                      ; ($EV)
11    (LOAD&PUSH 12)
12    (LOAD&PUSH 14)
13    (LIST&PUSH 3)
15    (CALL1 4)                           ; MEVAL
17    (STORE 9)
19    (CDR)
20    (CAR&PUSH)
21    (CALL1&JMPIFNOT 5 L31)              ; COMPLEXNUMP
24    (LOAD 9)
25    (CDR)
26    (CDR)
27    (CAR&PUSH)
28    (CALL1&JMPIF 5 L36)                 ; COMPLEXNUMP
31    L31
31    (NIL)
32    L32
32    (UNBIND 3)
34    (SKIP&RET 4)
36    L36
36    (LOAD 9)
37    (CDR)
38    (CAR&PUSH)
39    (CALL1&PUSH 6)                      ; CABS
41    (GETVALUE&PUSH 7)                   ; $ALGDELTA
43    (CONST&PUSH 8)                      ; 1
44    (LOAD 12)
45    (CDR)
46    (CDR)
47    (CAR&PUSH)
48    (CALL1&PUSH 6)                      ; CABS
50    (CALLSR&PUSH 1 51)                  ; MAX
53    (CALLSR&PUSH 2 55)                  ; *
56    (CALLSR 1 47)                       ; <
59    (JMP L32)


Disassembly of function #:|(DEFUN ROUND1 (A) ...)-23|
(CONST 0) = ROUND1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ROUND1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROUND1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ROUND1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ROUND1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ROUND1
8     (SKIP&RET 1)


Disassembly of function ROUND1
(CONST 0) = A
(CONST 1) = MAXIMA-RATIONALIZE
(CONST 2) = FPCOFRAT1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (A)
writes special variable : (A)
17 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; A
3     (GETVALUE&PUSH 0)                   ; A
5     (CALLS2&JMPIF 15 L13)               ; FLOATP
8     (GETVALUE 0)                        ; A
10    L10
10    (UNBIND1)
11    (SKIP&RET 2)
13    L13
13    (GETVALUE&PUSH 0)                   ; A
15    (CALL1 1)                           ; MAXIMA-RATIONALIZE
17    (SETVALUE 0)                        ; A
19    (CAR&PUSH)
20    (GETVALUE 0)                        ; A
22    (CDR&PUSH)
23    (CALL2 2)                           ; FPCOFRAT1
25    (JMP L10)


Disassembly of function #:|(DEFUN ROUNDRHS (EQN) ...)-24|
(CONST 0) = ROUNDRHS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ROUNDRHS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROUNDRHS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ROUNDRHS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ROUNDRHS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ROUNDRHS
8     (SKIP&RET 1)


Disassembly of function ROUNDRHS
(CONST 0) = ROUND1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (LOAD&CAR&PUSH 1)
2     (LOAD 2)
3     (CDR)
4     (CAR&PUSH)
5     (LOAD 3)
6     (CDR)
7     (CDR)
8     (CAR&PUSH)
9     (CALL1&PUSH 0)                      ; ROUND1
11    (LIST 3)
13    (SKIP&RET 2)


Disassembly of function #:|(DEFUN ROUNDROOTS1 (LSOLN) ...)-25|
(CONST 0) = ROUNDROOTS1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ROUNDROOTS1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ROUNDROOTS1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ROUNDROOTS1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ROUNDROOTS1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ROUNDROOTS1
8     (SKIP&RET 1)


Disassembly of function ROUNDROOTS1
(CONST 0) = ROUNDRHS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; ROUNDRHS
2     (LOAD&PUSH 2)
3     (CALLSR 0 22)                       ; MAPCAR
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN BBSORTEQNS (L) ...)-26|
(CONST 0) = BBSORTEQNS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BBSORTEQNS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BBSORTEQNS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BBSORTEQNS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BBSORTEQNS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BBSORTEQNS
8     (SKIP&RET 1)


Disassembly of function BBSORTEQNS
(CONST 0) = L
(CONST 1) = ORDERLESSP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
9 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (GETVALUE&PUSH 0)                   ; L
5     (CALLS1&PUSH 158)                   ; COPY-LIST
7     (CONST&PUSH 1)                      ; ORDERLESSP
8     (PUSH-UNBOUND 3)
10    (CALLS2 103)                        ; SORT
12    (UNBIND1)
13    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PUTORDER (TEMPVARL) ...)-27|
(CONST 0) = PUTORDER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PUTORDER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PUTORDER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PUTORDER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PUTORDER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PUTORDER
8     (SKIP&RET 1)


Disassembly of function PUTORDER
(CONST 0) = 1
(CONST 1) = N
(CONST 2) = VARORDER
(CONST 3) = PUTPROP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (N)
writes special variable : (N)
19 byte-code instructions:
0     (CONST 0)                           ; 1
1     (BIND 1)                            ; N
3     (LOAD&PUSH 4)
4     (LOAD&JMPIFNOT 0 L26)
7     L7
7     (LOAD&CAR&PUSH 0)
9     (GETVALUE&PUSH 1)                   ; N
11    (CONST&PUSH 2)                      ; VARORDER
12    (CALL 3 3)                          ; PUTPROP
15    (LOAD&CDR&STORE 0)
17    (GETVALUE&PUSH 1)                   ; N
19    (CALLS2 150)                        ; 1+
21    (SETVALUE 1)                        ; N
23    (LOAD&JMPIF 0 L7)
26    L26
26    (NIL)
27    (SKIP 1)
29    (UNBIND1)
30    (SKIP&RET 2)


Disassembly of function #:|(DEFUN REMORDER (GVARL) ...)-28|
(CONST 0) = REMORDER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE REMORDER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; REMORDER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; REMORDER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE REMORDER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; REMORDER
8     (SKIP&RET 1)


Disassembly of function REMORDER
(CONST 0) = X
(CONST 1) = VARORDER
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
18 byte-code instructions:
0     (LOAD&PUSH 1)
1     (JMP L18)
3     L3
3     (LOAD&CAR&PUSH 0)
5     (LOAD 0)
6     (BIND 0)                            ; X
8     (GETVALUE&PUSH 0)                   ; X
10    (CONST&PUSH 1)                      ; VARORDER
11    (CALLS2 137)                        ; REMPROP
13    (UNBIND1)
14    (SKIP 1)
16    (LOAD&CDR&STORE 0)
18    L18
18    (LOAD&PUSH 0)
19    (CALLS1&JMPIFNOT 146 L3)            ; ENDP
22    (SKIP 1)
24    (LOAD 1)
25    (SKIP&RET 2)


Disassembly of function #:|(DEFUN ORDERLESSP (EQN1 EQN2) ...)-29|
(CONST 0) = ORDERLESSP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ORDERLESSP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ORDERLESSP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ORDERLESSP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ORDERLESSP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ORDERLESSP
8     (SKIP&RET 1)


Disassembly of function ORDERLESSP
(CONST 0) = RATF
(CONST 1) = VARORDER
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
22 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (CAR&PUSH)
3     (CALL1 0)                           ; RATF
5     (CDR)
6     (CAR)
7     (CAR&PUSH)
8     (CONST&PUSH 1)                      ; VARORDER
9     (PUSH-UNBOUND 1)
11    (CALLS2&PUSH 132)                   ; GET
13    (LOAD 2)
14    (CDR)
15    (CAR&PUSH)
16    (CALL1 0)                           ; RATF
18    (CDR)
19    (CAR)
20    (CAR&PUSH)
21    (CONST&PUSH 1)                      ; VARORDER
22    (PUSH-UNBOUND 1)
24    (CALLS2&PUSH 132)                   ; GET
26    (CALLSR 1 47)                       ; <
29    (SKIP&RET 3)


Disassembly of function #:|(DEFUN ADDPARAM (ASOLNSETL VARXLIST) ...)-30|
(CONST 0) = ADDPARAM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ADDPARAM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ADDPARAM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ADDPARAM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ADDPARAM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ADDPARAM
8     (SKIP&RET 1)


Disassembly of function ADDPARAM
(CONST 0) = *TVARXLIST*
(CONST 1) = #.#'CADR
(CONST 2) = VAR
(CONST 3) = MEMALIKE
(CONST 4) = MAKE-PARAM
(CONST 5) = (MEQUAL)
(CONST 6) = ADDMLIST
(CONST 7) = MAXIMA-SUBSTITUTE
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VAR *TVARXLIST*)
writes special variable : (VAR)
45 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (GETVALUE&PUSH 0)                   ; *TVARXLIST*
5     (CALLS2&PUSH 71)                    ; LENGTH
7     (CALLSR&JMPIF 1 45 L67)             ; =
11    (LOAD&CDR&PUSH 1)
13    (CONST&PUSH 1)                      ; #.#'CADR
14    (LOAD&PUSH 4)
15    (CALLSR&PUSH 0 22)                  ; MAPCAR
18    (NIL)
19    (BIND 2)                            ; VAR
21    (NIL&PUSH)
22    (LOAD&JMPIFNOT 5 L61)
25    L25
25    (LOAD 5)
26    (CAR)
27    (SETVALUE 2)                        ; VAR
29    (PUSH)
30    (LOAD&PUSH 5)
31    (CALL2&JMPIF 3 L56)                 ; MEMALIKE
34    (CALL0 4)                           ; MAKE-PARAM
36    (STORE 0)
37    (CONST&PUSH 5)                      ; (MEQUAL)
38    (GETVALUE&PUSH 2)                   ; VAR
40    (LOAD&PUSH 2)
41    (LIST&PUSH 3)
43    (LOAD&PUSH 1)
44    (GETVALUE&PUSH 2)                   ; VAR
46    (LOAD&PUSH 11)
47    (CALL1&PUSH 6)                      ; ADDMLIST
49    (CALL 3 7)                          ; MAXIMA-SUBSTITUTE
52    (CDR)
53    (CONS)
54    (STORE 8)
56    L56
56    (LOAD&CDR&STORE 5)
58    (LOAD&JMPIF 5 L25)
61    L61
61    (LOAD 8)
62    (SKIP 1)
64    (UNBIND1)
65    (SKIP&RET 5)
67    L67
67    (LOAD 2)
68    (SKIP&RET 3)


Disassembly of function #:|(DECLARE-TOP (SPECIAL *VARDEGS*))-31|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN FINDLEASTVAR (LHSL) ...)-32|
(CONST 0) = FINDLEASTVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FINDLEASTVAR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FINDLEASTVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FINDLEASTVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FINDLEASTVAR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FINDLEASTVAR
8     (SKIP&RET 1)


Disassembly of function FINDLEASTVAR
(CONST 0) = *VARDEGS*
(CONST 1) = #.MOST-POSITIVE-FIXNUM
(CONST 2) = GETVARDEGS
(CONST 3) = KILLVARDEGSC
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARDEGS*)
writes special variable : (*VARDEGS*)
59 byte-code instructions:
0     (LOAD&PUSH 1)
1     (NIL&PUSH)
2     (NIL)
3     (BIND 0)                            ; *VARDEGS*
5     (NIL&PUSH)
6     (CONST&PUSH 1)                      ; #.MOST-POSITIVE-FIXNUM
7     (PUSH-NIL 2)
9     (LOAD&JMPIFNOT 8 L79)
13    L13
13    (LOAD&CAR&STORE 8 7)
16    (PUSH)
17    (CALL1 2)                           ; GETVARDEGS
19    (SETVALUE 0)                        ; *VARDEGS*
21    (LOAD&PUSH 7)
22    (CALL1 3)                           ; KILLVARDEGSC
24    (STORE 3)
25    (GETVALUE&PUSH 0)                   ; *VARDEGS*
27    (LOAD&PUSH 0)
28    (JMP L55)
30    L30
30    (LOAD 0)
31    (CDR)
32    (STORE 5)
33    (LOAD 10)
34    (STORE 4)
35    (LOAD&CAR&STORE 0 3)
38    (SKIP 1)
40    (JMP L53)
42    L42
42    (LOAD&CAR&PUSH 0)
44    (LOAD&CDR&PUSH 0)
46    (LOAD&PUSH 6)
47    (CALLSR&JMPIFNOT 1 48 L30)          ; >
51    (SKIP 1)
53    L53
53    (LOAD&CDR&STORE 0)
55    L55
55    (LOAD&PUSH 0)
56    (CALLS1&JMPIFNOT 146 L42)           ; ENDP
59    (SKIP 2)
61    (LOAD&PUSH 3)
62    (LOAD&PUSH 3)
63    (CALLSR&JMPIFNOT 1 47 L73)          ; <
67    (LOAD 3)
68    (STORE 2)
69    (LOAD 7)
70    (STORE 1)
71    (CAR)
72    (STORE 0)
73    L73
73    (LOAD&CDR&STORE 8)
75    (LOAD&JMPIF 8 L13)
79    L79
79    (LOAD&PUSH 1)
80    (LOAD 1)
81    (CONS)
82    (SKIP 4)
84    (UNBIND1)
85    (SKIP&RET 4)


Disassembly of function #:|(DEFUN KILLVARDEGSC (POLY) ...)-33|
(CONST 0) = KILLVARDEGSC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KILLVARDEGSC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KILLVARDEGSC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KILLVARDEGSC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KILLVARDEGSC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KILLVARDEGSC
8     (SKIP&RET 1)


Disassembly of function KILLVARDEGSC
(CONST 0) = PCONSTP
(CONST 1) = 0
(CONST 2) = KILLVARDEGSN
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
37 byte-code instructions:
0     L0
0     (LOAD&PUSH 1)
1     (CALL1&JMPIF 0 L44)                 ; PCONSTP
4     (LOAD&CDR&PUSH 1)
6     (CONST&PUSH 1)                      ; 0
7     (LOAD&JMPIFNOT 1 L41)
10    L10
10    (LOAD 1)
11    (CDR)
12    (CDR&PUSH)
13    (LOAD&PUSH 1)
14    (LOAD&CAR&PUSH 3)
16    (LOAD&CAR&PUSH 4)
18    (CONST&PUSH 1)                      ; 0
19    (CALLSR&JMPIF 1 45 L47)             ; =
23    (LOAD 4)
24    (CDR)
25    (CAR&PUSH)
26    (CALL1 2)                           ; KILLVARDEGSN
28    L28
28    (PUSH)
29    (CALLSR&PUSH 2 53)                  ; +
32    (CALLSR&STORE 1 51 1)               ; MAX
36    (POP&STORE 1)
38    (LOAD&JMPIF 1 L10)
41    L41
41    (POP)
42    (SKIP&RET 3)
44    L44
44    (CONST 1)                           ; 0
45    (SKIP&RET 2)
47    L47
47    (LOAD 4)
48    (CDR)
49    (CAR&PUSH)
50    (JSR L0)
52    (JMP L28)


Disassembly of function #:|(DEFUN KILLVARDEGSN (POLY) ...)-34|
(CONST 0) = KILLVARDEGSN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KILLVARDEGSN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KILLVARDEGSN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KILLVARDEGSN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KILLVARDEGSN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KILLVARDEGSN
8     (SKIP&RET 1)


Disassembly of function KILLVARDEGSN
(CONST 0) = PCONSTP
(CONST 1) = 0
(CONST 2) = *VARDEGS*
(CONST 3) = ASSQ
(CONST 4) = X
(CONST 5) = ZL-DELETE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X *VARDEGS*)
writes special variable : (*VARDEGS*)
43 byte-code instructions:
0     L0
0     (LOAD&PUSH 1)
1     (CALL1&JMPIF 0 L65)                 ; PCONSTP
4     (LOAD&CAR&PUSH 1)
6     (GETVALUE&PUSH 2)                   ; *VARDEGS*
8     (CALL2 3)                           ; ASSQ
10    (BIND 4)                            ; X
12    (GETVALUE 4)                        ; X
14    (JMPIFNOT L32)
16    (CDR&PUSH)
17    (LOAD 5)
18    (CDR)
19    (CAR&PUSH)
20    (CALLSR&JMPIF 1 48 L32)             ; >
24    (GETVALUE&PUSH 4)                   ; X
26    (GETVALUE&PUSH 2)                   ; *VARDEGS*
28    (CALL2 5)                           ; ZL-DELETE
30    (SETVALUE 2)                        ; *VARDEGS*
32    L32
32    (UNBIND1)
33    (LOAD&CDR&PUSH 1)
35    (CONST&PUSH 1)                      ; 0
36    (LOAD&JMPIFNOT 1 L62)
39    L39
39    (LOAD 1)
40    (CDR)
41    (CDR&PUSH)
42    (LOAD&PUSH 1)
43    (LOAD&CAR&PUSH 3)
45    (LOAD 4)
46    (CDR)
47    (CAR&PUSH)
48    (JSR&PUSH L0)
50    (CALLSR&PUSH 2 53)                  ; +
53    (CALLSR&STORE 1 51 1)               ; MAX
57    (POP&STORE 1)
59    (LOAD&JMPIF 1 L39)
62    L62
62    (POP)
63    (SKIP&RET 3)
65    L65
65    (CONST 1)                           ; 0
66    (SKIP&RET 2)


Disassembly of function #:|(DEFUN GETVARDEGS (POLY) ...)-35|
(CONST 0) = GETVARDEGS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GETVARDEGS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GETVARDEGS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GETVARDEGS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GETVARDEGS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GETVARDEGS
8     (SKIP&RET 1)


Disassembly of function GETVARDEGS
(CONST 0) = PCONSTP
(CONST 1) = 0
(CONST 2) = PTERM
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
27 byte-code instructions:
0     L0
0     (LOAD&PUSH 1)
1     (CALL1&JMPIF 0 L20)                 ; PCONSTP
4     (LOAD 1)
5     (CDR)
6     (CDR)
7     (CAR&PUSH)
8     (CALL1&JMPIF 0 L23)                 ; PCONSTP
11    (LOAD&CDR&PUSH 1)
13    (CONST&PUSH 1)                      ; 0
14    (CALL2&PUSH 2)                      ; PTERM
16    (JMPTAIL 1 3 L0)
20    L20
20    (NIL)
21    (SKIP&RET 2)
23    L23
23    (LOAD&CAR&PUSH 1)
25    (LOAD 2)
26    (CDR)
27    (CAR)
28    (CONS&PUSH)
29    (LOAD&CDR&PUSH 2)
31    (CONST&PUSH 1)                      ; 0
32    (CALL2&PUSH 2)                      ; PTERM
34    (JSR L0)
36    (CONS)
37    (SKIP&RET 2)


Disassembly of function #:|(DECLARE-TOP (UNSPECIAL *VARDEGS*))-36|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN PCONSTP (POLY) ...)-37|
(CONST 0) = PCONSTP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PCONSTP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PCONSTP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PCONSTP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PCONSTP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PCONSTP
8     (SKIP&RET 1)


Disassembly of function PCONSTP
(CONST 0) = *TVARXLIST*
(CONST 1) = MEMQ
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*TVARXLIST*)
10 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 5)                          ; ATOM
3     (JMPIF1 L14)
5     (LOAD&CAR&PUSH 1)
7     (GETVALUE&PUSH 0)                   ; *TVARXLIST*
9     (CALL2 1)                           ; MEMQ
11    (NOT)
12    (SKIP&RET 2)
14    L14
14    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PFREEOFMAINVARSP (POLY) ...)-38|
(CONST 0) = PFREEOFMAINVARSP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PFREEOFMAINVARSP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PFREEOFMAINVARSP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PFREEOFMAINVARSP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PFREEOFMAINVARSP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PFREEOFMAINVARSP
8     (SKIP&RET 1)


Disassembly of function PFREEOFMAINVARSP
(CONST 0) = *TVARXLIST*
(CONST 1) = MEMQ
(CONST 2) = PDIS
(CONST 3) = $RADCAN
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*TVARXLIST*)
13 byte-code instructions:
0     (LOAD 1)
1     (JMPIFATOM L10)
3     (LOAD&CAR&PUSH 1)
5     (GETVALUE&PUSH 0)                   ; *TVARXLIST*
7     (CALL2&JMPIFNOT 1 L13)              ; MEMQ
10    L10
10    (LOAD 1)
11    (SKIP&RET 2)
13    L13
13    (LOAD&PUSH 1)
14    (CALL1&PUSH 2)                      ; PDIS
16    (CALL1 3)                           ; $RADCAN
18    (SKIP&RET 2)


Disassembly of function #:|(DEFUN LOFACTORS (POLY) ...)-39|
(CONST 0) = LOFACTORS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LOFACTORS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LOFACTORS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LOFACTORS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LOFACTORS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LOFACTORS
8     (SKIP&RET 1)


Disassembly of function LOFACTORS
(CONST 0) = PFREEOFMAINVARSP
(CONST 1) = X
(CONST 2) = FIXNUMP
(CONST 3) = 0
(CONST 4) = PFACTOR
(CONST 5) = PABS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
82 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1 0)                           ; PFREEOFMAINVARSP
3     (STORE 1)
4     (BIND 1)                            ; X
6     (GETVALUE&PUSH 1)                   ; X
8     (CALL1&JMPIF 2 L20)                 ; FIXNUMP
11    (GETVALUE 1)                        ; X
13    (JMPIFCONSP L40)
15    (GETVALUE&PUSH 1)                   ; X
17    (CALLS2&JMPIFNOT 15 L29)            ; FLOATP
20    L20
20    (GETVALUE&PUSH 1)                   ; X
22    (CALLS2 145)                        ; ZEROP
24    (UNBIND1)
25    (JMPIFNOT L41)
27    (JMP L32)
29    L29
29    (UNBIND1)
30    (JMPIFNOT L41)
32    L32
32    (CONST&PUSH 3)                      ; 0
33    (LIST 1)
35    (SKIP&RET 2)
37    L37
37    (NIL)
38    (SKIP&RET 2)
40    L40
40    (UNBIND1)
41    L41
41    (LOAD 1)
42    (JMPIFATOM L37)
44    (LOAD 1)
45    (CAR)
46    (JMPIFCONSP L37)
48    (LOAD&PUSH 1)
49    (CALL1&PUSH 4)                      ; PFACTOR
51    (NIL&PUSH)
52    (LOAD&JMPIFNOT 1 L113)
55    L55
55    (LOAD&CAR&PUSH 1)
57    (CALL1 0)                           ; PFREEOFMAINVARSP
59    (STORE 3)
60    (BIND 1)                            ; X
62    (GETVALUE&PUSH 1)                   ; X
64    (CALL1&JMPIF 2 L76)                 ; FIXNUMP
67    (GETVALUE 1)                        ; X
69    (JMPIFCONSP L93)
71    (GETVALUE&PUSH 1)                   ; X
73    (CALLS2&JMPIFNOT 15 L85)            ; FLOATP
76    L76
76    (GETVALUE&PUSH 1)                   ; X
78    (CALLS2 145)                        ; ZEROP
80    (UNBIND1)
81    (JMPIFNOT L94)
83    (JMP L88)
85    L85
85    (UNBIND1)
86    (JMPIFNOT L94)
88    L88
88    (CONST&PUSH 3)                      ; 0
89    (LIST 1)
91    (SKIP&RET 4)
93    L93
93    (UNBIND1)
94    L94
94    (LOAD 3)
95    (JMPIFATOM L106)
97    (LOAD 3)
98    (CAR)
99    (JMPIFCONSP L106)
101   (LOAD&PUSH 3)
102   (CALL1&PUSH 5)                      ; PABS
104   (LOAD&CONS&STORE 0)
106   L106
106   (LOAD 1)
107   (CDR)
108   (CDR)
109   (STORE 1)
110   (LOAD&JMPIF 1 L55)
113   L113
113   (POP)
114   (SKIP&RET 3)


Disassembly of function #:|(DEFUN COMBINEY (LISTOFL) ...)-40|
(CONST 0) = COMBINEY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COMBINEY>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COMBINEY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COMBINEY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COMBINEY>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COMBINEY
8     (SKIP&RET 1)


Disassembly of function COMBINEY
(CONST 0) = MEMQ
(CONST 1) = (0)
(CONST 2) = ZL-DELETE
(CONST 3) = COMBINEY1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&PUSH 2)
2     (CALL2&JMPIF 0 L13)                 ; MEMQ
5     (CONST&PUSH 1)                      ; (0)
6     (LOAD&PUSH 2)
7     (CALL2&PUSH 2)                      ; ZL-DELETE
9     (CALL1 3)                           ; COMBINEY1
11    (SKIP&RET 2)
13    L13
13    (NIL)
14    (SKIP&RET 2)


Disassembly of function #:|(DEFUN COMBINEY1 (LISTOFL) ...)-41|
(CONST 0) = COMBINEY1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COMBINEY1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COMBINEY1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COMBINEY1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COMBINEY1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COMBINEY1
8     (SKIP&RET 1)


Disassembly of function COMBINEY1
(CONST 0) = R
(CONST 1) = INTERSECT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (R)
55 byte-code instructions:
0     (LOAD&JMPIF 1 L11)
3     L3
3     (NIL&PUSH)
4     (LIST 1)
6     (SKIP&RET 2)
8     L8
8     (LOAD&JMPIFNOT 1 L3)
11    L11
11    (NIL&PUSH)
12    (LOAD&CDR&PUSH 2)
14    (JSR&PUSH L8)
16    (JMP L74)
18    L18
18    (GETVALUE&PUSH 0)                   ; R
20    (LIST 1)
22    (JMP L64)
24    L24
24    (LOAD&CAR&PUSH 0)
26    (LOAD 0)
27    (BIND 0)                            ; R
29    (LOAD&CAR&PUSH 7)
31    (GETVALUE&PUSH 0)                   ; R
33    (CALL2&JMPIF 1 L18)                 ; INTERSECT
36    (NIL&PUSH)
37    (LOAD&CAR&PUSH 8)
39    (JMP L53)
41    L41
41    (LOAD&CAR&PUSH 0)
43    (LOAD&PUSH 0)
44    (GETVALUE 0)                        ; R
46    (CONS&PUSH)
47    (LOAD&CONS&STORE 2)
49    (SKIP 1)
51    (LOAD&CDR&STORE 0)
53    L53
53    (LOAD&PUSH 0)
54    (CALLS1&JMPIFNOT 146 L41)           ; ENDP
57    (SKIP 1)
59    (LOAD&PUSH 0)
60    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
62    (SKIP 1)
64    L64
64    (UNBIND1)
65    (PUSH)
66    (LOAD&PUSH 3)
67    (CALLS1&STORE 163 2)                ; NRECONC
70    (SKIP 1)
72    (LOAD&CDR&STORE 0)
74    L74
74    (LOAD&PUSH 0)
75    (CALLS1&JMPIFNOT 146 L24)           ; ENDP
78    (SKIP 1)
80    (LOAD&PUSH 0)
81    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
83    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MIDPNT (L) ...)-42|
(CONST 0) = MIDPNT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MIDPNT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MIDPNT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MIDPNT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MIDPNT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MIDPNT
8     (SKIP&RET 1)


Disassembly of function MIDPNT
(CONST 0) = L
(CONST 1) = RPLUS*
(CONST 2) = RHALF
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
11 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (GETVALUE 0)                        ; L
5     (CAR&PUSH)
6     (GETVALUE 0)                        ; L
8     (CDR)
9     (CAR&PUSH)
10    (CALL2&PUSH 1)                      ; RPLUS*
12    (CALL1 2)                           ; RHALF
14    (UNBIND1)
15    (SKIP&RET 2)


Disassembly of function #:|(DEFUN RFLOT (L) ...)-43|
(CONST 0) = RFLOT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RFLOT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RFLOT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RFLOT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RFLOT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RFLOT
8     (SKIP&RET 1)


Disassembly of function RFLOT
(CONST 0) = L
(CONST 1) = MIDPNT
(CONST 2) = REALONLYRATNUM
(CONST 3) = (RAT)
(CONST 4) = 0.0
(CONST 5) = QUOT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (REALONLYRATNUM L)
22 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (GETVALUE&PUSH 0)                   ; L
5     (CALL1&PUSH 1)                      ; MIDPNT
7     (GETVALUE 2)                        ; REALONLYRATNUM
9     (JMPIF L26)
11    (CONST&PUSH 4)                      ; 0.0
12    (LOAD&CAR&PUSH 1)
14    (CALLSR&PUSH 2 53)                  ; +
17    (LOAD&CDR&PUSH 1)
19    (CALL2 5)                           ; QUOT
21    (SKIP 1)
23    L23
23    (UNBIND1)
24    (SKIP&RET 2)
26    L26
26    (CONST&PUSH 3)                      ; (RAT)
27    (LOAD&CAR&PUSH 1)
29    (LOAD&CDR&PUSH 2)
31    (LIST 3)
33    (SKIP 1)
35    (JMP L23)


Disassembly of function #:|(DEFUN MEMBERROOT (A X EPS) ...)-44|
(CONST 0) = MEMBERROOT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MEMBERROOT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MEMBERROOT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MEMBERROOT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MEMBERROOT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MEMBERROOT
8     (SKIP&RET 1)


Disassembly of function MEMBERROOT
(CONST 0) = A
(CONST 1) = X
(CONST 2) = 0.0
(CONST 3) = QUOT
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (A X)
32 byte-code instructions:
0     L0
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 5)
4     (BIND 1)                            ; X
6     (GETVALUE 1)                        ; X
8     (JMPIFNOT L46)
10    (GETVALUE&PUSH 0)                   ; A
12    (GETVALUE 1)                        ; X
14    (CAR&PUSH)
15    (CALLSR&PUSH 1 54)                  ; -
18    (CALLS2&PUSH 158)                   ; ABS
20    (CONST&PUSH 2)                      ; 0.0
21    (LOAD&CAR&PUSH 9)
23    (CALLSR&PUSH 2 53)                  ; +
26    (LOAD&CDR&PUSH 9)
28    (CALL2&PUSH 3)                      ; QUOT
30    (CALLSR&JMPIF 1 47 L49)             ; <
34    (GETVALUE&PUSH 0)                   ; A
36    (GETVALUE 1)                        ; X
38    (CDR&PUSH)
39    (LOAD&PUSH 9)
40    (JSR L0)
42    L42
42    (UNBIND 2)
44    (SKIP&RET 4)
46    L46
46    (NIL)
47    (JMP L42)
49    L49
49    (T)
50    (JMP L42)


Disassembly of function #:|(DEFUN COMMONROOTS (EPS SOLNL1 SOLNL2) ...)-45|
(CONST 0) = COMMONROOTS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COMMONROOTS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COMMONROOTS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COMMONROOTS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COMMONROOTS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COMMONROOTS
8     (SKIP&RET 1)


Disassembly of function COMMONROOTS
(CONST 0) = MEMBERROOT
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
24 byte-code instructions:
0     (LOAD&JMPIF 2 L20)
3     L3
3     (NIL)
4     (SKIP&RET 4)
6     L6
6     (LOAD&CAR&PUSH 2)
8     (LOAD&PUSH 4)
9     (LOAD&CDR&PUSH 4)
11    (LOAD&PUSH 4)
12    (JSR L17)
14    (CONS)
15    (SKIP&RET 4)
17    L17
17    (LOAD&JMPIFNOT 2 L3)
20    L20
20    (LOAD&CAR&PUSH 2)
22    (LOAD&PUSH 2)
23    (LOAD&PUSH 5)
24    (CALL 3 0)                          ; MEMBERROOT
27    (JMPIF L6)
29    (LOAD&PUSH 3)
30    (LOAD&CDR&PUSH 3)
32    (LOAD&PUSH 3)
33    (JMPTAIL 3 7 L17)


Disassembly of function #:|(DEFUN DELETMULT (L) ...)-46|
(CONST 0) = DELETMULT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DELETMULT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DELETMULT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DELETMULT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DELETMULT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DELETMULT
8     (SKIP&RET 1)


Disassembly of function DELETMULT
(CONST 0) = L
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
14 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (GETVALUE 0)                        ; L
5     (JMPIFNOT1 L15)
7     (CAR&PUSH)
8     (GETVALUE 0)                        ; L
10    (CDR)
11    (CDR&PUSH)
12    (JSR L0)
14    (CONS)
15    L15
15    (UNBIND1)
16    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PUNIVARP (POLY) ...)-47|
(CONST 0) = PUNIVARP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PUNIVARP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PUNIVARP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PUNIVARP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PUNIVARP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PUNIVARP
8     (SKIP&RET 1)


Disassembly of function PUNIVARP
(CONST 0) = L
(CONST 1) = *IVAR*
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*IVAR* L)
writes special variable : (L)
37 byte-code instructions:
0     L0
0     (LOAD 1)
1     (CDR)
2     (BIND 0)                            ; L
4     (GETVALUE 0)                        ; L
6     (JMPIFNOT L42)
8     L8
8     (GETVALUE 0)                        ; L
10    (CDR)
11    (CAR&PUSH)
12    (CALLS2&JMPIF 8 L32)                ; NUMBERP
15    (GETVALUE 0)                        ; L
17    (CDR)
18    (CAR)
19    (CAR&PUSH)
20    (GETVALUE 1)                        ; *IVAR*
22    (JMPIFNOTEQ L46)
24    (GETVALUE 0)                        ; L
26    (CDR)
27    (CAR&PUSH)
28    (JSR L0)
30    (JMPIFNOT L46)
32    L32
32    (GETVALUE 0)                        ; L
34    (CDR)
35    (CDR)
36    (SETVALUE 0)                        ; L
38    (GETVALUE 0)                        ; L
40    (JMPIF L8)
42    L42
42    (T)
43    L43
43    (UNBIND1)
44    (SKIP&RET 2)
46    L46
46    (NIL)
47    (JMP L43)


Disassembly of function #:|(DEFUN REALONLY (ROOTSL) ...)-48|
(CONST 0) = REALONLY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE REALONLY>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; REALONLY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; REALONLY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE REALONLY>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; REALONLY
8     (SKIP&RET 1)


Disassembly of function REALONLY
(CONST 0) = $%I
(CONST 1) = FREEOF
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
19 byte-code instructions:
0     (LOAD&JMPIF 1 L22)
3     L3
3     (NIL)
4     (SKIP&RET 2)
6     L6
6     (LOAD&CAR&PUSH 1)
8     (LIST&PUSH 1)
10    (LOAD&CDR&PUSH 2)
12    (JSR&PUSH L19)
14    (CALLSR 2 35)                       ; NCONC
17    (SKIP&RET 2)
19    L19
19    (LOAD&JMPIFNOT 1 L3)
22    L22
22    (CONST&PUSH 0)                      ; $%I
23    (LOAD&CAR&PUSH 2)
25    (CALL2&JMPIF 1 L6)                  ; FREEOF
28    (LOAD&CDR&PUSH 1)
30    (JMPTAIL 1 3 L19)


Disassembly of function #:|(DEFUN PRESULTANT (P1 P2 VAR) ...)-49|
(CONST 0) = PRESULTANT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PRESULTANT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PRESULTANT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PRESULTANT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PRESULTANT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PRESULTANT
8     (SKIP&RET 1)


Disassembly of function PRESULTANT
(CONST 0) = VAR
(CONST 1) = PDIS
(CONST 2) = 1
(CONST 3) = $RESULTANT
(CONST 4) = RATF
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (VAR)
17 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; VAR
3     (LOAD&PUSH 6)
4     (CALL1&PUSH 1)                      ; PDIS
6     (LOAD&PUSH 6)
7     (CALL1&PUSH 1)                      ; PDIS
9     (GETVALUE&PUSH 0)                   ; VAR
11    (CONST&PUSH 2)                      ; 1
12    (CONST&PUSH 2)                      ; 1
13    (LIST&PUSH 3)
15    (CALL1&PUSH 1)                      ; PDIS
17    (CALL&PUSH 3 3)                     ; $RESULTANT
20    (CALL1 4)                           ; RATF
22    (CDR)
23    (CAR)
24    (UNBIND1)
25    (SKIP&RET 4)


Disassembly of function #:|(DEFUN PTIMEFTRS (L) ...)-50|
(CONST 0) = PTIMEFTRS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PTIMEFTRS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PTIMEFTRS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PTIMEFTRS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PTIMEFTRS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PTIMEFTRS
8     (SKIP&RET 1)


Disassembly of function PTIMEFTRS
(CONST 0) = L
(CONST 1) = LL
(CONST 2) = PTIMES
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LL L)
writes special variable : (LL)
24 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (NIL)
4     (BIND 1)                            ; LL
6     (GETVALUE 0)                        ; L
8     (CDR)
9     (CDR)
10    (SETVALUE 1)                        ; LL
12    (JMPIFNOT L27)
14    (GETVALUE 0)                        ; L
16    (CAR&PUSH)
17    (GETVALUE&PUSH 1)                   ; LL
19    (JSR&PUSH L0)
21    (CALL2 2)                           ; PTIMES
23    (UNBIND1)
24    L24
24    (UNBIND1)
25    (SKIP&RET 2)
27    L27
27    (GETVALUE 0)                        ; L
29    (CAR)
30    (UNBIND1)
31    (JMP L24)


Disassembly of function #:|(DEFUN EBAKSUBST (SOLNL LHSL) ...)-51|
(CONST 0) = EBAKSUBST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EBAKSUBST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; EBAKSUBST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EBAKSUBST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EBAKSUBST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; EBAKSUBST
8     (SKIP&RET 1)


Disassembly of function EBAKSUBST
(CONST 0) = ($EV)
(CONST 1) = PDIS
(CONST 2) = (MLIST)
(CONST 3) = $RADCAN
(CONST 4) = MEVAL
(CONST 5) = RATF
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
27 byte-code instructions:
0     (NIL&PUSH)
1     (LOAD&PUSH 2)
2     (JMP L28)
4     L4
4     (LOAD&CAR&PUSH 0)
6     (CONST&PUSH 0)                      ; ($EV)
7     (LOAD&PUSH 1)
8     (CALL1&PUSH 1)                      ; PDIS
10    (CONST&PUSH 2)                      ; (MLIST)
11    (LOAD 8)
12    (CONS&PUSH)
13    (CONST&PUSH 3)                      ; $RADCAN
14    (LIST&PUSH 4)
16    (CALL1&PUSH 4)                      ; MEVAL
18    (CALL1 5)                           ; RATF
20    (CDR)
21    (CAR&PUSH)
22    (LOAD&CONS&STORE 2)
24    (SKIP 1)
26    (LOAD&CDR&STORE 0)
28    L28
28    (LOAD&PUSH 0)
29    (CALLS1&JMPIFNOT 146 L4)            ; ENDP
32    (SKIP 1)
34    (LOAD&PUSH 0)
35    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
37    (SKIP&RET 4)


Disassembly of function #:|(DEFUN BAKSUBST (SOLNL LHSL) ...)-52|
(CONST 0) = BAKSUBST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BAKSUBST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BAKSUBST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BAKSUBST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BAKSUBST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BAKSUBST
8     (SKIP&RET 1)


Disassembly of function BAKSUBST
(CONST 0) = ERRBREAK1
(CONST 1) = ERRSET
(CONST 2) = BINDLIST
(CONST 3) = LOCLIST
(CONST 4) = VAL
(CONST 5) = #(NIL)
(CONST 6) = (#(ERROR 6) 1 . 1)
(CONST 7) = BAKSUBST1
(CONST 8) = E
(CONST 9) = ERRLFUN1
(CONST 10) = DELQ
(CONST 11) = MEMQ
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VAL ERRSET E LOCLIST BINDLIST)
writes special variable : (VAL)
69 byte-code instructions:
0     (T&PUSH)
1     (NIL&PUSH)
2     (LOAD&PUSH 3)
3     (JMP L87)
6     L6
6     (HANDLER-BEGIN&PUSH)
7     (LOAD 0)
8     (STOREI 0 0 4)
12    (GO-I 0 0 2 0)
17    L17
17    (LOAD&CAR&PUSH 0)
19    (CONST 0)                           ; ERRBREAK1
20    (BIND 1)                            ; ERRSET
22    (GETVALUE&PUSH 2)                   ; BINDLIST
24    (GETVALUE 3)                        ; LOCLIST
26    (CONS&PUSH)
27    (NIL)
28    (BIND 4)                            ; VAL
30    (NIL&PUSH)
31    (TAGBODY-OPEN 5 L56)                ; #(NIL)
34    (HANDLER-OPEN 6 L6)                 ; (#(ERROR 6) 1 . 1)
36    (LOAD&PUSH 22)
37    (LOAD&PUSH 17)
38    (CALL2&PUSH 7)                      ; BAKSUBST1
40    (LIST 1)
42    (SKIP 4)
44    (JMP L64)
46    L46
46    (GETVALUE&PUSH 8)                   ; E
48    (CALLSR 0 29)                       ; ERROR
51    L51
51    (NIL&PUSH)
52    (LIST 1)
54    (SKIP&RET 3)
56    L56
56    (LOAD 4)
57    (BIND 8)                            ; E
59    (GETVALUE 1)                        ; ERRSET
61    (JMPIF L46)
63    (UNBIND1)
64    L64
64    (TAGBODY-CLOSE)
65    (SKIP 1)
67    (SETVALUE 4)                        ; VAL
69    (JMPIF L74)
71    (LOAD&PUSH 3)
72    (CALL1 9)                           ; ERRLFUN1
74    L74
74    (GETVALUE 4)                        ; VAL
76    (UNBIND1)
77    (SKIP 1)
79    (UNBIND1)
80    (CAR&PUSH)
81    (LOAD&CONS&STORE 2)
83    (SKIP 1)
85    (LOAD&CDR&STORE 0)
87    L87
87    (LOAD&PUSH 0)
88    (CALLS1&JMPIFNOT 146 L17)           ; ENDP
92    (SKIP 1)
94    (LOAD&PUSH 0)
95    (CALLS1&STORE 164 0)                ; SYSTEM::LIST-NREVERSE
98    (CALL2 10)                          ; DELQ
100   (STORE 1)
101   (NIL&PUSH)
102   (LOAD&PUSH 2)
103   (CALL2&JMPIF 11 L51)                ; MEMQ
106   (LOAD 1)
107   (SKIP&RET 3)


Disassembly of function #:|(DEFUN BAKSUBST1 (SOLNL POLY) ...)-53|
(CONST 0) = BAKSUBST1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BAKSUBST1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BAKSUBST1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BAKSUBST1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BAKSUBST1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BAKSUBST1
8     (SKIP&RET 1)


Disassembly of function BAKSUBST1
(CONST 0) = $REALONLY
(CONST 1) = $KEEPFLOAT
(CONST 2) = ($EV)
(CONST 3) = PDIS
(CONST 4) = (MLIST)
(CONST 5) = $NUMER
(CONST 6) = MEVAL
(CONST 7) = RATF
(CONST 8) = COMPLEXNUMP
(CONST 9) = (MLIST)
(CONST 10) = (MLIST)
(CONST 11) = TAYAPPROX
(CONST 12) = ROOTSP
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: ($REALONLY)
38 byte-code instructions:
0     (GETVALUE 0)                        ; $REALONLY
2     (NOT)
3     (BIND 1)                            ; $KEEPFLOAT
5     (CONST&PUSH 2)                      ; ($EV)
6     (LOAD&PUSH 5)
7     (CALL1&PUSH 3)                      ; PDIS
9     (CONST&PUSH 4)                      ; (MLIST)
10    (LOAD 8)
11    (CONS&PUSH)
12    (CONST&PUSH 5)                      ; $NUMER
13    (LIST&PUSH 4)
15    (CALL1&PUSH 6)                      ; MEVAL
17    (CALL1 7)                           ; RATF
19    (CDR&PUSH)
20    (LOAD&CAR&PUSH 0)
22    (CALL1&PUSH 3)                      ; PDIS
24    (CALL1&JMPIFNOT 8 L32)              ; COMPLEXNUMP
27    (LOAD&CDR&PUSH 0)
29    (CALLS2&JMPIF 8 L39)                ; NUMBERP
32    L32
32    (LOAD 0)
33    (CAR)
34    L34
34    (SKIP 1)
36    (UNBIND1)
37    (SKIP&RET 3)
39    L39
39    (CONST&PUSH 9)                      ; (MLIST)
40    (LOAD 7)
41    (CONS&PUSH)
42    (CONST&PUSH 10)                     ; (MLIST)
43    (LOAD&PUSH 7)
44    (CALL1&PUSH 3)                      ; PDIS
46    (LOAD&PUSH 8)
47    (CALL1&PUSH 11)                     ; TAYAPPROX
49    (LIST&PUSH 3)
51    (CALL2 12)                          ; ROOTSP
53    (JMP L34)


Disassembly of function #:|(DEFUN COMPLEXNUMP (P) ...)-54|
(CONST 0) = COMPLEXNUMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COMPLEXNUMP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COMPLEXNUMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COMPLEXNUMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COMPLEXNUMP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COMPLEXNUMP
8     (SKIP&RET 1)


Disassembly of function COMPLEXNUMP
(CONST 0) = P
(CONST 1) = $RATSIMP
(CONST 2) = RATF
(CONST 3) = PGET
(CONST 4) = PDIS
(CONST 5) = $%I
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
24 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (GETVALUE&PUSH 0)                   ; P
5     (CALL1&PUSH 1)                      ; $RATSIMP
7     (CALL1 2)                           ; RATF
9     (CDR)
10    (CAR)
11    (BIND 0)                            ; P
13    (GETVALUE&PUSH 0)                   ; P
15    (CALLS2 8)                          ; NUMBERP
17    (JMPIF1 L31)
19    (GETVALUE 0)                        ; P
21    (CAR&PUSH)
22    (CALL1&PUSH 3)                      ; PGET
24    (CALL1&PUSH 4)                      ; PDIS
26    (CONST 5)                           ; $%I
27    (EQ)
28    (UNBIND1)
29    (JMP L32)
31    L31
31    (UNBIND1)
32    L32
32    (UNBIND1)
33    (SKIP&RET 2)


Disassembly of function #:|(DEFUN BAKALEVEL (SOLNL LHSL VAR) ...)-55|
(CONST 0) = BAKALEVEL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BAKALEVEL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BAKALEVEL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BAKALEVEL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BAKALEVEL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BAKALEVEL
8     (SKIP&RET 1)


Disassembly of function BAKALEVEL
(CONST 0) = VAR
(CONST 1) = BAKALEVEL1
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (VAR)
37 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; VAR
3     (NIL&PUSH)
4     (LOAD&PUSH 7)
5     (PUSH-NIL 3)
7     (LOAD&JMPIFNOT 3 L40)
10    L10
10    (LOAD&CAR&PUSH 3)
12    (LOAD 0)
13    (STORE 5)
14    (STORE 0)
15    (LOAD&PUSH 11)
16    (GETVALUE&PUSH 0)                   ; VAR
18    (CALL&PUSH 3 1)                     ; BAKALEVEL1
21    (CALLS1&STORE 158 0)                ; COPY-LIST
24    (LOAD&JMPIF 1 L46)
27    (LOAD 0)
28    (STORE 2)
29    L29
29    (PUSH)
30    (PUSH-UNBOUND 1)
32    (CALLS1&STORE 156 1)                ; LAST
35    L35
35    (LOAD&CDR&STORE 3)
37    (LOAD&JMPIF 3 L10)
40    L40
40    (LOAD 2)
41    (SKIP 5)
43    (UNBIND1)
44    (SKIP&RET 4)
46    L46
46    (PUSH)
47    (LOAD&PUSH 1)
48    (CALLS1&JMPIFNOT 171 L35)           ; SYSTEM::%RPLACD
51    (LOAD 1)
52    (CDR)
53    (JMP L29)


Disassembly of function #:|(DEFUN BAKALEVEL1 (SOLNL LHSL VAR) ...)-56|
(CONST 0) = BAKALEVEL1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BAKALEVEL1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BAKALEVEL1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BAKALEVEL1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BAKALEVEL1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BAKALEVEL1
8     (SKIP&RET 1)


Disassembly of function BAKALEVEL1
(CONST 0) = VAR
(CONST 1) = EXACTONLY
(CONST 2) = EBAKSUBST
(CONST 3) = ALGSYS
(CONST 4) = MERGESOLN
(CONST 5) = FINDLEASTVAR
(CONST 6) = CALLSOLVE
(CONST 7) = ZL-REMOVE
(CONST 8) = BAKALEVEL
(CONST 9) = BAKSUBST
(CONST 10) = APPRSYS
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (VAR)
44 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; VAR
3     (LOAD&PUSH 6)
4     (CALL1&JMPIF 1 L48)                 ; EXACTONLY
7     (LOAD&PUSH 6)
8     (LOAD&PUSH 7)
9     (LOAD&PUSH 7)
10    (CALL2&PUSH 9)                      ; BAKSUBST
12    (CALL1 10)                          ; APPRSYS
14    L14
14    (PUSH)
15    (CALL2 4)                           ; MERGESOLN
17    L17
17    (UNBIND1)
18    (SKIP&RET 4)
20    L20
20    (PUSH)
21    (LOAD&PUSH 7)
22    (LOAD&PUSH 7)
23    (CALL2&PUSH 2)                      ; EBAKSUBST
25    (CALL1 3)                           ; ALGSYS
27    (JMP L14)
29    L29
29    (LOAD&PUSH 5)
30    (CALL1 5)                           ; FINDLEASTVAR
32    (STORE 6)
33    (PUSH)
34    (CALL1&PUSH 6)                      ; CALLSOLVE
36    (LOAD&CAR&PUSH 7)
38    (LOAD&PUSH 7)
39    (CALL2&PUSH 7)                      ; ZL-REMOVE
41    (GETVALUE&PUSH 0)                   ; VAR
43    (CALL 3 8)                          ; BAKALEVEL
46    (JMP L17)
48    L48
48    (LOAD&JMPIF 6 L20)
51    (LOAD 5)
52    (CDR)
53    (JMPIF L29)
55    (LOAD&CAR&PUSH 5)
57    (GETVALUE 0)                        ; VAR
59    (CONS&PUSH)
60    (CALL1 6)                           ; CALLSOLVE
62    (JMP L17)


Disassembly of function #:|(DEFUN EXACTONLY (SOLNL) ...)-57|
(CONST 0) = EXACTONLY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXACTONLY>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXACTONLY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXACTONLY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXACTONLY>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; EXACTONLY
8     (SKIP&RET 1)


Disassembly of function EXACTONLY
(CONST 0) = REALONLYRATNUM
(CONST 1) = RAT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (REALONLYRATNUM)
23 byte-code instructions:
0     L0
0     (LOAD 1)
1     (JMPIFATOM L15)
3     (LOAD&CAR&PUSH 1)
5     (JSR L0)
7     (JMPIFNOT1 L32)
9     (LOAD&CDR&PUSH 1)
11    (JMPTAIL 1 3 L0)
15    L15
15    (LOAD&PUSH 1)
16    (CALLS2 15)                         ; FLOATP
18    (NOT)
19    (JMPIFNOT1 L32)
21    (GETVALUE 0)                        ; REALONLYRATNUM
23    (NOT)
24    (JMPIF1 L32)
26    (LOAD&PUSH 1)
27    (CONST 1)                           ; RAT
28    (EQ)
29    (NOT)
30    (SKIP&RET 2)
32    L32
32    (SKIP&RET 2)


Disassembly of function #:|(DEFUN MERGESOLN (ASOLN SOLNL) ...)-58|
(CONST 0) = MERGESOLN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MERGESOLN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MERGESOLN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MERGESOLN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MERGESOLN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MERGESOLN
8     (SKIP&RET 1)


Disassembly of function MERGESOLN
(CONST 0) = ERRORSW
(CONST 1) = S
(CONST 2) = BINDLIST
(CONST 3) = LOCLIST
(CONST 4) = R
(CONST 5) = ($EV)
(CONST 6) = (MLIST)
(CONST 7) = MEVAL
(CONST 8) = ERRLFUN1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (S R LOCLIST BINDLIST)
writes special variable : (S)
69 byte-code instructions:
0     (T)
1     (BIND 0)                            ; ERRORSW
3     (NIL)
4     (BIND 1)                            ; S
6     (GETVALUE&PUSH 2)                   ; BINDLIST
8     (GETVALUE 3)                        ; LOCLIST
10    (CONS&PUSH)
11    (NIL&PUSH)
12    (LOAD&PUSH 9)
13    (JMP L88)
16    L16
16    (LOAD&CAR&PUSH 0)
18    (CONST 0)                           ; ERRORSW
19    (CATCH-OPEN L69)
21    (NIL&PUSH)
22    (LOAD&PUSH 16)
23    (JMP L54)
25    L25
25    (LOAD&PUSH 3)
26    (CALL1 8)                           ; ERRLFUN1
28    (NIL)
29    (JMP L79)
31    L31
31    (LOAD&CAR&PUSH 0)
33    (LOAD 0)
34    (BIND 4)                            ; R
36    (CONST&PUSH 5)                      ; ($EV)
37    (GETVALUE&PUSH 4)                   ; R
39    (CONST&PUSH 6)                      ; (MLIST)
40    (LOAD 12)
41    (CONS&PUSH)
42    (LIST&PUSH 3)
44    (CALL1 7)                           ; MEVAL
46    (UNBIND1)
47    (PUSH)
48    (LOAD&CONS&STORE 2)
50    (SKIP 1)
52    (LOAD&CDR&STORE 0)
54    L54
54    (LOAD&PUSH 0)
55    (CALLS1&JMPIFNOT 146 L31)           ; ENDP
58    (SKIP 1)
60    (LOAD&PUSH 0)
61    (CALLS1&STORE 164 0)                ; SYSTEM::LIST-NREVERSE
64    (LOAD&PUSH 4)
65    (CALLSR 2 34)                       ; APPEND
68    (CATCH-CLOSE)
69    L69
69    (SETVALUE 1)                        ; S
71    (PUSH)
72    (T)
73    (JMPIFEQ L25)
75    (GETVALUE&PUSH 1)                   ; S
77    (LIST 1)
79    L79
79    (PUSH)
80    (LOAD&PUSH 3)
81    (CALLS1&STORE 163 2)                ; NRECONC
84    (SKIP 1)
86    (LOAD&CDR&STORE 0)
88    L88
88    (LOAD&PUSH 0)
89    (CALLS1&JMPIFNOT 146 L16)           ; ENDP
93    (SKIP 1)
95    (LOAD&PUSH 0)
96    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
98    (SKIP 2)
100   (UNBIND 2)
102   (SKIP&RET 3)


Disassembly of function #:|(DEFUN CALLSOLVE (PV) ...)-59|
(CONST 0) = CALLSOLVE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CALLSOLVE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CALLSOLVE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CALLSOLVE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CALLSOLVE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CALLSOLVE
8     (SKIP&RET 1)


Disassembly of function CALLSOLVE
(CONST 0) = VAR
(CONST 1) = VARLIST
(CONST 2) = GENVAR
(CONST 3) = *ROOTS
(CONST 4) = *FAILURES
(CONST 5) = $PROGRAMMODE
(CONST 6) = $ALGEXACT
(CONST 7) = PUNIVARP
(CONST 8) = BIQUADRATICP
(CONST 9) = PDIS
(CONST 10) = 1
(CONST 11) = SOLVE
(CONST 12) = DELETMULT
(CONST 13) = MEQHK
(CONST 14) = RATF
(CONST 15) = CALLAPPRS
(CONST 16) = #.#'LIST
(CONST 17) = $REALONLY
(CONST 18) = REALONLY
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($REALONLY *FAILURES *ROOTS VAR $ALGEXACT GENVAR VARLIST)
81 byte-code instructions:
0     (LOAD&CAR&PUSH 1)
2     (LOAD 2)
3     (CDR)
4     (BIND 0)                            ; VAR
6     (GETVALUE 1)                        ; VARLIST
8     (BIND 1)                            ; VARLIST
10    (GETVALUE 2)                        ; GENVAR
12    (BIND 2)                            ; GENVAR
14    (NIL)
15    (BIND 3)                            ; *ROOTS
17    (NIL)
18    (BIND 4)                            ; *FAILURES
20    (T)
21    (BIND 5)                            ; $PROGRAMMODE
23    (GETVALUE 6)                        ; $ALGEXACT
25    (JMPIF L47)
27    (LOAD&PUSH 18)
28    (CALL1&JMPIFNOT 7 L47)              ; PUNIVARP
31    (LOAD&PUSH 18)
32    (CALL1&JMPIF 8 L47)                 ; BIQUADRATICP
35    (LOAD&PUSH 18)
36    (CALL1 15)                          ; CALLAPPRS
38    L38
38    (UNBIND 6)
40    (SKIP&RET 3)
42    L42
42    (NIL&PUSH)
43    (LIST 1)
45    (JMP L38)
47    L47
47    (LOAD&PUSH 18)
48    (CALL1&PUSH 9)                      ; PDIS
50    (GETVALUE&PUSH 0)                   ; VAR
52    (CONST&PUSH 10)                     ; 1
53    (CONST&PUSH 10)                     ; 1
54    (LIST&PUSH 3)
56    (CALL1&PUSH 9)                      ; PDIS
58    (CONST&PUSH 10)                     ; 1
59    (CALL 3 11)                         ; SOLVE
62    (GETVALUE 3)                        ; *ROOTS
64    (JMPIF L70)
66    (GETVALUE 4)                        ; *FAILURES
68    (JMPIFNOT L42)
70    L70
70    (NIL&PUSH)
71    (GETVALUE&PUSH 4)                   ; *FAILURES
73    (CALL1&PUSH 12)                     ; DELETMULT
75    (JMP L104)
77    L77
77    (GETVALUE&PUSH 3)                   ; *ROOTS
79    (CALL1&PUSH 12)                     ; DELETMULT
81    (CALL1 18)                          ; REALONLY
83    (JMP L123)
85    L85
85    (LOAD&CAR&PUSH 0)
87    (LOAD&PUSH 0)
88    (CALL1&PUSH 13)                     ; MEQHK
90    (CALL1 14)                          ; RATF
92    (CDR)
93    (CAR&PUSH)
94    (CALL1&PUSH 15)                     ; CALLAPPRS
96    (LOAD&PUSH 3)
97    (CALLS1&STORE 163 2)                ; NRECONC
100   (SKIP 1)
102   (LOAD&CDR&STORE 0)
104   L104
104   (LOAD&PUSH 0)
105   (CALLS1&JMPIFNOT 146 L85)           ; ENDP
108   (SKIP 1)
110   (LOAD&PUSH 0)
111   (CALLS1&STORE 164 0)                ; SYSTEM::LIST-NREVERSE
114   (CONST&PUSH 16)                     ; #.#'LIST
115   (GETVALUE 17)                       ; $REALONLY
117   (JMPIF L77)
119   (GETVALUE&PUSH 3)                   ; *ROOTS
121   (CALL1 12)                          ; DELETMULT
123   L123
123   (PUSH)
124   (CALLSR&PUSH 0 22)                  ; MAPCAR
127   (CALLSR 2 34)                       ; APPEND
130   (JMP L38)


Disassembly of function #:|(DEFUN BIQUADRATICP (POLY) ...)-60|
(CONST 0) = BIQUADRATICP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BIQUADRATICP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BIQUADRATICP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BIQUADRATICP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BIQUADRATICP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BIQUADRATICP
8     (SKIP&RET 1)


Disassembly of function BIQUADRATICP
(CONST 0) = ALGNOTEXACT
(CONST 1) = 2
(CONST 2) = 3
(CONST 3) = 4
(CONST 4) = BIQUADP1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (ALGNOTEXACT)
32 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 5)                          ; ATOM
3     (JMPIF1 L44)
5     (GETVALUE 0)                        ; ALGNOTEXACT
7     (JMPIF L35)
9     (LOAD 1)
10    (CDR)
11    (CAR&PUSH)
12    (CONST&PUSH 2)                      ; 3
13    (CALLSR 1 47)                       ; <
16    (JMPIF1 L44)
18    (LOAD 1)
19    (CDR)
20    (CAR&PUSH)
21    (CONST&PUSH 3)                      ; 4
22    (CALLSR 1 45)                       ; =
25    (JMPIFNOT1 L44)
27    (LOAD 1)
28    (CDR)
29    (CDR)
30    (CDR&PUSH)
31    (CALL1 4)                           ; BIQUADP1
33    (SKIP&RET 2)
35    L35
35    (LOAD 1)
36    (CDR)
37    (CAR&PUSH)
38    (CONST&PUSH 1)                      ; 2
39    (CALLSR 1 47)                       ; <
42    (SKIP&RET 2)
44    L44
44    (SKIP&RET 2)


Disassembly of function #:|(DEFUN BIQUADP1 (L) ...)-61|
(CONST 0) = BIQUADP1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BIQUADP1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BIQUADP1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BIQUADP1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BIQUADP1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BIQUADP1
8     (SKIP&RET 1)


Disassembly of function BIQUADP1
(CONST 0) = L
(CONST 1) = 2
(CONST 2) = 0
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
23 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (GETVALUE 0)                        ; L
5     (NOT)
6     (JMPIF1 L31)
8     (GETVALUE 0)                        ; L
10    (CAR&PUSH)
11    (CONST&PUSH 1)                      ; 2
12    (CALLSR&JMPIF 1 45 L25)             ; =
16    (GETVALUE 0)                        ; L
18    (CAR&PUSH)
19    (CONST&PUSH 2)                      ; 0
20    (CALLSR 1 45)                       ; =
23    (JMPIFNOT1 L31)
25    L25
25    (GETVALUE 0)                        ; L
27    (CDR)
28    (CDR&PUSH)
29    (JSR L0)
31    L31
31    (UNBIND1)
32    (SKIP&RET 2)


Disassembly of function #:|(DEFUN CALLAPPRS (POLY) ...)-62|
(CONST 0) = CALLAPPRS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CALLAPPRS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CALLAPPRS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CALLAPPRS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CALLAPPRS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CALLAPPRS
8     (SKIP&RET 1)


Disassembly of function CALLAPPRS
(CONST 0) = PUNIVARP
(CONST 1) = "ALGSYS cannot solve - system too complicated."
(CONST 2) = MERROR
(CONST 3) = $ROOTSQUAD
(CONST 4) = $DISPFLAG
(CONST 5) = $REALONLY
(CONST 6) = 1
(CONST 7) = $ALGEPSILON
(CONST 8) = STURM1
(CONST 9) = (MEQUAL)
(CONST 10) = PDIS
(CONST 11) = RFLOT
(CONST 12) = #.#'LIST
(CONST 13) = $PROGRAMMODE
(CONST 14) = L
(CONST 15) = $ALLROOTS
(CONST 16) = MEQUAL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($ALGEPSILON L $REALONLY)
writes special variable : (L)
68 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1&JMPIF 0 L7)                  ; PUNIVARP
4     (CONST&PUSH 1)                      ; "ALGSYS cannot solve - system too complicated."
5     (CALL1 2)                           ; MERROR
7     L7
7     (NIL)
8     (BIND 3)                            ; $ROOTSQUAD
10    (NIL)
11    (BIND 4)                            ; $DISPFLAG
13    (GETVALUE 5)                        ; $REALONLY
15    (JMPIF L50)
17    (CONST&PUSH 12)                     ; #.#'LIST
18    (T)
19    (BIND 13)                           ; $PROGRAMMODE
21    (NIL)
22    (BIND 14)                           ; L
24    (LOAD&PUSH 14)
25    (CALL1&PUSH 10)                     ; PDIS
27    (CALL1 15)                          ; $ALLROOTS
29    (CDR)
30    (SETVALUE 14)                       ; L
32    (CAR)
33    (CAR)
34    (CAR&PUSH)
35    (JMPIFNOTEQTO 16 L97)               ; MEQUAL
38    (GETVALUE 14)                       ; L
40    L40
40    (UNBIND 2)
42    (PUSH)
43    (CALLSR 0 22)                       ; MAPCAR
46    L46
46    (UNBIND 2)
48    (SKIP&RET 2)
50    L50
50    (NIL&PUSH)
51    (LOAD&PUSH 8)
52    (CONST&PUSH 6)                      ; 1
53    (GETVALUE 7)                        ; $ALGEPSILON
55    (CONS&PUSH)
56    (CALL2&PUSH 8)                      ; STURM1
58    (JMP L84)
60    L60
60    (LOAD&CAR&PUSH 0)
62    (CONST&PUSH 9)                      ; (MEQUAL)
63    (LOAD&CAR&PUSH 11)
65    (CONST&PUSH 6)                      ; 1
66    (CONST&PUSH 6)                      ; 1
67    (LIST&PUSH 3)
69    (CALL1&PUSH 10)                     ; PDIS
71    (LOAD&PUSH 2)
72    (CALL1&PUSH 11)                     ; RFLOT
74    (LIST&PUSH 3)
76    (LIST&PUSH 1)
78    (LOAD&CONS&STORE 2)
80    (SKIP 1)
82    (LOAD&CDR&STORE 0)
84    L84
84    (LOAD&PUSH 0)
85    (CALLS1&JMPIFNOT 146 L60)           ; ENDP
88    (SKIP 1)
90    (LOAD&PUSH 0)
91    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
93    (SKIP 1)
95    (JMP L46)
97    L97
97    (GETVALUE 14)                       ; L
99    (CDR)
100   (JMP L40)


Disassembly of function #:|(DEFUN APPRSYS (LHSL) ...)-63|
(CONST 0) = APPRSYS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE APPRSYS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; APPRSYS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; APPRSYS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE APPRSYS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; APPRSYS
8     (SKIP&RET 1)


Disassembly of function APPRSYS
(CONST 0) = "ALGSYS cannot solve - system too complicated."
(CONST 1) = MERROR
(CONST 2) = PCONSTP
(CONST 3) = PUNIVARP
(CONST 4) = CALLAPPRS
(CONST 5) = BAKALEVEL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
27 byte-code instructions:
0     (LOAD&JMPIFNOT 1 L36)
3     (LOAD&PUSH 1)
4     (LOAD&JMPIF 0 L15)
7     L7
7     (CONST&PUSH 0)                      ; "ALGSYS cannot solve - system too complicated."
8     (CALL1 1)                           ; MERROR
10    L10
10    (LOAD&CDR&STORE 0)
12    (LOAD&JMPIFNOT 0 L7)
15    L15
15    (LOAD&CAR&PUSH 0)
17    (CALL1&JMPIF 2 L41)                 ; PCONSTP
20    (LOAD&CAR&PUSH 0)
22    (CALL1&JMPIFNOT 3 L10)              ; PUNIVARP
25    (LOAD&CAR&PUSH 0)
27    (CALL1&PUSH 4)                      ; CALLAPPRS
29    (LOAD&PUSH 3)
30    (NIL&PUSH)
31    (CALL 3 5)                          ; BAKALEVEL
34    (SKIP&RET 3)
36    L36
36    (NIL&PUSH)
37    (LIST 1)
39    (SKIP&RET 2)
41    L41
41    (NIL)
42    (SKIP&RET 3)


Disassembly of function #:|(DEFUN TAYAPPROX (P) ...)-64|
(CONST 0) = TAYAPPROX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TAYAPPROX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TAYAPPROX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TAYAPPROX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TAYAPPROX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TAYAPPROX
8     (SKIP&RET 1)


Disassembly of function TAYAPPROX
(CONST 0) = P
(CONST 1) = (MPLUS)
(CONST 2) = LISTOVARS
(CONST 3) = X
(CONST 4) = (MYCABS)
(CONST 5) = 1
(CONST 6) = PDERIVATIVE
(CONST 7) = PTIMES
(CONST 8) = PDIS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X P)
37 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (CONST&PUSH 1)                      ; (MPLUS)
4     (NIL&PUSH)
5     (GETVALUE&PUSH 0)                   ; P
7     (CALL1&PUSH 2)                      ; LISTOVARS
9     (JMP L43)
11    L11
11    (LOAD&CAR&PUSH 0)
13    (LOAD 0)
14    (BIND 3)                            ; X
16    (CONST&PUSH 4)                      ; (MYCABS)
17    (GETVALUE&PUSH 3)                   ; X
19    (CONST&PUSH 5)                      ; 1
20    (CONST&PUSH 5)                      ; 1
21    (LIST&PUSH 3)
23    (GETVALUE&PUSH 0)                   ; P
25    (GETVALUE&PUSH 3)                   ; X
27    (CALL2&PUSH 6)                      ; PDERIVATIVE
29    (CALL2&PUSH 7)                      ; PTIMES
31    (CALL1&PUSH 8)                      ; PDIS
33    (LIST 2)
35    (UNBIND1)
36    (PUSH)
37    (LOAD&CONS&STORE 2)
39    (SKIP 1)
41    (LOAD&CDR&STORE 0)
43    L43
43    (LOAD&PUSH 0)
44    (CALLS1&JMPIFNOT 146 L11)           ; ENDP
47    (SKIP 1)
49    (LOAD&PUSH 0)
50    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
52    (SKIP 1)
54    (CONS)
55    (UNBIND1)
56    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN MYCABS (X) ...)-65|
(CONST 0) = MYCABS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MYCABS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MYCABS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MYCABS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MYCABS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MYCABS
8     (SKIP&RET 1)


Disassembly of function MYCABS
(CONST 0) = X
(CONST 1) = COMPLEXNUMP
(CONST 2) = CABS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
10 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALL1 1)                           ; COMPLEXNUMP
7     (JMPIFNOT1 L13)
9     (GETVALUE&PUSH 0)                   ; X
11    (CALL1 2)                           ; CABS
13    L13
13    (UNBIND1)
14    (SKIP&RET 2)


Disassembly of function #:|(DEFUN DISTREP (LOL) ...)-66|
(CONST 0) = DISTREP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DISTREP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DISTREP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DISTREP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DISTREP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DISTREP
8     (SKIP&RET 1)


Disassembly of function DISTREP
(CONST 0) = COMBINEY
(CONST 1) = CONDENSESUBLIST
(CONST 2) = CONDENSESOLNL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1&PUSH 0)                      ; COMBINEY
3     (CALL1&PUSH 1)                      ; CONDENSESUBLIST
5     (CALL1 2)                           ; CONDENSESOLNL
7     (SKIP&RET 2)


Disassembly of function #:|(DEFUN CONDENSEY (L) ...)-67|
(CONST 0) = CONDENSEY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CONDENSEY>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONDENSEY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CONDENSEY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CONDENSEY>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CONDENSEY
8     (SKIP&RET 1)


Disassembly of function CONDENSEY
(CONST 0) = L
(CONST 1) = MEMALIKE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
21 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (NIL&PUSH)
4     (GETVALUE&PUSH 0)                   ; L
6     (LOAD&PUSH 0)
7     (JMP L22)
9     L9
9     (LOAD&CAR&PUSH 0)
11    (LOAD&CDR&PUSH 1)
13    (CALL2&JMPIF 1 L20)                 ; MEMALIKE
16    (LOAD&CAR&PUSH 0)
18    (LOAD&CONS&STORE 2)
20    L20
20    (LOAD&CDR&STORE 0)
22    L22
22    (LOAD&PUSH 0)
23    (CALLS1&JMPIFNOT 146 L9)            ; ENDP
26    (SKIP 2)
28    (POP)
29    (UNBIND1)
30    (SKIP&RET 2)


Disassembly of function #:|(DEFUN CONDENSESUBLIST (LOL) ...)-68|
(CONST 0) = CONDENSESUBLIST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CONDENSESUBLIST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONDENSESUBLIST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CONDENSESUBLIST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CONDENSESUBLIST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CONDENSESUBLIST
8     (SKIP&RET 1)


Disassembly of function CONDENSESUBLIST
(CONST 0) = CONDENSEY
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; CONDENSEY
2     (LOAD&PUSH 2)
3     (CALLSR 0 22)                       ; MAPCAR
6     (SKIP&RET 2)


Disassembly of function #:|(DEFUN EXCLUDE (L1 L2) ...)-69|
(CONST 0) = EXCLUDE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE EXCLUDE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; EXCLUDE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; EXCLUDE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE EXCLUDE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; EXCLUDE
8     (SKIP&RET 1)


Disassembly of function EXCLUDE
(CONST 0) = ZL-MEMBER
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD&JMPIF 1 L16)
3     L3
3     (NIL)
4     (SKIP&RET 3)
6     L6
6     (LOAD&PUSH 2)
7     (LOAD&CDR&PUSH 2)
9     (JMPTAIL 2 5 L13)
13    L13
13    (LOAD&JMPIFNOT 1 L3)
16    L16
16    (LOAD&CAR&PUSH 1)
18    (LOAD&PUSH 3)
19    (CALL2&JMPIF 0 L6)                  ; ZL-MEMBER
22    (LOAD&CAR&PUSH 1)
24    (LOAD&PUSH 3)
25    (LOAD&CDR&PUSH 3)
27    (JSR L13)
29    (CONS)
30    (SKIP&RET 3)


Wrote file binary-clisp/algsys.fas
Wrote file /cygdrive/e/temp/maxima/src/algsys.lis