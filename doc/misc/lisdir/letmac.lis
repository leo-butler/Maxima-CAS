Listing of compilation of file /cygdrive/e/temp/maxima/src/letmac.lisp
on 2002-12-17 13:31:52 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/letmac.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL LET-MACRO-VALS))-2|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO LET (PAIRS &BODY BODY) ...)-3|
(CONST 0) = LET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LET>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LET>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LET
10    (SKIP&RET 1)


Disassembly of function LET
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = LET-MACRO-VALS
(CONST 3) = "Garbage found in LET pattern: ~S"
(CONST 4) = LET-MACRO-GET-VARS
(CONST 5) = LET-MACRO-HAIR
(CONST 6) = COMMON-LISP:LET
(CONST 7) = PROGN
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (LET-MACRO-VALS)
writes special variable : (LET-MACRO-VALS)
128 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 47 L79)             ; <
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (LOAD 3)
13    (CDR)
14    (CDR&PUSH)
15    (LOAD&PUSH 1)
16    (NIL&PUSH)
17    (NIL)
18    (BIND 2)                            ; LET-MACRO-VALS
20    (NIL&PUSH)
21    (LOAD&JMPIFNOT 5 L63)
24    L24
24    (LOAD 5)
25    (CAR)
26    (JMPIFATOM L90)
28    (LOAD 4)
29    (STORE 0)
30    (LOAD 5)
31    (CAR)
32    (CAR&PUSH)
33    (LOAD&PUSH 5)
34    (CALL2 4)                           ; LET-MACRO-GET-VARS
36    (STORE 4)
37    (LOAD&PUSH 0)
38    (LOAD 5)
39    (JMPIFEQ L58)
41    (LOAD 5)
42    (CAR)
43    (CAR&PUSH)
44    (LOAD 6)
45    (CAR)
46    (CDR)
47    (CAR&PUSH)
48    (GETVALUE&PUSH 2)                   ; LET-MACRO-VALS
50    (CALL&PUSH 3 5)                     ; LET-MACRO-HAIR
53    (LOAD&PUSH 7)
54    (CALLSR&STORE 2 35 6)               ; NCONC
58    L58
58    (LOAD&CDR&STORE 5)
60    (LOAD&JMPIF 5 L24)
63    L63
63    (LOAD&JMPIF 4 L117)
66    (LOAD 6)
67    (CDR)
68    (JMPIFNOT L175)
71    (CONST&PUSH 7)                      ; PROGN
72    (LOAD 7)
73    (CONS)
74    L74
74    (SKIP 1)
76    (UNBIND1)
77    (SKIP&RET 7)
79    L79
79    (LOAD&PUSH 2)
80    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
82    (SKIP&RET 3)
84    L84
84    (CONST&PUSH 3)                      ; "Garbage found in LET pattern: ~S"
85    (LOAD&CAR&PUSH 6)
87    (CALLSR 1 29)                       ; ERROR
90    L90
90    (LOAD&CAR&PUSH 5)
92    (CALLS2&JMPIFNOT 6 L84)             ; SYMBOLP
95    (LOAD&CAR&PUSH 5)
97    (LOAD&CONS&STORE 4)
99    (NIL&PUSH)
100   (GETVALUE 2)                        ; LET-MACRO-VALS
102   (CONS)
103   (SETVALUE 2)                        ; LET-MACRO-VALS
105   (JMP L58)
107   L107
107   (PUSH)
108   (LOAD&PUSH 1)
109   (NIL)
110   (CONS)
111   (STORE 2)
112   (PUSH)
113   (CALLS1 171)                        ; SYSTEM::%RPLACD
115   (JMP L156)
117   L117
117   (CONST&PUSH 6)                      ; COMMON-LISP:LET
118   (NIL&PUSH)
119   (LOAD&PUSH 6)
120   (NIL&PUSH)
121   (GETVALUE&PUSH 2)                   ; LET-MACRO-VALS
123   (PUSH-NIL 3)
125   (LOAD&JMPIFNOT 3 L163)
128   L128
128   (LOAD&JMPIFNOT 5 L163)
131   (LOAD&CAR&PUSH 5)
133   (LOAD 0)
134   (STORE 7)
135   (SKIP 1)
137   (LOAD&CAR&PUSH 3)
139   (LOAD 0)
140   (STORE 5)
141   (SKIP 1)
143   (LOAD&PUSH 6)
144   (LOAD&PUSH 5)
145   (LIST 2)
147   (STORE 0)
148   (LOAD&JMPIF 1 L107)
151   (LOAD&PUSH 0)
152   (NIL)
153   (CONS)
154   (STORE 1)
155   (STORE 2)
156   L156
156   (LOAD&CDR&STORE 5)
158   (LOAD&CDR&STORE 3)
160   (LOAD&JMPIF 3 L128)
163   L163
163   (LOAD 2)
164   (SKIP 6)
166   (STORE 0)
167   (CALLS2&PUSH 73)                    ; NREVERSE
169   (LOAD 8)
170   (LIST* 2)
172   (JMP L74)
175   L175
175   (LOAD 6)
176   (CAR)
177   (JMP L74)


Disassembly of function #:|(DEFUN LET-MACRO-GET-VARS (PATTERN VARS) ...)-4|
(CONST 0) = LET-MACRO-GET-VARS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LET-MACRO-GET-VARS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LET-MACRO-GET-VARS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LET-MACRO-GET-VARS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LET-MACRO-GET-VARS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LET-MACRO-GET-VARS
8     (SKIP&RET 1)


Disassembly of function LET-MACRO-GET-VARS
(CONST 0) = "Garbage found in LET pattern: ~S"
(CONST 1) = LET-MACRO-VALS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (LET-MACRO-VALS)
writes special variable : (LET-MACRO-VALS)
29 byte-code instructions:
0     (LOAD&JMPIF 2 L29)
3     L3
3     (LOAD 1)
4     (SKIP&RET 3)
6     L6
6     (CONST&PUSH 0)                      ; "Garbage found in LET pattern: ~S"
7     (LOAD&PUSH 3)
8     (CALLSR 1 29)                       ; ERROR
11    L11
11    (LOAD&PUSH 2)
12    (CALLS2&JMPIFNOT 6 L6)              ; SYMBOLP
15    (NIL&PUSH)
16    (GETVALUE 1)                        ; LET-MACRO-VALS
18    (CONS)
19    (SETVALUE 1)                        ; LET-MACRO-VALS
21    (LOAD&PUSH 2)
22    (LOAD 2)
23    (CONS)
24    (SKIP&RET 3)
26    L26
26    (LOAD&JMPIFNOT 2 L3)
29    L29
29    (LOAD 2)
30    (JMPIFATOM L11)
32    (LOAD&CDR&PUSH 2)
34    (LOAD&CAR&PUSH 3)
36    (LOAD&PUSH 3)
37    (JSR&PUSH L26)
39    (JMPTAIL 2 5 L26)


Disassembly of function #:|(DEFMACRO DESETQ (&REST P) ...)-5|
(CONST 0) = DESETQ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DESETQ>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; DESETQ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DESETQ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DESETQ>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; DESETQ
10    (SKIP&RET 1)


Disassembly of function DESETQ
(CONST 0) = "Odd number of args to DESETQ: ~S"
(CONST 1) = "Garbage found in DESETQ pattern: ~S"
(CONST 2) = "Bad DESETQ pattern: ~S"
(CONST 3) = SETQ
(CONST 4) = LET-MACRO-GET-LAST-VAR
(CONST 5) = LET-MACRO-HAIR
(CONST 6) = PROGN
1 required argument
1 optional argument
No rest parameter
No keyword parameters
72 byte-code instructions:
0     (LOAD&CDR&PUSH 2)
2     (LOAD&PUSH 0)
3     (PUSH-NIL 2)
5     (LOAD&JMPIFNOT 2 L90)
9     L9
9     (LOAD 2)
10    (CDR)
11    (JMPIFATOM L34)
13    (LOAD 2)
14    (CAR)
15    (JMPIFCONSP L54)
17    (LOAD&CAR&PUSH 2)
19    (CALLS2&JMPIFNOT 6 L38)             ; SYMBOLP
22    (LOAD 2)
23    (CAR)
24    (JMPIF L41)
26    (CONST 2)                           ; "Bad DESETQ pattern: ~S"
27    L27
27    (PUSH)
28    (LOAD 3)
29    (CAR)
30    L30
30    (PUSH)
31    (CALLSR 1 29)                       ; ERROR
34    L34
34    (CONST&PUSH 0)                      ; "Odd number of args to DESETQ: ~S"
35    (LOAD 3)
36    (JMP L30)
38    L38
38    (CONST 1)                           ; "Garbage found in DESETQ pattern: ~S"
39    (JMP L27)
41    L41
41    (LOAD&PUSH 1)
42    (CONST&PUSH 3)                      ; SETQ
43    (LOAD&CAR&PUSH 4)
45    (LOAD 5)
46    (CDR)
47    (CAR&PUSH)
48    (LIST&PUSH 3)
50    (LIST 1)
52    (JMP L77)
54    L54
54    (NIL&PUSH)
55    (NIL)
56    (CONS)
57    (STORE 0)
58    (LOAD&PUSH 1)
59    (CONST&PUSH 3)                      ; SETQ
60    (LOAD&CAR&PUSH 4)
62    (CALL1&PUSH 4)                      ; LET-MACRO-GET-LAST-VAR
64    (LOAD 3)
65    (LIST*&PUSH 2)
67    (LOAD&CAR&PUSH 4)
69    (LOAD 5)
70    (CDR)
71    (CAR&PUSH)
72    (LOAD&PUSH 4)
73    (CALL 3 5)                          ; LET-MACRO-HAIR
76    (CONS)
77    L77
77    (PUSH)
78    (CALLSR&STORE 2 35 1)               ; NCONC
82    (LOAD 2)
83    (CDR)
84    (CDR)
85    (STORE 2)
86    (LOAD&JMPIF 2 L9)
90    L90
90    (CONST&PUSH 6)                      ; PROGN
91    (LOAD 2)
92    (CONS)
93    (SKIP&RET 7)


Disassembly of function #:|(DEFUN LET-MACRO-GET-LAST-VAR (PATTERN) ...)-6|
(CONST 0) = LET-MACRO-GET-LAST-VAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LET-MACRO-GET-LAST-VAR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LET-MACRO-GET-LAST-VAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LET-MACRO-GET-LAST-VAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LET-MACRO-GET-LAST-VAR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LET-MACRO-GET-LAST-VAR
8     (SKIP&RET 1)


Disassembly of function LET-MACRO-GET-LAST-VAR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
13 byte-code instructions:
0     L0
0     (LOAD 1)
1     (JMPIFATOM L15)
3     (LOAD&CDR&PUSH 1)
5     (JSR L0)
7     (JMPIF1 L18)
9     (LOAD&CAR&PUSH 1)
11    (JMPTAIL 1 3 L0)
15    L15
15    (LOAD 1)
16    (SKIP&RET 2)
18    L18
18    (SKIP&RET 2)


Disassembly of function #:|(DEFUN LET-MACRO-HAIR (PATTERN CODE CELL) ...)-7|
(CONST 0) = LET-MACRO-HAIR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LET-MACRO-HAIR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LET-MACRO-HAIR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LET-MACRO-HAIR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LET-MACRO-HAIR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LET-MACRO-HAIR
8     (SKIP&RET 1)


Disassembly of function LET-MACRO-HAIR
(CONST 0) = LET-MACRO-GET-LAST-VAR
(CONST 1) = CDR
(CONST 2) = CAR
(CONST 3) = SETQ
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
70 byte-code instructions:
0     (LOAD&JMPIFNOT 3 L15)
3     (JMP L8)
5     L5
5     (LOAD&JMPIFNOT 3 L15)
8     L8
8     (LOAD 3)
9     (JMPIFCONSP L29)
11    (LOAD&PUSH 1)
12    (LOAD&PUSH 3)
13    (CALLS1 168)                        ; RPLACA
15    L15
15    (NIL)
16    (SKIP&RET 4)
18    L18
18    (NIL)
19    (SKIP&RET 6)
21    L21
21    (LOAD&JMPIFNOT 0 L18)
24    (LOAD&CDR&PUSH 5)
26    (CONST 1)                           ; CDR
27    (JMP L46)
29    L29
29    (LOAD&CAR&PUSH 3)
31    (CALL1&PUSH 0)                      ; LET-MACRO-GET-LAST-VAR
33    (LOAD&CDR&PUSH 4)
35    (CALL1&PUSH 0)                      ; LET-MACRO-GET-LAST-VAR
37    (LOAD&JMPIFNOT 1 L21)
40    (LOAD&JMPIF 0 L55)
43    (LOAD&CAR&PUSH 5)
45    (CONST 2)                           ; CAR
46    L46
46    (PUSH)
47    (LOAD&PUSH 6)
48    (LIST&PUSH 2)
50    (LOAD&PUSH 5)
51    (JMPTAIL 3 9 L5)
55    L55
55    (LOAD&PUSH 3)
56    (LOAD&PUSH 5)
57    (CALLS1 168)                        ; RPLACA
59    (NIL&PUSH)
60    (NIL)
61    (CONS&PUSH)
62    (NIL&PUSH)
63    (NIL)
64    (CONS&PUSH)
65    (CONST&PUSH 3)                      ; SETQ
66    (LOAD&PUSH 4)
67    (LOAD 3)
68    (LIST*&PUSH 2)
70    (LOAD&CAR&PUSH 8)
72    (CONST&PUSH 2)                      ; CAR
73    (LOAD&PUSH 5)
74    (LIST&PUSH 2)
76    (LOAD&PUSH 4)
77    (JSR&PUSH L5)
80    (CONST&PUSH 3)                      ; SETQ
81    (LOAD&PUSH 5)
82    (LOAD 4)
83    (LIST*&PUSH 2)
85    (LOAD&CDR&PUSH 10)
87    (CONST&PUSH 1)                      ; CDR
88    (LOAD&PUSH 7)
89    (LIST&PUSH 2)
91    (LOAD&PUSH 5)
92    (JSR L5)
95    (CONS&PUSH)
96    (CALLSR 2 35)                       ; NCONC
99    (CONS)
100   (SKIP&RET 8)


Disassembly of function #:|(DEFMACRO LET* (PAIRS &BODY BODY) ...)-8|
(CONST 0) = LET*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LET*>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LET*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LET*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LET*>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LET*
10    (SKIP&RET 1)


Disassembly of function LET*
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = COMMON-LISP:LET*
(CONST 3) = LET
(CONST 4) = PROGN
1 required argument
1 optional argument
No rest parameter
No keyword parameters
78 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 47 L80)             ; <
9     (LOAD 2)
10    (CDR)
11    (CAR&PUSH)
12    (LOAD 3)
13    (CDR)
14    (CDR&PUSH)
15    (NIL&PUSH)
16    (LOAD&PUSH 2)
17    (NIL&PUSH)
18    (LOAD&JMPIFNOT 1 L41)
21    L21
21    (LOAD&CAR&PUSH 1)
23    (LOAD 0)
24    (STORE 3)
25    (STORE 0)
26    (CALLS2&JMPIF 6 L33)                ; SYMBOLP
29    (LOAD&PUSH 2)
30    (CALLS2&JMPIF 4 L85)                ; CONSP
33    L33
33    (STORE 0)
34    (JMPIFNOT L92)
36    L36
36    (LOAD&CDR&STORE 1)
38    (LOAD&JMPIF 1 L21)
41    L41
41    (T)
42    (SKIP 3)
44    (JMPIF L97)
46    L46
46    (LOAD&PUSH 1)
47    (CALLS2&PUSH 72)                    ; REVERSE
49    (LOAD&PUSH 1)
50    (LOAD&JMPIFNOT 1 L71)
53    L53
53    (LOAD&CDR&PUSH 1)
55    (CONST&PUSH 3)                      ; LET
56    (LOAD&CAR&PUSH 3)
58    (LIST&PUSH 1)
60    (LOAD 3)
61    (LIST*&PUSH 2)
63    (LIST 1)
65    (STORE 1)
66    (POP&STORE 1)
68    (LOAD&JMPIF 1 L53)
71    L71
71    (LOAD 0)
72    (CDR)
73    (JMPIFNOT L104)
75    (CONST&PUSH 4)                      ; PROGN
76    (LOAD 1)
77    (CONS)
78    (SKIP&RET 7)
80    L80
80    (LOAD&PUSH 2)
81    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
83    (SKIP&RET 3)
85    L85
85    (LOAD&CAR&PUSH 2)
87    (CALLS2&STORE 6 0)                  ; SYMBOLP
90    (JMPIF L36)
92    L92
92    (NIL)
93    (SKIP 3)
95    (JMPIFNOT L46)
97    L97
97    (CONST&PUSH 2)                      ; COMMON-LISP:LET*
98    (LOAD&PUSH 2)
99    (LOAD 2)
100   (LIST* 2)
102   (SKIP&RET 5)
104   L104
104   (LOAD 0)
105   (CAR)
106   (SKIP&RET 7)


Wrote file binary-clisp/letmac.fas
Wrote file /cygdrive/e/temp/maxima/src/letmac.lis