Listing of compilation of file /cygdrive/e/temp/maxima/src/db.lisp
on 2002-12-17 13:34:30 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/db.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE DB)-2|
(CONST 0) = DB
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; DB
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(LOAD-MACSYMA-MACROS MRGMAC)-3|
(CONST 0) = COMMENT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; COMMENT
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (GENPREFIX DB) (*LEXPR CONTEXT))-4|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CONTEXT 'GLOBAL)-5-1|
(CONST 0) = CONTEXT
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = GLOBAL
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONTEXT
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; CONTEXT
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; GLOBAL
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CONTEXT 'GLOBAL)-5-2|
(CONST 0) = (SPECIAL CONTEXT)
(CONST 1) = CONTEXT
(CONST 2) = GLOBAL
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL CONTEXT)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; CONTEXT
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; CONTEXT
8     (CONST&PUSH 2)                      ; GLOBAL
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; CONTEXT
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CONTEXTS NIL)-6-1|
(CONST 0) = CONTEXTS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONTEXTS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; CONTEXTS
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CONTEXTS NIL)-6-2|
(CONST 0) = (SPECIAL CONTEXTS)
(CONST 1) = CONTEXTS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL CONTEXTS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; CONTEXTS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; CONTEXTS
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; CONTEXTS
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CURRENT 'GLOBAL)-7-1|
(CONST 0) = CURRENT
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = GLOBAL
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; CURRENT
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; CURRENT
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; GLOBAL
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CURRENT 'GLOBAL)-7-2|
(CONST 0) = (SPECIAL CURRENT)
(CONST 1) = CURRENT
(CONST 2) = GLOBAL
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL CURRENT)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; CURRENT
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; CURRENT
8     (CONST&PUSH 2)                      ; GLOBAL
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; CURRENT
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR +LABS NIL)-8-1|
(CONST 0) = +LABS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; +LABS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; +LABS
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR +LABS NIL)-8-2|
(CONST 0) = (SPECIAL +LABS)
(CONST 1) = +LABS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL +LABS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; +LABS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; +LABS
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; +LABS
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR -LABS NIL)-9-1|
(CONST 0) = -LABS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; -LABS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; -LABS
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR -LABS NIL)-9-2|
(CONST 0) = (SPECIAL -LABS)
(CONST 1) = -LABS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL -LABS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; -LABS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; -LABS
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; -LABS
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR DBTRACE NIL)-10-1|
(CONST 0) = DBTRACE
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; DBTRACE
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; DBTRACE
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR DBTRACE NIL)-10-2|
(CONST 0) = (SPECIAL DBTRACE)
(CONST 1) = DBTRACE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL DBTRACE)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; DBTRACE
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; DBTRACE
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; DBTRACE
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR DBCHECK NIL)-11-1|
(CONST 0) = DBCHECK
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; DBCHECK
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; DBCHECK
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR DBCHECK NIL)-11-2|
(CONST 0) = (SPECIAL DBCHECK)
(CONST 1) = DBCHECK
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL DBCHECK)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; DBCHECK
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; DBCHECK
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; DBCHECK
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR DOBJECTS NIL)-12-1|
(CONST 0) = DOBJECTS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; DOBJECTS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; DOBJECTS
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR DOBJECTS NIL)-12-2|
(CONST 0) = (SPECIAL DOBJECTS)
(CONST 1) = DOBJECTS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL DOBJECTS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; DOBJECTS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; DOBJECTS
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; DOBJECTS
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR NOBJECTS NIL)-13-1|
(CONST 0) = NOBJECTS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; NOBJECTS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; NOBJECTS
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR NOBJECTS NIL)-13-2|
(CONST 0) = (SPECIAL NOBJECTS)
(CONST 1) = NOBJECTS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL NOBJECTS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; NOBJECTS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; NOBJECTS
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; NOBJECTS
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR MARKS 0)-14-1|
(CONST 0) = MARKS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 0
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARKS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; MARKS
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 0
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR MARKS 0)-14-2|
(CONST 0) = (SPECIAL MARKS)
(CONST 1) = MARKS
(CONST 2) = 0
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL MARKS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; MARKS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; MARKS
8     (CONST&PUSH 2)                      ; 0
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; MARKS
12    (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (FIXNUM MARKS))-15|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR +L)-16-1|
(CONST 0) = +L
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; +L
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; +L
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR +L)-16-2|
(CONST 0) = (SPECIAL +L)
(CONST 1) = +L
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL +L)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST 1)                           ; +L
4     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (FIXNUM +L))-17|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR -L)-18-1|
(CONST 0) = -L
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; -L
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; -L
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR -L)-18-2|
(CONST 0) = (SPECIAL -L)
(CONST 1) = -L
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL -L)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST 1)                           ; -L
4     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (FIXNUM -L))-19|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR ULABS NIL)-20-1|
(CONST 0) = ULABS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; ULABS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; ULABS
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR ULABS NIL)-20-2|
(CONST 0) = (SPECIAL ULABS)
(CONST 1) = ULABS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL ULABS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; ULABS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; ULABS
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; ULABS
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CONINDEX 0)-21-1|
(CONST 0) = CONINDEX
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 0
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONINDEX
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; CONINDEX
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 0
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CONINDEX 0)-21-2|
(CONST 0) = (SPECIAL CONINDEX)
(CONST 1) = CONINDEX
(CONST 2) = 0
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL CONINDEX)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; CONINDEX
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; CONINDEX
8     (CONST&PUSH 2)                      ; 0
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; CONINDEX
12    (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (FIXNUM CONINDEX))-22|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CONNUMBER 50)-23-1|
(CONST 0) = CONNUMBER
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = 50
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONNUMBER
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; CONNUMBER
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; 50
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR CONNUMBER 50)-23-2|
(CONST 0) = (SPECIAL CONNUMBER)
(CONST 1) = CONNUMBER
(CONST 2) = 50
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL CONNUMBER)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; CONNUMBER
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; CONNUMBER
8     (CONST&PUSH 2)                      ; 50
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; CONNUMBER
12    (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (FIXNUM CONNUMBER))-24|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR LAB-HIGH-BIT MOST-NEGATIVE-FIXNUM)-25-1|
(CONST 0) = LAB-HIGH-BIT
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = #.MOST-NEGATIVE-FIXNUM
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; LAB-HIGH-BIT
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; LAB-HIGH-BIT
11    (LOAD&PUSH 1)
12    (CONST&PUSH 2)                      ; #.MOST-NEGATIVE-FIXNUM
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR LAB-HIGH-BIT MOST-NEGATIVE-FIXNUM)-25-2|
(CONST 0) = (SPECIAL LAB-HIGH-BIT)
(CONST 1) = LAB-HIGH-BIT
(CONST 2) = #.MOST-NEGATIVE-FIXNUM
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL LAB-HIGH-BIT)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; LAB-HIGH-BIT
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; LAB-HIGH-BIT
8     (CONST&PUSH 2)                      ; #.MOST-NEGATIVE-FIXNUM
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; LAB-HIGH-BIT
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR LABNUMBER (F1- #))-26-1|
(CONST 0) = LABNUMBER
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = LAB-HIGH-BIT
(CONST 3) = HAULONG
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LAB-HIGH-BIT *VARIABLE-INITIAL-VALUES*)
16 byte-code instructions:
0     (CONST&PUSH 0)                      ; LABNUMBER
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L23)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (GETVALUE&PUSH 2)                   ; LAB-HIGH-BIT
12    (CALL1&PUSH 3)                      ; HAULONG
14    (CALLS2&PUSH 151)                   ; 1-
16    (CONST&PUSH 0)                      ; LABNUMBER
17    (LOAD&PUSH 2)
18    (LOAD&PUSH 2)
19    (CALLS1 100)                        ; SYSTEM::PUTHASH
21    (SKIP 2)
23    L23
23    (VALUES0)
24    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR LABNUMBER (F1- #))-26-2|
(CONST 0) = (SPECIAL LABNUMBER)
(CONST 1) = LABNUMBER
(CONST 2) = LAB-HIGH-BIT
(CONST 3) = HAULONG
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (LAB-HIGH-BIT)
12 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL LABNUMBER)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; LABNUMBER
4     (CALLS1&JMPIF 79 L16)               ; BOUNDP
7     (CONST&PUSH 1)                      ; LABNUMBER
8     (GETVALUE&PUSH 2)                   ; LAB-HIGH-BIT
10    (CALL1&PUSH 3)                      ; HAULONG
12    (CALLS2&PUSH 151)                   ; 1-
14    (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
16    L16
16    (CONST 1)                           ; LABNUMBER
17    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR LAB-HIGH-LAB (LIST LAB-HIGH-BIT))-27-1|
(CONST 0) = LAB-HIGH-LAB
(CONST 1) = *VARIABLE-INITIAL-VALUES*
(CONST 2) = LAB-HIGH-BIT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LAB-HIGH-BIT *VARIABLE-INITIAL-VALUES*)
15 byte-code instructions:
0     (CONST&PUSH 0)                      ; LAB-HIGH-LAB
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L21)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (GETVALUE&PUSH 2)                   ; LAB-HIGH-BIT
12    (LIST&PUSH 1)
14    (CONST&PUSH 0)                      ; LAB-HIGH-LAB
15    (LOAD&PUSH 2)
16    (LOAD&PUSH 2)
17    (CALLS1 100)                        ; SYSTEM::PUTHASH
19    (SKIP 2)
21    L21
21    (VALUES0)
22    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR LAB-HIGH-LAB (LIST LAB-HIGH-BIT))-27-2|
(CONST 0) = (SPECIAL LAB-HIGH-LAB)
(CONST 1) = LAB-HIGH-LAB
(CONST 2) = LAB-HIGH-BIT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (LAB-HIGH-BIT)
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL LAB-HIGH-LAB)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; LAB-HIGH-LAB
4     (CALLS1&JMPIF 79 L14)               ; BOUNDP
7     (CONST&PUSH 1)                      ; LAB-HIGH-LAB
8     (GETVALUE&PUSH 2)                   ; LAB-HIGH-BIT
10    (LIST&PUSH 1)
12    (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
14    L14
14    (CONST 1)                           ; LAB-HIGH-LAB
15    (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL +S +SM ...))-28|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO UNLAB (CELL) ...)-29|
(CONST 0) = UNLAB
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNLAB>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNLAB
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNLAB
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNLAB>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; UNLAB
10    (SKIP&RET 1)


Disassembly of function UNLAB
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L17)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; CAR
12    (LOAD&PUSH 1)
13    (LIST 2)
15    (SKIP&RET 4)
17    L17
17    (LOAD&PUSH 2)
18    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
20    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SETQ-UNLAB (CELL) ...)-30|
(CONST 0) = SETQ-UNLAB
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SETQ-UNLAB>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SETQ-UNLAB
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SETQ-UNLAB
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SETQ-UNLAB>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SETQ-UNLAB
10    (SKIP&RET 1)


Disassembly of function SETQ-UNLAB
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = SETQ
(CONST 3) = UNLAB
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; SETQ
12    (LOAD&PUSH 1)
13    (CONST&PUSH 3)                      ; UNLAB
14    (LOAD&PUSH 3)
15    (LIST&PUSH 2)
17    (LIST 3)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SETQ-COPYN (CELL) ...)-31|
(CONST 0) = SETQ-COPYN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SETQ-COPYN>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SETQ-COPYN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SETQ-COPYN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SETQ-COPYN>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SETQ-COPYN
10    (SKIP&RET 1)


Disassembly of function SETQ-COPYN
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = SETQ
(CONST 3) = COPYN
1 required argument
1 optional argument
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (CONST&PUSH 2)                      ; SETQ
12    (LOAD&PUSH 1)
13    (CONST&PUSH 3)                      ; COPYN
14    (LOAD&PUSH 3)
15    (LIST&PUSH 2)
17    (LIST 3)
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(PROGN 'COMPILE (DEFMACRO COPYN # ...) ...)-32-2|
(CONST 0) = COPYN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COPYN>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; COPYN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COPYN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COPYN>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (VALUES0)
10    (SKIP&RET 1)


Disassembly of function COPYN
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = N
(CONST 3) = LIST
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (N)
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; N
13    (CONST&PUSH 3)                      ; LIST
14    (GETVALUE&PUSH 2)                   ; N
16    (LIST 2)
18    (UNBIND1)
19    (SKIP&RET 3)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(PROGN 'COMPILE (DEFMACRO COPYN # ...) ...)-32-3|
(CONST 0) = IORM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE IORM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; IORM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; IORM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE IORM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (VALUES0)
10    (SKIP&RET 1)


Disassembly of function IORM
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = N
(CONST 3) = RPLACA
(CONST 4) = LOGIOR
(CONST 5) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (N)
29 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L36)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR)
15    (BIND 2)                            ; N
17    (CONST&PUSH 3)                      ; RPLACA
18    (LOAD&PUSH 4)
19    (CONST&PUSH 4)                      ; LOGIOR
20    (CONST&PUSH 5)                      ; CAR
21    (LOAD&PUSH 7)
22    (LIST&PUSH 2)
24    (CONST&PUSH 5)                      ; CAR
25    (GETVALUE&PUSH 2)                   ; N
27    (LIST&PUSH 2)
29    (LIST&PUSH 3)
31    (LIST 3)
33    (UNBIND1)
34    (SKIP&RET 4)
36    L36
36    (LOAD&PUSH 2)
37    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
39    (SKIP&RET 3)


Disassembly of function #:|(PROGN 'COMPILE (DEFMACRO COPYN # ...) ...)-32-4|
(CONST 0) = XORM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE XORM>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; XORM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; XORM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE XORM>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; XORM
10    (SKIP&RET 1)


Disassembly of function XORM
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = N
(CONST 3) = RPLACA
(CONST 4) = LOGXOR
(CONST 5) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (N)
29 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L36)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR)
15    (BIND 2)                            ; N
17    (CONST&PUSH 3)                      ; RPLACA
18    (LOAD&PUSH 4)
19    (CONST&PUSH 4)                      ; LOGXOR
20    (CONST&PUSH 5)                      ; CAR
21    (LOAD&PUSH 7)
22    (LIST&PUSH 2)
24    (CONST&PUSH 5)                      ; CAR
25    (GETVALUE&PUSH 2)                   ; N
27    (LIST&PUSH 2)
29    (LIST&PUSH 3)
31    (LIST 3)
33    (UNBIND1)
34    (SKIP&RET 4)
36    L36
36    (LOAD&PUSH 2)
37    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
39    (SKIP&RET 3)


Disassembly of function #:|(DEFUN XXORM (CELL N) ...)-33|
(CONST 0) = XXORM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE XXORM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; XXORM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; XXORM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE XXORM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; XXORM
8     (SKIP&RET 1)


Disassembly of function XXORM
(CONST 0) = N
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (N)
10 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; N
3     (LOAD&PUSH 5)
4     (LOAD&CAR&PUSH 6)
6     (GETVALUE 0)                        ; N
8     (CAR&PUSH)
9     (CALLSR&PUSH 2 60)                  ; LOGXOR
12    (CALLS1 168)                        ; RPLACA
14    (UNBIND1)
15    (SKIP&RET 3)


Disassembly of function #:|(DEFPROP GLOBAL 1 ...)-34|
(CONST 0) = GLOBAL
(CONST 1) = CMARK
(CONST 2) = 1
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; GLOBAL
1     (CONST&PUSH 1)                      ; CMARK
2     (CONST&PUSH 2)                      ; 1
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFVAR CONUNMRK (*ARRAY NIL T ...))-35|
(CONST 0) = (SPECIAL CONUNMRK)
(CONST 1) = CONUNMRK
(CONST 2) = CONNUMBER
(CONST 3) = *ARRAY
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (CONNUMBER)
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL CONUNMRK)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; CONUNMRK
4     (CALLS1&JMPIF 79 L19)               ; BOUNDP
7     (CONST&PUSH 1)                      ; CONUNMRK
8     (NIL&PUSH)
9     (T&PUSH)
10    (GETVALUE&PUSH 2)                   ; CONNUMBER
12    (CALLS2&PUSH 150)                   ; 1+
14    (CALL&PUSH 3 3)                     ; *ARRAY
17    (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
19    L19
19    (CONST 1)                           ; CONUNMRK
20    (SKIP&RET 1)


Disassembly of function #:|(DEFVAR CONMARK (*ARRAY NIL T ...))-36|
(CONST 0) = (SPECIAL CONMARK)
(CONST 1) = CONMARK
(CONST 2) = CONNUMBER
(CONST 3) = *ARRAY
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (CONNUMBER)
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL CONMARK)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; CONMARK
4     (CALLS1&JMPIF 79 L19)               ; BOUNDP
7     (CONST&PUSH 1)                      ; CONMARK
8     (NIL&PUSH)
9     (T&PUSH)
10    (GETVALUE&PUSH 2)                   ; CONNUMBER
12    (CALLS2&PUSH 150)                   ; 1+
14    (CALL&PUSH 3 3)                     ; *ARRAY
17    (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
19    L19
19    (CONST 1)                           ; CONMARK
20    (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN MARK (X) ...)-37|
(CONST 0) = MARK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARK
8     (SKIP&RET 1)


Disassembly of function MARK
(CONST 0) = X
(CONST 1) = MARK
(CONST 2) = PUTPROP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
8 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (T&PUSH)
6     (CONST&PUSH 1)                      ; MARK
7     (CALL 3 2)                          ; PUTPROP
10    (UNBIND1)
11    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN MARKP (X) ...)-38|
(CONST 0) = MARKP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARKP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARKP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARKP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARKP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARKP
8     (SKIP&RET 1)


Disassembly of function MARKP
(CONST 0) = X
(CONST 1) = MARK
(CONST 2) = ZL-GET
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
11 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2 6)                          ; SYMBOLP
7     (JMPIFNOT1 L14)
9     (GETVALUE&PUSH 0)                   ; X
11    (CONST&PUSH 1)                      ; MARK
12    (CALL2 2)                           ; ZL-GET
14    L14
14    (UNBIND1)
15    (SKIP&RET 2)


Disassembly of function #:|(DEFUN ZL-REMPROP (SYM INDICATOR) ...)-39|
(CONST 0) = ZL-REMPROP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ZL-REMPROP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ZL-REMPROP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ZL-REMPROP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ZL-REMPROP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ZL-REMPROP
8     (SKIP&RET 1)


Disassembly of function ZL-REMPROP
(CONST 0) = SYSTEM::%REMF
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
23 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&JMPIF 6 L27)                ; SYMBOLP
4     (LOAD&CDR&PUSH 2)
6     (LOAD&PUSH 0)
7     (LOAD&PUSH 3)
8     (CALL2 0)                           ; SYSTEM::%REMF
10    (NV-TO-STACK 2)
12    (LOAD&JMPIFNOT 0 L24)
15    (LOAD 1)
16    (JMPIFCONSP L24)
18    (LOAD 1)
19    (STORE 2)
20    (LOAD&PUSH 5)
21    (LOAD&PUSH 3)
22    (CALLS1 171)                        ; SYSTEM::%RPLACD
24    L24
24    (POP)
25    (SKIP&RET 5)
27    L27
27    (LOAD&PUSH 2)
28    (LOAD&PUSH 2)
29    (CALLS2 137)                        ; REMPROP
31    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN UNMRK (X) ...)-40|
(CONST 0) = UNMRK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNMRK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNMRK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNMRK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNMRK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNMRK
8     (SKIP&RET 1)


Disassembly of function UNMRK
(CONST 0) = X
(CONST 1) = MARK
(CONST 2) = ZL-REMPROP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
7 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CONST&PUSH 1)                      ; MARK
6     (CALL2 2)                           ; ZL-REMPROP
8     (UNBIND1)
9     (SKIP&RET 2)


Disassembly of function #:|(DEFUN MARKS (X) ...)-41|
(CONST 0) = MARKS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARKS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARKS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARKS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARKS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARKS
8     (SKIP&RET 1)


Disassembly of function MARKS
(CONST 0) = X
(CONST 1) = MARK
(CONST 2) = MARKS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
17 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2 8)                          ; NUMBERP
7     (JMPIF1 L20)
9     (GETVALUE 0)                        ; X
11    (JMPIFATOM L23)
13    (CONST&SYMBOL-FUNCTION&PUSH 2)      ; MARKS
15    (GETVALUE&PUSH 0)                   ; X
17    (CALLSR 0 24)                       ; MAPC
20    L20
20    (UNBIND1)
21    (SKIP&RET 2)
23    L23
23    (GETVALUE&PUSH 0)                   ; X
25    (CALL1 1)                           ; MARK
27    (JMP L20)


Disassembly of function #:|(DEFUN UNMRKS (X) ...)-42|
(CONST 0) = UNMRKS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNMRKS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNMRKS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNMRKS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNMRKS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNMRKS
8     (SKIP&RET 1)


Disassembly of function UNMRKS
(CONST 0) = X
(CONST 1) = UNMRK
(CONST 2) = UNMRKS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
20 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2 8)                          ; NUMBERP
7     (JMPIF1 L26)
9     (GETVALUE 0)                        ; X
11    (JMPIFATOM L29)
13    (GETVALUE 0)                        ; X
15    (CAR&PUSH)
16    (CALLS2&JMPIF 8 L29)                ; NUMBERP
19    (CONST&SYMBOL-FUNCTION&PUSH 2)      ; UNMRKS
21    (GETVALUE&PUSH 0)                   ; X
23    (CALLSR 0 24)                       ; MAPC
26    L26
26    (UNBIND1)
27    (SKIP&RET 2)
29    L29
29    (GETVALUE&PUSH 0)                   ; X
31    (CALL1 1)                           ; UNMRK
33    (JMP L26)


Disassembly of function #:|(PROGN 'COMPILE (DEFMODE TYPE NIL ...) ...)-43-6|
(CONST 0) = CONTEXT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (CONST 0)                           ; CONTEXT
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO +LABZ (X) ...)-44|
(CONST 0) = +LABZ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE +LABZ>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; +LABZ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; +LABZ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE +LABZ>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; +LABZ
10    (SKIP&RET 1)


Disassembly of function +LABZ
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = COND
(CONST 4) = +LABS
(CONST 5) = ((T '(0)))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L27)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; COND
14    (CONST&PUSH 4)                      ; +LABS
15    (GETVALUE&PUSH 2)                   ; X
17    (LIST&PUSH 2)
19    (LIST&PUSH 1)
21    (CONST 5)                           ; ((T '(0)))
22    (LIST* 2)
24    (UNBIND1)
25    (SKIP&RET 3)
27    L27
27    (LOAD&PUSH 2)
28    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
30    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO -LABZ (X) ...)-45|
(CONST 0) = -LABZ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE -LABZ>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; -LABZ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; -LABZ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE -LABZ>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; -LABZ
10    (SKIP&RET 1)


Disassembly of function -LABZ
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = COND
(CONST 4) = -LABS
(CONST 5) = ((T '(0)))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L27)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; COND
14    (CONST&PUSH 4)                      ; -LABS
15    (GETVALUE&PUSH 2)                   ; X
17    (LIST&PUSH 2)
19    (LIST&PUSH 1)
21    (CONST 5)                           ; ((T '(0)))
22    (LIST* 2)
24    (UNBIND1)
25    (SKIP&RET 3)
27    L27
27    (LOAD&PUSH 2)
28    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
30    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO =LABZ (X) ...)-46|
(CONST 0) = =LABZ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE =LABZ>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; =LABZ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; =LABZ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE =LABZ>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; =LABZ
10    (SKIP&RET 1)


Disassembly of function =LABZ
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = COND
(CONST 4) = =LABS
(CONST 5) = ((T '(0)))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L27)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; COND
14    (CONST&PUSH 4)                      ; =LABS
15    (GETVALUE&PUSH 2)                   ; X
17    (LIST&PUSH 2)
19    (LIST&PUSH 1)
21    (CONST 5)                           ; ((T '(0)))
22    (LIST* 2)
24    (UNBIND1)
25    (SKIP&RET 3)
27    L27
27    (LOAD&PUSH 2)
28    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
30    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO NLABZ (X) ...)-47|
(CONST 0) = NLABZ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NLABZ>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; NLABZ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NLABZ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NLABZ>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; NLABZ
10    (SKIP&RET 1)


Disassembly of function NLABZ
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = COND
(CONST 4) = NLABS
(CONST 5) = ((T '(0)))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L27)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; COND
14    (CONST&PUSH 4)                      ; NLABS
15    (GETVALUE&PUSH 2)                   ; X
17    (LIST&PUSH 2)
19    (LIST&PUSH 1)
21    (CONST 5)                           ; ((T '(0)))
22    (LIST* 2)
24    (UNBIND1)
25    (SKIP&RET 3)
27    L27
27    (LOAD&PUSH 2)
28    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
30    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO ULABZ (X) ...)-48|
(CONST 0) = ULABZ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ULABZ>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; ULABZ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ULABZ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ULABZ>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; ULABZ
10    (SKIP&RET 1)


Disassembly of function ULABZ
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = COND
(CONST 4) = ULABS
(CONST 5) = ((T '(0)))
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
21 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L27)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; COND
14    (CONST&PUSH 4)                      ; ULABS
15    (GETVALUE&PUSH 2)                   ; X
17    (LIST&PUSH 2)
19    (LIST&PUSH 1)
21    (CONST 5)                           ; ((T '(0)))
22    (LIST* 2)
24    (UNBIND1)
25    (SKIP&RET 3)
27    L27
27    (LOAD&PUSH 2)
28    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
30    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SUBP (&REST X) ...)-49|
(CONST 0) = SUBP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SUBP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SUBP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SUBP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SUBP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SUBP
10    (SKIP&RET 1)


Disassembly of function SUBP
(CONST 0) = X
(CONST 1) = FORM
(CONST 2) = UNLAB
(CONST 3) = =
(CONST 4) = LOGAND
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variables: (FORM X)
writes special variable : (X)
35 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; X
4     (NIL&PUSH)
5     (GETVALUE&PUSH 0)                   ; X
7     (JMP L27)
9     L9
9     (LOAD&CAR&PUSH 0)
11    (LOAD 0)
12    (BIND 1)                            ; FORM
14    (CONST&PUSH 2)                      ; UNLAB
15    (GETVALUE&PUSH 1)                   ; FORM
17    (LIST 2)
19    (UNBIND1)
20    (PUSH)
21    (LOAD&CONS&STORE 2)
23    (SKIP 1)
25    (LOAD&CDR&STORE 0)
27    L27
27    (LOAD&PUSH 0)
28    (CALLS1&JMPIFNOT 146 L9)            ; ENDP
31    (SKIP 1)
33    (LOAD&PUSH 0)
34    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
36    (SKIP 1)
38    (SETVALUE 0)                        ; X
40    (CONST&PUSH 3)                      ; =
41    (GETVALUE 0)                        ; X
43    (CAR&PUSH)
44    (CONST&PUSH 4)                      ; LOGAND
45    (GETVALUE 0)                        ; X
47    (CONS&PUSH)
48    (LIST 3)
50    (UNBIND1)
51    (SKIP&RET 3)


Disassembly of function #:|(DEFUN DBNODE (X) ...)-50|
(CONST 0) = DBNODE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DBNODE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DBNODE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DBNODE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DBNODE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DBNODE
8     (SKIP&RET 1)


Disassembly of function DBNODE
(CONST 0) = X
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
12 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2&JMPIF 6 L15)                ; SYMBOLP
8     (GETVALUE&PUSH 0)                   ; X
10    (LIST 1)
12    L12
12    (UNBIND1)
13    (SKIP&RET 2)
15    L15
15    (GETVALUE 0)                        ; X
17    (JMP L12)


Disassembly of function #:|(DEFUN NODEP (X) ...)-51|
(CONST 0) = NODEP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NODEP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NODEP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NODEP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NODEP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NODEP
8     (SKIP&RET 1)


Disassembly of function NODEP
(CONST 0) = X
(CONST 1) = MNUMP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
11 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2 5)                          ; ATOM
7     (JMPIF1 L14)
9     (GETVALUE 0)                        ; X
11    (CAR&PUSH)
12    (CALL1 1)                           ; MNUMP
14    L14
14    (UNBIND1)
15    (SKIP&RET 2)


Disassembly of function #:|(DEFUN DBVARP (X) ...)-52|
(CONST 0) = DBVARP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DBVARP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DBVARP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DBVARP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DBVARP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DBVARP
8     (SKIP&RET 1)


Disassembly of function DBVARP
(CONST 0) = X
(CONST 1) = (UN EX)
(CONST 2) = GETL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
7 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CONST&PUSH 1)                      ; (UN EX)
6     (CALL2 2)                           ; GETL
8     (UNBIND1)
9     (SKIP&RET 2)


Disassembly of function #:|(DEFUN LAB (N) ...)-53|
(CONST 0) = LAB
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LAB>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LAB
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LAB
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LAB>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LAB
8     (SKIP&RET 1)


Disassembly of function LAB
(CONST 0) = N
(CONST 1) = 1
(CONST 2) = LSH
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (N)
8 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; N
3     (CONST&PUSH 1)                      ; 1
4     (GETVALUE&PUSH 0)                   ; N
6     (CALLS2&PUSH 151)                   ; 1-
8     (CALL2 2)                           ; LSH
10    (UNBIND1)
11    (SKIP&RET 2)


Disassembly of function #:|(DEFUN LPR (M N) ...)-54|
(CONST 0) = LPR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LPR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LPR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LPR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LPR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LPR
8     (SKIP&RET 1)


Disassembly of function LPR
(CONST 0) = M
(CONST 1) = N
(CONST 2) = LPRS
(CONST 3) = L
(CONST 4) = LABEQ
(CONST 5) = LPRINDEX
(CONST 6) = LABINDEX
(CONST 7) = LPR
(CONST 8) = BREAK
(CONST 9) = 1
(CONST 10) = LSH
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LABINDEX LPRINDEX N M L LPRS)
writes special variables : (LPRS LPRINDEX L)
63 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; M
3     (LOAD 4)
4     (BIND 1)                            ; N
6     (GETVALUE 2)                        ; LPRS
8     (BIND 3)                            ; L
10    (GETVALUE 3)                        ; L
12    (JMPIFNOT L43)
14    L14
14    (GETVALUE&PUSH 0)                   ; M
16    (GETVALUE 3)                        ; L
18    (CAR)
19    (CAR)
20    (CAR&PUSH)
21    (CALL2&JMPIFNOT 4 L34)              ; LABEQ
24    (GETVALUE&PUSH 1)                   ; N
26    (GETVALUE 3)                        ; L
28    (CAR)
29    (CAR)
30    (CDR&PUSH)
31    (CALL2&JMPIF 4 L79)                 ; LABEQ
34    L34
34    (GETVALUE 3)                        ; L
36    (CDR)
37    (SETVALUE 3)                        ; L
39    (GETVALUE 3)                        ; L
41    (JMPIF L14)
43    L43
43    (UNBIND1)
44    L44
44    (GETVALUE&PUSH 5)                   ; LPRINDEX
46    (CALLS2 151)                        ; 1-
48    (SETVALUE 5)                        ; LPRINDEX
50    (PUSH)
51    (GETVALUE&PUSH 6)                   ; LABINDEX
53    (CALLSR&JMPIF 1 45 L88)             ; =
57    (GETVALUE&PUSH 0)                   ; M
59    (GETVALUE 1)                        ; N
61    (CONS&PUSH)
62    (CONST&PUSH 9)                      ; 1
63    (GETVALUE&PUSH 5)                   ; LPRINDEX
65    (CALL2 10)                          ; LSH
67    (CONS&PUSH)
68    (GETVALUE 2)                        ; LPRS
70    (CONS)
71    (SETVALUE 2)                        ; LPRS
73    (CAR)
74    (CDR)
75    L75
75    (UNBIND 2)
77    (SKIP&RET 3)
79    L79
79    (GETVALUE 3)                        ; L
81    (CAR)
82    (CDR)
83    (UNBIND1)
84    (JMPIF1 L75)
86    (JMP L44)
88    L88
88    (CONST&PUSH 7)                      ; LPR
89    (T&PUSH)
90    (CALL2 8)                           ; BREAK
92    (JMP L75)


Disassembly of function #:|(DEFUN LABEQ (X Y) ...)-55|
(CONST 0) = LABEQ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LABEQ>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; LABEQ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LABEQ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LABEQ>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; LABEQ
8     (SKIP&RET 1)


Disassembly of function LABEQ
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = LAB-HIGH-BIT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y LAB-HIGH-BIT X)
13 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE&PUSH 0)                   ; X
8     (GETVALUE&PUSH 2)                   ; LAB-HIGH-BIT
10    (CALLSR&PUSH 2 59)                  ; LOGIOR
13    (GETVALUE&PUSH 1)                   ; Y
15    (GETVALUE&PUSH 2)                   ; LAB-HIGH-BIT
17    (CALLSR&PUSH 2 59)                  ; LOGIOR
20    (CALLS2 2)                          ; EQUAL
22    (UNBIND 2)
24    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MARKND (ND) ...)-56|
(CONST 0) = MARKND
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARKND>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARKND
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARKND
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARKND>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARKND
8     (SKIP&RET 1)


Disassembly of function MARKND
(CONST 0) = +LABS
(CONST 1) = ZL-GET
(CONST 2) = LPRINDEX
(CONST 3) = LABINDEX
(CONST 4) = MARKND
(CONST 5) = BREAK
(CONST 6) = LAB
(CONST 7) = LABS
(CONST 8) = BEG
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LABS LABINDEX LPRINDEX)
writes special variables : (LABS LABINDEX)
32 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CONST&PUSH 0)                      ; +LABS
2     (CALL2 1)                           ; ZL-GET
4     (JMPIF1 L49)
6     (GETVALUE&PUSH 2)                   ; LPRINDEX
8     (GETVALUE&PUSH 3)                   ; LABINDEX
10    (CALLS2 150)                        ; 1+
12    (SETVALUE 3)                        ; LABINDEX
14    (PUSH)
15    (CALLSR&JMPIF 1 45 L43)             ; =
19    (LOAD&PUSH 1)
20    (GETVALUE&PUSH 3)                   ; LABINDEX
22    (CALL1 6)                           ; LAB
24    (CONS&PUSH)
25    (GETVALUE 7)                        ; LABS
27    (CONS)
28    (SETVALUE 7)                        ; LABS
30    (LOAD&PUSH 1)
31    (GETVALUE&PUSH 3)                   ; LABINDEX
33    (CALL1&PUSH 6)                      ; LAB
35    (CALL2 8)                           ; BEG
37    (GETVALUE 7)                        ; LABS
39    (CAR)
40    (CDR)
41    (SKIP&RET 2)
43    L43
43    (CONST&PUSH 4)                      ; MARKND
44    (T&PUSH)
45    (CALL2 5)                           ; BREAK
47    (SKIP&RET 2)
49    L49
49    (SKIP&RET 2)


Disassembly of function #:|(DEFUN DBV (X R) ...)-57|
(CONST 0) = DBV
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DBV>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DBV
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DBV
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DBV>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DBV
8     (SKIP&RET 1)


Disassembly of function DBV
(CONST 0) = X
(CONST 1) = LPRS
(CONST 2) = L
(CONST 3) = 0
(CONST 4) = Y
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X L LPRS)
writes special variables : (L Y)
41 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (GETVALUE 1)                        ; LPRS
5     (BIND 2)                            ; L
7     (CONST 3)                           ; 0
8     (BIND 4)                            ; Y
10    (GETVALUE 2)                        ; L
12    (JMPIFNOT L63)
14    L14
14    (CONST&PUSH 3)                      ; 0
15    (LOAD&PUSH 11)
16    (GETVALUE 2)                        ; L
18    (CAR)
19    (CDR&PUSH)
20    (CALLSR&PUSH 2 61)                  ; LOGAND
23    (CALLSR&JMPIF 1 45 L54)             ; =
27    (CONST&PUSH 3)                      ; 0
28    (GETVALUE&PUSH 0)                   ; X
30    (GETVALUE 2)                        ; L
32    (CAR)
33    (CAR)
34    (CAR&PUSH)
35    (CALLSR&PUSH 2 61)                  ; LOGAND
38    (CALLSR&JMPIF 1 45 L54)             ; =
42    (GETVALUE 2)                        ; L
44    (CAR)
45    (CAR)
46    (CDR&PUSH)
47    (GETVALUE&PUSH 4)                   ; Y
49    (CALLSR 2 59)                       ; LOGIOR
52    (SETVALUE 4)                        ; Y
54    L54
54    (GETVALUE 2)                        ; L
56    (CDR)
57    (SETVALUE 2)                        ; L
59    (GETVALUE 2)                        ; L
61    (JMPIF L14)
63    L63
63    (GETVALUE 4)                        ; Y
65    (UNBIND 3)
67    (SKIP&RET 3)


Disassembly of function #:|(DEFUN DBA (R Y) ...)-58|
(CONST 0) = DBA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DBA>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DBA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DBA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DBA>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DBA
8     (SKIP&RET 1)


Disassembly of function DBA
(CONST 0) = Y
(CONST 1) = LPRS
(CONST 2) = L
(CONST 3) = 0
(CONST 4) = X
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X Y L LPRS)
writes special variables : (L X)
41 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; Y
3     (GETVALUE 1)                        ; LPRS
5     (BIND 2)                            ; L
7     (CONST 3)                           ; 0
8     (BIND 4)                            ; X
10    (GETVALUE 2)                        ; L
12    (JMPIFNOT L63)
14    L14
14    (CONST&PUSH 3)                      ; 0
15    (LOAD&PUSH 12)
16    (GETVALUE 2)                        ; L
18    (CAR)
19    (CDR&PUSH)
20    (CALLSR&PUSH 2 61)                  ; LOGAND
23    (CALLSR&JMPIF 1 45 L54)             ; =
27    (CONST&PUSH 3)                      ; 0
28    (GETVALUE 2)                        ; L
30    (CAR)
31    (CAR)
32    (CDR&PUSH)
33    (GETVALUE&PUSH 0)                   ; Y
35    (CALLSR&PUSH 2 61)                  ; LOGAND
38    (CALLSR&JMPIF 1 45 L54)             ; =
42    (GETVALUE&PUSH 4)                   ; X
44    (GETVALUE 2)                        ; L
46    (CAR)
47    (CAR)
48    (CAR&PUSH)
49    (CALLSR 2 59)                       ; LOGIOR
52    (SETVALUE 4)                        ; X
54    L54
54    (GETVALUE 2)                        ; L
56    (CDR)
57    (SETVALUE 2)                        ; L
59    (GETVALUE 2)                        ; L
61    (JMPIF L14)
63    L63
63    (GETVALUE 4)                        ; X
65    (UNBIND 3)
67    (SKIP&RET 3)


Disassembly of function #:|(DEFUN PRLAB (X) ...)-59|
(CONST 0) = PRLAB
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PRLAB>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PRLAB
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PRLAB
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PRLAB>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PRLAB
8     (SKIP&RET 1)


Disassembly of function PRLAB
(CONST 0) = X
(CONST 1) = 2
(CONST 2) = *PRINT-BASE*
(CONST 3) = *READ-BASE*
(CONST 4) = #.BOOLE-ANDC1
(CONST 5) = LAB-HIGH-BIT
(CONST 6) = EXPLODEN
(CONST 7) = 3
(CONST 8) = 0
(CONST 9) = TYO
(CONST 10) = #\Space
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LAB-HIGH-BIT X)
writes special variable : (X)
52 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (CAR)
6     (SETVALUE 0)                        ; X
8     (CONST 1)                           ; 2
9     (BIND 2)                            ; *PRINT-BASE*
11    (CONST 1)                           ; 2
12    (BIND 3)                            ; *READ-BASE*
14    (GETVALUE 0)                        ; X
16    (JMPIFNOT L27)
18    (CONST&PUSH 4)                      ; #.BOOLE-ANDC1
19    (GETVALUE&PUSH 5)                   ; LAB-HIGH-BIT
21    (GETVALUE&PUSH 0)                   ; X
23    (CALLS2&PUSH 205)                   ; BOOLE
25    (CALL1 6)                           ; EXPLODEN
27    L27
27    (UNBIND 2)
29    (SETVALUE 0)                        ; X
31    (PUSH)
32    (CALLS2&PUSH 71)                    ; LENGTH
34    (CONST&PUSH 7)                      ; 3
35    (CALLS2&PUSH 184)                   ; REM
37    (GETVALUE 0)                        ; X
39    (JMPIFNOT L73)
41    L41
41    (LOAD&PUSH 0)
42    (JMP L56)
44    L44
44    (GETVALUE 0)                        ; X
46    (CAR&PUSH)
47    (CALL1 9)                           ; TYO
49    (GETVALUE 0)                        ; X
51    (CDR)
52    (SETVALUE 0)                        ; X
54    (LOAD&DEC&STORE 0)
56    L56
56    (CONST&PUSH 8)                      ; 0
57    (LOAD&PUSH 1)
58    (CALLSR&JMPIFNOT 1 45 L44)          ; =
62    (SKIP 1)
64    (CONST&PUSH 10)                     ; #\Space
65    (CALL1 9)                           ; TYO
67    (CONST 7)                           ; 3
68    (STORE 0)
69    (GETVALUE 0)                        ; X
71    (JMPIF L41)
73    L73
73    (NIL)
74    (SKIP 1)
76    (UNBIND1)
77    (SKIP&RET 2)


Disassembly of function #:|(DEFUN ONP (CL LAB) ...)-60|
(CONST 0) = ONP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ONP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ONP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ONP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ONP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ONP
8     (SKIP&RET 1)


Disassembly of function ONP
(CONST 0) = +LABS
(CONST 1) = ZL-GET
(CONST 2) = (0)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (LOAD&CAR&PUSH 1)
2     (LOAD&CAR&PUSH 2)
4     (LOAD&PUSH 4)
5     (CONST&PUSH 0)                      ; +LABS
6     (CALL2&JMPIF 1 L10)                 ; ZL-GET
9     (CONST 2)                           ; (0)
10    L10
10    (CAR&PUSH)
11    (CALLSR&PUSH 2 61)                  ; LOGAND
14    (CALLSR 1 45)                       ; =
17    (SKIP&RET 3)


Disassembly of function #:|(DEFUN OFFP (CL LAB) ...)-61|
(CONST 0) = OFFP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE OFFP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; OFFP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; OFFP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE OFFP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; OFFP
8     (SKIP&RET 1)


Disassembly of function OFFP
(CONST 0) = -LABS
(CONST 1) = ZL-GET
(CONST 2) = (0)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (LOAD&CAR&PUSH 1)
2     (LOAD&CAR&PUSH 2)
4     (LOAD&PUSH 4)
5     (CONST&PUSH 0)                      ; -LABS
6     (CALL2&JMPIF 1 L10)                 ; ZL-GET
9     (CONST 2)                           ; (0)
10    L10
10    (CAR&PUSH)
11    (CALLSR&PUSH 2 61)                  ; LOGAND
14    (CALLSR 1 45)                       ; =
17    (SKIP&RET 3)


Disassembly of function #:|(DEFUN ONPU (LAB FACT) ...)-62|
(CONST 0) = ONPU
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ONPU>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ONPU
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ONPU
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ONPU>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ONPU
8     (SKIP&RET 1)


Disassembly of function ONPU
(CONST 0) = ULABS
(CONST 1) = ZL-GET
(CONST 2) = (0)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (LOAD&CAR&PUSH 2)
2     (LOAD&CAR&PUSH 3)
4     (LOAD&PUSH 3)
5     (CONST&PUSH 0)                      ; ULABS
6     (CALL2&JMPIF 1 L10)                 ; ZL-GET
9     (CONST 2)                           ; (0)
10    L10
10    (CAR&PUSH)
11    (CALLSR&PUSH 2 61)                  ; LOGAND
14    (CALLSR 1 45)                       ; =
17    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN VISIBLEP (DAT) ...)-63|
(CONST 0) = VISIBLEP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE VISIBLEP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; VISIBLEP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; VISIBLEP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE VISIBLEP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; VISIBLEP
8     (SKIP&RET 1)


Disassembly of function VISIBLEP
(CONST 0) = ULABS
(CONST 1) = ZL-GET
(CONST 2) = CNTP
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CONST&PUSH 0)                      ; ULABS
2     (CALL2 1)                           ; ZL-GET
4     (NOT)
5     (JMPIFNOT1 L12)
7     (LOAD&PUSH 1)
8     (CALL1 2)                           ; CNTP
10    (SKIP&RET 2)
12    L12
12    (SKIP&RET 2)


Disassembly of function #:|(DEFUN CANCEL (LAB DAT) ...)-64|
(CONST 0) = CANCEL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CANCEL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CANCEL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CANCEL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CANCEL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CANCEL
8     (SKIP&RET 1)


Disassembly of function CANCEL
(CONST 0) = ULABS
(CONST 1) = ZL-GET
(CONST 2) = *
(CONST 3) = PUTPROP
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (* ULABS)
writes special variables : (ULABS *)
24 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CONST&PUSH 0)                      ; ULABS
2     (CALL2 1)                           ; ZL-GET
4     (SETVALUE 2)                        ; *
6     (JMPIF L27)
8     (LOAD&PUSH 1)
9     (GETVALUE 0)                        ; ULABS
11    (CONS)
12    (SETVALUE 0)                        ; ULABS
14    (LOAD&CAR&STORE 2 2)
17    (LOAD&PUSH 1)
18    (LOAD&PUSH 3)
19    (LIST&PUSH 1)
21    (CONST&PUSH 0)                      ; ULABS
22    (CALL 3 3)                          ; PUTPROP
25    (SKIP&RET 3)
27    L27
27    (PUSH)
28    (GETVALUE 2)                        ; *
30    (CAR&PUSH)
31    (LOAD&CAR&PUSH 4)
33    (CALLSR&PUSH 2 59)                  ; LOGIOR
36    (CALLS1 168)                        ; RPLACA
38    (SKIP&RET 3)


Disassembly of function #:|(DEFUN BEG (ND LAB) ...)-65|
(CONST 0) = BEG
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BEG>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BEG
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BEG
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BEG>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BEG
8     (SKIP&RET 1)


Disassembly of function BEG
(CONST 0) = QUEUE+P
(CONST 1) = +S
(CONST 2) = +SM
(CONST 3) = +SL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (+S)
writes special variables : (+SL +SM +S)
24 byte-code instructions:
0     (LOAD&PUSH 1)
1     (LIST 1)
3     (STORE 1)
4     (LOAD&PUSH 2)
5     (LOAD&PUSH 2)
6     (CALL2 0)                           ; QUEUE+P
8     (JMPIFNOT1 L33)
10    (GETVALUE 1)                        ; +S
12    (JMPIFNOT L22)
14    (LOAD&PUSH 2)
15    (GETVALUE 1)                        ; +S
17    (CONS)
18    (SETVALUE 1)                        ; +S
20    (SKIP&RET 3)
22    L22
22    (LOAD&PUSH 2)
23    (NIL)
24    (CONS)
25    (SETVALUE 1)                        ; +S
27    (SETVALUE 2)                        ; +SM
29    (SETVALUE 3)                        ; +SL
31    (SKIP&RET 3)
33    L33
33    (SKIP&RET 3)


Disassembly of function #:|(DEFUN BEG- (ND LAB) ...)-66|
(CONST 0) = BEG-
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BEG->
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BEG-
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BEG-
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BEG->
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BEG-
8     (SKIP&RET 1)


Disassembly of function BEG-
(CONST 0) = QUEUE-P
(CONST 1) = -S
(CONST 2) = -SM
(CONST 3) = -SL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (-S)
writes special variables : (-SL -SM -S)
24 byte-code instructions:
0     (LOAD&PUSH 1)
1     (LIST 1)
3     (STORE 1)
4     (LOAD&PUSH 2)
5     (LOAD&PUSH 2)
6     (CALL2 0)                           ; QUEUE-P
8     (JMPIFNOT1 L33)
10    (GETVALUE 1)                        ; -S
12    (JMPIFNOT L22)
14    (LOAD&PUSH 2)
15    (GETVALUE 1)                        ; -S
17    (CONS)
18    (SETVALUE 1)                        ; -S
20    (SKIP&RET 3)
22    L22
22    (LOAD&PUSH 2)
23    (NIL)
24    (CONS)
25    (SETVALUE 1)                        ; -S
27    (SETVALUE 2)                        ; -SM
29    (SETVALUE 3)                        ; -SL
31    (SKIP&RET 3)
33    L33
33    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MID (ND LAB) ...)-67|
(CONST 0) = MID
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MID>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MID
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MID
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MID>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MID
8     (SKIP&RET 1)


Disassembly of function MID
(CONST 0) = QUEUE+P
(CONST 1) = +SM
(CONST 2) = +S
(CONST 3) = +SL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (+SL +SM)
writes special variables : (+S +SM +SL)
33 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALL2 0)                           ; QUEUE+P
4     (JMPIFNOT1 L48)
6     (GETVALUE 1)                        ; +SM
8     (JMPIFNOT L37)
10    (GETVALUE&PUSH 1)                   ; +SM
12    (LOAD&PUSH 3)
13    (GETVALUE 1)                        ; +SM
15    (CDR)
16    (CONS&PUSH)
17    (CALLS1 170)                        ; RPLACD
19    (GETVALUE&PUSH 1)                   ; +SM
21    (GETVALUE 3)                        ; +SL
23    (JMPIFNOTEQ L30)
25    (GETVALUE 3)                        ; +SL
27    (CDR)
28    (SETVALUE 3)                        ; +SL
30    L30
30    (GETVALUE 1)                        ; +SM
32    (CDR)
33    (SETVALUE 1)                        ; +SM
35    (SKIP&RET 3)
37    L37
37    (LOAD&PUSH 2)
38    (NIL)
39    (CONS)
40    (SETVALUE 2)                        ; +S
42    (SETVALUE 1)                        ; +SM
44    (SETVALUE 3)                        ; +SL
46    (SKIP&RET 3)
48    L48
48    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MID- (ND LAB) ...)-68|
(CONST 0) = MID-
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MID->
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MID-
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MID-
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MID->
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MID-
8     (SKIP&RET 1)


Disassembly of function MID-
(CONST 0) = QUEUE-P
(CONST 1) = -SM
(CONST 2) = -S
(CONST 3) = -SL
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (-SL -SM)
writes special variables : (-S -SM -SL)
33 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALL2 0)                           ; QUEUE-P
4     (JMPIFNOT1 L48)
6     (GETVALUE 1)                        ; -SM
8     (JMPIFNOT L37)
10    (GETVALUE&PUSH 1)                   ; -SM
12    (LOAD&PUSH 3)
13    (GETVALUE 1)                        ; -SM
15    (CDR)
16    (CONS&PUSH)
17    (CALLS1 170)                        ; RPLACD
19    (GETVALUE&PUSH 1)                   ; -SM
21    (GETVALUE 3)                        ; -SL
23    (JMPIFNOTEQ L30)
25    (GETVALUE 3)                        ; -SL
27    (CDR)
28    (SETVALUE 3)                        ; -SL
30    L30
30    (GETVALUE 1)                        ; -SM
32    (CDR)
33    (SETVALUE 1)                        ; -SM
35    (SKIP&RET 3)
37    L37
37    (LOAD&PUSH 2)
38    (NIL)
39    (CONS)
40    (SETVALUE 2)                        ; -S
42    (SETVALUE 1)                        ; -SM
44    (SETVALUE 3)                        ; -SL
46    (SKIP&RET 3)
48    L48
48    (SKIP&RET 3)


Disassembly of function #:|(DEFUN END (ND LAB) ...)-69|
(CONST 0) = END
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE END>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; END
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; END
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE END>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; END
8     (SKIP&RET 1)


Disassembly of function END
(CONST 0) = QUEUE+P
(CONST 1) = +SL
(CONST 2) = +S
(CONST 3) = +SM
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (+SL)
writes special variables : (+SM +S +SL)
25 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALL2 0)                           ; QUEUE+P
4     (JMPIFNOT1 L33)
6     (GETVALUE 1)                        ; +SL
8     (JMPIFNOT L24)
10    (GETVALUE&PUSH 1)                   ; +SL
12    (LOAD&PUSH 3)
13    (NIL)
14    (CONS&PUSH)
15    (CALLS1 170)                        ; RPLACD
17    (GETVALUE 1)                        ; +SL
19    (CDR)
20    L20
20    (SETVALUE 1)                        ; +SL
22    (SKIP&RET 3)
24    L24
24    (LOAD&PUSH 2)
25    (NIL)
26    (CONS)
27    (SETVALUE 2)                        ; +S
29    (SETVALUE 3)                        ; +SM
31    (JMP L20)
33    L33
33    (SKIP&RET 3)


Disassembly of function #:|(DEFUN END- (ND LAB) ...)-70|
(CONST 0) = END-
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE END->
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; END-
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; END-
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE END->
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; END-
8     (SKIP&RET 1)


Disassembly of function END-
(CONST 0) = QUEUE-P
(CONST 1) = -SL
(CONST 2) = -S
(CONST 3) = -SM
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (-SL)
writes special variables : (-SM -S -SL)
25 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALL2 0)                           ; QUEUE-P
4     (JMPIFNOT1 L33)
6     (GETVALUE 1)                        ; -SL
8     (JMPIFNOT L24)
10    (GETVALUE&PUSH 1)                   ; -SL
12    (LOAD&PUSH 3)
13    (NIL)
14    (CONS&PUSH)
15    (CALLS1 170)                        ; RPLACD
17    (GETVALUE 1)                        ; -SL
19    (CDR)
20    L20
20    (SETVALUE 1)                        ; -SL
22    (SKIP&RET 3)
24    L24
24    (LOAD&PUSH 2)
25    (NIL)
26    (CONS)
27    (SETVALUE 2)                        ; -S
29    (SETVALUE 3)                        ; -SM
31    (JMP L20)
33    L33
33    (SKIP&RET 3)


Disassembly of function #:|(DEFUN QUEUE+P (ND LAB) ...)-71|
(CONST 0) = QUEUE+P
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE QUEUE+P>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; QUEUE+P
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; QUEUE+P
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE QUEUE+P>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; QUEUE+P
8     (SKIP&RET 1)


Disassembly of function QUEUE+P
(CONST 0) = +LABS
(CONST 1) = ZL-GET
(CONST 2) = *
(CONST 3) = LAB-HIGH-BIT
(CONST 4) = PUTPROP
(CONST 5) = LAB-HIGH-LAB
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LAB-HIGH-BIT +LABS LAB-HIGH-LAB *)
writes special variables : (+LABS *)
53 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CONST&PUSH 0)                      ; +LABS
2     (CALL2 1)                           ; ZL-GET
4     (SETVALUE 2)                        ; *
6     (JMPIFNOT L53)
8     (LOAD&CAR&PUSH 1)
10    (LOAD&CAR&PUSH 2)
12    (GETVALUE 2)                        ; *
14    (CAR&PUSH)
15    (CALLSR&PUSH 2 61)                  ; LOGAND
18    (CALLSR&JMPIF 1 45 L50)             ; =
22    (GETVALUE 5)                        ; LAB-HIGH-LAB
24    (CAR&PUSH)
25    (GETVALUE 5)                        ; LAB-HIGH-LAB
27    (CAR&PUSH)
28    (GETVALUE 2)                        ; *
30    (CAR&PUSH)
31    (CALLSR&PUSH 2 61)                  ; LOGAND
34    (CALLSR&JMPIFNOT 1 45 L77)          ; =
38    (GETVALUE&PUSH 2)                   ; *
40    (GETVALUE 2)                        ; *
42    (CAR&PUSH)
43    (LOAD&CAR&PUSH 3)
45    (CALLSR&PUSH 2 59)                  ; LOGIOR
48    (CALLS1 168)                        ; RPLACA
50    L50
50    (NIL)
51    (SKIP&RET 3)
53    L53
53    (LOAD&PUSH 2)
54    (GETVALUE 0)                        ; +LABS
56    (CONS)
57    (SETVALUE 0)                        ; +LABS
59    (LOAD&CAR&STORE 1 1)
62    (LOAD&PUSH 2)
63    (GETVALUE&PUSH 3)                   ; LAB-HIGH-BIT
65    (LOAD&PUSH 3)
66    (CALLSR&PUSH 2 59)                  ; LOGIOR
69    (LIST&PUSH 1)
71    (CONST&PUSH 0)                      ; +LABS
72    (CALL 3 4)                          ; PUTPROP
75    (SKIP&RET 3)
77    L77
77    (GETVALUE&PUSH 2)                   ; *
79    (GETVALUE 2)                        ; *
81    (CAR&PUSH)
82    (GETVALUE&PUSH 3)                   ; LAB-HIGH-BIT
84    (LOAD&CAR&PUSH 4)
86    (CALLSR 2 59)                       ; LOGIOR
89    (CAR&PUSH)
90    (CALLSR&PUSH 2 59)                  ; LOGIOR
93    (CALLS1 168)                        ; RPLACA
95    (SKIP&RET 3)


Disassembly of function #:|(DEFUN QUEUE-P (ND LAB) ...)-72|
(CONST 0) = QUEUE-P
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE QUEUE-P>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; QUEUE-P
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; QUEUE-P
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE QUEUE-P>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; QUEUE-P
8     (SKIP&RET 1)


Disassembly of function QUEUE-P
(CONST 0) = -LABS
(CONST 1) = ZL-GET
(CONST 2) = *
(CONST 3) = LAB-HIGH-BIT
(CONST 4) = PUTPROP
(CONST 5) = LAB-HIGH-LAB
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LAB-HIGH-BIT -LABS LAB-HIGH-LAB *)
writes special variables : (-LABS *)
53 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CONST&PUSH 0)                      ; -LABS
2     (CALL2 1)                           ; ZL-GET
4     (SETVALUE 2)                        ; *
6     (JMPIFNOT L53)
8     (LOAD&CAR&PUSH 1)
10    (LOAD&CAR&PUSH 2)
12    (GETVALUE 2)                        ; *
14    (CAR&PUSH)
15    (CALLSR&PUSH 2 61)                  ; LOGAND
18    (CALLSR&JMPIF 1 45 L50)             ; =
22    (GETVALUE 5)                        ; LAB-HIGH-LAB
24    (CAR&PUSH)
25    (GETVALUE 5)                        ; LAB-HIGH-LAB
27    (CAR&PUSH)
28    (GETVALUE 2)                        ; *
30    (CAR&PUSH)
31    (CALLSR&PUSH 2 61)                  ; LOGAND
34    (CALLSR&JMPIFNOT 1 45 L77)          ; =
38    (GETVALUE&PUSH 2)                   ; *
40    (GETVALUE 2)                        ; *
42    (CAR&PUSH)
43    (LOAD&CAR&PUSH 3)
45    (CALLSR&PUSH 2 59)                  ; LOGIOR
48    (CALLS1 168)                        ; RPLACA
50    L50
50    (NIL)
51    (SKIP&RET 3)
53    L53
53    (LOAD&PUSH 2)
54    (GETVALUE 0)                        ; -LABS
56    (CONS)
57    (SETVALUE 0)                        ; -LABS
59    (LOAD&CAR&STORE 1 1)
62    (LOAD&PUSH 2)
63    (GETVALUE&PUSH 3)                   ; LAB-HIGH-BIT
65    (LOAD&PUSH 3)
66    (CALLSR&PUSH 2 59)                  ; LOGIOR
69    (LIST&PUSH 1)
71    (CONST&PUSH 0)                      ; -LABS
72    (CALL 3 4)                          ; PUTPROP
75    (SKIP&RET 3)
77    L77
77    (GETVALUE&PUSH 2)                   ; *
79    (GETVALUE 2)                        ; *
81    (CAR&PUSH)
82    (GETVALUE&PUSH 3)                   ; LAB-HIGH-BIT
84    (LOAD&CAR&PUSH 4)
86    (CALLSR 2 59)                       ; LOGIOR
89    (CAR&PUSH)
90    (CALLSR&PUSH 2 59)                  ; LOGIOR
93    (CALLS1 168)                        ; RPLACA
95    (SKIP&RET 3)


Disassembly of function #:|(DEFUN DQ+ NIL ...)-73|
(CONST 0) = DQ+
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DQ+>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DQ+
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DQ+
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DQ+>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DQ+
8     (SKIP&RET 1)


Disassembly of function DQ+
(CONST 0) = +S
(CONST 1) = +LABS
(CONST 2) = ZL-GET
(CONST 3) = LAB-HIGH-LAB
(CONST 4) = XXORM
(CONST 5) = +SM
(CONST 6) = +SL
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (+SL +SM LAB-HIGH-LAB +S)
writes special variables : (+SL +SM +S)
35 byte-code instructions:
0     (GETVALUE 0)                        ; +S
2     (JMPIFNOT1 L53)
4     (CAR&PUSH)
5     (CONST&PUSH 1)                      ; +LABS
6     (CALL2&PUSH 2)                      ; ZL-GET
8     (GETVALUE&PUSH 3)                   ; LAB-HIGH-LAB
10    (CALL2 4)                           ; XXORM
12    (GETVALUE 0)                        ; +S
14    (CAR&PUSH)
15    (GETVALUE&PUSH 0)                   ; +S
17    (GETVALUE 5)                        ; +SM
19    (JMPIFNOTEQ L37)
21    (GETVALUE&PUSH 0)                   ; +S
23    (GETVALUE 6)                        ; +SL
25    (JMPIFNOTEQ L44)
27    (NIL)
28    (SETVALUE 0)                        ; +S
30    (SETVALUE 5)                        ; +SM
32    (SETVALUE 6)                        ; +SL
34    L34
34    (POP)
35    (SKIP&RET 1)
37    L37
37    (GETVALUE 0)                        ; +S
39    (CDR)
40    (SETVALUE 0)                        ; +S
42    (JMP L34)
44    L44
44    (GETVALUE 0)                        ; +S
46    (CDR)
47    (SETVALUE 0)                        ; +S
49    (SETVALUE 5)                        ; +SM
51    (JMP L34)
53    L53
53    (SKIP&RET 1)


Disassembly of function #:|(DEFUN DQ- NIL ...)-74|
(CONST 0) = DQ-
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DQ->
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DQ-
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DQ-
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DQ->
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DQ-
8     (SKIP&RET 1)


Disassembly of function DQ-
(CONST 0) = -S
(CONST 1) = -LABS
(CONST 2) = ZL-GET
(CONST 3) = LAB-HIGH-LAB
(CONST 4) = -SM
(CONST 5) = -SL
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (-SL -SM LAB-HIGH-LAB -S)
writes special variables : (-SL -SM -S)
42 byte-code instructions:
0     (GETVALUE 0)                        ; -S
2     (JMPIFNOT1 L64)
4     (CAR&PUSH)
5     (CONST&PUSH 1)                      ; -LABS
6     (CALL2&PUSH 2)                      ; ZL-GET
8     (GETVALUE 0)                        ; -S
10    (CAR&PUSH)
11    (CONST&PUSH 1)                      ; -LABS
12    (CALL2 2)                           ; ZL-GET
14    (CAR&PUSH)
15    (GETVALUE 3)                        ; LAB-HIGH-LAB
17    (CAR&PUSH)
18    (CALLSR&PUSH 2 60)                  ; LOGXOR
21    (CALLS1 168)                        ; RPLACA
23    (GETVALUE 0)                        ; -S
25    (CAR&PUSH)
26    (GETVALUE&PUSH 0)                   ; -S
28    (GETVALUE 4)                        ; -SM
30    (JMPIFNOTEQ L48)
32    (GETVALUE&PUSH 0)                   ; -S
34    (GETVALUE 5)                        ; -SL
36    (JMPIFNOTEQ L55)
38    (NIL)
39    (SETVALUE 0)                        ; -S
41    (SETVALUE 4)                        ; -SM
43    (SETVALUE 5)                        ; -SL
45    L45
45    (POP)
46    (SKIP&RET 1)
48    L48
48    (GETVALUE 0)                        ; -S
50    (CDR)
51    (SETVALUE 0)                        ; -S
53    (JMP L45)
55    L55
55    (GETVALUE 0)                        ; -S
57    (CDR)
58    (SETVALUE 0)                        ; -S
60    (SETVALUE 4)                        ; -SM
62    (JMP L45)
64    L64
64    (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN CLEAR NIL ...)-75|
(CONST 0) = CLEAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CLEAR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CLEAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CLEAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CLEAR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CLEAR
8     (SKIP&RET 1)


Disassembly of function CLEAR
(CONST 0) = DBTRACE
(CONST 1) = "~%Clearing ~A"
(CONST 2) = MARKS
(CONST 3) = MTELL
(CONST 4) = +LABS
(CONST 5) = A-ATOM
(CONST 6) = -LABS
(CONST 7) = ULABS
(CONST 8) = ZL-REMPROP
(CONST 9) = +S
(CONST 10) = +SM
(CONST 11) = +SL
(CONST 12) = -S
(CONST 13) = -SM
(CONST 14) = -SL
(CONST 15) = LABS
(CONST 16) = LPRS
(CONST 17) = 0
(CONST 18) = LABINDEX
(CONST 19) = LABNUMBER
(CONST 20) = LPRINDEX
(CONST 21) = CONTEXTMARK
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LABNUMBER ULABS -LABS +LABS MARKS DBTRACE)
writes special variables : (ULABS -LABS +LABS MARKS LPRINDEX LABINDEX LPRS LABS -SL -SM -S +SL +SM +S)
71 byte-code instructions:
0     (GETVALUE 0)                        ; DBTRACE
2     (JMPIFNOT L9)
4     (CONST&PUSH 1)                      ; "~%Clearing ~A"
5     (GETVALUE&PUSH 2)                   ; MARKS
7     (CALL2 3)                           ; MTELL
9     L9
9     (GETVALUE&PUSH 4)                   ; +LABS
11    (LOAD&PUSH 0)
12    (JMP L26)
14    L14
14    (LOAD&CAR&PUSH 0)
16    (LOAD&PUSH 0)
17    (CONST&PUSH 4)                      ; +LABS
18    (NIL&PUSH)
19    (CALL 3 5)                          ; A-ATOM
22    (SKIP 1)
24    (LOAD&CDR&STORE 0)
26    L26
26    (LOAD&PUSH 0)
27    (CALLS1&JMPIFNOT 146 L14)           ; ENDP
30    (SKIP 2)
32    (GETVALUE&PUSH 6)                   ; -LABS
34    (LOAD&PUSH 0)
35    (JMP L49)
37    L37
37    (LOAD&CAR&PUSH 0)
39    (LOAD&PUSH 0)
40    (CONST&PUSH 6)                      ; -LABS
41    (NIL&PUSH)
42    (CALL 3 5)                          ; A-ATOM
45    (SKIP 1)
47    (LOAD&CDR&STORE 0)
49    L49
49    (LOAD&PUSH 0)
50    (CALLS1&JMPIFNOT 146 L37)           ; ENDP
53    (SKIP 2)
55    (GETVALUE&PUSH 7)                   ; ULABS
57    (LOAD&PUSH 0)
58    (JMP L70)
60    L60
60    (LOAD&CAR&PUSH 0)
62    (LOAD&PUSH 0)
63    (CONST&PUSH 7)                      ; ULABS
64    (CALL2 8)                           ; ZL-REMPROP
66    (SKIP 1)
68    (LOAD&CDR&STORE 0)
70    L70
70    (LOAD&PUSH 0)
71    (CALLS1&JMPIFNOT 146 L60)           ; ENDP
74    (SKIP 2)
76    (NIL)
77    (SETVALUE 9)                        ; +S
79    (SETVALUE 10)                       ; +SM
81    (SETVALUE 11)                       ; +SL
83    (SETVALUE 12)                       ; -S
85    (SETVALUE 13)                       ; -SM
87    (SETVALUE 14)                       ; -SL
89    (SETVALUE 15)                       ; LABS
91    (SETVALUE 16)                       ; LPRS
93    (CONST 17)                          ; 0
94    (SETVALUE 18)                       ; LABINDEX
96    (GETVALUE 19)                       ; LABNUMBER
98    (SETVALUE 20)                       ; LPRINDEX
100   (CONST 17)                          ; 0
101   (SETVALUE 2)                        ; MARKS
103   (NIL)
104   (SETVALUE 4)                        ; +LABS
106   (SETVALUE 6)                        ; -LABS
108   (SETVALUE 7)                        ; ULABS
110   (CALL0 21)                          ; CONTEXTMARK
112   (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN TRUEP (PAT) ...)-76|
(CONST 0) = TRUEP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRUEP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRUEP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRUEP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRUEP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TRUEP
8     (SKIP&RET 1)


Disassembly of function TRUEP
(CONST 0) = CLEAR
(CONST 1) = SEMANT
(CONST 2) = KIND
(CONST 3) = 1
(CONST 4) = BEG
(CONST 5) = BEG-
(CONST 6) = PROPG
(CONST 7) = 2
(CONST 8) = LPR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
43 byte-code instructions:
0     (CALL0 0)                           ; CLEAR
2     (LOAD 1)
3     (JMPIFATOM L42)
5     (CONST&SYMBOL-FUNCTION&PUSH 1)      ; SEMANT
7     (LOAD&PUSH 2)
8     (CALLSR&STORE 0 22 1)               ; MAPCAR
12    (LOAD&CAR&PUSH 1)
14    (JMPIFEQTO 2 L45)                   ; KIND
17    (LOAD 1)
18    (CDR)
19    (CAR&PUSH)
20    (CONST&PUSH 3)                      ; 1
21    (CALL2 4)                           ; BEG
23    (LOAD 1)
24    (CDR)
25    (CDR)
26    (CAR&PUSH)
27    (CONST&PUSH 7)                      ; 2
28    (CALL2 5)                           ; BEG-
30    (LOAD&CAR&PUSH 1)
32    (CONST&PUSH 3)                      ; 1
33    (CONST&PUSH 7)                      ; 2
34    (CALL2&PUSH 8)                      ; LPR
36    (CALL2 4)                           ; BEG
38    L38
38    (CALL0 6)                           ; PROPG
40    (SKIP&RET 2)
42    L42
42    (LOAD 1)
43    (SKIP&RET 2)
45    L45
45    (LOAD 1)
46    (CDR)
47    (CAR&PUSH)
48    (CONST&PUSH 3)                      ; 1
49    (CALL2 4)                           ; BEG
51    (LOAD 1)
52    (CDR)
53    (CDR)
54    (CAR&PUSH)
55    (CONST&PUSH 3)                      ; 1
56    (CALL2 5)                           ; BEG-
58    (JMP L38)


Disassembly of function #:|(DEFMFUN FALSEP (PAT) ...)-77|
(CONST 0) = FALSEP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FALSEP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FALSEP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FALSEP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FALSEP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FALSEP
8     (SKIP&RET 1)


Disassembly of function FALSEP
(CONST 0) = CLEAR
(CONST 1) = KIND
(CONST 2) = 1
(CONST 3) = BEG
(CONST 4) = PROPG
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
19 byte-code instructions:
0     (CALL0 0)                           ; CLEAR
2     (LOAD&CAR&PUSH 1)
4     (JMPIFEQTO 1 L10)                   ; KIND
7     (NIL)
8     (SKIP&RET 2)
10    L10
10    (LOAD 1)
11    (CDR)
12    (CAR&PUSH)
13    (CONST&PUSH 2)                      ; 1
14    (CALL2 3)                           ; BEG
16    (LOAD 1)
17    (CDR)
18    (CDR)
19    (CAR&PUSH)
20    (CONST&PUSH 2)                      ; 1
21    (CALL2 3)                           ; BEG
23    (CALL0 4)                           ; PROPG
25    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN ISP (PAT) ...)-78|
(CONST 0) = ISP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ISP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ISP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ISP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ISP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ISP
8     (SKIP&RET 1)


Disassembly of function ISP
(CONST 0) = TRUEP
(CONST 1) = FALSEP
(CONST 2) = UNKNOWN
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
12 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1 0)                           ; TRUEP
3     (JMPIF1 L15)
5     (LOAD&PUSH 1)
6     (CALL1&JMPIF 1 L12)                 ; FALSEP
9     (CONST 2)                           ; UNKNOWN
10    (SKIP&RET 2)
12    L12
12    (NIL)
13    (SKIP&RET 2)
15    L15
15    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN KINDP (X Y &AUX) ...)-79|
(CONST 0) = KINDP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KINDP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KINDP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KINDP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KINDP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KINDP
8     (SKIP&RET 1)


Disassembly of function KINDP
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = "KINDP called on a non-symbolic atom."
(CONST 3) = MERROR
(CONST 4) = CLEAR
(CONST 5) = 1
(CONST 6) = BEG
(CONST 7) = DQ+
(CONST 8) = P
(CONST 9) = +LABS
(CONST 10) = ZL-GET
(CONST 11) = MARK+
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y P X)
writes special variable : (P)
40 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE&PUSH 0)                   ; X
8     (CALLS2&JMPIF 6 L14)                ; SYMBOLP
11    (CONST&PUSH 2)                      ; "KINDP called on a non-symbolic atom."
12    (CALL1 3)                           ; MERROR
14    L14
14    (CALL0 4)                           ; CLEAR
16    (GETVALUE&PUSH 0)                   ; X
18    (CONST&PUSH 5)                      ; 1
19    (CALL2 6)                           ; BEG
21    (CALL0 7)                           ; DQ+
23    (BIND 8)                            ; P
25    (GETVALUE 8)                        ; P
27    (JMPIFNOT L52)
29    L29
29    (GETVALUE&PUSH 1)                   ; Y
31    (GETVALUE 8)                        ; P
33    (JMPIFEQ L58)
35    (GETVALUE&PUSH 8)                   ; P
37    (GETVALUE&PUSH 8)                   ; P
39    (CONST&PUSH 9)                      ; +LABS
40    (CALL2&PUSH 10)                     ; ZL-GET
42    (CALL2 11)                          ; MARK+
44    (CALL0 7)                           ; DQ+
46    (SETVALUE 8)                        ; P
48    (GETVALUE 8)                        ; P
50    (JMPIF L29)
52    L52
52    (NIL)
53    (UNBIND1)
54    L54
54    (UNBIND 2)
56    (SKIP&RET 3)
58    L58
58    (T)
59    (UNBIND1)
60    (JMP L54)


Disassembly of function #:|(DEFMFUN TRUE* (PAT) ...)-80|
(CONST 0) = TRUE*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRUE*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRUE*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRUE*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRUE*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TRUE*
8     (SKIP&RET 1)


Disassembly of function TRUE*
(CONST 0) = SEMANT
(CONST 1) = IND
(CONST 2) = CONTEXT
(CONST 3) = CNTXT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (CONTEXT)
13 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1&PUSH 0)                      ; SEMANT
3     (LOAD 0)
4     (JMPIFNOT1 L17)
6     (PUSH)
7     (NIL)
8     (CONS&PUSH)
9     (CALL1&PUSH 1)                      ; IND
11    (GETVALUE&PUSH 2)                   ; CONTEXT
13    (CALL2 3)                           ; CNTXT
15    (SKIP&RET 3)
17    L17
17    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN FACT (FUN ARG VAL) ...)-81|
(CONST 0) = FACT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FACT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FACT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FACT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FACT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FACT
8     (SKIP&RET 1)


Disassembly of function FACT
(CONST 0) = DATUM
(CONST 1) = IND
(CONST 2) = CONTEXT
(CONST 3) = CNTXT
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (CONTEXT)
9 byte-code instructions:
0     (LOAD&PUSH 3)
1     (LOAD&PUSH 3)
2     (LOAD&PUSH 3)
3     (LIST&PUSH 3)
5     (CALL1&PUSH 0)                      ; DATUM
7     (CALL1&PUSH 1)                      ; IND
9     (GETVALUE&PUSH 2)                   ; CONTEXT
11    (CALL2 3)                           ; CNTXT
13    (SKIP&RET 4)


Disassembly of function #:|(DEFMFUN KIND (X Y &AUX) ...)-82|
(CONST 0) = KIND
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KIND>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KIND
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KIND
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KIND>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KIND
8     (SKIP&RET 1)


Disassembly of function KIND
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = KIND
(CONST 3) = DATUM
(CONST 4) = CONTEXT
(CONST 5) = CNTXT
(CONST 6) = ADDF
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CONTEXT Y X)
writes special variable : (Y)
18 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (CONST&PUSH 2)                      ; KIND
7     (GETVALUE&PUSH 0)                   ; X
9     (GETVALUE&PUSH 1)                   ; Y
11    (LIST&PUSH 3)
13    (CALL1 3)                           ; DATUM
15    (SETVALUE 1)                        ; Y
17    (PUSH)
18    (GETVALUE&PUSH 4)                   ; CONTEXT
20    (CALL2 5)                           ; CNTXT
22    (GETVALUE&PUSH 1)                   ; Y
24    (GETVALUE&PUSH 0)                   ; X
26    (CALL2 6)                           ; ADDF
28    (UNBIND 2)
30    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN PAR (S Y) ...)-83|
(CONST 0) = PAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PAR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PAR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PAR
8     (SKIP&RET 1)


Disassembly of function PAR
(CONST 0) = Y
(CONST 1) = PAR
(CONST 2) = DATUM
(CONST 3) = CONTEXT
(CONST 4) = CNTXT
(CONST 5) = ADDF
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CONTEXT Y)
writes special variable : (Y)
27 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; Y
3     (CONST&PUSH 1)                      ; PAR
4     (LOAD&PUSH 6)
5     (GETVALUE&PUSH 0)                   ; Y
7     (LIST&PUSH 3)
9     (CALL1 2)                           ; DATUM
11    (SETVALUE 0)                        ; Y
13    (PUSH)
14    (GETVALUE&PUSH 3)                   ; CONTEXT
16    (CALL2 4)                           ; CNTXT
18    (LOAD&PUSH 5)
19    (JMP L32)
21    L21
21    (LOAD&CAR&PUSH 0)
23    (GETVALUE&PUSH 0)                   ; Y
25    (LOAD&PUSH 1)
26    (CALL2 5)                           ; ADDF
28    (SKIP 1)
30    (LOAD&CDR&STORE 0)
32    L32
32    (LOAD&PUSH 0)
33    (CALLS1&JMPIFNOT 146 L21)           ; ENDP
36    (SKIP 1)
38    (LOAD 5)
39    (UNBIND1)
40    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN DATUM (PAT) ...)-84|
(CONST 0) = DATUM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DATUM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DATUM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DATUM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DATUM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DATUM
8     (SKIP&RET 1)


Disassembly of function DATUM
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (LOAD&PUSH 1)
1     (NIL)
2     (CONS)
3     (SKIP&RET 2)


Disassembly of function #:|(DEFUN IND (DAT) ...)-85|
(CONST 0) = IND
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE IND>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; IND
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; IND
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE IND>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; IND
8     (SKIP&RET 1)


Disassembly of function IND
(CONST 0) = IND1
(CONST 1) = IND2
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
23 byte-code instructions:
0     (LOAD 1)
1     (CAR)
2     (CDR&PUSH)
3     (LOAD&PUSH 0)
4     (JMP L16)
6     L6
6     (LOAD&CAR&PUSH 0)
8     (LOAD&PUSH 4)
9     (LOAD&PUSH 1)
10    (CALL2 0)                           ; IND1
12    (SKIP 1)
14    (LOAD&CDR&STORE 0)
16    L16
16    (LOAD&PUSH 0)
17    (CALLS1&JMPIFNOT 146 L6)            ; ENDP
20    (SKIP 2)
22    (CONST&SYMBOL-FUNCTION&PUSH 1)      ; IND2
24    (LOAD 2)
25    (CAR)
26    (CDR&PUSH)
27    (CALLSR 0 24)                       ; MAPC
30    (LOAD 1)
31    (SKIP&RET 2)


Disassembly of function #:|(DEFUN IND1 (DAT PAT) ...)-86|
(CONST 0) = IND1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE IND1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; IND1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; IND1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE IND1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; IND1
8     (SKIP&RET 1)


Disassembly of function IND1
(CONST 0) = NODEP
(CONST 1) = MARKP
(CONST 2) = UNKNOWN
(CONST 3) = ADDF
(CONST 4) = MARK
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
34 byte-code instructions:
0     L0
0     (LOAD&PUSH 1)
1     (CALL1&JMPIFNOT 0 L23)              ; NODEP
4     (LOAD&PUSH 1)
5     (CALL1 1)                           ; MARKP
7     (JMPIF1 L45)
9     (LOAD&PUSH 1)
10    (CONST 2)                           ; UNKNOWN
11    (EQ)
12    (JMPIF1 L45)
14    (LOAD&PUSH 2)
15    (LOAD&PUSH 2)
16    (CALL2 3)                           ; ADDF
18    (LOAD&PUSH 1)
19    (CALL1 4)                           ; MARK
21    (SKIP&RET 3)
23    L23
23    (LOAD&PUSH 1)
24    (JMP L36)
26    L26
26    (LOAD&CAR&PUSH 0)
28    (LOAD&PUSH 4)
29    (LOAD&PUSH 1)
30    (JSR L0)
32    (SKIP 1)
34    (LOAD&CDR&STORE 0)
36    L36
36    (LOAD&PUSH 0)
37    (CALLS1&JMPIFNOT 146 L26)           ; ENDP
40    (SKIP 1)
42    (LOAD 1)
43    (SKIP&RET 3)
45    L45
45    (SKIP&RET 3)


Disassembly of function #:|(DEFUN IND2 (ND) ...)-87|
(CONST 0) = IND2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE IND2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; IND2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; IND2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE IND2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; IND2
8     (SKIP&RET 1)


Disassembly of function IND2
(CONST 0) = NODEP
(CONST 1) = UNMRK
(CONST 2) = IND2
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1&JMPIF 0 L12)                 ; NODEP
4     (CONST&SYMBOL-FUNCTION&PUSH 2)      ; IND2
6     (LOAD&PUSH 2)
7     (CALLSR 0 24)                       ; MAPC
10    (SKIP&RET 2)
12    L12
12    (LOAD&PUSH 1)
13    (CALL1 1)                           ; UNMRK
15    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN ADDF (DAT ND &AUX) ...)-88|
(CONST 0) = ADDF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ADDF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ADDF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ADDF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ADDF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ADDF
8     (SKIP&RET 1)


Disassembly of function ADDF
(CONST 0) = DATA
(CONST 1) = ZL-GET
(CONST 2) = A-ATOM
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
9 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CONST&PUSH 0)                      ; DATA
2     (LOAD&PUSH 4)
3     (LOAD&PUSH 4)
4     (CONST&PUSH 0)                      ; DATA
5     (CALL2 1)                           ; ZL-GET
7     (CONS&PUSH)
8     (CALL 3 2)                          ; A-ATOM
11    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN MAXIMA-REMF (DAT ND) ...)-89|
(CONST 0) = MAXIMA-REMF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAXIMA-REMF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAXIMA-REMF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAXIMA-REMF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAXIMA-REMF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAXIMA-REMF
8     (SKIP&RET 1)


Disassembly of function MAXIMA-REMF
(CONST 0) = DATA
(CONST 1) = ZL-GET
(CONST 2) = FDEL
(CONST 3) = A-ATOM
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
9 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CONST&PUSH 0)                      ; DATA
2     (LOAD&PUSH 4)
3     (LOAD&PUSH 4)
4     (CONST&PUSH 0)                      ; DATA
5     (CALL2&PUSH 1)                      ; ZL-GET
7     (CALL2&PUSH 2)                      ; FDEL
9     (CALL 3 3)                          ; A-ATOM
12    (SKIP&RET 3)


Disassembly of function #:|(DEFUN FDEL (FACT DATA) ...)-90|
(CONST 0) = FDEL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FDEL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FDEL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FDEL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FDEL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FDEL
8     (SKIP&RET 1)


Disassembly of function FDEL
(CONST 0) = DATA
(CONST 1) = ZL-GET
(CONST 2) = CON
(CONST 3) = DELQ
(CONST 4) = A-ATOM
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
86 byte-code instructions:
0     (LOAD&CAR&PUSH 2)
2     (LOAD 2)
3     (CAR)
4     (CAR)
5     (CAR)
6     (JMPIFNOTEQ L30)
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 2)
12    (CAR)
13    (CAR)
14    (CDR)
15    (CAR)
16    (JMPIFNOTEQ L30)
18    (LOAD 2)
19    (CDR)
20    (CDR)
21    (CAR&PUSH)
22    (LOAD 2)
23    (CAR)
24    (CAR)
25    (CDR)
26    (CDR)
27    (CAR)
28    (JMPIFEQ L34)
30    L30
30    (LOAD&PUSH 1)
31    (NIL&PUSH)
32    (JMP L40)
34    L34
34    (LOAD 1)
35    (CDR)
36    (SKIP&RET 3)
38    L38
38    (LOAD&CDR&STORE 1)
40    L40
40    (LOAD 1)
41    (CDR)
42    (JMPIFNOT L97)
44    (LOAD 1)
45    (CDR)
46    (CAR)
47    (CAR)
48    (STORE 0)
49    (LOAD&CAR&PUSH 4)
51    (LOAD 1)
52    (CAR)
53    (JMPIFNOTEQ L38)
55    (LOAD 4)
56    (CDR)
57    (CAR&PUSH)
58    (LOAD 1)
59    (CDR)
60    (CAR)
61    (JMPIFNOTEQ L38)
63    (LOAD 4)
64    (CDR)
65    (CDR)
66    (CAR&PUSH)
67    (LOAD 1)
68    (CDR)
69    (CDR)
70    (CAR)
71    (JMPIFNOTEQ L38)
73    (LOAD&PUSH 0)
74    (CONST&PUSH 0)                      ; DATA
75    (CALL2&PUSH 1)                      ; ZL-GET
77    (CONST&PUSH 2)                      ; CON
78    (LOAD&PUSH 2)
79    (LOAD&PUSH 3)
80    (CONST&PUSH 2)                      ; CON
81    (CALL2&PUSH 1)                      ; ZL-GET
83    (CONST&PUSH 0)                      ; DATA
84    (CALL2&PUSH 1)                      ; ZL-GET
86    (CALL2&PUSH 3)                      ; DELQ
88    (CALL 3 4)                          ; A-ATOM
91    (LOAD&PUSH 1)
92    (LOAD 2)
93    (CDR)
94    (CDR&PUSH)
95    (CALLS1 170)                        ; RPLACD
97    L97
97    (SKIP 2)
99    (LOAD 1)
100   (SKIP&RET 3)


Disassembly of function #:|(DEFUN SEMANTICS (PAT) ...)-91|
(CONST 0) = SEMANTICS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SEMANTICS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SEMANTICS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SEMANTICS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SEMANTICS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SEMANTICS
8     (SKIP&RET 1)


Disassembly of function SEMANTICS
(CONST 0) = SEMANT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
9 byte-code instructions:
0     (LOAD 1)
1     (JMPIFATOM L10)
3     (LOAD&PUSH 1)
4     (CALL1&PUSH 0)                      ; SEMANT
6     (LIST 1)
8     (SKIP&RET 2)
10    L10
10    (LOAD 1)
11    (SKIP&RET 2)


Disassembly of function #:|(DEFUN DB-MNUMP (X) ...)-92|
(CONST 0) = DB-MNUMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DB-MNUMP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DB-MNUMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DB-MNUMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DB-MNUMP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DB-MNUMP
8     (SKIP&RET 1)


Disassembly of function DB-MNUMP
(CONST 0) = X
(CONST 1) = (RAT BIGFLOAT)
(CONST 2) = MEMQ
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
20 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2 8)                          ; NUMBERP
7     (JMPIF1 L29)
9     (GETVALUE&PUSH 0)                   ; X
11    (CALLS2 4)                          ; CONSP
13    (JMPIFNOT1 L29)
15    (GETVALUE 0)                        ; X
17    (CAR&PUSH)
18    (CALLS2 4)                          ; CONSP
20    (JMPIFNOT1 L29)
22    (GETVALUE 0)                        ; X
24    (CAR)
25    (CAR&PUSH)
26    (CONST&PUSH 1)                      ; (RAT BIGFLOAT)
27    (CALL2 2)                           ; MEMQ
29    L29
29    (UNBIND1)
30    (SKIP&RET 2)


Disassembly of function #:|(DEFUN SEMANT (PAT) ...)-93|
(CONST 0) = SEMANT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SEMANT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SEMANT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SEMANT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SEMANT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SEMANT
8     (SKIP&RET 1)


Disassembly of function SEMANT
(CONST 0) = VAR
(CONST 1) = ZL-GET
(CONST 2) = DB-MNUMP
(CONST 3) = DINTNUM
(CONST 4) = SEMANT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2&JMPIF 6 L16)                ; SYMBOLP
4     (LOAD&PUSH 1)
5     (CALL1&JMPIF 2 L25)                 ; DB-MNUMP
8     (CONST&SYMBOL-FUNCTION&PUSH 4)      ; SEMANT
10    (LOAD&PUSH 2)
11    (CALLSR 0 22)                       ; MAPCAR
14    (SKIP&RET 2)
16    L16
16    (LOAD&PUSH 1)
17    (CONST&PUSH 0)                      ; VAR
18    (CALL2 1)                           ; ZL-GET
20    (JMPIF1 L30)
22    (LOAD 1)
23    (SKIP&RET 2)
25    L25
25    (LOAD&PUSH 1)
26    (CALL1 3)                           ; DINTNUM
28    (SKIP&RET 2)
30    L30
30    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN DINTERNP (X) ...)-94|
(CONST 0) = DINTERNP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DINTERNP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DINTERNP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DINTERNP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DINTERNP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DINTERNP
8     (SKIP&RET 1)


Disassembly of function DINTERNP
(CONST 0) = X
(CONST 1) = MNUMP
(CONST 2) = DINTNUM
(CONST 3) = DOBJECTS
(CONST 4) = ASSOL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (DOBJECTS X)
21 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALL1&JMPIF 1 L24)                 ; MNUMP
8     (GETVALUE 0)                        ; X
10    (JMPIFATOM L30)
12    (GETVALUE&PUSH 0)                   ; X
14    (GETVALUE&PUSH 3)                   ; DOBJECTS
16    (CALL2 4)                           ; ASSOL
18    (JMPIF1 L21)
20    (NIL)
21    L21
21    (UNBIND1)
22    (SKIP&RET 2)
24    L24
24    (GETVALUE&PUSH 0)                   ; X
26    (CALL1 2)                           ; DINTNUM
28    (JMP L21)
30    L30
30    (GETVALUE 0)                        ; X
32    (JMP L21)


Disassembly of function #:|(DEFMFUN DINTERN (X &AUX) ...)-95|
(CONST 0) = DINTERN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DINTERN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DINTERN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DINTERN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DINTERN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DINTERN
8     (SKIP&RET 1)


Disassembly of function DINTERN
(CONST 0) = X
(CONST 1) = MNUMP
(CONST 2) = DINTNUM
(CONST 3) = DOBJECTS
(CONST 4) = ASSOL
(CONST 5) = DBNODE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (DOBJECTS X)
writes special variable : (DOBJECTS)
26 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALL1&JMPIF 1 L33)                 ; MNUMP
8     (GETVALUE 0)                        ; X
10    (JMPIFATOM L39)
12    (GETVALUE&PUSH 0)                   ; X
14    (GETVALUE&PUSH 3)                   ; DOBJECTS
16    (CALL2 4)                           ; ASSOL
18    (JMPIF1 L30)
20    (GETVALUE&PUSH 0)                   ; X
22    (CALL1&PUSH 5)                      ; DBNODE
24    (GETVALUE 3)                        ; DOBJECTS
26    (CONS)
27    (SETVALUE 3)                        ; DOBJECTS
29    (CAR)
30    L30
30    (UNBIND1)
31    (SKIP&RET 2)
33    L33
33    (GETVALUE&PUSH 0)                   ; X
35    (CALL1 2)                           ; DINTNUM
37    (JMP L30)
39    L39
39    (GETVALUE 0)                        ; X
41    (JMP L30)


Disassembly of function #:|(DEFUN DINTNUM (X) ...)-96|
(CONST 0) = DINTNUM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DINTNUM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DINTNUM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DINTNUM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DINTNUM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DINTNUM
8     (SKIP&RET 1)


Disassembly of function DINTNUM
(CONST 0) = X
(CONST 1) = NOBJECTS
(CONST 2) = ASSOL
(CONST 3) = DBNODE
(CONST 4) = RGRP
(CONST 5) = $POS
(CONST 6) = GLOBAL
(CONST 7) = CONTEXT
(CONST 8) = MGRP
(CONST 9) = FACT
(CONST 10) = $GLOBAL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (NOBJECTS X)
writes special variables : (NOBJECTS X)
95 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (GETVALUE&PUSH 1)                   ; NOBJECTS
7     (CALL2 2)                           ; ASSOL
9     (JMPIF1 L144)
12    (GETVALUE&PUSH 0)                   ; X
14    (CALL1 3)                           ; DBNODE
16    (SETVALUE 0)                        ; X
18    (GETVALUE 1)                        ; NOBJECTS
20    (JMPIFNOT L59)
22    (GETVALUE 0)                        ; X
24    (CAR&PUSH)
25    (GETVALUE 1)                        ; NOBJECTS
27    (CAR)
28    (CAR&PUSH)
29    (CALL2&PUSH 4)                      ; RGRP
31    (JMPIFNOTEQTO 5 L65)                ; $POS
34    (CONST 6)                           ; GLOBAL
35    (BIND 7)                            ; CONTEXT
37    (CONST&PUSH 8)                      ; MGRP
38    (GETVALUE&PUSH 0)                   ; X
40    (GETVALUE 1)                        ; NOBJECTS
42    (CAR&PUSH)
43    (CALL 3 9)                          ; FACT
46    (UNBIND1)
47    (GETVALUE&PUSH 0)                   ; X
49    (GETVALUE 1)                        ; NOBJECTS
51    (CONS)
52    L52
52    (SETVALUE 1)                        ; NOBJECTS
54    (GETVALUE 0)                        ; X
56    (JMP L144)
59    L59
59    (GETVALUE&PUSH 0)                   ; X
61    (LIST 1)
63    (JMP L52)
65    L65
65    (GETVALUE&PUSH 1)                   ; NOBJECTS
67    (CONST 10)                          ; $GLOBAL
68    (BIND 7)                            ; CONTEXT
70    (JMP L115)
72    L72
72    (CONST 6)                           ; GLOBAL
73    (BIND 7)                            ; CONTEXT
75    (CONST&PUSH 8)                      ; MGRP
76    (LOAD&CAR&PUSH 7)
78    (GETVALUE&PUSH 0)                   ; X
80    (CALL 3 9)                          ; FACT
83    (CONST&PUSH 8)                      ; MGRP
84    (GETVALUE&PUSH 0)                   ; X
86    (LOAD 8)
87    (CDR)
88    (CAR&PUSH)
89    (CALL 3 9)                          ; FACT
92    (UNBIND1)
93    (LOAD&PUSH 3)
94    (GETVALUE&PUSH 0)                   ; X
96    (LOAD 5)
97    (CDR)
98    (CONS)
99    (JMP L136)
101   L101
101   (GETVALUE 0)                        ; X
103   (CAR&PUSH)
104   (LOAD 4)
105   (CDR)
106   (CAR)
107   (CAR&PUSH)
108   (CALL2&PUSH 4)                      ; RGRP
110   (JMPIFEQTO 5 L72)                   ; $POS
113   (LOAD&CDR&STORE 3)
115   L115
115   (LOAD 3)
116   (CDR)
117   (JMPIF L101)
119   (CONST 6)                           ; GLOBAL
120   (BIND 7)                            ; CONTEXT
122   (CONST&PUSH 8)                      ; MGRP
123   (LOAD&CAR&PUSH 7)
125   (GETVALUE&PUSH 0)                   ; X
127   (CALL 3 9)                          ; FACT
130   (UNBIND1)
131   (LOAD&PUSH 3)
132   (GETVALUE&PUSH 0)                   ; X
134   (LIST 1)
136   L136
136   (PUSH)
137   (CALLS1 170)                        ; RPLACD
139   (GETVALUE 0)                        ; X
141   (UNBIND1)
142   (SKIP 1)
144   L144
144   (UNBIND1)
145   (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN DOUTERN (X) ...)-97|
(CONST 0) = DOUTERN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DOUTERN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DOUTERN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DOUTERN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DOUTERN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DOUTERN
8     (SKIP&RET 1)


Disassembly of function DOUTERN
(CONST 0) = X
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
12 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (JMPIFATOM L13)
7     (GETVALUE 0)                        ; X
9     (CAR)
10    L10
10    (UNBIND1)
11    (SKIP&RET 2)
13    L13
13    (GETVALUE 0)                        ; X
15    (JMP L10)


Disassembly of function #:|(DEFMFUN UNTRUE (PAT) ...)-98|
(CONST 0) = UNTRUE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNTRUE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNTRUE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNTRUE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNTRUE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNTRUE
8     (SKIP&RET 1)


Disassembly of function UNTRUE
(CONST 0) = SEMANT
(CONST 1) = KILL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
12 byte-code instructions:
0     (LOAD&CAR&PUSH 1)
2     (LOAD 2)
3     (CDR)
4     (CAR&PUSH)
5     (CALL1&PUSH 0)                      ; SEMANT
7     (LOAD 3)
8     (CDR)
9     (CDR)
10    (CAR&PUSH)
11    (CALL1&PUSH 0)                      ; SEMANT
13    (CALL 3 1)                          ; KILL
16    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN KILL (FUN ARG VAL) ...)-99|
(CONST 0) = KILL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KILL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KILL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KILL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KILL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KILL
8     (SKIP&RET 1)


Disassembly of function KILL
(CONST 0) = KILL2
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (LOAD&PUSH 3)
1     (LOAD&PUSH 3)
2     (LOAD&PUSH 3)
3     (LOAD&PUSH 5)
4     (CALL 4 0)                          ; KILL2
7     (LOAD&PUSH 3)
8     (LOAD&PUSH 3)
9     (LOAD&PUSH 3)
10    (LOAD&PUSH 4)
11    (CALL 4 0)                          ; KILL2
14    (SKIP&RET 4)


Disassembly of function #:|(DEFUN KILL2 (FUN ARG VAL ...) ...)-100|
(CONST 0) = KILL2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KILL2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KILL2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KILL2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KILL2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KILL2
8     (SKIP&RET 1)


Disassembly of function KILL2
(CONST 0) = DATA
(CONST 1) = ZL-GET
(CONST 2) = KILL3
(CONST 3) = A-ATOM
4 required arguments
0 optional arguments
No rest parameter
No keyword parameters
37 byte-code instructions:
0     L0
0     (LOAD 1)
1     (JMPIFCONSP L25)
3     (LOAD&PUSH 1)
4     (CALLS2 8)                          ; NUMBERP
6     (JMPIF1 L49)
8     (LOAD&PUSH 1)
9     (CONST&PUSH 0)                      ; DATA
10    (LOAD&PUSH 6)
11    (LOAD&PUSH 6)
12    (LOAD&PUSH 6)
13    (LOAD&PUSH 6)
14    (CONST&PUSH 0)                      ; DATA
15    (CALL2&PUSH 1)                      ; ZL-GET
17    (CALL&PUSH 4 2)                     ; KILL3
20    (CALL 3 3)                          ; A-ATOM
23    (SKIP&RET 5)
25    L25
25    (LOAD&PUSH 1)
26    (JMP L40)
28    L28
28    (LOAD&CAR&PUSH 0)
30    (LOAD&PUSH 6)
31    (LOAD&PUSH 6)
32    (LOAD&PUSH 6)
33    (LOAD&PUSH 3)
34    (JSR L0)
36    (SKIP 1)
38    (LOAD&CDR&STORE 0)
40    L40
40    (LOAD&PUSH 0)
41    (CALLS1&JMPIFNOT 146 L28)           ; ENDP
44    (SKIP 1)
46    (LOAD 1)
47    (SKIP&RET 5)
49    L49
49    (SKIP&RET 5)


Disassembly of function #:|(DEFUN KILL3 (FUN ARG VAL ...) ...)-101|
(CONST 0) = KILL3
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KILL3>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KILL3
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KILL3
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KILL3>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KILL3
8     (SKIP&RET 1)


Disassembly of function KILL3
(CONST 0) = DATA
(CONST 1) = ZL-GET
(CONST 2) = CON
(CONST 3) = DELQ
(CONST 4) = A-ATOM
4 required arguments
0 optional arguments
No rest parameter
No keyword parameters
76 byte-code instructions:
0     (LOAD&PUSH 4)
1     (LOAD 2)
2     (CAR)
3     (CAR)
4     (CAR)
5     (JMPIFNOTEQ L24)
7     (LOAD&PUSH 3)
8     (LOAD 2)
9     (CAR)
10    (CAR)
11    (CDR)
12    (CAR)
13    (JMPIFNOTEQ L24)
15    (LOAD&PUSH 2)
16    (LOAD 2)
17    (CAR)
18    (CAR)
19    (CDR)
20    (CDR)
21    (CAR)
22    (JMPIFEQ L28)
24    L24
24    (LOAD&PUSH 1)
25    (NIL&PUSH)
26    (JMP L34)
28    L28
28    (LOAD 1)
29    (CDR)
30    (SKIP&RET 5)
32    L32
32    (LOAD&CDR&STORE 1)
34    L34
34    (LOAD 1)
35    (CDR)
36    (JMPIFNOT L85)
38    (LOAD 1)
39    (CDR)
40    (CAR)
41    (CAR)
42    (STORE 0)
43    (LOAD&PUSH 6)
44    (LOAD 1)
45    (CAR)
46    (JMPIFNOTEQ L32)
48    (LOAD&PUSH 5)
49    (LOAD 1)
50    (CDR)
51    (CAR)
52    (JMPIFNOTEQ L32)
54    (LOAD&PUSH 4)
55    (LOAD 1)
56    (CDR)
57    (CDR)
58    (CAR)
59    (JMPIFNOTEQ L32)
61    (LOAD&PUSH 0)
62    (CONST&PUSH 0)                      ; DATA
63    (CALL2&PUSH 1)                      ; ZL-GET
65    (CONST&PUSH 2)                      ; CON
66    (LOAD&PUSH 2)
67    (LOAD&PUSH 3)
68    (CONST&PUSH 2)                      ; CON
69    (CALL2&PUSH 1)                      ; ZL-GET
71    (CONST&PUSH 0)                      ; DATA
72    (CALL2&PUSH 1)                      ; ZL-GET
74    (CALL2&PUSH 3)                      ; DELQ
76    (CALL 3 4)                          ; A-ATOM
79    (LOAD&PUSH 1)
80    (LOAD 2)
81    (CDR)
82    (CDR&PUSH)
83    (CALLS1 170)                        ; RPLACD
85    L85
85    (SKIP 2)
87    (LOAD 1)
88    (SKIP&RET 5)


Disassembly of function #:|(DEFMFUN UNKIND (X Y) ...)-102|
(CONST 0) = UNKIND
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNKIND>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNKIND
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNKIND
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNKIND>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNKIND
8     (SKIP&RET 1)


Disassembly of function UNKIND
(CONST 0) = X
(CONST 1) = Y
(CONST 2) = KIND
(CONST 3) = DATUM
(CONST 4) = CONTEXT
(CONST 5) = KCNTXT
(CONST 6) = MAXIMA-REMF
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CONTEXT Y X)
writes special variable : (Y)
19 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (CONST&PUSH 2)                      ; KIND
7     (GETVALUE&PUSH 0)                   ; X
9     (GETVALUE&PUSH 1)                   ; Y
11    (LIST&PUSH 3)
13    (CALL1 3)                           ; DATUM
15    (CAR)
16    (SETVALUE 1)                        ; Y
18    (PUSH)
19    (GETVALUE&PUSH 4)                   ; CONTEXT
21    (CALL2 5)                           ; KCNTXT
23    (GETVALUE&PUSH 1)                   ; Y
25    (GETVALUE&PUSH 0)                   ; X
27    (CALL2 6)                           ; MAXIMA-REMF
29    (UNBIND 2)
31    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN REMOV (FACT) ...)-103|
(CONST 0) = REMOV
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE REMOV>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; REMOV
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; REMOV
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE REMOV>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; REMOV
8     (SKIP&RET 1)


Disassembly of function REMOV
(CONST 0) = REMOV4
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (LOAD&PUSH 1)
1     (LOAD 2)
2     (CAR)
3     (CDR)
4     (CAR&PUSH)
5     (CALL2 0)                           ; REMOV4
7     (LOAD&PUSH 1)
8     (LOAD 2)
9     (CAR)
10    (CDR)
11    (CDR)
12    (CAR&PUSH)
13    (CALL2 0)                           ; REMOV4
15    (SKIP&RET 2)


Disassembly of function #:|(DEFUN REMOV4 (FACT CL) ...)-104|
(CONST 0) = REMOV4
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE REMOV4>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; REMOV4
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; REMOV4
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE REMOV4>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; REMOV4
8     (SKIP&RET 1)


Disassembly of function REMOV4
(CONST 0) = DATA
(CONST 1) = ZL-GET
(CONST 2) = DELQ
(CONST 3) = A-ATOM
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
62 byte-code instructions:
0     L0
0     (LOAD&PUSH 1)
1     (CALLS2&JMPIF 6 L40)                ; SYMBOLP
4     (LOAD 1)
5     (JMPIFATOM L12)
7     (LOAD&CAR&PUSH 1)
9     (CALLS2&JMPIF 8 L40)                ; NUMBERP
12    L12
12    (LOAD&PUSH 1)
13    (CALLS2 5)                          ; ATOM
15    (JMPIF1 L83)
18    (LOAD&CAR&PUSH 1)
20    (CALLS2 5)                          ; ATOM
22    (JMPIF1 L83)
24    (LOAD 1)
25    (CAR)
26    (CAR)
27    (JMPIFATOM L54)
29    (LOAD 1)
30    (CAR)
31    (CAR)
32    (CAR)
33    (JMPIFATOM L58)
35    (NIL)
36    L36
36    (PUSH)
37    (LOAD&PUSH 0)
38    (JMP L74)
40    L40
40    (LOAD&PUSH 1)
41    (CONST&PUSH 0)                      ; DATA
42    (LOAD&PUSH 4)
43    (LOAD&PUSH 4)
44    (CONST&PUSH 0)                      ; DATA
45    (CALL2&PUSH 1)                      ; ZL-GET
47    (CALL2&PUSH 2)                      ; DELQ
49    (CALL 3 3)                          ; A-ATOM
52    (SKIP&RET 3)
54    L54
54    (LOAD 1)
55    (CDR)
56    (JMP L36)
58    L58
58    (LOAD 1)
59    (CAR)
60    (CDR)
61    (JMP L36)
63    L63
63    (LOAD&CAR&PUSH 0)
65    (LOAD&PUSH 5)
66    (LOAD&PUSH 1)
67    (JSR L0)
70    (SKIP 1)
72    (LOAD&CDR&STORE 0)
74    L74
74    (LOAD&PUSH 0)
75    (CALLS1&JMPIFNOT 146 L63)           ; ENDP
78    (SKIP 1)
80    (POP)
81    (SKIP&RET 3)
83    L83
83    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN KILLFRAME (CL) ...)-105|
(CONST 0) = KILLFRAME
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KILLFRAME>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KILLFRAME
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KILLFRAME
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KILLFRAME>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KILLFRAME
8     (SKIP&RET 1)


Disassembly of function KILLFRAME
(CONST 0) = REMOV
(CONST 1) = DATA
(CONST 2) = ZL-GET
(CONST 3) = +LABS
(CONST 4) = ZL-REMPROP
(CONST 5) = -LABS
(CONST 6) = OBJ
(CONST 7) = VAR
(CONST 8) = FACT
(CONST 9) = WN
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
24 byte-code instructions:
0     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; REMOV
2     (LOAD&PUSH 2)
3     (CONST&PUSH 1)                      ; DATA
4     (CALL2&PUSH 2)                      ; ZL-GET
6     (CALLSR 0 24)                       ; MAPC
9     (LOAD&PUSH 1)
10    (CONST&PUSH 3)                      ; +LABS
11    (CALL2 4)                           ; ZL-REMPROP
13    (LOAD&PUSH 1)
14    (CONST&PUSH 5)                      ; -LABS
15    (CALL2 4)                           ; ZL-REMPROP
17    (LOAD&PUSH 1)
18    (CONST&PUSH 6)                      ; OBJ
19    (CALL2 4)                           ; ZL-REMPROP
21    (LOAD&PUSH 1)
22    (CONST&PUSH 7)                      ; VAR
23    (CALL2 4)                           ; ZL-REMPROP
25    (LOAD&PUSH 1)
26    (CONST&PUSH 8)                      ; FACT
27    (CALL2 4)                           ; ZL-REMPROP
29    (LOAD&PUSH 1)
30    (CONST&PUSH 9)                      ; WN
31    (CALL2 4)                           ; ZL-REMPROP
33    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN ACTIVATE N ...)-106|
(CONST 0) = ACTIVATE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ACTIVATE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ACTIVATE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ACTIVATE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ACTIVATE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ACTIVATE
8     (SKIP&RET 1)


Disassembly of function ACTIVATE
(CONST 0) = N
(CONST 1) = 1
(CONST 2) = NARG1
(CONST 3) = CONTEXTS
(CONST 4) = MEMQ
(CONST 5) = CMARK
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (N CONTEXTS)
writes special variable : (CONTEXTS)
31 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 71)                         ; LENGTH
3     (BIND 0)                            ; N
5     (CONST&PUSH 1)                      ; 1
6     (JMP L34)
8     L8
8     (LOAD&PUSH 0)
9     (LOAD&PUSH 6)
10    (CALL2&PUSH 2)                      ; NARG1
12    (GETVALUE&PUSH 3)                   ; CONTEXTS
14    (CALL2&JMPIF 4 L32)                 ; MEMQ
17    (LOAD&PUSH 0)
18    (LOAD&PUSH 6)
19    (CALL2&PUSH 2)                      ; NARG1
21    (GETVALUE 3)                        ; CONTEXTS
23    (CONS)
24    (SETVALUE 3)                        ; CONTEXTS
26    (LOAD&PUSH 0)
27    (LOAD&PUSH 6)
28    (CALL2&PUSH 2)                      ; NARG1
30    (CALL1 5)                           ; CMARK
32    L32
32    (LOAD&INC&STORE 0)
34    L34
34    (LOAD&PUSH 0)
35    (GETVALUE&PUSH 0)                   ; N
37    (CALLSR&JMPIFNOT 1 48 L8)           ; >
41    (NIL)
42    (SKIP 1)
44    (UNBIND1)
45    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN DEACTIVATE N ...)-107|
(CONST 0) = DEACTIVATE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DEACTIVATE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DEACTIVATE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DEACTIVATE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DEACTIVATE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DEACTIVATE
8     (SKIP&RET 1)


Disassembly of function DEACTIVATE
(CONST 0) = N
(CONST 1) = 1
(CONST 2) = NARG1
(CONST 3) = CONTEXTS
(CONST 4) = MEMQ
(CONST 5) = CUNMRK
(CONST 6) = DELQ
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (N CONTEXTS)
writes special variable : (CONTEXTS)
31 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 71)                         ; LENGTH
3     (BIND 0)                            ; N
5     (CONST&PUSH 1)                      ; 1
6     (JMP L35)
8     L8
8     (LOAD&PUSH 0)
9     (LOAD&PUSH 6)
10    (CALL2&PUSH 2)                      ; NARG1
12    (GETVALUE&PUSH 3)                   ; CONTEXTS
14    (CALL2&JMPIFNOT 4 L33)              ; MEMQ
17    (LOAD&PUSH 0)
18    (LOAD&PUSH 6)
19    (CALL2&PUSH 2)                      ; NARG1
21    (CALL1 5)                           ; CUNMRK
23    (LOAD&PUSH 0)
24    (LOAD&PUSH 6)
25    (CALL2&PUSH 2)                      ; NARG1
27    (GETVALUE&PUSH 3)                   ; CONTEXTS
29    (CALL2 6)                           ; DELQ
31    (SETVALUE 3)                        ; CONTEXTS
33    L33
33    (LOAD&INC&STORE 0)
35    L35
35    (LOAD&PUSH 0)
36    (GETVALUE&PUSH 0)                   ; N
38    (CALLSR&JMPIFNOT 1 48 L8)           ; >
42    (NIL)
43    (SKIP 1)
45    (UNBIND1)
46    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN CONTEXT N ...)-108|
(CONST 0) = CONTEXT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CONTEXT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONTEXT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CONTEXT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CONTEXT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CONTEXT
8     (SKIP&RET 1)


Disassembly of function CONTEXT
(CONST 0) = N
(CONST 1) = LISTIFY1
(CONST 2) = NEWCON
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variable: (N)
9 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 71)                         ; LENGTH
3     (BIND 0)                            ; N
5     (GETVALUE&PUSH 0)                   ; N
7     (LOAD&PUSH 5)
8     (CALL2&PUSH 1)                      ; LISTIFY1
10    (CALL1 2)                           ; NEWCON
12    (UNBIND1)
13    (SKIP&RET 2)


Disassembly of function #:|(DEFUN NEWCON (C) ...)-109|
(CONST 0) = NEWCON
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NEWCON>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NEWCON
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NEWCON
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NEWCON>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NEWCON
8     (SKIP&RET 1)


Disassembly of function NEWCON
(CONST 0) = CONINDEX
(CONST 1) = CONNUMBER
(CONST 2) = GCCON
(CONST 3) = *GC
(CONST 4) = SUBC
(CONST 5) = CONUNMRK
(CONST 6) = CONMARK
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CONMARK CONUNMRK CONNUMBER CONINDEX)
writes special variable : (CONINDEX)
40 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; CONINDEX
2     (GETVALUE&PUSH 1)                   ; CONNUMBER
4     (CALLSR&JMPIF 1 48 L53)             ; >
8     (LOAD&JMPIFNOT 1 L58)
11    L11
11    (CONST&PUSH 3)                      ; *GC
12    (NIL&PUSH)
13    (CONST&PUSH 4)                      ; SUBC
14    (LOAD&PUSH 4)
15    (LIST 4)
17    L17
17    (STORE 1)
18    (GETVALUE&PUSH 5)                   ; CONUNMRK
20    (GETVALUE&PUSH 0)                   ; CONINDEX
22    (LOAD&PUSH 1)
23    (LOAD&PUSH 1)
24    (LOAD&PUSH 5)
25    (CALLSR 1 2)                        ; SYSTEM::STORE
28    (SKIP 2)
30    (GETVALUE&PUSH 6)                   ; CONMARK
32    (GETVALUE&PUSH 0)                   ; CONINDEX
34    (LOAD&CDR&PUSH 3)
36    (LOAD&PUSH 2)
37    (LOAD&PUSH 2)
38    (LOAD&PUSH 2)
39    (CALLSR 1 2)                        ; SYSTEM::STORE
42    (SKIP 3)
44    (GETVALUE&PUSH 0)                   ; CONINDEX
46    (CALLS2 150)                        ; 1+
48    (SETVALUE 0)                        ; CONINDEX
50    (LOAD 1)
51    (SKIP&RET 2)
53    L53
53    (CALL0 2)                           ; GCCON
55    (LOAD&JMPIF 1 L11)
58    L58
58    (CONST&PUSH 3)                      ; *GC
59    (NIL&PUSH)
60    (LIST 2)
62    (JMP L17)


Disassembly of function #:|(DEFUN CONTEXT-UNWINDER NIL ...)-110|
(CONST 0) = CONTEXT-UNWINDER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CONTEXT-UNWINDER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONTEXT-UNWINDER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CONTEXT-UNWINDER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CONTEXT-UNWINDER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CONTEXT-UNWINDER
8     (SKIP&RET 1)


Disassembly of function CONTEXT-UNWINDER
(CONST 0) = CONMARK
(CONST 1) = CONINDEX
(CONST 2) = KILLC
(CONST 3) = CONUNMRK
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CONUNMRK CONINDEX CONMARK)
writes special variable : (CONINDEX)
14 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; CONMARK
2     (GETVALUE&PUSH 1)                   ; CONINDEX
4     (CALLSR&PUSH 1 1)                   ; AREF
7     (CALL1 2)                           ; KILLC
9     (GETVALUE&PUSH 1)                   ; CONINDEX
11    (CALLS2 151)                        ; 1-
13    (SETVALUE 1)                        ; CONINDEX
15    (GETVALUE&PUSH 3)                   ; CONUNMRK
17    (GETVALUE&PUSH 1)                   ; CONINDEX
19    (LOAD&PUSH 1)
20    (LOAD&PUSH 1)
21    (NIL&PUSH)
22    (CALLSR 1 2)                        ; SYSTEM::STORE
25    (SKIP&RET 3)


Disassembly of function #:|(DEFUN GCCON NIL ...)-111|
(CONST 0) = GCCON
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GCCON>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GCCON
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GCCON
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GCCON>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GCCON
8     (SKIP&RET 1)


Disassembly of function GCCON
(CONST 0) = GCCON1
(CONST 1) = CONINDEX
(CONST 2) = CONNUMBER
(CONST 3) = "~%Too many contexts."
(CONST 4) = MERROR
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CONNUMBER CONINDEX)
15 byte-code instructions:
0     (CALL0 0)                           ; GCCON1
2     (GETVALUE&PUSH 1)                   ; CONINDEX
4     (GETVALUE&PUSH 2)                   ; CONNUMBER
6     (CALLSR 1 48)                       ; >
9     (JMPIFNOT1 L27)
11    (CALL0 0)                           ; GCCON1
13    (GETVALUE&PUSH 1)                   ; CONINDEX
15    (GETVALUE&PUSH 2)                   ; CONNUMBER
17    (CALLSR 1 48)                       ; >
20    (JMPIFNOT1 L27)
22    (CONST&PUSH 3)                      ; "~%Too many contexts."
23    (CALL1 4)                           ; MERROR
25    (SKIP&RET 1)
27    L27
27    (SKIP&RET 1)


Disassembly of function #:|(DEFUN GCCON1 NIL ...)-112|
(CONST 0) = GCCON1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GCCON1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GCCON1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GCCON1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GCCON1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GCCON1
8     (SKIP&RET 1)


Disassembly of function GCCON1
(CONST 0) = 0
(CONST 1) = CONINDEX
(CONST 2) = CONNUMBER
(CONST 3) = CONMARK
(CONST 4) = CONUNMRK
(CONST 5) = KILLC
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CONNUMBER CONINDEX CONUNMRK CONMARK)
writes special variable : (CONINDEX)
50 byte-code instructions:
0     (CONST 0)                           ; 0
1     (SETVALUE 1)                        ; CONINDEX
3     (PUSH)
4     (JMP L76)
7     L7
7     (GETVALUE&PUSH 3)                   ; CONMARK
9     (LOAD&PUSH 1)
10    (CALLSR&PUSH 1 1)                   ; AREF
13    (CALL1 5)                           ; KILLC
15    (JMP L74)
17    L17
17    (GETVALUE&PUSH 3)                   ; CONMARK
19    (LOAD&PUSH 1)
20    (CALLSR&PUSH 1 1)                   ; AREF
23    (GETVALUE&PUSH 4)                   ; CONUNMRK
25    (LOAD&PUSH 2)
26    (CALLSR 1 1)                        ; AREF
29    (CDR)
30    (JMPIFNOTEQ L7)
32    (GETVALUE&PUSH 4)                   ; CONUNMRK
34    (GETVALUE&PUSH 1)                   ; CONINDEX
36    (GETVALUE&PUSH 4)                   ; CONUNMRK
38    (LOAD&PUSH 3)
39    (CALLSR&PUSH 1 1)                   ; AREF
42    (LOAD&PUSH 2)
43    (LOAD&PUSH 2)
44    (LOAD&PUSH 2)
45    (CALLSR 1 2)                        ; SYSTEM::STORE
48    (SKIP 3)
50    (GETVALUE&PUSH 3)                   ; CONMARK
52    (GETVALUE&PUSH 1)                   ; CONINDEX
54    (GETVALUE&PUSH 3)                   ; CONMARK
56    (LOAD&PUSH 3)
57    (CALLSR&PUSH 1 1)                   ; AREF
60    (LOAD&PUSH 2)
61    (LOAD&PUSH 2)
62    (LOAD&PUSH 2)
63    (CALLSR 1 2)                        ; SYSTEM::STORE
66    (SKIP 3)
68    (GETVALUE&PUSH 1)                   ; CONINDEX
70    (CALLS2 150)                        ; 1+
72    (SETVALUE 1)                        ; CONINDEX
74    L74
74    (LOAD&INC&STORE 0)
76    L76
76    (LOAD&PUSH 0)
77    (GETVALUE&PUSH 2)                   ; CONNUMBER
79    (CALLSR&JMPIFNOT 1 48 L17)          ; >
84    (NIL)
85    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN CNTXT (DAT CON) ...)-113|
(CONST 0) = CNTXT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CNTXT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CNTXT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CNTXT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CNTXT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CNTXT
8     (SKIP&RET 1)


Disassembly of function CNTXT
(CONST 0) = DATA
(CONST 1) = ZL-GET
(CONST 2) = PUTPROP
(CONST 3) = GLOBAL
(CONST 4) = CON
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
21 byte-code instructions:
0     (LOAD 1)
1     (JMPIFATOM L5)
3     (LOAD&CDR&STORE 1)
5     L5
5     (LOAD&PUSH 1)
6     (LOAD&PUSH 3)
7     (LOAD&PUSH 3)
8     (CONST&PUSH 0)                      ; DATA
9     (CALL2 1)                           ; ZL-GET
11    (CONS&PUSH)
12    (CONST&PUSH 0)                      ; DATA
13    (CALL 3 2)                          ; PUTPROP
16    (LOAD&PUSH 1)
17    (JMPIFEQTO 3 L26)                   ; GLOBAL
20    (LOAD&PUSH 2)
21    (LOAD&PUSH 2)
22    (CONST&PUSH 4)                      ; CON
23    (CALL 3 2)                          ; PUTPROP
26    L26
26    (LOAD 2)
27    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN KCNTXT (FACT CON) ...)-114|
(CONST 0) = KCNTXT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KCNTXT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KCNTXT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KCNTXT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KCNTXT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KCNTXT
8     (SKIP&RET 1)


Disassembly of function KCNTXT
(CONST 0) = DATA
(CONST 1) = ZL-GET
(CONST 2) = FDEL
(CONST 3) = PUTPROP
(CONST 4) = GLOBAL
(CONST 5) = CON
(CONST 6) = ZL-REMPROP
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
20 byte-code instructions:
0     (LOAD 1)
1     (JMPIFATOM L5)
3     (LOAD&CDR&STORE 1)
5     L5
5     (LOAD&PUSH 1)
6     (LOAD&PUSH 3)
7     (LOAD&PUSH 3)
8     (CONST&PUSH 0)                      ; DATA
9     (CALL2&PUSH 1)                      ; ZL-GET
11    (CALL2&PUSH 2)                      ; FDEL
13    (CONST&PUSH 0)                      ; DATA
14    (CALL 3 3)                          ; PUTPROP
17    (LOAD&PUSH 1)
18    (JMPIFEQTO 4 L25)                   ; GLOBAL
21    (LOAD&PUSH 2)
22    (CONST&PUSH 5)                      ; CON
23    (CALL2 6)                           ; ZL-REMPROP
25    L25
25    (LOAD 2)
26    (SKIP&RET 3)


Disassembly of function #:|(DEFUN CNTP (F) ...)-115|
(CONST 0) = CNTP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CNTP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CNTP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CNTP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CNTP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CNTP
8     (SKIP&RET 1)


Disassembly of function CNTP
(CONST 0) = F
(CONST 1) = CON
(CONST 2) = ZL-GET
(CONST 3) = CMARK
(CONST 4) = 0
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (F)
writes special variable : (F)
22 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; F
3     (GETVALUE&PUSH 0)                   ; F
5     (CONST&PUSH 1)                      ; CON
6     (CALL2 2)                           ; ZL-GET
8     (SETVALUE 0)                        ; F
10    (NOT)
11    (JMPIF1 L23)
13    (GETVALUE&PUSH 0)                   ; F
15    (CONST&PUSH 3)                      ; CMARK
16    (CALL2 2)                           ; ZL-GET
18    (SETVALUE 0)                        ; F
20    (JMPIF L26)
22    (NIL)
23    L23
23    (UNBIND1)
24    (SKIP&RET 2)
26    L26
26    (PUSH)
27    (CONST&PUSH 4)                      ; 0
28    (CALLSR 1 48)                       ; >
31    (JMP L23)


Disassembly of function #:|(DEFMFUN CONTEXTMARK (&AUX) ...)-116|
(CONST 0) = CONTEXTMARK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CONTEXTMARK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONTEXTMARK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CONTEXTMARK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CONTEXTMARK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CONTEXTMARK
8     (SKIP&RET 1)


Disassembly of function CONTEXTMARK
(CONST 0) = CONTEXT
(CONST 1) = CURRENT
(CONST 2) = CUNMRK
(CONST 3) = CMARK
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CURRENT CONTEXT)
writes special variable : (CURRENT)
14 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; CONTEXT
2     (GETVALUE&PUSH 1)                   ; CURRENT
4     (LOAD 1)
5     (JMPIFEQ L19)
7     (GETVALUE&PUSH 1)                   ; CURRENT
9     (CALL1 2)                           ; CUNMRK
11    (LOAD 0)
12    (SETVALUE 1)                        ; CURRENT
14    (PUSH)
15    (CALL1 3)                           ; CMARK
17    (SKIP&RET 2)
19    L19
19    (NIL)
20    (SKIP&RET 2)


Disassembly of function #:|(DEFUN CMARK (CON) ...)-117|
(CONST 0) = CMARK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CMARK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CMARK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CMARK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CMARK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CMARK
8     (SKIP&RET 1)


Disassembly of function CMARK
(CONST 0) = CMARK
(CONST 1) = ZL-GET
(CONST 2) = 1
(CONST 3) = PUTPROP
(CONST 4) = SUBC
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
24 byte-code instructions:
0     (LOAD 1)
1     (JMPIFATOM L5)
3     (LOAD&CDR&STORE 1)
5     L5
5     (LOAD&PUSH 1)
6     (CONST&PUSH 0)                      ; CMARK
7     (CALL2&PUSH 1)                      ; ZL-GET
9     (LOAD&PUSH 2)
10    (LOAD&JMPIF 1 L30)
13    (CONST 2)                           ; 1
14    L14
14    (PUSH)
15    (CONST&PUSH 0)                      ; CMARK
16    (CALL 3 3)                          ; PUTPROP
19    (CONST&SYMBOL-FUNCTION&PUSH 0)      ; CMARK
21    (LOAD&PUSH 3)
22    (CONST&PUSH 4)                      ; SUBC
23    (CALL2&PUSH 1)                      ; ZL-GET
25    (CALLSR 0 24)                       ; MAPC
28    (SKIP&RET 3)
30    L30
30    (PUSH)
31    (CALLS2 150)                        ; 1+
33    (JMP L14)


Disassembly of function #:|(DEFUN CUNMRK (CON) ...)-118|
(CONST 0) = CUNMRK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CUNMRK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CUNMRK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CUNMRK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CUNMRK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CUNMRK
8     (SKIP&RET 1)


Disassembly of function CUNMRK
(CONST 0) = CMARK
(CONST 1) = ZL-GET
(CONST 2) = PUTPROP
(CONST 3) = CUNMRK
(CONST 4) = SUBC
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
19 byte-code instructions:
0     (LOAD 1)
1     (JMPIFATOM L5)
3     (LOAD&CDR&STORE 1)
5     L5
5     (LOAD&PUSH 1)
6     (CONST&PUSH 0)                      ; CMARK
7     (CALL2&PUSH 1)                      ; ZL-GET
9     (LOAD&JMPIFNOT 0 L19)
12    (LOAD&PUSH 2)
13    (LOAD&DEC&PUSH 1)
15    (CONST&PUSH 0)                      ; CMARK
16    (CALL 3 2)                          ; PUTPROP
19    L19
19    (CONST&SYMBOL-FUNCTION&PUSH 3)      ; CUNMRK
21    (LOAD&PUSH 3)
22    (CONST&PUSH 4)                      ; SUBC
23    (CALL2&PUSH 1)                      ; ZL-GET
25    (CALLSR 0 24)                       ; MAPC
28    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN KILLC (CON) ...)-119|
(CONST 0) = KILLC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KILLC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; KILLC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KILLC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KILLC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; KILLC
8     (SKIP&RET 1)


Disassembly of function KILLC
(CONST 0) = CONTEXTMARK
(CONST 1) = REMOV
(CONST 2) = DATA
(CONST 3) = ZL-GET
(CONST 4) = ZL-REMPROP
(CONST 5) = CMARK
(CONST 6) = SUBC
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
19 byte-code instructions:
0     (CALL0 0)                           ; CONTEXTMARK
2     (LOAD&JMPIFNOT 1 L26)
5     (CONST&SYMBOL-FUNCTION&PUSH 1)      ; REMOV
7     (LOAD&PUSH 2)
8     (CONST&PUSH 2)                      ; DATA
9     (CALL2&PUSH 3)                      ; ZL-GET
11    (CALLSR 0 24)                       ; MAPC
14    (LOAD&PUSH 1)
15    (CONST&PUSH 2)                      ; DATA
16    (CALL2 4)                           ; ZL-REMPROP
18    (LOAD&PUSH 1)
19    (CONST&PUSH 5)                      ; CMARK
20    (CALL2 4)                           ; ZL-REMPROP
22    (LOAD&PUSH 1)
23    (CONST&PUSH 6)                      ; SUBC
24    (CALL2 4)                           ; ZL-REMPROP
26    L26
26    (T)
27    (SKIP&RET 2)


Disassembly of function #:|(DEFUN PROPG NIL ...)-120|
(CONST 0) = PROPG
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE PROPG>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; PROPG
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; PROPG
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE PROPG>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; PROPG
8     (SKIP&RET 1)


Disassembly of function PROPG
(CONST 0) = X
(CONST 1) = DQ+
(CONST 2) = +LABS
(CONST 3) = ZL-GET
(CONST 4) = 0
(CONST 5) = -LABS
(CONST 6) = (0)
(CONST 7) = MARK+
(CONST 8) = DQ-
(CONST 9) = (0)
(CONST 10) = MARK-
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
writes special variable : (X)
59 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; X
3     (NIL&PUSH)
4     (JMP L72)
7     L7
7     (T)
8     (JMP L86)
11    L11
11    (PUSH)
12    (CONST&PUSH 2)                      ; +LABS
13    (CALL2 3)                           ; ZL-GET
15    (STORE 0)
16    (CONST&PUSH 4)                      ; 0
17    (LOAD&CAR&PUSH 1)
19    (GETVALUE&PUSH 0)                   ; X
21    (CONST&PUSH 5)                      ; -LABS
22    (CALL2&JMPIF 3 L26)                 ; ZL-GET
25    (CONST 6)                           ; (0)
26    L26
26    (CAR&PUSH)
27    (CALLSR&PUSH 2 61)                  ; LOGAND
30    (CALLSR&JMPIFNOT 1 45 L7)           ; =
34    (GETVALUE&PUSH 0)                   ; X
36    (LOAD&PUSH 1)
37    (CALL2 7)                           ; MARK+
39    (JMP L72)
41    L41
41    (T)
42    (JMP L86)
44    L44
44    (PUSH)
45    (CONST&PUSH 5)                      ; -LABS
46    (CALL2 3)                           ; ZL-GET
48    (STORE 0)
49    (CONST&PUSH 4)                      ; 0
50    (LOAD&CAR&PUSH 1)
52    (GETVALUE&PUSH 0)                   ; X
54    (CONST&PUSH 2)                      ; +LABS
55    (CALL2&JMPIF 3 L59)                 ; ZL-GET
58    (CONST 9)                           ; (0)
59    L59
59    (CAR&PUSH)
60    (CALLSR&PUSH 2 61)                  ; LOGAND
63    (CALLSR&JMPIFNOT 1 45 L41)          ; =
67    (GETVALUE&PUSH 0)                   ; X
69    (LOAD&PUSH 1)
70    (CALL2 10)                          ; MARK-
72    L72
72    (CALL0 1)                           ; DQ+
74    (SETVALUE 0)                        ; X
76    (JMPIF L11)
79    (CALL0 8)                           ; DQ-
81    (SETVALUE 0)                        ; X
83    (JMPIF L44)
85    (NIL)
86    L86
86    (SKIP 1)
88    (UNBIND1)
89    (SKIP&RET 1)


Disassembly of function #:|(DEFUN MARK+ (CL LAB &AUX) ...)-121|
(CONST 0) = MARK+
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARK+>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARK+
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARK+
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARK+>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARK+
8     (SKIP&RET 1)


Disassembly of function MARK+
(CONST 0) = DBTRACE
(CONST 1) = MARKS
(CONST 2) = "~%Marking ~A +"
(CONST 3) = MTELL
(CONST 4) = PRLAB
(CONST 5) = DATA
(CONST 6) = ZL-GET
(CONST 7) = MARK+0
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (MARKS DBTRACE)
writes special variable : (MARKS)
30 byte-code instructions:
0     (GETVALUE 0)                        ; DBTRACE
2     (JMPIFNOT L17)
4     (GETVALUE&PUSH 1)                   ; MARKS
6     (CALLS2 150)                        ; 1+
8     (SETVALUE 1)                        ; MARKS
10    (CONST&PUSH 2)                      ; "~%Marking ~A +"
11    (LOAD&PUSH 3)
12    (CALL2 3)                           ; MTELL
14    (LOAD&PUSH 1)
15    (CALL1 4)                           ; PRLAB
17    L17
17    (LOAD&PUSH 2)
18    (CONST&PUSH 5)                      ; DATA
19    (CALL2&PUSH 6)                      ; ZL-GET
21    (LOAD&PUSH 0)
22    (JMP L36)
24    L24
24    (LOAD&CAR&PUSH 0)
26    (LOAD&PUSH 5)
27    (LOAD&PUSH 5)
28    (LOAD&PUSH 2)
29    (CALL 3 7)                          ; MARK+0
32    (SKIP 1)
34    (LOAD&CDR&STORE 0)
36    L36
36    (LOAD&PUSH 0)
37    (CALLS1&JMPIFNOT 146 L24)           ; ENDP
40    (SKIP 1)
42    (POP)
43    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MARK+0 (CL LAB FACT) ...)-122|
(CONST 0) = MARK+0
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARK+0>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARK+0
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARK+0
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARK+0>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARK+0
8     (SKIP&RET 1)


Disassembly of function MARK+0
(CONST 0) = DBCHECK
(CONST 1) = "~%Checking ~A from ~A+"
(CONST 2) = MTELL
(CONST 3) = PRLAB
(CONST 4) = ONPU
(CONST 5) = CNTP
(CONST 6) = WN
(CONST 7) = ZL-GET
(CONST 8) = MARK+1
(CONST 9) = WORLD
(CONST 10) = ONP
(CONST 11) = OFFP
(CONST 12) = MARK+3
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (WORLD DBCHECK)
47 byte-code instructions:
0     (GETVALUE 0)                        ; DBCHECK
2     (JMPIFNOT L14)
4     (CONST&PUSH 1)                      ; "~%Checking ~A from ~A+"
5     (LOAD&CAR&PUSH 2)
7     (LOAD&PUSH 5)
8     (CALL 3 2)                          ; MTELL
11    (LOAD&PUSH 2)
12    (CALL1 3)                           ; PRLAB
14    L14
14    (LOAD&PUSH 2)
15    (LOAD&PUSH 2)
16    (CALL2 4)                           ; ONPU
18    (JMPIF1 L68)
20    (LOAD&PUSH 1)
21    (CALL1 5)                           ; CNTP
23    (NOT)
24    (JMPIF1 L68)
26    (LOAD&PUSH 1)
27    (CONST&PUSH 6)                      ; WN
28    (CALL2&JMPIFNOT 7 L40)              ; ZL-GET
31    (LOAD&PUSH 1)
32    (CONST&PUSH 6)                      ; WN
33    (CALL2&PUSH 7)                      ; ZL-GET
35    (GETVALUE&PUSH 9)                   ; WORLD
37    (CALL2&JMPIFNOT 10 L51)             ; ONP
40    L40
40    (LOAD&PUSH 3)
41    (LOAD&PUSH 3)
42    (LOAD&PUSH 3)
43    (CALL 3 8)                          ; MARK+1
46    (SKIP&RET 4)
48    L48
48    (NIL)
49    (SKIP&RET 4)
51    L51
51    (LOAD&PUSH 1)
52    (CONST&PUSH 6)                      ; WN
53    (CALL2&PUSH 7)                      ; ZL-GET
55    (GETVALUE&PUSH 9)                   ; WORLD
57    (CALL2&JMPIF 11 L48)                ; OFFP
60    (LOAD&PUSH 3)
61    (LOAD&PUSH 3)
62    (LOAD&PUSH 3)
63    (CALL 3 12)                         ; MARK+3
66    (SKIP&RET 4)
68    L68
68    (SKIP&RET 4)


Disassembly of function #:|(DEFUN MARK+1 (CL LAB DAT) ...)-123|
(CONST 0) = MARK+1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARK+1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARK+1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARK+1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARK+1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARK+1
8     (SKIP&RET 1)


Disassembly of function MARK+1
(CONST 0) = KIND
(CONST 1) = MID
(CONST 2) = PAR
(CONST 3) = CANCEL
(CONST 4) = MID-
(CONST 5) = +LABS
(CONST 6) = ZL-GET
(CONST 7) = DBV
(CONST 8) = END
(CONST 9) = -LABS
(CONST 10) = LPR
(CONST 11) = END-
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
114 byte-code instructions:
0     (LOAD 1)
1     (CAR)
2     (CAR&PUSH)
3     (JMPIFEQTO 0 L23)                   ; KIND
6     (LOAD 1)
7     (CAR)
8     (CAR&PUSH)
9     (JMPIFEQTO 2 L42)                   ; PAR
12    (LOAD 1)
13    (CAR)
14    (CDR)
15    (CAR&PUSH)
16    (LOAD 4)
17    (JMPIFEQ L90)
20    (NIL)
21    (SKIP&RET 4)
23    L23
23    (LOAD 1)
24    (CAR)
25    (CDR)
26    (CAR&PUSH)
27    (LOAD 4)
28    (EQ)
29    (JMPIFNOT1 L141)
32    (LOAD 1)
33    (CAR)
34    (CDR)
35    (CDR)
36    (CAR&PUSH)
37    (LOAD&PUSH 3)
38    (CALL2 1)                           ; MID
40    (SKIP&RET 4)
42    L42
42    (LOAD 1)
43    (CAR)
44    (CDR)
45    (CDR)
46    (CAR&PUSH)
47    (LOAD 4)
48    (EQ)
49    (NOT)
50    (JMPIFNOT1 L141)
53    (LOAD&PUSH 2)
54    (LOAD&PUSH 2)
55    (CALL2 3)                           ; CANCEL
57    (LOAD 1)
58    (CAR)
59    (CDR)
60    (CDR)
61    (CAR&PUSH)
62    (LOAD&PUSH 3)
63    (CALL2 1)                           ; MID
65    (LOAD 1)
66    (CAR)
67    (CDR)
68    (CAR&PUSH)
69    (LOAD&JMPIFNOT 0 L87)
72    L72
72    (LOAD&CAR&PUSH 0)
74    (LOAD 5)
75    (JMPIFEQ L82)
77    (LOAD&CAR&PUSH 0)
79    (LOAD&PUSH 4)
80    (CALL2 4)                           ; MID-
82    L82
82    (LOAD&CDR&STORE 0)
84    (LOAD&JMPIF 0 L72)
87    L87
87    (NIL)
88    (SKIP&RET 5)
90    L90
90    (LOAD 1)
91    (CAR)
92    (CAR&PUSH)
93    (CONST&PUSH 5)                      ; +LABS
94    (CALL2&JMPIFNOT 6 L113)             ; ZL-GET
97    (LOAD 1)
98    (CAR)
99    (CDR)
100   (CDR)
101   (CAR&PUSH)
102   (LOAD&PUSH 3)
103   (LOAD 3)
104   (CAR)
105   (CAR&PUSH)
106   (CONST&PUSH 5)                      ; +LABS
107   (CALL2&PUSH 6)                      ; ZL-GET
109   (CALL2&PUSH 7)                      ; DBV
111   (CALL2 8)                           ; END
113   L113
113   (LOAD 1)
114   (CAR)
115   (CDR)
116   (CDR)
117   (CAR&PUSH)
118   (CONST&PUSH 9)                      ; -LABS
119   (CALL2 6)                           ; ZL-GET
121   (JMPIFNOT1 L141)
123   (LOAD 1)
124   (CAR)
125   (CAR&PUSH)
126   (LOAD&PUSH 3)
127   (LOAD 3)
128   (CAR)
129   (CDR)
130   (CDR)
131   (CAR&PUSH)
132   (CONST&PUSH 9)                      ; -LABS
133   (CALL2&PUSH 6)                      ; ZL-GET
135   (CALL2&PUSH 10)                     ; LPR
137   (CALL2 11)                          ; END-
139   (SKIP&RET 4)
141   L141
141   (SKIP&RET 4)


Disassembly of function #:|(DEFUN MARK+3 (CL LAB DAT) ...)-124|
(CONST 0) = MARK+3
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARK+3>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARK+3
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARK+3
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARK+3>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARK+3
8     (SKIP&RET 1)


Disassembly of function MARK+3
(CONST 0) = 0
(CONST 1) = +LABS
(CONST 2) = ZL-GET
(CONST 3) = (0)
(CONST 4) = -LABS
(CONST 5) = (0)
(CONST 6) = DBV
(CONST 7) = WN
(CONST 8) = WORLD
(CONST 9) = BEG-
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (WORLD)
41 byte-code instructions:
0     (CONST&PUSH 0)                      ; 0
1     (LOAD 2)
2     (CAR)
3     (CDR)
4     (CDR)
5     (CAR&PUSH)
6     (CONST&PUSH 1)                      ; +LABS
7     (CALL2&JMPIF 2 L11)                 ; ZL-GET
10    (CONST 3)                           ; (0)
11    L11
11    (CAR&PUSH)
12    (LOAD 3)
13    (CAR)
14    (CDR)
15    (CAR&PUSH)
16    (CONST&PUSH 1)                      ; +LABS
17    (CALL2&JMPIF 2 L21)                 ; ZL-GET
20    (CONST 3)                           ; (0)
21    L21
21    (PUSH)
22    (LOAD 4)
23    (CAR)
24    (CAR&PUSH)
25    (CONST&PUSH 4)                      ; -LABS
26    (CALL2&JMPIF 2 L30)                 ; ZL-GET
29    (CONST 5)                           ; (0)
30    L30
30    (PUSH)
31    (CALL2 6)                           ; DBV
33    (CAR&PUSH)
34    (CALLSR&PUSH 2 61)                  ; LOGAND
37    (CALLSR&JMPIFNOT 1 45 L44)          ; =
41    (NIL)
42    (SKIP&RET 4)
44    L44
44    (LOAD&PUSH 1)
45    (CONST&PUSH 7)                      ; WN
46    (CALL2&PUSH 2)                      ; ZL-GET
48    (GETVALUE&PUSH 8)                   ; WORLD
50    (CALL2 9)                           ; BEG-
52    (SKIP&RET 4)


Disassembly of function #:|(DEFUN MARK- (CL LAB &AUX) ...)-125|
(CONST 0) = MARK-
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARK->
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARK-
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARK-
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARK->
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARK-
8     (SKIP&RET 1)


Disassembly of function MARK-
(CONST 0) = DBTRACE
(CONST 1) = MARKS
(CONST 2) = "Marking ~A -"
(CONST 3) = MTELL
(CONST 4) = PRLAB
(CONST 5) = DATA
(CONST 6) = ZL-GET
(CONST 7) = MARK-0
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (MARKS DBTRACE)
writes special variable : (MARKS)
30 byte-code instructions:
0     (GETVALUE 0)                        ; DBTRACE
2     (JMPIFNOT L17)
4     (GETVALUE&PUSH 1)                   ; MARKS
6     (CALLS2 150)                        ; 1+
8     (SETVALUE 1)                        ; MARKS
10    (CONST&PUSH 2)                      ; "Marking ~A -"
11    (LOAD&PUSH 3)
12    (CALL2 3)                           ; MTELL
14    (LOAD&PUSH 1)
15    (CALL1 4)                           ; PRLAB
17    L17
17    (LOAD&PUSH 2)
18    (CONST&PUSH 5)                      ; DATA
19    (CALL2&PUSH 6)                      ; ZL-GET
21    (LOAD&PUSH 0)
22    (JMP L36)
24    L24
24    (LOAD&CAR&PUSH 0)
26    (LOAD&PUSH 5)
27    (LOAD&PUSH 5)
28    (LOAD&PUSH 2)
29    (CALL 3 7)                          ; MARK-0
32    (SKIP 1)
34    (LOAD&CDR&STORE 0)
36    L36
36    (LOAD&PUSH 0)
37    (CALLS1&JMPIFNOT 146 L24)           ; ENDP
40    (SKIP 1)
42    (POP)
43    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MARK-0 (CL LAB FACT) ...)-126|
(CONST 0) = MARK-0
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARK-0>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARK-0
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARK-0
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARK-0>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARK-0
8     (SKIP&RET 1)


Disassembly of function MARK-0
(CONST 0) = DBCHECK
(CONST 1) = "~%Checking ~A from ~A-"
(CONST 2) = MTELL
(CONST 3) = PRLAB
(CONST 4) = ONPU
(CONST 5) = CNTP
(CONST 6) = WN
(CONST 7) = ZL-GET
(CONST 8) = MARK-1
(CONST 9) = WORLD
(CONST 10) = ONP
(CONST 11) = OFFP
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (WORLD DBCHECK)
41 byte-code instructions:
0     (GETVALUE 0)                        ; DBCHECK
2     (JMPIFNOT L14)
4     (CONST&PUSH 1)                      ; "~%Checking ~A from ~A-"
5     (LOAD&CAR&PUSH 2)
7     (LOAD&PUSH 5)
8     (CALL 3 2)                          ; MTELL
11    (LOAD&PUSH 2)
12    (CALL1 3)                           ; PRLAB
14    L14
14    (LOAD&PUSH 2)
15    (LOAD&PUSH 2)
16    (CALL2 4)                           ; ONPU
18    (JMPIF1 L59)
20    (LOAD&PUSH 1)
21    (CALL1 5)                           ; CNTP
23    (NOT)
24    (JMPIF1 L59)
26    (LOAD&PUSH 1)
27    (CONST&PUSH 6)                      ; WN
28    (CALL2&JMPIFNOT 7 L40)              ; ZL-GET
31    (LOAD&PUSH 1)
32    (CONST&PUSH 6)                      ; WN
33    (CALL2&PUSH 7)                      ; ZL-GET
35    (GETVALUE&PUSH 9)                   ; WORLD
37    (CALL2&JMPIFNOT 10 L48)             ; ONP
40    L40
40    (LOAD&PUSH 3)
41    (LOAD&PUSH 3)
42    (LOAD&PUSH 3)
43    (CALL 3 8)                          ; MARK-1
46    (SKIP&RET 4)
48    L48
48    (LOAD&PUSH 1)
49    (CONST&PUSH 6)                      ; WN
50    (CALL2&PUSH 7)                      ; ZL-GET
52    (GETVALUE&PUSH 9)                   ; WORLD
54    (CALL2 11)                          ; OFFP
56    (NIL)
57    (SKIP&RET 4)
59    L59
59    (SKIP&RET 4)


Disassembly of function #:|(DEFUN MARK-1 (CL LAB DAT ...) ...)-127|
(CONST 0) = MARK-1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MARK-1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MARK-1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MARK-1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MARK-1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MARK-1
8     (SKIP&RET 1)


Disassembly of function MARK-1
(CONST 0) = KIND
(CONST 1) = MID-
(CONST 2) = PAR
(CONST 3) = CANCEL
(CONST 4) = -LABS
(CONST 5) = ZL-GET
(CONST 6) = (0)
(CONST 7) = +LABS
(CONST 8) = DBA
(CONST 9) = END-
(CONST 10) = LPR
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
132 byte-code instructions:
0     (LOAD 1)
1     (CAR)
2     (CAR&PUSH)
3     (JMPIFEQTO 0 L69)                   ; KIND
6     (LOAD 1)
7     (CAR)
8     (CAR&PUSH)
9     (JMPIFNOTEQTO 2 L158)               ; PAR
13    (LOAD 1)
14    (CAR)
15    (CDR)
16    (CDR)
17    (CAR&PUSH)
18    (LOAD 4)
19    (JMPIFEQ L83)
21    (LOAD&CAR&STORE 2 2)
24    (LOAD 1)
25    (CAR)
26    (CDR)
27    (CAR&PUSH)
28    (LOAD&JMPIFNOT 0 L49)
31    L31
31    (LOAD&CAR&PUSH 0)
33    (CONST&PUSH 4)                      ; -LABS
34    (CALL2&JMPIF 5 L38)                 ; ZL-GET
37    (CONST 6)                           ; (0)
38    L38
38    (CAR&PUSH)
39    (LOAD&PUSH 4)
40    (CALLSR&STORE 2 61 3)               ; LOGAND
44    (LOAD&CDR&STORE 0)
46    (LOAD&JMPIF 0 L31)
49    L49
49    (SKIP 1)
51    (LOAD&PUSH 2)
52    (LIST 1)
54    (STORE 2)
55    (PUSH)
56    (LOAD&PUSH 2)
57    (CALL2 3)                           ; CANCEL
59    (LOAD 1)
60    (CAR)
61    (CDR)
62    L62
62    (CDR)
63    (CAR&PUSH)
64    (LOAD&PUSH 3)
65    (CALL2 1)                           ; MID-
67    (SKIP&RET 4)
69    L69
69    (LOAD 1)
70    (CAR)
71    (CDR)
72    (CAR&PUSH)
73    (LOAD 4)
74    (EQ)
75    (NOT)
76    (JMPIFNOT1 L169)
79    (LOAD 1)
80    (CAR)
81    (JMP L62)
83    L83
83    (LOAD&PUSH 2)
84    (LOAD&PUSH 2)
85    (CALL2 3)                           ; CANCEL
87    (LOAD 1)
88    (CAR)
89    (CDR)
90    (CAR&PUSH)
91    (LOAD&JMPIFNOT 0 L104)
94    L94
94    (LOAD&CAR&PUSH 0)
96    (LOAD&PUSH 4)
97    (CALL2 1)                           ; MID-
99    (LOAD&CDR&STORE 0)
101   (LOAD&JMPIF 0 L94)
104   L104
104   (NIL)
105   (SKIP 1)
107   (VALUES1)
108   (SKIP&RET 4)
110   L110
110   (LOAD 1)
111   (CAR)
112   (CAR&PUSH)
113   (CONST&PUSH 7)                      ; +LABS
114   (CALL2&JMPIFNOT 5 L132)             ; ZL-GET
117   (LOAD 1)
118   (CAR)
119   (CDR)
120   (CAR&PUSH)
121   (LOAD 2)
122   (CAR)
123   (CAR&PUSH)
124   (CONST&PUSH 7)                      ; +LABS
125   (CALL2&PUSH 5)                      ; ZL-GET
127   (LOAD&PUSH 4)
128   (CALL2&PUSH 8)                      ; DBA
130   (CALL2 9)                           ; END-
132   L132
132   (LOAD 1)
133   (CAR)
134   (CDR)
135   (CAR&PUSH)
136   (CONST&PUSH 7)                      ; +LABS
137   (CALL2 5)                           ; ZL-GET
139   (JMPIFNOT1 L169)
141   (LOAD 1)
142   (CAR)
143   (CAR&PUSH)
144   (LOAD 2)
145   (CAR)
146   (CDR)
147   (CAR&PUSH)
148   (CONST&PUSH 7)                      ; +LABS
149   (CALL2&PUSH 5)                      ; ZL-GET
151   (LOAD&PUSH 4)
152   (CALL2&PUSH 10)                     ; LPR
154   (CALL2 9)                           ; END-
156   (SKIP&RET 4)
158   L158
158   (LOAD 1)
159   (CAR)
160   (CDR)
161   (CDR)
162   (CAR&PUSH)
163   (LOAD 4)
164   (JMPIFEQ L110)
166   (NIL)
167   (SKIP&RET 4)
169   L169
169   (SKIP&RET 4)


Disassembly of function #:|(DEFUN UNI (P1 P2 AL) ...)-128|
(CONST 0) = UNI
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNI>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNI
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNI
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNI>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNI
8     (SKIP&RET 1)


Disassembly of function UNI
(CONST 0) = DBVARP
(CONST 1) = DBUNIVAR
(CONST 2) = NODEP
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
49 byte-code instructions:
0     L0
0     (LOAD&PUSH 3)
1     (CALL1&JMPIF 0 L21)                 ; DBVARP
4     (LOAD&PUSH 3)
5     (CALL1&JMPIF 2 L25)                 ; NODEP
8     (LOAD&PUSH 2)
9     (CALL1&JMPIFNOT 0 L50)              ; DBVARP
12    L12
12    (LOAD&PUSH 2)
13    (LOAD 4)
14    L14
14    (PUSH)
15    (LOAD&PUSH 3)
16    (CALL 3 1)                          ; DBUNIVAR
19    (SKIP&RET 4)
21    L21
21    (LOAD&PUSH 3)
22    (LOAD 3)
23    (JMP L14)
25    L25
25    (LOAD&PUSH 2)
26    (CALL1&JMPIF 0 L12)                 ; DBVARP
29    (LOAD&PUSH 2)
30    (CALL1&JMPIFNOT 2 L64)              ; NODEP
33    (LOAD&PUSH 3)
34    (LOAD 3)
35    (EQ)
36    (JMPIFNOT1 L67)
38    (LOAD 1)
39    (SKIP&RET 4)
41    L41
41    (LOAD&CDR&PUSH 3)
43    (LOAD&CDR&PUSH 3)
45    (LOAD&PUSH 3)
46    (JMPTAIL 3 7 L0)
50    L50
50    (LOAD&PUSH 2)
51    (CALL1&JMPIF 2 L64)                 ; NODEP
54    (LOAD&CAR&PUSH 3)
56    (LOAD&CAR&PUSH 3)
58    (LOAD&PUSH 3)
59    (JSR L0)
61    (STORE 1)
62    (JMPIF L41)
64    L64
64    (NIL)
65    (SKIP&RET 4)
67    L67
67    (SKIP&RET 4)


Disassembly of function #:|(DEFUN DBUNIVAR (P V AL) ...)-129|
(CONST 0) = DBUNIVAR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE DBUNIVAR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; DBUNIVAR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; DBUNIVAR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE DBUNIVAR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; DBUNIVAR
8     (SKIP&RET 1)


Disassembly of function DBUNIVAR
(CONST 0) = P
(CONST 1) = V
(CONST 2) = ASSQ
(CONST 3) = UNI
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (V P)
24 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; P
3     (LOAD 5)
4     (BIND 1)                            ; V
6     (GETVALUE&PUSH 0)                   ; P
8     (LOAD&PUSH 8)
9     (CALL2&PUSH 2)                      ; ASSQ
11    (LOAD&JMPIFNOT 0 L28)
14    (LOAD&CDR&PUSH 0)
16    (GETVALUE&PUSH 1)                   ; V
18    (LOAD&PUSH 10)
19    (CALL 3 3)                          ; UNI
22    (SKIP 1)
24    L24
24    (UNBIND 2)
26    (SKIP&RET 4)
28    L28
28    (GETVALUE&PUSH 0)                   ; P
30    (GETVALUE 1)                        ; V
32    (CONS&PUSH)
33    (LOAD 9)
34    (CONS)
35    (SKIP 1)
37    (JMP L24)


Disassembly of function #:|(DECLARE-TOP (NOTYPE LAB))-130|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Wrote file binary-clisp/db.fas
Wrote file /cygdrive/e/temp/maxima/src/db.lis