Listing of compilation of file /cygdrive/e/temp/maxima/src/inmis.lisp
on 2002-12-17 13:34:30 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/inmis.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE INMIS)-2|
(CONST 0) = INMIS
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; INMIS
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL LISTOFVARS))-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LISTCONSTVARS NIL ...)-4-1|
(CONST 0) = $LISTCONSTVARS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $LISTCONSTVARS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $LISTCONSTVARS
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LISTCONSTVARS NIL ...)-4-2|
(CONST 0) = (SPECIAL $LISTCONSTVARS)
(CONST 1) = $LISTCONSTVARS
(CONST 2) = VARIABLE
(CONST 3) = 
"Causes LISTOFVARS to include %E, %PI, %I, and any variables declared
   constant in the list it returns if they appear in exp.  The default is
   to omit these."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $LISTCONSTVARS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $LISTCONSTVARS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $LISTCONSTVARS
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $LISTCONSTVARS
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "Causes LISTOFVARS to include %E, %PI, %I, and any variables declared
   constant in the list it returns if they appear in exp.  The default is
   to omit these."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $LISTCONSTVARS
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LISTDUMMYVARS T)-5-1|
(CONST 0) = $LISTDUMMYVARS
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $LISTDUMMYVARS
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $LISTDUMMYVARS
11    (LOAD&PUSH 1)
12    (T&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $LISTDUMMYVARS T)-5-2|
(CONST 0) = (SPECIAL $LISTDUMMYVARS)
(CONST 1) = $LISTDUMMYVARS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $LISTDUMMYVARS)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $LISTDUMMYVARS
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $LISTDUMMYVARS
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $LISTDUMMYVARS
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $POLYFACTOR NIL)-6-1|
(CONST 0) = $POLYFACTOR
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POLYFACTOR
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $POLYFACTOR
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $POLYFACTOR NIL)-6-2|
(CONST 0) = (SPECIAL $POLYFACTOR)
(CONST 1) = $POLYFACTOR
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $POLYFACTOR)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $POLYFACTOR
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $POLYFACTOR
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $POLYFACTOR
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $UNKNOWN (F) ...)-7|
(CONST 0) = $UNKNOWN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $UNKNOWN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $UNKNOWN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $UNKNOWN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $UNKNOWN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $UNKNOWN
8     (SKIP&RET 1)


Disassembly of function $UNKNOWN
(CONST 0) = F
(CONST 1) = UNKNOWN
(CONST 2) = SPECREPCHECK
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (F)
11 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; F
3     (CONST 1)                           ; UNKNOWN
4     (CATCH-OPEN L13)
6     (GETVALUE&PUSH 0)                   ; F
8     (CALL1&PUSH 2)                      ; SPECREPCHECK
10    (CALL1 1)                           ; UNKNOWN
12    (CATCH-CLOSE)
13    L13
13    (UNBIND1)
14    (SKIP&RET 2)


Disassembly of function #:|(DEFUN UNKNOWN (F) ...)-8|
(CONST 0) = UNKNOWN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNKNOWN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNKNOWN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNKNOWN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNKNOWN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNKNOWN
8     (SKIP&RET 1)


Disassembly of function UNKNOWN
(CONST 0) = F
(CONST 1) = MAPATOM
(CONST 2) = MQAPPLY
(CONST 3) = SPECSIMP
(CONST 4) = OLDGET
(CONST 5) = UNKNOWN
(CONST 6) = OPERATORS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (F)
40 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; F
3     (GETVALUE&PUSH 0)                   ; F
5     (CALL1 1)                           ; MAPATOM
7     (NOT)
8     (JMPIFNOT1 L51)
10    (GETVALUE 0)                        ; F
12    (CAR)
13    (CAR&PUSH)
14    (JMPIFNOTEQTO 2 L27)                ; MQAPPLY
17    (GETVALUE 0)                        ; F
19    (CDR)
20    (CAR)
21    (CAR)
22    (CAR&PUSH)
23    (CONST&PUSH 3)                      ; SPECSIMP
24    (CALL2&JMPIFNOT 4 L39)              ; OLDGET
27    L27
27    (GETVALUE 0)                        ; F
29    (CAR)
30    (CAR&PUSH)
31    (CONST&PUSH 6)                      ; OPERATORS
32    (CALL2&JMPIF 4 L42)                 ; OLDGET
35    (CONST 5)                           ; UNKNOWN
36    L36
36    (PUSH)
37    (T)
38    (THROW)
39    L39
39    (CONST 5)                           ; UNKNOWN
40    (JMP L36)
42    L42
42    (CONST&SYMBOL-FUNCTION&PUSH 5)      ; UNKNOWN
44    (GETVALUE 0)                        ; F
46    (CDR&PUSH)
47    (CALLSR 0 24)                       ; MAPC
50    (NIL)
51    L51
51    (UNBIND1)
52    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN $LISTOFVARS (E) ...)-9|
(CONST 0) = $LISTOFVARS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $LISTOFVARS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $LISTOFVARS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $LISTOFVARS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $LISTOFVARS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $LISTOFVARS
8     (SKIP&RET 1)


Disassembly of function $LISTOFVARS
(CONST 0) = (MLIST)
(CONST 1) = LISTOFVARS
(CONST 2) = $RATP
(CONST 3) = TRUNC
(CONST 4) = MEMQ
(CONST 5) = $TAYTORAT
(CONST 6) = (MLIST)
(CONST 7) = #.#'CONS
(CONST 8) = LISTOVARS
(CONST 9) = UNION*
(CONST 10) = ATOMVARS
(CONST 11) = $LISTDUMMYVARS
(CONST 12) = FREEOF
(CONST 13) = 1
(CONST 14) = ZL-DELETE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LISTOFVARS $LISTDUMMYVARS)
71 byte-code instructions:
0     (CONST&PUSH 0)                      ; (MLIST)
1     (NIL)
2     (CONS)
3     (BIND 1)                            ; LISTOFVARS
5     (LOAD&PUSH 4)
6     (CALL1&JMPIFNOT 2 L55)              ; $RATP
9     (CONST&PUSH 3)                      ; TRUNC
10    (LOAD 5)
11    (CAR)
12    (CDR)
13    (CDR&PUSH)
14    (CALL2&JMPIFNOT 4 L21)              ; MEMQ
17    (LOAD&PUSH 4)
18    (CALL1 5)                           ; $TAYTORAT
20    (STORE 4)
21    L21
21    (CONST&PUSH 6)                      ; (MLIST)
22    (CONST&PUSH 7)                      ; #.#'CONS
23    (LOAD 6)
24    (CAR)
25    (CDR)
26    (CDR)
27    (CDR)
28    (CAR&PUSH)
29    (LOAD 7)
30    (CAR)
31    (CDR)
32    (CDR)
33    (CAR&PUSH)
34    (CALLSR&PUSH 1 22)                  ; MAPCAR
37    (LOAD 6)
38    (CDR)
39    (CAR&PUSH)
40    (CALL1&PUSH 8)                      ; LISTOVARS
42    (LOAD 7)
43    (CDR)
44    (CDR&PUSH)
45    (CALL1&PUSH 8)                      ; LISTOVARS
47    (CALL2&PUSH 9)                      ; UNION*
49    (PUSH-UNBOUND 3)
51    (CALLS1 178)                        ; SUBLIS
53    (CONS)
54    (STORE 4)
55    L55
55    (LOAD&PUSH 4)
56    (CALL1 10)                          ; ATOMVARS
58    (GETVALUE 11)                       ; $LISTDUMMYVARS
60    (JMPIF L91)
62    (GETVALUE 1)                        ; LISTOFVARS
64    (CDR&PUSH)
65    (NIL&PUSH)
66    (JMP L85)
68    L68
68    (LOAD&CAR&STORE 1 0)
71    (PUSH)
72    (LOAD&PUSH 7)
73    (CALL2&JMPIFNOT 12 L83)             ; FREEOF
76    (LOAD&PUSH 0)
77    (GETVALUE&PUSH 1)                   ; LISTOFVARS
79    (CONST&PUSH 13)                     ; 1
80    (CALL 3 14)                         ; ZL-DELETE
83    L83
83    (LOAD&CDR&STORE 1)
85    L85
85    (LOAD&PUSH 1)
86    (CALLS1&JMPIFNOT 146 L68)           ; ENDP
89    (SKIP 2)
91    L91
91    (GETVALUE 1)                        ; LISTOFVARS
93    (UNBIND1)
94    (SKIP&RET 2)


Disassembly of function #:|(DEFUN ATOMVARS (E) ...)-10|
(CONST 0) = ATOMVARS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ATOMVARS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ATOMVARS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ATOMVARS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ATOMVARS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ATOMVARS
8     (SKIP&RET 1)


Disassembly of function ATOMVARS
(CONST 0) = $LISTCONSTVARS
(CONST 1) = $CONSTANTP
(CONST 2) = LISTOFVARS
(CONST 3) = ADD2LNC
(CONST 4) = SPECREPP
(CONST 5) = SPECDISREP
(CONST 6) = ARRAY
(CONST 7) = MEMQ
(CONST 8) = MYADD2LNC
(CONST 9) = ATOMVARS
(CONST 10) = MARGS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (LISTOFVARS $LISTCONSTVARS)
37 byte-code instructions:
0     L0
0     (LOAD&PUSH 1)
1     (CALLS2&JMPIFNOT 6 L12)             ; SYMBOLP
4     (GETVALUE 0)                        ; $LISTCONSTVARS
6     (JMPIF L37)
8     (LOAD&PUSH 1)
9     (CALL1&JMPIFNOT 1 L37)              ; $CONSTANTP
12    L12
12    (LOAD&PUSH 1)
13    (CALLS2 5)                          ; ATOM
15    (JMPIF1 L58)
17    (LOAD&PUSH 1)
18    (CALL1&JMPIF 4 L44)                 ; SPECREPP
21    (CONST&PUSH 6)                      ; ARRAY
22    (LOAD&CAR&PUSH 2)
24    (CALL2&JMPIF 7 L51)                 ; MEMQ
27    (CONST&SYMBOL-FUNCTION&PUSH 9)      ; ATOMVARS
29    (LOAD&PUSH 2)
30    (CALL1&PUSH 10)                     ; MARGS
32    (CALLSR 0 24)                       ; MAPC
35    (SKIP&RET 2)
37    L37
37    (LOAD&PUSH 1)
38    (GETVALUE&PUSH 2)                   ; LISTOFVARS
40    (CALL2 3)                           ; ADD2LNC
42    (SKIP&RET 2)
44    L44
44    (LOAD&PUSH 1)
45    (CALL1&PUSH 5)                      ; SPECDISREP
47    (JMPTAIL 1 3 L0)
51    L51
51    (LOAD&PUSH 1)
52    (GETVALUE&PUSH 2)                   ; LISTOFVARS
54    (CALL2 8)                           ; MYADD2LNC
56    (SKIP&RET 2)
58    L58
58    (SKIP&RET 2)


Disassembly of function #:|(DEFUN MYADD2LNC (ITEM LIST) ...)-11|
(CONST 0) = MYADD2LNC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MYADD2LNC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MYADD2LNC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MYADD2LNC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MYADD2LNC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MYADD2LNC
8     (SKIP&RET 1)


Disassembly of function MYADD2LNC
(CONST 0) = MEMALIKE
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
13 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALL2 0)                           ; MEMALIKE
4     (NOT)
5     (JMPIFNOT1 L16)
7     (LOAD&PUSH 1)
8     (LOAD&PUSH 3)
9     (NIL)
10    (CONS&PUSH)
11    (CALLSR 2 35)                       ; NCONC
14    (SKIP&RET 3)
16    L16
16    (SKIP&RET 3)


Disassembly of function #:|(DECLARE-TOP (SPECIAL MODULUS $FPPREC))-12|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $RESET NIL ...)-13|
(CONST 0) = $RESET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $RESET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $RESET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $RESET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $RESET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $RESET
8     (SKIP&RET 1)


Disassembly of function $RESET
(CONST 0) = 10
(CONST 1) = *PRINT-BASE*
(CONST 2) = *READ-BASE*
(CONST 3) = #<COMPILED-CLOSURE $RESET-1>
(CONST 4) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
writes special variables : (*READ-BASE* *PRINT-BASE*)
7 byte-code instructions:
0     (CONST 0)                           ; 10
1     (SETVALUE 1)                        ; *PRINT-BASE*
3     (SETVALUE 2)                        ; *READ-BASE*
5     (CONST&PUSH 3)                      ; #<COMPILED-CLOSURE $RESET-1>
6     (GETVALUE&PUSH 4)                   ; *VARIABLE-INITIAL-VALUES*
8     (CALLS1 102)                        ; MAPHASH
10    (SKIP&RET 1)


Disassembly of function $RESET-1
(CONST 0) = #<COMPILED-CLOSURE $RESET-1-1>
(CONST 1) = *STANDARD-OUTPUT*
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*STANDARD-OUTPUT*)
9 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE $RESET-1-1>
1     (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
3     (LOAD&PUSH 4)
4     (LOAD&PUSH 4)
5     (CALLSR 3 21)                       ; FUNCALL
8     (LOAD&PUSH 2)
9     (LOAD&PUSH 2)
10    (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
12    (SKIP&RET 3)


Disassembly of function $RESET-1-1
(CONST 0) = "Resetting "
(CONST 1) = " to "
3 required arguments
0 optional arguments
Rest parameter
No keyword parameters
18 byte-code instructions:
0     (CONST&PUSH 0)                      ; "Resetting "
1     (LOAD&PUSH 5)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 3)
7     (LOAD&PUSH 5)
8     (CALLS1 129)                        ; PRIN1
10    (CONST&PUSH 1)                      ; " to "
11    (LOAD&PUSH 5)
12    (PUSH-UNBOUND 2)
14    (CALLS1 137)                        ; WRITE-STRING
16    (LOAD&PUSH 2)
17    (LOAD&PUSH 5)
18    (CALLS1 129)                        ; PRIN1
20    (LOAD&PUSH 4)
21    (CALLS1 139)                        ; TERPRI
23    (LOAD 1)
24    (SKIP&RET 5)


Wrote file binary-clisp/inmis.fas
Wrote file /cygdrive/e/temp/maxima/src/inmis.lis