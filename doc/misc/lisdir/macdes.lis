Listing of compilation of file /cygdrive/e/temp/maxima/src/macdes.lisp
on 2002-12-17 13:34:30 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/macdes.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(DEFCONSTANT *DOC-START* (CODE-CHAR 31))-2|
(CONST 0) = *DOC-START*
(CONST 1) = #\Us
(CONST 2) = (DEFCONSTANT *DOC-START* (CODE-CHAR 31))
(CONST 3) = SYSTEM::CONSTANT-WARNING
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
16 byte-code instructions:
0     (CONST&PUSH 0)                      ; *DOC-START*
1     (PUSH-UNBOUND 1)
3     (CALLS1&JMPIFNOT 94 L17)            ; CONSTANTP
6     (CONST&PUSH 1)                      ; #\Us
7     (CONST&PUSH 0)                      ; *DOC-START*
8     (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
10    (CALLS2&JMPIF 1 L17)                ; EQL
13    (CONST&PUSH 0)                      ; *DOC-START*
14    (CONST&PUSH 2)                      ; (DEFCONSTANT *DOC-START* ...)
15    (CALL2 3)                           ; SYSTEM::CONSTANT-WARNING
17    L17
17    (CONST&PUSH 0)                      ; *DOC-START*
18    (CONST&PUSH 1)                      ; #\Us
19    (CALLS2 131)                        ; SYSTEM::%PROCLAIM-CONSTANT
21    (CONST 0)                           ; *DOC-START*
22    (SKIP&RET 1)


Disassembly of function #:|(DEFVAR $MANUAL_DEMO "manual.demo")-3|
(CONST 0) = (SPECIAL $MANUAL_DEMO)
(CONST 1) = $MANUAL_DEMO
(CONST 2) = "manual.demo"
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $MANUAL_DEMO)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $MANUAL_DEMO
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $MANUAL_DEMO
8     (CONST&PUSH 2)                      ; "manual.demo"
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; $MANUAL_DEMO
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMSPEC $EXAMPLE (L) ...)-4-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $EXAMPLE (L) ...)-4-2-1|>
(CONST 1) = $EXAMPLE
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $EXAMPLE (L) ...)-4-2-1|>
1     (CONST&PUSH 1)                      ; $EXAMPLE
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $EXAMPLE (L) ...)-4-2-1|
(CONST 0) = L
(CONST 1) = "doc"
(CONST 2) = $MANUAL_DEMO
(CONST 3) = MAXIMA-PATH
(CONST 4) = "First arg ~M to example must be a symbol, eg example(functions)"
(CONST 5) = MERROR
(CONST 6) = ((MLIST) $FILE_SEARCH_DEMO)
(CONST 7) = $FILE_SEARCH1
(CONST 8) = ST
(CONST 9) = #.#'VALUES
(CONST 10) = #\&
(CONST 11) = $CONCAT
(CONST 12) = $DONE
(CONST 13) = DBM-READ
(CONST 14) = $LINENUM
(CONST 15) = $INCHAR
(CONST 16) = MAKELABEL
(CONST 17) = 2
(CONST 18) = SET
(CONST 19) = $DISPLAY2D
(CONST 20) = (MLABLE)
(CONST 21) = DISPLA
(CONST 22) = MEVAL*
(CONST 23) = $%
(CONST 24) = $OUTCHAR
(CONST 25) = DISPLAYINPUT
(CONST 26) = (MLABLE)
(CONST 27) = #<COMPILED-CLOSURE #:|(DEFMSPEC $EXAMPLE (L) ...)-4-2-1-1|>
(CONST 28) = *STANDARD-OUTPUT*
(CONST 29) = (MLIST)
(CONST 30) = CLOSE
(CONST 31) = :ABORT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*STANDARD-OUTPUT* $% $OUTCHAR $INCHAR $LINENUM ST $MANUAL_DEMO L)
writes special variables : ($% $LINENUM L)
148 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (GETVALUE 0)                        ; L
5     (CDR)
6     (SETVALUE 0)                        ; L
8     (CAR&PUSH)
9     (GETVALUE 0)                        ; L
11    (CDR)
12    (CAR)
13    (JMPIF L20)
15    (CONST&PUSH 1)                      ; "doc"
16    (GETVALUE&PUSH 2)                   ; $MANUAL_DEMO
18    (CALL2 3)                           ; MAXIMA-PATH
20    L20
20    (PUSH)
21    (LOAD&PUSH 1)
22    (CALLS2&JMPIF 6 L28)                ; SYMBOLP
25    (CONST&PUSH 4)                      ; "First arg ~M to example must be a symbol, eg example(functions)"
26    (CALL1 5)                           ; MERROR
28    L28
28    (GETVALUE&PUSH 2)                   ; $MANUAL_DEMO
30    (CONST&PUSH 6)                      ; ((MLIST) $FILE_SEARCH_DEMO)
31    (CALL2 7)                           ; $FILE_SEARCH1
33    (STORE 0)
34    (PUSH)
35    (PUSH-UNBOUND 6)
37    (CALLS1 249)                        ; OPEN
39    (BIND 8)                            ; ST
41    (UNWIND-PROTECT-OPEN L218)
44    (CONST 9)                           ; #.#'VALUES
45    (MVCALLP)
46    (PUSH-NIL 4)
48    (JMP L159)
51    L51
51    (CONST 12)                          ; $DONE
52    (JMP L207)
55    L55
55    (NIL&PUSH)
56    (GETVALUE&PUSH 8)                   ; ST
58    (NIL&PUSH)
59    (PUSH-UNBOUND 2)
61    (CALLS1&STORE 122 3)                ; PEEK-CHAR
64    (JMPIFNOT L51)
66    (LOAD&PUSH 3)
67    (JMPIFEQTO 10 L51)                  ; #\&
70    (GETVALUE&PUSH 8)                   ; ST
72    (PUSH-NIL 2)
74    (CALL 3 13)                         ; DBM-READ
77    (STORE 3)
78    (GETVALUE&PUSH 14)                  ; $LINENUM
80    (CALLS2 150)                        ; 1+
82    (SETVALUE 14)                       ; $LINENUM
84    (GETVALUE&PUSH 15)                  ; $INCHAR
86    (CALL1 16)                          ; MAKELABEL
88    (STORE 1)
89    (PUSH)
90    (CONST&PUSH 17)                     ; 2
91    (LOAD&PUSH 5)
92    (CALLS1&PUSH 148)                   ; NTH
94    (CALL2 18)                          ; SET
96    (NIL)
97    (BIND 19)                           ; $DISPLAY2D
99    (CONST&PUSH 20)                     ; (MLABLE)
100   (LOAD&PUSH 5)
101   (CONST&PUSH 17)                     ; 2
102   (LOAD&PUSH 9)
103   (CALLS1&PUSH 148)                   ; NTH
105   (LIST&PUSH 3)
107   (CALL1 21)                          ; DISPLA
109   (UNBIND1)
110   (CONST&PUSH 17)                     ; 2
111   (LOAD&PUSH 4)
112   (CALLS1&PUSH 148)                   ; NTH
114   (CALL1 22)                          ; MEVAL*
116   (SETVALUE 23)                       ; $%
118   (GETVALUE&PUSH 24)                  ; $OUTCHAR
120   (CALL1 16)                          ; MAKELABEL
122   (STORE 0)
123   (PUSH)
124   (GETVALUE&PUSH 23)                  ; $%
126   (CALL2 18)                          ; SET
128   (LOAD 3)
129   (CAR)
130   (CAR&PUSH)
131   (JMPIFNOTEQTO 25 L55)               ; DISPLAYINPUT
135   (CONST&PUSH 26)                     ; (MLABLE)
136   (LOAD&PUSH 1)
137   (GETVALUE&PUSH 23)                  ; $%
139   (LIST&PUSH 3)
141   (CALL1 21)                          ; DISPLA
143   (JMP L55)
146   L146
146   (LOAD&PUSH 3)
147   (CALL1 11)                          ; $CONCAT
149   (STORE 3)
150   (PUSH)
151   (LOAD&PUSH 12)
152   (CALLS2&JMPIF 1 L55)                ; EQL
156   (LOAD&PUSH 3)
157   (LOAD&CONS&STORE 2)
159   L159
159   (GETVALUE&PUSH 8)                   ; ST
161   (NIL&PUSH)
162   (PUSH-UNBOUND 2)
164   (CALLS1&STORE 120 3)                ; READ-CHAR
167   (JMPIFNOT L196)
169   (LOAD&PUSH 3)
170   (JMPIFNOTEQTO 10 L159)              ; #\&
173   (GETVALUE&PUSH 8)                   ; ST
175   (NIL&PUSH)
176   (PUSH-UNBOUND 2)
178   (CALLS1&STORE 120 3)                ; READ-CHAR
181   (PUSH)
182   (JMPIFNOTEQTO 10 L159)              ; #\&
185   (GETVALUE&PUSH 8)                   ; ST
187   (PUSH-NIL 2)
189   (PUSH-UNBOUND 1)
191   (CALLS1&STORE 116 3)                ; READ
194   (JMPIF L146)
196   L196
196   (CONST&PUSH 27)                     ; #<COMPILED-CLOSURE #:|(DEFMSPEC $EXAMPLE (L) ...)-4-2-1-1|>
197   (GETVALUE&PUSH 28)                  ; *STANDARD-OUTPUT*
199   (CALLSR 1 21)                       ; FUNCALL
202   (CONST&PUSH 29)                     ; (MLIST)
203   (LOAD&PUSH 3)
204   (CALLS2 73)                         ; NREVERSE
206   (CONS)
207   L207
207   (SKIP 5)
209   (SKIPSP 1 0)
212   (UNWIND-PROTECT-CLEANUP)
213   (UNBIND1)
214   (SKIP 2)
216   (JMP L233)
218   L218
218   (GETVALUE 8)                        ; ST
220   (JMPIFNOT L229)
222   (PUSH)
223   (CONST&PUSH 31)                     ; :ABORT
225   (T&PUSH)
226   (CALL 3 30)                         ; CLOSE
229   L229
229   (UNWIND-PROTECT-CLOSE)
230   (UNBIND1)
231   (SKIP 2)
233   L233
233   (UNBIND1)
234   (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $EXAMPLE (L) ...)-4-2-1-1|
(CONST 0) = "Not Found.  You can look at:"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "Not Found.  You can look at:"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function #:|(DEFUN MREAD-NOPROMPT (&REST READ-ARGS) ...)-5|
(CONST 0) = MREAD-NOPROMPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MREAD-NOPROMPT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MREAD-NOPROMPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MREAD-NOPROMPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MREAD-NOPROMPT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MREAD-NOPROMPT
8     (SKIP&RET 1)


Disassembly of function MREAD-NOPROMPT
(CONST 0) = ""
(CONST 1) = *MREAD-PROMPT*
(CONST 2) = *QUERY-IO*
(CONST 3) = MREAD
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variable: (*QUERY-IO*)
15 byte-code instructions:
0     (CONST 0)                           ; ""
1     (BIND 1)                            ; *MREAD-PROMPT*
3     (LOAD&JMPIF 4 L11)
6     (GETVALUE&PUSH 2)                   ; *QUERY-IO*
8     (LIST 1)
10    (STORE 4)
11    L11
11    (CONST&SYMBOL-FUNCTION&PUSH 3)      ; MREAD
13    (LOAD 5)
14    (APPLY 0)
16    (CDR)
17    (CDR)
18    (CAR)
19    (UNBIND1)
20    (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $CREATE_LIST (L) ...)-6-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $CREATE_LIST (L) ...)-6-2-1|>
(CONST 1) = $CREATE_LIST
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $CREATE_LIST (L) ...)-6-2-1|>
1     (CONST&PUSH 1)                      ; $CREATE_LIST
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $CREATE_LIST (L) ...)-6-2-1|
(CONST 0) = L
(CONST 1) = CREATE-LIST2
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (L)
writes special variable : (L)
11 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; L
3     (GETVALUE 0)                        ; L
5     (CDR)
6     (SETVALUE 0)                        ; L
8     (CAR&PUSH)
9     (GETVALUE 0)                        ; L
11    (CDR&PUSH)
12    (CALL2 1)                           ; CREATE-LIST2
14    (UNBIND1)
15    (SKIP&RET 2)


Disassembly of function #:|(DEFUN CREATE-LIST2 (FORM L) ...)-7|
(CONST 0) = CREATE-LIST2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CREATE-LIST2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CREATE-LIST2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CREATE-LIST2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CREATE-LIST2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CREATE-LIST2
8     (SKIP&RET 1)


Disassembly of function CREATE-LIST2
(CONST 0) = FORM
(CONST 1) = L
(CONST 2) = (MLIST)
(CONST 3) = CREATE-LIST1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L FORM)
12 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; FORM
3     (LOAD 4)
4     (BIND 1)                            ; L
6     (CONST&PUSH 2)                      ; (MLIST)
7     (CONST&PUSH 3)                      ; CREATE-LIST1
8     (GETVALUE&PUSH 0)                   ; FORM
10    (GETVALUE 1)                        ; L
12    (APPLY 1)
14    (CONS)
15    (UNBIND 2)
17    (SKIP&RET 3)


Disassembly of function #:|(DEFUN CREATE-LIST1 (FORM &REST L ...) ...)-8|
(CONST 0) = CREATE-LIST1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CREATE-LIST1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CREATE-LIST1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CREATE-LIST1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CREATE-LIST1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CREATE-LIST1
8     (SKIP&RET 1)


Disassembly of function CREATE-LIST1
(CONST 0) = FORM
(CONST 1) = L
(CONST 2) = MEVAL*
(CONST 3) = "~A not a symbol"
(CONST 4) = MERROR
(CONST 5) = SLOOP::SLOOP-TYPE-ERROR
(CONST 6) = SET
(CONST 7) = CREATE-LIST1
(CONST 8) = $LISTP
(CONST 9) = V
(CONST 10) = "BAD ARG"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (V FORM L)
writes special variables : (V L)
151 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; FORM
3     (LOAD 4)
4     (BIND 1)                            ; L
6     (PUSH-NIL 3)
8     (GETVALUE 1)                        ; L
10    (JMPIFNOT L150)
13    (GETVALUE 1)                        ; L
15    (CAR)
16    (STORE 1)
17    (GETVALUE 1)                        ; L
19    (CDR)
20    (CAR)
21    (STORE 2)
22    (GETVALUE 1)                        ; L
24    (CDR)
25    (CDR)
26    (SETVALUE 1)                        ; L
28    (LOAD&PUSH 1)
29    (CALLS2&JMPIF 6 L36)                ; SYMBOLP
32    (CONST&PUSH 3)                      ; "~A not a symbol"
33    (LOAD&PUSH 2)
34    (CALL2 4)                           ; MERROR
36    L36
36    (LOAD&PUSH 2)
37    (CALL1 2)                           ; MEVAL*
39    (STORE 2)
40    (LOAD&PUSH 1)
41    (LIST&PUSH 1)
43    (NIL&PUSH)
44    (LIST 1)
46    (PROGV)
47    (LOADI&PUSH 0 0 2)
51    (CALLS2&JMPIFNOT 8 L183)            ; NUMBERP
55    (GETVALUE 1)                        ; L
57    (CAR)
58    (STOREI 0 0 0)
62    (GETVALUE 1)                        ; L
64    (CDR)
65    (SETVALUE 1)                        ; L
67    (LOADI&PUSH 0 0 0)
71    (CALL1 2)                           ; MEVAL*
73    (STOREI 0 0 0)
77    (PUSH)
78    (CALLS2&JMPIFNOT 8 L183)            ; NUMBERP
82    (LOADI&PUSH 0 0 2)
86    (CALLS2&JMPIF 13 L91)               ; SYSTEM::FIXNUMP
89    (CALL0 5)                           ; SLOOP::SLOOP-TYPE-ERROR
91    L91
91    (LOADI&PUSH 0 0 2)
95    (LOADI&PUSH 0 0 0)
99    (CALLS2&PUSH 150)                   ; 1+
101   (CALLS2&JMPIF 13 L106)              ; SYSTEM::FIXNUMP
104   (CALL0 5)                           ; SLOOP::SLOOP-TYPE-ERROR
106   L106
106   (LOADI&PUSH 0 0 0)
110   (PUSH-NIL 3)
112   L112
112   (LOAD&PUSH 4)
113   (LOAD&PUSH 4)
114   (CALLSR&JMPIF 1 48 L168)            ; >
118   (LOADI&PUSH 0 0 1)
122   (LOAD&PUSH 5)
123   (CALL2 6)                           ; SET
125   (CONST&PUSH 7)                      ; CREATE-LIST1
126   (GETVALUE&PUSH 0)                   ; FORM
128   (GETVALUE 1)                        ; L
130   (APPLY&PUSH 1)
132   (CALLS1&STORE 158 0)                ; COPY-LIST
135   (LOAD&JMPIF 1 L159)
138   (LOAD 0)
139   (STORE 2)
140   L140
140   (PUSH)
141   (PUSH-UNBOUND 1)
143   (CALLS1&STORE 156 1)                ; LAST
146   L146
146   (LOAD&INC&STORE 4)
148   (JMP L112)
150   L150
150   (GETVALUE&PUSH 0)                   ; FORM
152   (CALL1&PUSH 2)                      ; MEVAL*
154   (LIST 1)
156   (JMP L260)
159   L159
159   (PUSH)
160   (LOAD&PUSH 1)
161   (CALLS1&JMPIFNOT 171 L146)          ; SYSTEM::%RPLACD
164   (LOAD 1)
165   (CDR)
166   (JMP L140)
168   L168
168   (LOAD 2)
169   (SKIP 5)
171   (JMP L256)
174   L174
174   (PUSH)
175   (LOAD&PUSH 1)
176   (CALLS1&JMPIFNOT 171 L240)          ; SYSTEM::%RPLACD
179   (LOAD 1)
180   (CDR)
181   (JMP L234)
183   L183
183   (LOADI&PUSH 0 0 2)
187   (CALL1&JMPIFNOT 8 L253)             ; $LISTP
190   (NIL&PUSH)
191   (LOADI 0 0 2)
195   (CDR&PUSH)
196   (LOAD 1)
197   (BIND 9)                            ; V
199   (PUSH-NIL 3)
201   (LOAD&JMPIFNOT 6 L245)
204   L204
204   (LOAD&CAR&PUSH 6)
206   (LOAD 0)
207   (SETVALUE 9)                        ; V
209   (SKIP 1)
211   (LOADI&PUSH 0 0 1)
215   (GETVALUE&PUSH 9)                   ; V
217   (CALL2 6)                           ; SET
219   (CONST&PUSH 7)                      ; CREATE-LIST1
220   (GETVALUE&PUSH 0)                   ; FORM
222   (GETVALUE 1)                        ; L
224   (APPLY&PUSH 1)
226   (CALLS1&STORE 158 0)                ; COPY-LIST
229   (LOAD&JMPIF 1 L174)
232   (LOAD 0)
233   (STORE 2)
234   L234
234   (PUSH)
235   (PUSH-UNBOUND 1)
237   (CALLS1&STORE 156 1)                ; LAST
240   L240
240   (LOAD&CDR&STORE 6)
242   (LOAD&JMPIF 6 L204)
245   L245
245   (LOAD 2)
246   (SKIP 3)
248   (UNBIND1)
249   (SKIP 2)
251   (JMP L256)
253   L253
253   (CONST&PUSH 10)                     ; "BAD ARG"
254   (CALL1 4)                           ; MERROR
256   L256
256   (UNBIND1)
257   (SKIPSP 1 0)
260   L260
260   (SKIP 3)
262   (UNBIND 2)
264   (SKIP&RET 3)


Disassembly of function #:|(DEFVAR *INFO-PATHS* NIL)-9|
(CONST 0) = (SPECIAL *INFO-PATHS*)
(CONST 1) = *INFO-PATHS*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *INFO-PATHS*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *INFO-PATHS*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *INFO-PATHS*
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *INFO-PATHS*
12    (SKIP&RET 1)

WARNING in $DESCRIBE in lines 118..129 :
variable HAVE is not used.
Misspelled or missing IGNORE declaration?

Disassembly of function #:|(DEFUN $DESCRIBE (X &AUX # ...) ...)-10|
(CONST 0) = $DESCRIBE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $DESCRIBE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $DESCRIBE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $DESCRIBE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $DESCRIBE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $DESCRIBE
8     (SKIP&RET 1)


Disassembly of function $DESCRIBE
(CONST 0) = X
(CONST 1) = *INFO-PATHS*
(CONST 2) = $SCONCAT
(CONST 3) = "SI"
(CONST 4) = "INFO"
(CONST 5) = "SI"
(CONST 6) = "INFO"
(CONST 7) = "SI"
(CONST 8) = ("maxima.info")
(CONST 9) = 
"The documentation is now in INFO format and can be printed using
tex, or viewed using info or gnu emacs or using a web browser:
http://www.ma.utexas.edu/maxima/
   Some versions of maxima built have a builtin info retrieval mechanism."
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (X *INFO-PATHS*)
writes special variable : (X)
27 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 1)                        ; *INFO-PATHS*
5     (BIND 1)                            ; *INFO-PATHS*
7     (GETVALUE&PUSH 0)                   ; X
9     (CALL1 2)                           ; $SCONCAT
11    (SETVALUE 0)                        ; X
13    (CONST&PUSH 3)                      ; "SI"
14    (CALLS1&JMPIFNOT 204 L24)           ; FIND-PACKAGE
17    (CONST&PUSH 4)                      ; "INFO"
18    (CONST&PUSH 5)                      ; "SI"
19    (CALLS1&PUSH 212)                   ; INTERN
21    (CALLS1&JMPIF 80 L29)               ; FBOUNDP
24    L24
24    (CONST 9)                           ; "The documentation is now in INFO format and can be printed using
tex, or viewed using info or gnu emacs or using a web browser:
http://www.ma.utexas.edu/maxima/
   Some versions of maxima built have a builtin info retrieval mechanism."
25    L25
25    (UNBIND 2)
27    (SKIP&RET 2)
29    L29
29    (CONST&PUSH 6)                      ; "INFO"
30    (CONST&PUSH 7)                      ; "SI"
31    (CALLS1&PUSH 212)                   ; INTERN
33    (GETVALUE&PUSH 0)                   ; X
35    (CONST&PUSH 8)                      ; ("maxima.info")
36    (GETVALUE&PUSH 1)                   ; *INFO-PATHS*
38    (FUNCALL 3)
40    (JMP L25)


Disassembly of function #:|(DEFUN $APROPOS (S) ...)-11|
(CONST 0) = $APROPOS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $APROPOS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $APROPOS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $APROPOS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $APROPOS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $APROPOS
8     (SKIP&RET 1)


Disassembly of function $APROPOS
(CONST 0) = (MLIST)
(CONST 1) = "MAXIMA"
(CONST 2) = APROPOS-LIST
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; (MLIST)
1     (LOAD&PUSH 2)
2     (CONST&PUSH 1)                      ; "MAXIMA"
3     (CALL2 2)                           ; APROPOS-LIST
5     (CONS)
6     (SKIP&RET 2)


Wrote file binary-clisp/macdes.fas
Wrote file /cygdrive/e/temp/maxima/src/macdes.lis