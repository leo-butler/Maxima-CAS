Listing of compilation of file /cygdrive/e/temp/maxima/src/cl-info.lisp
on 2002-12-17 13:31:49 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/cl-info.lisp ...

Disassembly of function #:|(IN-PACKAGE "SI")-1|
(CONST 0) = "SI"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "SI"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(DEFVAR *MATCH-DATA*)-2|
(CONST 0) = (SPECIAL *MATCH-DATA*)
(CONST 1) = *MATCH-DATA*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *MATCH-DATA*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST 1)                           ; *MATCH-DATA*
4     (SKIP&RET 1)


Disassembly of function #:|(DEFVAR *CASE-FOLD-SEARCH* NIL)-3|
(CONST 0) = (SPECIAL *CASE-FOLD-SEARCH*)
(CONST 1) = *CASE-FOLD-SEARCH*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *CASE-FOLD-SEARCH*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *CASE-FOLD-SEARCH*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *CASE-FOLD-SEARCH*
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *CASE-FOLD-SEARCH*
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN MATCH-START (N) ...)-4|
(CONST 0) = MATCH-START
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MATCH-START>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MATCH-START
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MATCH-START
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MATCH-START>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MATCH-START
8     (SKIP&RET 1)


Disassembly of function MATCH-START
(CONST 0) = *MATCH-DATA*
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*MATCH-DATA*)
5 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; *MATCH-DATA*
2     (LOAD&PUSH 2)
3     (CALLSR 1 1)                        ; AREF
6     (CAR)
7     (SKIP&RET 2)


Disassembly of function #:|(DEFUN MATCH-BEGINNING (N) ...)-5|
(CONST 0) = MATCH-BEGINNING
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MATCH-BEGINNING>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MATCH-BEGINNING
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MATCH-BEGINNING
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MATCH-BEGINNING>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MATCH-BEGINNING
8     (SKIP&RET 1)


Disassembly of function MATCH-BEGINNING
(CONST 0) = MATCH-START
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALL1 0)                           ; MATCH-START
3     (SKIP&RET 2)


Disassembly of function #:|(DEFUN MATCH-END (N) ...)-6|
(CONST 0) = MATCH-END
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MATCH-END>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MATCH-END
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MATCH-END
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MATCH-END>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MATCH-END
8     (SKIP&RET 1)


Disassembly of function MATCH-END
(CONST 0) = *MATCH-DATA*
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*MATCH-DATA*)
6 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; *MATCH-DATA*
2     (LOAD&PUSH 2)
3     (CALLSR 1 1)                        ; AREF
6     (CDR)
7     (CAR)
8     (SKIP&RET 2)


Disassembly of function #:|(DEFUN GET-MATCH (S N) ...)-7|
(CONST 0) = GET-MATCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-MATCH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-MATCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-MATCH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-MATCH>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GET-MATCH
8     (SKIP&RET 1)


Disassembly of function GET-MATCH
(CONST 0) = MATCH-START
(CONST 1) = MATCH-END
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALL1&PUSH 0)                      ; MATCH-START
4     (LOAD&PUSH 3)
5     (CALL1&PUSH 1)                      ; MATCH-END
7     (CALLS2 69)                         ; SUBSEQ
9     (SKIP&RET 3)


Disassembly of function #:|(DEFUN COMPILE-REGEX (PAT &KEY #) ...)-8|
(CONST 0) = COMPILE-REGEX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COMPILE-REGEX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COMPILE-REGEX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COMPILE-REGEX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COMPILE-REGEX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COMPILE-REGEX
8     (SKIP&RET 1)


Disassembly of function COMPILE-REGEX
(CONST 0) = :CASE-SENSITIVE
(CONST 1) = *COMPILE-PRINT*
(CONST 2) = *COMPILE-VERBOSE*
(CONST 3) = NREGEX:REGEX-COMPILE
(CONST 4) = COMPILE
1 required argument
0 optional arguments
No rest parameter
1 keyword parameter: :CASE-SENSITIVE.
15 byte-code instructions:
0     (JMPIFBOUNDP 1 L5)
3     (T&STORE 1)
5     L5
5     (NIL)
6     (BIND 1)                            ; *COMPILE-PRINT*
8     (NIL)
9     (BIND 2)                            ; *COMPILE-VERBOSE*
11    (NIL&PUSH)
12    (LOAD&PUSH 9)
13    (CONST&PUSH 0)                      ; :CASE-SENSITIVE
14    (LOAD&PUSH 10)
15    (CALL&PUSH 3 3)                     ; NREGEX:REGEX-COMPILE
18    (CALL2 4)                           ; COMPILE
20    (UNBIND 2)
22    (SKIP&RET 3)


Disassembly of function #:|(DEFUN STRING-MATCH (PAT STRING &OPTIONAL ...) ...)-9|
(CONST 0) = STRING-MATCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STRING-MATCH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STRING-MATCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STRING-MATCH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STRING-MATCH>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; STRING-MATCH
8     (SKIP&RET 1)


Disassembly of function STRING-MATCH
(CONST 0) = 0
(CONST 1) = :CASE-SENSITIVE
(CONST 2) = *CASE-FOLD-SEARCH*
(CONST 3) = COMPILE-REGEX
(CONST 4) = :START
(CONST 5) = :END
(CONST 6) = NREGEX:*REGEX-GROUPINGS*
(CONST 7) = *MATCH-DATA*
(CONST 8) = NREGEX:*REGEX-GROUPS*
(CONST 9) = MATCH-START
(CONST 10) = -1
2 required arguments
2 optional arguments
No rest parameter
No keyword parameters
reads special variables: 
(NREGEX:*REGEX-GROUPS* *MATCH-DATA* NREGEX:*REGEX-GROUPINGS*
 *CASE-FOLD-SEARCH*)
writes special variable : (*MATCH-DATA*)
55 byte-code instructions:
0     (JMPIFBOUNDP 2 L5)
3     (CONST 0)                           ; 0
4     (STORE 2)
5     L5
5     (JMPIFBOUNDP 1 L12)
8     (LOAD&PUSH 3)
9     (CALLS2&STORE 71 1)                 ; LENGTH
12    L12
12    (LOAD&PUSH 4)
13    (CALLS2&JMPIFNOT 7 L26)             ; STRINGP
16    (LOAD&PUSH 4)
17    (CONST&PUSH 1)                      ; :CASE-SENSITIVE
18    (GETVALUE 2)                        ; *CASE-FOLD-SEARCH*
20    (NOT)
21    (PUSH)
22    (CALL 3 3)                          ; COMPILE-REGEX
25    (STORE 4)
26    L26
26    (LOAD&PUSH 4)
27    (LOAD&PUSH 4)
28    (CONST&PUSH 4)                      ; :START
29    (LOAD&PUSH 5)
30    (CONST&PUSH 5)                      ; :END
31    (LOAD&PUSH 6)
32    (FUNCALL 5)
34    (JMPIF L39)
36    (CONST 10)                          ; -1
37    (SKIP&RET 5)
39    L39
39    (GETVALUE&PUSH 6)                   ; NREGEX:*REGEX-GROUPINGS*
41    (PUSH-UNBOUND 7)
43    (CALLS1 29)                         ; MAKE-ARRAY
45    (SETVALUE 7)                        ; *MATCH-DATA*
47    (CONST&PUSH 0)                      ; 0
48    (GETVALUE&PUSH 6)                   ; NREGEX:*REGEX-GROUPINGS*
50    (JMP L70)
52    L52
52    (GETVALUE&PUSH 7)                   ; *MATCH-DATA*
54    (GETVALUE&PUSH 8)                   ; NREGEX:*REGEX-GROUPS*
56    (LOAD&PUSH 3)
57    (CALLSR&PUSH 1 1)                   ; AREF
60    (LOAD&PUSH 1)
61    (LOAD&PUSH 4)
62    (LOAD&PUSH 2)
63    (CALLSR 1 2)                        ; SYSTEM::STORE
66    (SKIP 2)
68    (LOAD&INC&STORE 1)
70    L70
70    (LOAD&PUSH 1)
71    (LOAD&PUSH 1)
72    (CALLSR&JMPIFNOT 1 50 L52)          ; >=
76    (SKIP 2)
78    (CONST&PUSH 0)                      ; 0
79    (CALL1 9)                           ; MATCH-START
81    (SKIP&RET 5)


Disassembly of function #:|(EVAL-WHEN (COMPILE EVAL) (DEFMACRO WHILE # ...))-10|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(EVAL-WHEN (COMPILE EVAL LOAD) (DEFUN SHARP-U-READER # ...) ...)-11-1|
(CONST 0) = SHARP-U-READER
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SHARP-U-READER>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SHARP-U-READER
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SHARP-U-READER
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SHARP-U-READER>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function SHARP-U-READER
(CONST 0) = 10
(CONST 1) = BASE-CHAR
(CONST 2) = 0
(CONST 3) = #\"
(CONST 4) = "sharp-u-reader reader needs a \"right after it"
(CONST 5) = #\\
(CONST 6) = ((#\n . #\Newline) (#\t . #\Tab) (#\r . #\Return))
(CONST 7) = (SIMPLE-ARRAY BASE-CHAR (*))
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
48 byte-code instructions:
0     (CONST&PUSH 0)                      ; 10
1     (T&PUSH)
2     (PUSH-UNBOUND 6)
4     (CONST 1)                           ; BASE-CHAR
5     (STORE 5)
6     (CONST 2)                           ; 0
7     (STORE 2)
8     (CALLS1&PUSH 29)                    ; MAKE-ARRAY
10    (LOAD&PUSH 4)
11    (PUSH-UNBOUND 3)
13    (CALLS1&PUSH 120)                   ; READ-CHAR
15    (JMPIFEQTO 3 L54)                   ; #\"
18    (CONST&PUSH 4)                      ; "sharp-u-reader reader needs a \"right after it"
19    (CALLSR 0 29)                       ; ERROR
22    L22
22    (LOAD 0)
23    (STORE 0)
24    (JMP L46)
26    L26
26    (LOAD&PUSH 0)
27    (JMPIFNOTEQTO 5 L46)                ; #\\
30    (LOAD&PUSH 5)
31    (PUSH-UNBOUND 3)
33    (CALLS1&STORE 120 0)                ; READ-CHAR
36    (PUSH)
37    (CONST&PUSH 6)                      ; (# # #)
38    (PUSH-UNBOUND 3)
40    (CALLS1 187)                        ; ASSOC
42    (CDR)
43    (JMPIFNOT L22)
45    (STORE 0)
46    L46
46    (LOAD&PUSH 0)
47    (LOAD&PUSH 2)
48    (PUSH-UNBOUND 1)
50    (CALLS1 28)                         ; VECTOR-PUSH-EXTEND
52    (SKIP 1)
54    L54
54    (LOAD&PUSH 4)
55    (PUSH-UNBOUND 3)
57    (CALLS1&PUSH 120)                   ; READ-CHAR
59    (LOAD&PUSH 0)
60    (JMPIFNOTEQTO 3 L26)                ; #\"
63    (SKIP 1)
65    (LOAD&PUSH 0)
66    (CONST&PUSH 7)                      ; (SIMPLE-ARRAY BASE-CHAR (*))
67    (CALLS2 42)                         ; COERCE
69    (SKIP&RET 5)


Disassembly of function #:|(EVAL-WHEN (COMPILE EVAL LOAD) (DEFUN SHARP-U-READER # ...) ...)-11-2|
(CONST 0) = #\#
(CONST 1) = #\u
(CONST 2) = SHARP-U-READER
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #\#
1     (CONST&PUSH 1)                      ; #\u
2     (CONST&PUSH 2)                      ; SHARP-U-READER
3     (PUSH-UNBOUND 1)
5     (CALLS1 114)                        ; SET-DISPATCH-MACRO-CHARACTER
7     (SKIP&RET 1)


Disassembly of function #:|(DEFVAR *INFO-DATA* NIL)-12|
(CONST 0) = (SPECIAL *INFO-DATA*)
(CONST 1) = *INFO-DATA*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *INFO-DATA*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *INFO-DATA*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *INFO-DATA*
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *INFO-DATA*
12    (SKIP&RET 1)


Disassembly of function #:|(DEFVAR *CURRENT-INFO-DATA* NIL)-13|
(CONST 0) = (SPECIAL *CURRENT-INFO-DATA*)
(CONST 1) = *CURRENT-INFO-DATA*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *CURRENT-INFO-DATA*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *CURRENT-INFO-DATA*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *CURRENT-INFO-DATA*
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *CURRENT-INFO-DATA*
12    (SKIP&RET 1)


Disassembly of function #:|(DEFVAR *INFO-PATHS* '("" "/usr/info/" "/usr/local/lib/info/" ...))-14|
(CONST 0) = (SPECIAL *INFO-PATHS*)
(CONST 1) = *INFO-PATHS*
(CONST 2) = 
("" "/usr/info/" "/usr/local/lib/info/" "/usr/local/info/"
 "/usr/local/gnu/info/" "/usr/share/info/")
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *INFO-PATHS*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *INFO-PATHS*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *INFO-PATHS*
8     (CONST&PUSH 2)                      ; ("" "/usr/info/" ...)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *INFO-PATHS*
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN FILE-TO-STRING (FILE &OPTIONAL #) ...)-15|
(CONST 0) = FILE-TO-STRING
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FILE-TO-STRING>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FILE-TO-STRING
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FILE-TO-STRING
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FILE-TO-STRING>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FILE-TO-STRING
8     (SKIP&RET 1)


Disassembly of function FILE-TO-STRING
(CONST 0) = 0
(CONST 1) = #.#'VALUES
(CONST 2) = "illegal file start ~a"
(CONST 3) = BASE-CHAR
(CONST 4) = :START
(CONST 5) = :END
(CONST 6) = READ-SEQUENCE
(CONST 7) = CLOSE
(CONST 8) = :ABORT
1 required argument
1 optional argument
No rest parameter
No keyword parameters
66 byte-code instructions:
0     (JMPIFBOUNDP 1 L5)
3     (CONST 0)                           ; 0
4     (STORE 1)
5     L5
5     (LOAD&PUSH 2)
6     (PUSH-UNBOUND 6)
8     (CALLS1&PUSH 249)                   ; OPEN
10    (UNWIND-PROTECT-OPEN L85)
13    (CONST 1)                           ; #.#'VALUES
14    (MVCALLP)
15    (LOAD&PUSH 3)
16    (CALLS2&PUSH 129)                   ; FILE-LENGTH
18    (CONST&PUSH 0)                      ; 0
19    (LOAD&PUSH 7)
20    (LOAD&PUSH 2)
21    (CALLSR&JMPIFNOT 2 49 L80)          ; <=
25    (LOAD&PUSH 0)
26    (LOAD&PUSH 7)
27    (CALLSR&PUSH 1 54)                  ; -
30    (PUSH-UNBOUND 7)
32    (CONST 3)                           ; BASE-CHAR
33    (STORE 5)
34    (CALLS1&PUSH 29)                    ; MAKE-ARRAY
36    (LOAD&PUSH 7)
37    (CONST&PUSH 0)                      ; 0
38    (CALLSR&JMPIFNOT 1 48 L46)          ; >
42    (LOAD&PUSH 5)
43    (LOAD&PUSH 8)
44    (CALLS2 128)                        ; FILE-POSITION
46    L46
46    (LOAD&PUSH 0)
47    (LOAD&PUSH 6)
48    (CONST&PUSH 4)                      ; :START
49    (CONST&PUSH 0)                      ; 0
50    (CONST&PUSH 5)                      ; :END
51    (LOAD&PUSH 5)
52    (CALLS2&PUSH 71)                    ; LENGTH
54    (CALL 6 6)                          ; READ-SEQUENCE
57    (POP)
58    (SKIP 1)
60    (MV-TO-STACK)
61    (LOADI 0 0 2)
65    (JMPIFNOT L70)
67    (PUSH)
68    (CALL1 7)                           ; CLOSE
70    L70
70    (MVCALL)
71    (UNWIND-PROTECT-NORMAL-EXIT)
72    (LOADI 0 0 0)
76    (JMPIFNOT L97)
78    (JMP L91)
80    L80
80    (CONST&PUSH 2)                      ; "illegal file start ~a"
81    (LOAD&PUSH 7)
82    (CALLSR 1 29)                       ; ERROR
85    L85
85    (LOADI 0 0 0)
89    (JMPIFNOT L97)
91    L91
91    (PUSH)
92    (CONST&PUSH 8)                      ; :ABORT
93    (T&PUSH)
94    (CALL 3 7)                          ; CLOSE
97    L97
97    (UNWIND-PROTECT-CLOSE)
98    (SKIP&RET 4)


Disassembly of function #:|(DEFUN ATOI (STRING START) ...)-16|
(CONST 0) = ATOI
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ATOI>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ATOI
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ATOI
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ATOI>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ATOI
8     (SKIP&RET 1)


Disassembly of function ATOI
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (PUSH-UNBOUND 2)
4     (T&PUSH)
5     (CALLS1 127)                        ; PARSE-INTEGER
7     (SKIP&RET 3)


Disassembly of function #:|(LET (# # # ...) (DEFUN INFO-GET-TAGS # ...))-17|
(CONST 0) = 
"[
]+Indirect:"
(CONST 1) = :CASE-SENSITIVE
(CONST 2) = COMPILE-REGEX
(CONST 3) = ""
(CONST 4) = 
"
([^
]+): ([0-9]+)"
(CONST 5) = 
"[
]+Tag Table:"
(CONST 6) = INFO-GET-TAGS
(CONST 7) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 8) = #<COMPILED-CLOSURE INFO-GET-TAGS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
30 byte-code instructions:
0     (NIL)
1     (MAKE-VECTOR1&PUSH 4)
3     (CONST&PUSH 0)                      ; "[
]+Indirect:"
4     (CONST&PUSH 1)                      ; :CASE-SENSITIVE
5     (T&PUSH)
6     (CALL 3 2)                          ; COMPILE-REGEX
9     (STOREC 0 0)
12    (CONST&PUSH 3)                      ; ""
13    (CONST&PUSH 1)                      ; :CASE-SENSITIVE
14    (T&PUSH)
15    (CALL 3 2)                          ; COMPILE-REGEX
18    (STOREC 0 1)
21    (CONST&PUSH 4)                      ; "
([^
]+): ([0-9]+)"
22    (CONST&PUSH 1)                      ; :CASE-SENSITIVE
23    (T&PUSH)
24    (CALL 3 2)                          ; COMPILE-REGEX
27    (STOREC 0 2)
30    (CONST&PUSH 5)                      ; "[
]+Tag Table:"
31    (CONST&PUSH 1)                      ; :CASE-SENSITIVE
32    (T&PUSH)
33    (CALL 3 2)                          ; COMPILE-REGEX
36    (STOREC 0 3)
39    (CONST&PUSH 6)                      ; INFO-GET-TAGS
40    (CALL1 7)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
42    (CONST&PUSH 6)                      ; INFO-GET-TAGS
43    (LOAD&PUSH 1)
44    (COPY-CLOSURE&PUSH 8 1)             ; #<COMPILED-CLOSURE INFO-GET-TAGS>
47    (CALLS2 130)                        ; SYSTEM::%PUTD
49    (CONST 6)                           ; INFO-GET-TAGS
50    (SKIP&RET 2)


Disassembly of function INFO-GET-TAGS
(CONST 0) = NIL
(CONST 1) = 0
(CONST 2) = *CASE-FOLD-SEARCH*
(CONST 3) = *MATCH-DATA*
(CONST 4) = FILE-TO-STRING
(CONST 5) = STRING-MATCH
(CONST 6) = MATCH-END
(CONST 7) = 2
(CONST 8) = MATCH-BEGINNING
(CONST 9) = ATOI
(CONST 10) = 1
(CONST 11) = GET-MATCH
(CONST 12) = "Need tags if have multiple files"
(CONST 13) = INFO-ERROR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
83 byte-code instructions:
0     (CONST&PUSH 1)                      ; 0
1     (T)
2     (BIND 2)                            ; *CASE-FOLD-SEARCH*
4     (NIL)
5     (BIND 3)                            ; *MATCH-DATA*
7     (PUSH-NIL 2)
9     (LOAD&PUSH 10)
10    (CALL1&PUSH 4)                      ; FILE-TO-STRING
12    (CONST&PUSH 1)                      ; 0
13    (LOADV&PUSH 0 1)
16    (LOAD&PUSH 2)
17    (CONST&PUSH 1)                      ; 0
18    (CALL&PUSH 3 5)                     ; STRING-MATCH
21    (CONST&PUSH 1)                      ; 0
22    (CALLSR&JMPIFNOT 1 50 L88)          ; >=
26    (CONST&PUSH 1)                      ; 0
27    (CALL1 6)                           ; MATCH-END
29    (STORE 0)
30    (LOADV&PUSH 0 2)
33    (LOAD&PUSH 2)
34    (LOAD&PUSH 2)
35    (CALL 3 5)                          ; STRING-MATCH
38    (STORE 10)
40    (JMP L74)
42    L42
42    (LOAD&PUSH 1)
43    (LOAD&PUSH 1)
44    (CONST&PUSH 1)                      ; 0
45    (CALL1&PUSH 6)                      ; MATCH-END
47    (CALLS2&STORE 69 3)                 ; SUBSEQ
50    (LOAD&JMPIFNOT 2 L128)
54    (JMP L122)
57    L57
57    (CONST&PUSH 1)                      ; 0
58    (CALL1 6)                           ; MATCH-END
60    (STORE 0)
61    (LOAD&PUSH 1)
62    (CONST&PUSH 7)                      ; 2
63    (CALL1&PUSH 8)                      ; MATCH-BEGINNING
65    (CALL2&PUSH 9)                      ; ATOI
67    (LOAD&PUSH 2)
68    (CONST&PUSH 10)                     ; 1
69    (CALL2 11)                          ; GET-MATCH
71    (CONS&PUSH)
72    (LOAD&CONS&STORE 2)
74    L74
74    (LOADV&PUSH 0 3)
77    (LOAD&PUSH 2)
78    (LOAD&PUSH 2)
79    (LOAD&PUSH 13)
80    (CALL&PUSH 4 5)                     ; STRING-MATCH
83    (CONST&PUSH 1)                      ; 0
84    (CALLSR&JMPIF 1 50 L57)             ; >=
88    L88
88    (LOADV&PUSH 0 4)
91    (LOAD&PUSH 2)
92    (LOAD&PUSH 2)
93    (CALL&PUSH 3 5)                     ; STRING-MATCH
96    (CONST&PUSH 1)                      ; 0
97    (CALLSR&JMPIFNOT 1 50 L119)         ; >=
101   (CONST&PUSH 1)                      ; 0
102   (CALL1 6)                           ; MATCH-END
104   (STORE 0)
105   (LOADV&PUSH 0 2)
108   (LOAD&PUSH 2)
109   (LOAD&PUSH 2)
110   (CALL&PUSH 3 5)                     ; STRING-MATCH
113   (CONST&PUSH 1)                      ; 0
114   (CALLSR&JMPIF 1 50 L42)             ; >=
119   L119
119   (LOAD&JMPIFNOT 2 L128)
122   L122
122   (LOAD&JMPIF 3 L128)
125   (CONST&PUSH 12)                     ; "Need tags if have multiple files"
126   (CALL1 13)                          ; INFO-ERROR
128   L128
128   (LOAD&PUSH 3)
129   (LOAD&PUSH 3)
130   (CALLS2 73)                         ; NREVERSE
132   (CONS)
133   (SKIP 4)
135   (UNBIND 2)
137   (SKIP&RET 3)


Disassembly of function #:|(DEFUN RE-QUOTE-STRING (X) ...)-18|
(CONST 0) = RE-QUOTE-STRING
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RE-QUOTE-STRING>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RE-QUOTE-STRING
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RE-QUOTE-STRING
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RE-QUOTE-STRING>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RE-QUOTE-STRING
8     (SKIP&RET 1)


Disassembly of function RE-QUOTE-STRING
(CONST 0) = 0
(CONST 1) = "\\()[].*|^$"
(CONST 2) = #\\
(CONST 3) = BASE-CHAR
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
62 byte-code instructions:
0     (CONST&PUSH 0)                      ; 0
1     (LOAD&PUSH 2)
2     (CALLS2&PUSH 71)                    ; LENGTH
4     (NIL&PUSH)
5     (CONST&PUSH 0)                      ; 0
6     (NIL&PUSH)
7     (JMP L75)
10    L10
10    (CONST&PUSH 2)                      ; #\\
11    (LOAD&PUSH 1)
12    (PUSH-UNBOUND 1)
14    (CALLS1 28)                         ; VECTOR-PUSH-EXTEND
16    (LOAD&JMPIFNOT 0 L53)
19    (JMP L47)
21    L21
21    (LOAD&JMPIF 0 L10)
24    (LOAD&INC&STORE 1)
26    (LOAD&JMPIFNOT 0 L53)
29    (JMP L47)
31    L31
31    (LOAD&PUSH 6)
32    (LOAD&PUSH 5)
33    (CALLSR&STORE 1 1 2)                ; AREF
37    (PUSH)
38    (CONST&PUSH 1)                      ; "\\()[].*|^$"
39    (PUSH-UNBOUND 6)
41    (CALLS2&JMPIF 95 L21)               ; POSITION
44    (LOAD&JMPIFNOT 0 L53)
47    L47
47    (LOAD&PUSH 2)
48    (LOAD&PUSH 1)
49    (PUSH-UNBOUND 1)
51    (CALLS1 28)                         ; VECTOR-PUSH-EXTEND
53    L53
53    (LOAD&INC&STORE 4)
55    (JMP L75)
57    L57
57    (LOAD&PUSH 6)
58    (CALLS2&PUSH 71)                    ; LENGTH
60    (LOAD&PUSH 2)
61    (CALLSR&PUSH 2 53)                  ; +
64    (PUSH-UNBOUND 7)
66    (CONST 3)                           ; BASE-CHAR
67    (STORE 5)
68    (CONST 0)                           ; 0
69    (STORE 2)
70    (CALLS1&STORE 29 0)                 ; MAKE-ARRAY
73    (CONST 0)                           ; 0
74    (STORE 4)
75    L75
75    (LOAD&PUSH 4)
76    (LOAD&PUSH 4)
77    (CALLSR&JMPIF 1 47 L31)             ; <
81    (LOAD&JMPIF 0 L92)
84    (LOAD&PUSH 1)
85    (CONST&PUSH 0)                      ; 0
86    (CALLSR&JMPIF 1 48 L57)             ; >
90    (LOAD 6)
91    (STORE 0)
92    L92
92    (POP)
93    (SKIP&RET 6)

WARNING in (DEFUN GET-MATCH (STRING I) ...)-19 in lines 206..207 :
Function GET-MATCH
 was already defined in lines 32..33

Disassembly of function #:|(DEFUN GET-MATCH (STRING I) ...)-19|
(CONST 0) = GET-MATCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-MATCH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-MATCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-MATCH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-MATCH>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GET-MATCH
8     (SKIP&RET 1)


Disassembly of function GET-MATCH
(CONST 0) = MATCH-BEGINNING
(CONST 1) = MATCH-END
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&PUSH 2)
2     (CALL1&PUSH 0)                      ; MATCH-BEGINNING
4     (LOAD&PUSH 3)
5     (CALL1&PUSH 1)                      ; MATCH-END
7     (CALLS2 69)                         ; SUBSEQ
9     (SKIP&RET 3)


Disassembly of function #:|(DEFUN STRING-CONCATENATE (&REST STRINGS) ...)-20|
(CONST 0) = STRING-CONCATENATE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE STRING-CONCATENATE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; STRING-CONCATENATE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; STRING-CONCATENATE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE STRING-CONCATENATE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; STRING-CONCATENATE
8     (SKIP&RET 1)


Disassembly of function STRING-CONCATENATE
(CONST 0) = #.#'CONCATENATE
(CONST 1) = STRING
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; #.#'CONCATENATE
1     (CONST&PUSH 1)                      ; STRING
2     (LOAD 3)
3     (APPLY&SKIP&RET 1 2)


Disassembly of function #:|(DEFUN GET-NODES (PAT NODE-STRING) ...)-21|
(CONST 0) = GET-NODES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-NODES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-NODES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-NODES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-NODES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GET-NODES
8     (SKIP&RET 1)


Disassembly of function GET-NODES
(CONST 0) = 0
(CONST 1) = *CASE-FOLD-SEARCH*
(CONST 2) = *MATCH-DATA*
(CONST 3) = "Node: ([^]*"
(CONST 4) = RE-QUOTE-STRING
(CONST 5) = "[^]*)"
(CONST 6) = STRING-CONCATENATE
(CONST 7) = :CASE-SENSITIVE
(CONST 8) = COMPILE-REGEX
(CONST 9) = STRING-MATCH
(CONST 10) = MATCH-END
(CONST 11) = 1
(CONST 12) = GET-MATCH
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*CASE-FOLD-SEARCH*)
42 byte-code instructions:
0     (CONST&PUSH 0)                      ; 0
1     (T)
2     (BIND 1)                            ; *CASE-FOLD-SEARCH*
4     (NIL&PUSH)
5     (NIL)
6     (BIND 2)                            ; *MATCH-DATA*
8     (LOAD 9)
9     (JMPIFNOT1 L56)
11    (CONST&PUSH 3)                      ; "Node: ([^]*"
12    (LOAD&PUSH 11)
13    (CALL1&PUSH 4)                      ; RE-QUOTE-STRING
15    (CONST&PUSH 5)                      ; "[^]*)"
16    (CALL&PUSH 3 6)                     ; STRING-CONCATENATE
19    (CONST&PUSH 7)                      ; :CASE-SENSITIVE
20    (GETVALUE 1)                        ; *CASE-FOLD-SEARCH*
22    (NOT)
23    (PUSH)
24    (CALL&PUSH 3 8)                     ; COMPILE-REGEX
27    (JMP L40)
29    L29
29    (CONST&PUSH 0)                      ; 0
30    (CALL1 10)                          ; MATCH-END
32    (STORE 8)
34    (LOAD&PUSH 10)
35    (CONST&PUSH 11)                     ; 1
36    (CALL2&PUSH 12)                     ; GET-MATCH
38    (LOAD&CONS&STORE 4)
40    L40
40    (LOAD&PUSH 0)
41    (LOAD&PUSH 11)
42    (LOAD&PUSH 10)
43    (CALL&PUSH 3 9)                     ; STRING-MATCH
46    (CONST&PUSH 0)                      ; 0
47    (CALLSR&JMPIF 1 50 L29)             ; >=
51    (LOAD&PUSH 4)
52    (CALLS2 73)                         ; NREVERSE
54    (SKIP 1)
56    L56
56    (UNBIND1)
57    (SKIP 1)
59    (UNBIND1)
60    (SKIP&RET 4)


Disassembly of function #:|(DEFUN GET-INDEX-NODE NIL ...)-22|
(CONST 0) = GET-INDEX-NODE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-INDEX-NODE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-INDEX-NODE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-INDEX-NODE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-INDEX-NODE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GET-INDEX-NODE
8     (SKIP&RET 1)


Disassembly of function GET-INDEX-NODE
(CONST 0) = *CURRENT-INFO-DATA*
(CONST 1) = 1
(CONST 2) = "index"
(CONST 3) = GET-NODES
(CONST 4) = SHOW-INFO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*CURRENT-INFO-DATA*)
34 byte-code instructions:
0     (GETVALUE 0)                        ; *CURRENT-INFO-DATA*
2     (CDR)
3     (CDR)
4     (CAR)
5     (JMPIF1 L43)
7     (NIL&PUSH)
8     (CONST&PUSH 1)                      ; 1
9     (GETVALUE&PUSH 0)                   ; *CURRENT-INFO-DATA*
11    (CALLS1 148)                        ; NTH
13    (CAR&PUSH)
14    (LOAD&JMPIFNOT 0 L22)
17    (CONST&PUSH 2)                      ; "index"
18    (LOAD&PUSH 1)
19    (CALL2 3)                           ; GET-NODES
21    (CAR)
22    L22
22    (PUSH)
23    (LOAD 0)
24    (JMPIFNOT1 L41)
26    (PUSH)
27    (NIL&PUSH)
28    (CALL2 4)                           ; SHOW-INFO
30    (STORE 2)
31    (GETVALUE&PUSH 0)                   ; *CURRENT-INFO-DATA*
33    (LOAD 0)
34    (CDR)
35    (CDR&PUSH)
36    (LOAD&PUSH 4)
37    (CALLS1 169)                        ; SYSTEM::%RPLACA
39    (SKIP&RET 5)
41    L41
41    (SKIP&RET 4)
43    L43
43    (SKIP&RET 1)


Disassembly of function #:|(DEFUN NODES-FROM-INDEX (PAT) ...)-23|
(CONST 0) = NODES-FROM-INDEX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NODES-FROM-INDEX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NODES-FROM-INDEX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NODES-FROM-INDEX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NODES-FROM-INDEX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NODES-FROM-INDEX
8     (SKIP&RET 1)


Disassembly of function NODES-FROM-INDEX
(CONST 0) = 0
(CONST 1) = GET-INDEX-NODE
(CONST 2) = *CASE-FOLD-SEARCH*
(CONST 3) = *MATCH-DATA*
(CONST 4) = 
"
\\* ([^:
]*"
(CONST 5) = RE-QUOTE-STRING
(CONST 6) = 
"[^:
]*):[ 	]+([^	
,.]+)"
(CONST 7) = STRING-CONCATENATE
(CONST 8) = :CASE-SENSITIVE
(CONST 9) = COMPILE-REGEX
(CONST 10) = STRING-MATCH
(CONST 11) = MATCH-END
(CONST 12) = 1
(CONST 13) = GET-MATCH
(CONST 14) = 2
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*CASE-FOLD-SEARCH*)
48 byte-code instructions:
0     (CONST&PUSH 0)                      ; 0
1     (NIL&PUSH)
2     (T&PUSH)
3     (NIL&PUSH)
4     (CALL0 1)                           ; GET-INDEX-NODE
6     (PUSH)
7     (LOAD 2)
8     (BIND 2)                            ; *CASE-FOLD-SEARCH*
10    (LOAD 4)
11    (BIND 3)                            ; *MATCH-DATA*
13    (LOAD 6)
14    (JMPIFNOT1 L66)
16    (CONST&PUSH 4)                      ; "
\\* ([^:
]*"
17    (LOAD&PUSH 13)
18    (CALL1&PUSH 5)                      ; RE-QUOTE-STRING
20    (CONST&PUSH 6)                      ; "[^:
]*):[ 	]+([^	
,.]+)"
21    (CALL&PUSH 3 7)                     ; STRING-CONCATENATE
24    (CONST&PUSH 8)                      ; :CASE-SENSITIVE
25    (GETVALUE 2)                        ; *CASE-FOLD-SEARCH*
27    (NOT)
28    (PUSH)
29    (CALL&PUSH 3 9)                     ; COMPILE-REGEX
32    (JMP L50)
34    L34
34    (CONST&PUSH 0)                      ; 0
35    (CALL1 11)                          ; MATCH-END
37    (STORE 11)
39    (LOAD&PUSH 7)
40    (CONST&PUSH 12)                     ; 1
41    (CALL2&PUSH 13)                     ; GET-MATCH
43    (LOAD&PUSH 8)
44    (CONST&PUSH 14)                     ; 2
45    (CALL2 13)                          ; GET-MATCH
47    (CONS&PUSH)
48    (LOAD&CONS&STORE 10)
50    L50
50    (LOAD&PUSH 0)
51    (LOAD&PUSH 8)
52    (LOAD&PUSH 13)
53    (CALL&PUSH 3 10)                    ; STRING-MATCH
56    (CONST&PUSH 0)                      ; 0
57    (CALLSR&JMPIF 1 50 L34)             ; >=
61    (LOAD&PUSH 10)
62    (CALLS2 73)                         ; NREVERSE
64    (SKIP 1)
66    L66
66    (UNBIND 2)
68    (SKIP&RET 7)


Disassembly of function #:|(DEFUN GET-NODE-INDEX (PAT NODE-STRING) ...)-24|
(CONST 0) = GET-NODE-INDEX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-NODE-INDEX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-NODE-INDEX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-NODE-INDEX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-NODE-INDEX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GET-NODE-INDEX
8     (SKIP&RET 1)


Disassembly of function GET-NODE-INDEX
(CONST 0) = *MATCH-DATA*
(CONST 1) = 0
(CONST 2) = "Node: "
(CONST 3) = RE-QUOTE-STRING
(CONST 4) = "([0-9]+)"
(CONST 5) = STRING-CONCATENATE
(CONST 6) = :CASE-SENSITIVE
(CONST 7) = *CASE-FOLD-SEARCH*
(CONST 8) = COMPILE-REGEX
(CONST 9) = STRING-MATCH
(CONST 10) = 1
(CONST 11) = MATCH-BEGINNING
(CONST 12) = ATOI
(CONST 13) = "can't find node ~s"
(CONST 14) = INFO-ERROR
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*CASE-FOLD-SEARCH*)
36 byte-code instructions:
0     (LOAD&PUSH 2)
1     (NIL)
2     (BIND 0)                            ; *MATCH-DATA*
4     (LOAD&JMPIFNOT 5 L41)
7     (CONST&PUSH 2)                      ; "Node: "
8     (LOAD&PUSH 7)
9     (CALL1&PUSH 3)                      ; RE-QUOTE-STRING
11    (CONST&PUSH 4)                      ; "([0-9]+)"
12    (CALL&PUSH 3 5)                     ; STRING-CONCATENATE
15    (CONST&PUSH 6)                      ; :CASE-SENSITIVE
16    (GETVALUE 7)                        ; *CASE-FOLD-SEARCH*
18    (NOT)
19    (PUSH)
20    (CALL 3 8)                          ; COMPILE-REGEX
23    (STORE 6)
24    (PUSH)
25    (LOAD&PUSH 6)
26    (CALL2&PUSH 9)                      ; STRING-MATCH
28    (CONST&PUSH 1)                      ; 0
29    (CALLSR&JMPIF 1 50 L44)             ; >=
33    (CONST&PUSH 13)                     ; "can't find node ~s"
34    (LOAD&PUSH 4)
35    (CALL2 14)                          ; INFO-ERROR
37    (CONST 1)                           ; 0
38    L38
38    (UNBIND1)
39    (SKIP&RET 4)
41    L41
41    (CONST 1)                           ; 0
42    (JMP L38)
44    L44
44    (LOAD&PUSH 5)
45    (CONST&PUSH 10)                     ; 1
46    (CALL1&PUSH 11)                     ; MATCH-BEGINNING
48    (CALL2 12)                          ; ATOI
50    (JMP L38)


Disassembly of function #:|(DEFUN ALL-MATCHES (PAT ST) ...)-25|
(CONST 0) = ALL-MATCHES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ALL-MATCHES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ALL-MATCHES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ALL-MATCHES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ALL-MATCHES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ALL-MATCHES
8     (SKIP&RET 1)


Disassembly of function ALL-MATCHES
(CONST 0) = 0
(CONST 1) = *MATCH-DATA*
(CONST 2) = STRING-MATCH
(CONST 3) = MATCH-END
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
27 byte-code instructions:
0     (CONST&PUSH 0)                      ; 0
1     (NIL)
2     (BIND 1)                            ; *MATCH-DATA*
4     (NIL&PUSH)
5     (JMP L17)
7     L7
7     (LOAD&PUSH 4)
8     (CONST&PUSH 0)                      ; 0
9     (CALL1 3)                           ; MATCH-END
11    (STORE 5)
12    (PUSH)
13    (LIST&PUSH 2)
15    (LOAD&CONS&STORE 0)
17    L17
17    (LOAD&PUSH 7)
18    (LOAD&PUSH 7)
19    (LOAD&PUSH 6)
20    (CALL 3 2)                          ; STRING-MATCH
23    (STORE 4)
24    (PUSH)
25    (CONST&PUSH 0)                      ; 0
26    (CALLSR&JMPIF 1 50 L7)              ; >=
30    (LOAD&PUSH 0)
31    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
33    (SKIP 1)
35    (UNBIND1)
36    (SKIP&RET 4)


Disassembly of function #:|(DEFMACRO NODE (PROP X) ...)-26|
(CONST 0) = NODE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NODE>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; NODE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NODE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NODE>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; NODE
10    (SKIP&RET 1)


Disassembly of function NODE
(CONST 0) = 3
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = NTH
(CONST 3) = (STRING BEGIN END HEADER NAME INFO-SUBFILE FILE TAGS)
1 required argument
1 optional argument
No rest parameter
No keyword parameters
23 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 3
4     (CALLSR&JMPIF 1 46 L27)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR&PUSH)
11    (LOAD 3)
12    (CDR)
13    (CDR)
14    (CAR&PUSH)
15    (CONST&PUSH 2)                      ; NTH
16    (LOAD&PUSH 2)
17    (CONST&PUSH 3)                      ; (STRING BEGIN END HEADER NAME ...)
18    (PUSH-UNBOUND 6)
20    (CALLS2&PUSH 95)                    ; POSITION
22    (LOAD&PUSH 2)
23    (LIST 3)
25    (SKIP&RET 5)
27    L27
27    (LOAD&PUSH 2)
28    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
30    (SKIP&RET 3)


Disassembly of function #:|(DEFUN NODE-OFFSET (NODE) ...)-27|
(CONST 0) = NODE-OFFSET
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NODE-OFFSET>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NODE-OFFSET
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NODE-OFFSET
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NODE-OFFSET>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; NODE-OFFSET
8     (SKIP&RET 1)


Disassembly of function NODE-OFFSET
(CONST 0) = 5
(CONST 1) = 1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
9 byte-code instructions:
0     (CONST&PUSH 0)                      ; 5
1     (LOAD&PUSH 2)
2     (CALLS1 148)                        ; NTH
4     (CAR&PUSH)
5     (CONST&PUSH 1)                      ; 1
6     (LOAD&PUSH 3)
7     (CALLS1&PUSH 148)                   ; NTH
9     (CALLSR 2 53)                       ; +
12    (SKIP&RET 2)


Disassembly of function #:|(DEFUN FILE-SEARCH (NAME &OPTIONAL # ...) ...)-28|
(CONST 0) = FILE-SEARCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = FUNCTION
(CONST 3) = 
"Search for the first occurrence of a file in the directory list DIRS
that matches the name NAME with extention EXT"
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
(CONST 5) = #<COMPILED-CLOSURE FILE-SEARCH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; FILE-SEARCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FILE-SEARCH
4     (CONST&PUSH 2)                      ; FUNCTION
5     (CONST&PUSH 3)                      ; "Search for the first occurrence of a file in the directory list DIRS
that matches the name NAME with extention EXT"
6     (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
9     (CONST&PUSH 0)                      ; FILE-SEARCH
10    (CONST&PUSH 5)                      ; #<COMPILED-CLOSURE FILE-SEARCH>
11    (CALLS2 130)                        ; SYSTEM::%PUTD
13    (CONST 0)                           ; FILE-SEARCH
14    (SKIP&RET 1)


Disassembly of function FILE-SEARCH
(CONST 0) = *INFO-PATHS*
(CONST 1) = ""
(CONST 2) = "Lookup failed in directores: ~S for name ~S with extensions ~S"
1 required argument
3 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*INFO-PATHS*)
62 byte-code instructions:
0     (JMPIFBOUNDP 3 L6)
3     (GETVALUE 0)                        ; *INFO-PATHS*
5     (STORE 3)
6     L6
6     (UNBOUND->NIL 2)
8     (JMPIFBOUNDP 1 L13)
11    (T&STORE 1)
13    L13
13    (LOAD&PUSH 3)
14    (NIL&PUSH)
15    (JMP L82)
18    L18
18    (LOAD&CAR&STORE 1 0)
21    (PUSH-UNBOUND 8)
23    (LOAD&PUSH 8)
24    (PUSH-UNBOUND 1)
26    (CALLS1&STORE 234 3)                ; PATHNAME-DIRECTORY
29    (CALLS1&PUSH 243)                   ; MAKE-PATHNAME
31    (LOAD&PUSH 5)
32    (NIL&PUSH)
33    (JMP L74)
35    L35
35    (NIL)
36    (JMP L63)
38    L38
38    (POP)
39    (SKIP&RET 10)
41    L41
41    (CONST&PUSH 2)                      ; "Lookup failed in directores: ~S for name ~S with extensions ~S"
42    (LOAD&PUSH 4)
43    (LOAD&PUSH 6)
44    (LOAD&PUSH 5)
45    (CALLSR 3 29)                       ; ERROR
48    L48
48    (LOAD&CAR&STORE 1 0)
51    (LOAD&PUSH 2)
52    (PUSH-UNBOUND 7)
54    (LOAD 17)
56    (STORE 2)
57    (LOAD&PUSH 8)
58    (CONST&PUSH 1)                      ; ""
59    (CALLS2&JMPIF 3 L35)                ; EQUALP
62    (LOAD 8)
63    L63
63    (STORE 1)
64    (CALLS1&PUSH 243)                   ; MAKE-PATHNAME
66    (LOAD&PUSH 0)
67    (CALLS1&JMPIF 246 L38)              ; PROBE-FILE
70    (SKIP 1)
72    (LOAD&CDR&STORE 1)
74    L74
74    (LOAD&PUSH 1)
75    (CALLS1&JMPIFNOT 146 L48)           ; ENDP
78    (SKIP 3)
80    (LOAD&CDR&STORE 1)
82    L82
82    (LOAD&PUSH 1)
83    (CALLS1&JMPIFNOT 146 L18)           ; ENDP
87    (SKIP 2)
89    (LOAD&JMPIF 1 L41)
92    (NIL)
93    (SKIP&RET 5)


Disassembly of function #:|(DEFVAR *OLD-LIB-DIRECTORY* NIL)-29|
(CONST 0) = (SPECIAL *OLD-LIB-DIRECTORY*)
(CONST 1) = *OLD-LIB-DIRECTORY*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *OLD-LIB-DIRECTORY*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *OLD-LIB-DIRECTORY*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *OLD-LIB-DIRECTORY*
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *OLD-LIB-DIRECTORY*
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN SETUP-INFO (NAME) ...)-30|
(CONST 0) = SETUP-INFO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SETUP-INFO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SETUP-INFO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SETUP-INFO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SETUP-INFO>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SETUP-INFO
8     (SKIP&RET 1)


Disassembly of function SETUP-INFO
(CONST 0) = "DIR"
(CONST 1) = "dir"
(CONST 2) = *INFO-PATHS*
(CONST 3) = ("" "info")
(CONST 4) = FILE-SEARCH
(CONST 5) = "dir"
(CONST 6) = "Failed to find info directory"
(CONST 7) = *INFO-DATA*
(CONST 8) = EQUAL
(CONST 9) = *CURRENT-INFO-DATA*
(CONST 10) = INFO-GET-TAGS
(CONST 11) = #<COMPILED-CLOSURE SETUP-INFO-2>
(CONST 12) = *STANDARD-OUTPUT*
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*INFO-DATA* *STANDARD-OUTPUT* *INFO-PATHS*)
writes special variables : (*INFO-DATA* *CURRENT-INFO-DATA*)
56 byte-code instructions:
0     (PUSH-NIL 2)
2     (LOAD&PUSH 3)
3     (CONST&PUSH 0)                      ; "DIR"
4     (CALLS2&JMPIFNOT 2 L9)              ; EQUAL
7     (CONST 1)                           ; "dir"
8     (STORE 3)
9     L9
9     (LOAD&PUSH 3)
10    (GETVALUE&PUSH 2)                   ; *INFO-PATHS*
12    (CONST&PUSH 3)                      ; ("" "info")
13    (NIL&PUSH)
14    (CALL 4 4)                          ; FILE-SEARCH
17    (STORE 0)
18    (JMPIF L25)
20    (LOAD&PUSH 3)
21    (CONST&PUSH 5)                      ; "dir"
22    (CALLS2&JMPIFNOT 2 L38)             ; EQUAL
25    L25
25    (LOAD&JMPIF 0 L48)
28    (CONST&PUSH 11)                     ; #<COMPILED-CLOSURE SETUP-INFO-2>
29    (GETVALUE&PUSH 12)                  ; *STANDARD-OUTPUT*
31    (LOAD&PUSH 5)
32    (CALLSR 2 21)                       ; FUNCALL
35    L35
35    (NIL)
36    (SKIP&RET 4)
38    L38
38    (CONST&PUSH 6)                      ; "Failed to find info directory"
39    (CALLSR 0 29)                       ; ERROR
42    L42
42    (SETVALUE 9)                        ; *CURRENT-INFO-DATA*
44    (SKIP 1)
46    (JMP L35)
48    L48
48    (PUSH)
49    (CALLS1&PUSH 245)                   ; TRUENAME
51    (PUSH-UNBOUND 1)
53    (CALLS1&PUSH 244)                   ; NAMESTRING
55    (LOAD&PUSH 0)
56    (GETVALUE&PUSH 7)                   ; *INFO-DATA*
58    (CONST&PUSH 8)                      ; EQUAL
59    (PUSH-UNBOUND 2)
61    (CALLS1&STORE 187 2)                ; ASSOC
64    (JMPIF L42)
66    (LOAD&PUSH 0)
67    (LOAD&PUSH 1)
68    (CALL1&PUSH 10)                     ; INFO-GET-TAGS
70    (NIL&PUSH)
71    (LIST 3)
73    (SETVALUE 9)                        ; *CURRENT-INFO-DATA*
75    (PUSH)
76    (GETVALUE 7)                        ; *INFO-DATA*
78    (CONS)
79    (SETVALUE 7)                        ; *INFO-DATA*
81    (SKIP 1)
83    (JMP L35)


Disassembly of function SETUP-INFO-2
(CONST 0) = "(not found "
(CONST 1) = #\)
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
12 byte-code instructions:
0     (CONST&PUSH 0)                      ; "(not found "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 129)                        ; PRIN1
10    (CONST&PUSH 1)                      ; #\)
11    (LOAD&PUSH 4)
12    (CALLS1 136)                        ; WRITE-CHAR
14    (LOAD 1)
15    (SKIP&RET 4)


Disassembly of function #:|(DEFUN GET-INFO-CHOICES (PAT TYPE) ...)-31|
(CONST 0) = GET-INFO-CHOICES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE GET-INFO-CHOICES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GET-INFO-CHOICES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; GET-INFO-CHOICES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE GET-INFO-CHOICES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; GET-INFO-CHOICES
8     (SKIP&RET 1)


Disassembly of function GET-INFO-CHOICES
(CONST 0) = INDEX
(CONST 1) = NODES-FROM-INDEX
(CONST 2) = 1
(CONST 3) = *CURRENT-INFO-DATA*
(CONST 4) = GET-NODES
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*CURRENT-INFO-DATA*)
13 byte-code instructions:
0     (LOAD&PUSH 1)
1     (JMPIFEQTO 0 L15)                   ; INDEX
4     (LOAD&PUSH 2)
5     (CONST&PUSH 2)                      ; 1
6     (GETVALUE&PUSH 3)                   ; *CURRENT-INFO-DATA*
8     (CALLS1 148)                        ; NTH
10    (CAR&PUSH)
11    (CALL2 4)                           ; GET-NODES
13    (SKIP&RET 3)
15    L15
15    (LOAD&PUSH 2)
16    (CALL1 1)                           ; NODES-FROM-INDEX
18    (SKIP&RET 3)


Disassembly of function #:|(DEFUN ADD-FILE (V FILE &AUX ...) ...)-32|
(CONST 0) = ADD-FILE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ADD-FILE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ADD-FILE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ADD-FILE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ADD-FILE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ADD-FILE
8     (SKIP&RET 1)


Disassembly of function ADD-FILE
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
13 byte-code instructions:
0     (LOAD&PUSH 2)
1     (LOAD&JMPIFNOT 0 L17)
4     L4
4     (LOAD&PUSH 0)
5     (LOAD&CAR&PUSH 1)
7     (LOAD&PUSH 4)
8     (LIST&PUSH 2)
10    (CALLS1 169)                        ; SYSTEM::%RPLACA
12    (LOAD&CDR&STORE 0)
14    (LOAD&JMPIF 0 L4)
17    L17
17    (LOAD 3)
18    (SKIP&RET 4)


Disassembly of function #:|(DEFUN INFO-ERROR (&REST L) ...)-33|
(CONST 0) = INFO-ERROR
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INFO-ERROR>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; INFO-ERROR
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INFO-ERROR
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INFO-ERROR>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; INFO-ERROR
8     (SKIP&RET 1)


Disassembly of function INFO-ERROR
(CONST 0) = #.#'ERROR
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
3 byte-code instructions:
0     (CONST&PUSH 0)                      ; #.#'ERROR
1     (LOAD 2)
2     (APPLY&SKIP&RET 0 2)


Disassembly of function #:|(DEFVAR *LAST-INFO-FILE* NIL)-34|
(CONST 0) = (SPECIAL *LAST-INFO-FILE*)
(CONST 1) = *LAST-INFO-FILE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *LAST-INFO-FILE*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *LAST-INFO-FILE*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *LAST-INFO-FILE*
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *LAST-INFO-FILE*
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN INFO-GET-FILE (PATHNAME) ...)-35|
(CONST 0) = INFO-GET-FILE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INFO-GET-FILE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; INFO-GET-FILE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INFO-GET-FILE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INFO-GET-FILE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; INFO-GET-FILE
8     (SKIP&RET 1)


Disassembly of function INFO-GET-FILE
(CONST 0) = *CURRENT-INFO-DATA*
(CONST 1) = *LAST-INFO-FILE*
(CONST 2) = FILE-TO-STRING
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*LAST-INFO-FILE* *CURRENT-INFO-DATA*)
writes special variable : (*LAST-INFO-FILE*)
28 byte-code instructions:
0     (GETVALUE 0)                        ; *CURRENT-INFO-DATA*
2     (CAR&PUSH)
3     (CALLS2&JMPIF 7 L25)                ; STRINGP
6     (LOAD 1)
7     L7
7     (STORE 1)
8     (GETVALUE 1)                        ; *LAST-INFO-FILE*
10    (CAR&PUSH)
11    (LOAD&PUSH 2)
12    (CALLS2&JMPIF 2 L35)                ; EQUAL
15    (LOAD&PUSH 1)
16    (LOAD&PUSH 2)
17    (CALL1 2)                           ; FILE-TO-STRING
19    (CONS)
20    (SETVALUE 1)                        ; *LAST-INFO-FILE*
22    L22
22    (CDR)
23    (SKIP&RET 2)
25    L25
25    (LOAD&PUSH 1)
26    (GETVALUE 0)                        ; *CURRENT-INFO-DATA*
28    (CAR&PUSH)
29    (PUSH-UNBOUND 2)
31    (CALLS1 241)                        ; MERGE-PATHNAMES
33    (JMP L7)
35    L35
35    (GETVALUE 1)                        ; *LAST-INFO-FILE*
37    (JMP L22)


Disassembly of function #:|(DEFUN INFO-SUBFILE (N) ...)-36|
(CONST 0) = INFO-SUBFILE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INFO-SUBFILE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; INFO-SUBFILE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INFO-SUBFILE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INFO-SUBFILE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; INFO-SUBFILE
8     (SKIP&RET 1)


Disassembly of function INFO-SUBFILE
(CONST 0) = 1
(CONST 1) = *CURRENT-INFO-DATA*
(CONST 2) = 0
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*CURRENT-INFO-DATA*)
41 byte-code instructions:
0     (CONST&PUSH 0)                      ; 1
1     (GETVALUE&PUSH 1)                   ; *CURRENT-INFO-DATA*
3     (CALLS1 148)                        ; NTH
5     (CDR&PUSH)
6     (PUSH-NIL 2)
8     (LOAD&JMPIFNOT 2 L17)
11    (LOAD&PUSH 4)
12    (CONST&PUSH 2)                      ; 0
13    (CALLSR&JMPIF 1 50 L31)             ; >=
17    L17
17    (LOAD&JMPIF 1 L25)
20    L20
20    (CONST&PUSH 2)                      ; 0
21    (GETVALUE 1)                        ; *CURRENT-INFO-DATA*
23    (CAR)
24    (CONS)
25    L25
25    (PUSH)
26    (LOAD&PUSH 1)
27    (STACK-TO-MV 2)
29    (SKIP&RET 5)
31    L31
31    (LOAD&PUSH 2)
32    (NIL&PUSH)
33    (JMP L39)
35    L35
35    (LOAD 0)
36    (STORE 3)
37    (LOAD&CDR&STORE 1)
39    L39
39    (LOAD&PUSH 1)
40    (CALLS1&JMPIF 146 L55)              ; ENDP
43    (LOAD&CAR&STORE 1 0)
46    (CAR&PUSH)
47    (LOAD&PUSH 7)
48    (CALLSR&JMPIFNOT 1 48 L35)          ; >
52    (LOAD&CAR&STORE 0 2)
55    L55
55    (SKIP 2)
57    (LOAD&JMPIFNOT 1 L20)
60    (JMP L25)


Disassembly of function #:|(LET (# # #) (DEFUN INFO-NODE-FROM-POSITION # ...))-37|
(CONST 0) = "^_"
(CONST 1) = :CASE-SENSITIVE
(CONST 2) = COMPILE-REGEX
(CONST 3) = 
"[
][^
]*Node:[ 	]+([^
	,]+)[
	,][^
]*
"
(CONST 4) = "[]"
(CONST 5) = INFO-NODE-FROM-POSITION
(CONST 6) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 7) = #<COMPILED-CLOSURE INFO-NODE-FROM-POSITION>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
23 byte-code instructions:
0     (NIL)
1     (MAKE-VECTOR1&PUSH 3)
3     (CONST&PUSH 0)                      ; "^_"
4     (CONST&PUSH 1)                      ; :CASE-SENSITIVE
5     (T&PUSH)
6     (CALL 3 2)                          ; COMPILE-REGEX
9     (STOREC 0 0)
12    (CONST&PUSH 3)                      ; "[
][^
]*Node:[ 	]+([^
	,]+)[
	,][^
]*
"
13    (CONST&PUSH 1)                      ; :CASE-SENSITIVE
14    (T&PUSH)
15    (CALL 3 2)                          ; COMPILE-REGEX
18    (STOREC 0 1)
21    (CONST&PUSH 4)                      ; "[]"
22    (CALL1 2)                           ; COMPILE-REGEX
24    (STOREC 0 2)
27    (CONST&PUSH 5)                      ; INFO-NODE-FROM-POSITION
28    (CALL1 6)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
30    (CONST&PUSH 5)                      ; INFO-NODE-FROM-POSITION
31    (LOAD&PUSH 1)
32    (COPY-CLOSURE&PUSH 7 1)             ; #<COMPILED-CLOSURE INFO-NODE-FROM-POSITION>
35    (CALLS2 130)                        ; SYSTEM::%PUTD
37    (CONST 5)                           ; INFO-NODE-FROM-POSITION
38    (SKIP&RET 2)


Disassembly of function INFO-NODE-FROM-POSITION
(CONST 0) = NIL
(CONST 1) = 0
(CONST 2) = INFO-SUBFILE
(CONST 3) = INFO-GET-FILE
(CONST 4) = STRING-MATCH
(CONST 5) = MATCH-END
(CONST 6) = MATCH-BEGINNING
(CONST 7) = 1
(CONST 8) = GET-MATCH
(CONST 9) = *CURRENT-INFO-DATA*
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*CURRENT-INFO-DATA*)
61 byte-code instructions:
0     (CONST&PUSH 1)                      ; 0
1     (LOAD&PUSH 2)
2     (CALL1&PUSH 2)                      ; INFO-SUBFILE
4     (LOAD&CDR&PUSH 0)
6     (CALL1&PUSH 3)                      ; INFO-GET-FILE
8     (LOAD&PUSH 4)
9     (LOAD&CAR&PUSH 2)
11    (CALLSR&PUSH 1 54)                  ; -
14    (JMP L25)
16    L16
16    (CONST&PUSH 1)                      ; 0
17    (CALL1 6)                           ; MATCH-BEGINNING
19    (JMP L81)
21    L21
21    (CONST&PUSH 1)                      ; 0
22    (CALL1 5)                           ; MATCH-END
24    (STORE 3)
25    L25
25    (LOADV&PUSH 0 1)
28    (LOAD&PUSH 2)
29    (LOAD&PUSH 5)
30    (LOAD&PUSH 3)
31    (CALL&PUSH 4 4)                     ; STRING-MATCH
34    (CONST&PUSH 1)                      ; 0
35    (CALLSR&JMPIF 1 50 L21)             ; >=
39    (LOAD&DEC&STORE 3)
41    (LOADV&PUSH 0 2)
44    (LOAD&PUSH 2)
45    (LOAD&PUSH 5)
46    (CALL&PUSH 3 4)                     ; STRING-MATCH
49    (CONST&PUSH 1)                      ; 0
50    (CALLSR 1 50)                       ; >=
53    (JMPIFNOT1 L94)
55    (CONST&PUSH 1)                      ; 0
56    (CALL1&PUSH 6)                      ; MATCH-BEGINNING
58    (CONST&PUSH 1)                      ; 0
59    (CALL1&PUSH 5)                      ; MATCH-END
61    (LOAD&PUSH 3)
62    (CONST&PUSH 7)                      ; 1
63    (CALL2&PUSH 8)                      ; GET-MATCH
65    (LOADV&PUSH 0 3)
68    (LOAD&PUSH 5)
69    (LOAD&PUSH 3)
70    (CALL&PUSH 3 4)                     ; STRING-MATCH
73    (CONST&PUSH 1)                      ; 0
74    (CALLSR&JMPIF 1 50 L16)             ; >=
78    (LOAD&PUSH 4)
79    (CALLS2 71)                         ; LENGTH
81    L81
81    (PUSH)
82    (LOAD&PUSH 5)
83    (LOAD&PUSH 3)
84    (LOAD&PUSH 2)
85    (LOAD&PUSH 6)
86    (LOAD&PUSH 5)
87    (LOAD&PUSH 11)
88    (GETVALUE 9)                        ; *CURRENT-INFO-DATA*
90    (LIST* 6)
92    (SKIP&RET 10)
94    L94
94    (SKIP&RET 6)

WARNING in SHOW-INFO in lines 427..542 :
variable I is not used.
Misspelled or missing IGNORE declaration?

Disassembly of function #:|(LET (# # # ...) (DEFUN SHOW-INFO # ...))-38|
(CONST 0) = "^(\\([^(]+\\))([^)]*)"
(CONST 1) = COMPILE-REGEX
(CONST 2) = "[]"
(CONST 3) = 
"
 - [a-zA-Z]"
(CONST 4) = 
"
   "
(CONST 5) = SHOW-INFO
(CONST 6) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 7) = #<COMPILED-CLOSURE SHOW-INFO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
22 byte-code instructions:
0     (NIL)
1     (MAKE-VECTOR1&PUSH 4)
3     (CONST&PUSH 0)                      ; "^(\\([^(]+\\))([^)]*)"
4     (CALL1 1)                           ; COMPILE-REGEX
6     (STOREC 0 0)
9     (CONST&PUSH 2)                      ; "[]"
10    (CALL1 1)                           ; COMPILE-REGEX
12    (STOREC 0 1)
15    (CONST&PUSH 3)                      ; "
 - [a-zA-Z]"
16    (CALL1 1)                           ; COMPILE-REGEX
18    (STOREC 0 2)
21    (CONST&PUSH 4)                      ; "
   "
22    (CALL1 1)                           ; COMPILE-REGEX
24    (STOREC 0 3)
27    (CONST&PUSH 5)                      ; SHOW-INFO
28    (CALL1 6)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
30    (CONST&PUSH 5)                      ; SHOW-INFO
31    (LOAD&PUSH 1)
32    (COPY-CLOSURE&PUSH 7 1)             ; #<COMPILED-CLOSURE SHOW-INFO>
35    (CALLS2 130)                        ; SYSTEM::%PUTD
37    (CONST 5)                           ; SHOW-INFO
38    (SKIP&RET 2)


Disassembly of function SHOW-INFO
(CONST 0) = NIL
(CONST 1) = *MATCH-DATA*
(CONST 2) = 0
(CONST 3) = -1
(CONST 4) = "bad arg"
(CONST 5) = INFO-ERROR
(CONST 6) = STRING-MATCH
(CONST 7) = 1
(CONST 8) = GET-MATCH
(CONST 9) = 2
(CONST 10) = ""
(CONST 11) = "Top"
(CONST 12) = SETUP-INFO
(CONST 13) = *CURRENT-INFO-DATA*
(CONST 14) = GET-NODE-INDEX
(CONST 15) = #<COMPILED-CLOSURE SHOW-INFO-1>
(CONST 16) = *STANDARD-OUTPUT*
(CONST 17) = INFO-SUBFILE
(CONST 18) = INFO-GET-FILE
(CONST 19) = 
"[
][^
]*Node:[ 	]+"
(CONST 20) = RE-QUOTE-STRING
(CONST 21) = 
"[,	
][^
]*
"
(CONST 22) = STRING-CONCATENATE
(CONST 23) = ""
(CONST 24) = "Can't find node  ~a?"
(CONST 25) = MATCH-BEGINNING
(CONST 26) = MATCH-END
(CONST 27) = *CASE-FOLD-SEARCH*
(CONST 28) = 
"
 - [A-Za-z ]+: "
(CONST 29) = 
"[ 
]"
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variables: (*STANDARD-OUTPUT* *CURRENT-INFO-DATA*)
196 byte-code instructions:
0     (UNBOUND->NIL 1)
2     (NIL)
3     (BIND 1)                            ; *MATCH-DATA*
5     (CONST&PUSH 2)                      ; 0
6     (CONST&PUSH 3)                      ; -1
7     (PUSH-NIL 2)
9     (LOAD 9)
10    (JMPIFATOM L23)
12    (LOAD 9)
13    (CDR)
14    (JMPIFATOM L23)
16    (LOAD 9)
17    (CDR)
18    (CAR)
19    (STORE 0)
20    (LOAD&CAR&STORE 9 9)
23    L23
23    (LOAD 9)
24    (JMPIFATOM L31)
26    (LOAD&CAR&STORE 9 8)
29    (LOAD&CDR&STORE 9)
31    L31
31    (LOAD&PUSH 9)
32    (CALLS2&JMPIF 7 L38)                ; STRINGP
35    (CONST&PUSH 4)                      ; "bad arg"
36    (CALL1 5)                           ; INFO-ERROR
38    L38
38    (LOADV&PUSH 0 1)
41    (LOAD&PUSH 10)
42    (CALL2&PUSH 6)                      ; STRING-MATCH
44    (CONST&PUSH 2)                      ; 0
45    (CALLSR&JMPIFNOT 1 50 L66)          ; >=
49    (LOAD&PUSH 9)
50    (CONST&PUSH 7)                      ; 1
51    (CALL2 8)                           ; GET-MATCH
53    (STORE 0)
54    (LOAD&PUSH 9)
55    (CONST&PUSH 9)                      ; 2
56    (CALL2 8)                           ; GET-MATCH
58    (STORE 9)
60    (PUSH)
61    (CONST&PUSH 10)                     ; ""
62    (CALLS2&JMPIF 2 L260)               ; EQUAL
66    L66
66    (LOAD&JMPIFNOT 0 L72)
69    L69
69    (PUSH)
70    (CALL1 12)                          ; SETUP-INFO
72    L72
72    (LOAD&PUSH 9)
73    (CONST&PUSH 7)                      ; 1
74    (GETVALUE&PUSH 13)                  ; *CURRENT-INFO-DATA*
76    (CALLS1 148)                        ; NTH
78    (CAR&PUSH)
79    (CALL2&PUSH 14)                     ; GET-NODE-INDEX
81    (LOAD&JMPIFNOT 0 L270)
85    (LOAD&PUSH 0)
86    (CALL1 17)                          ; INFO-SUBFILE
88    (STORE 2)
89    (CDR&PUSH)
90    (CALL1&PUSH 18)                     ; INFO-GET-FILE
92    (LOAD&PUSH 1)
93    (LOAD&CAR&PUSH 4)
95    (CALLSR&PUSH 1 54)                  ; -
98    (CONST&PUSH 19)                     ; "[
][^
]*Node:[ 	]+"
99    (LOAD&PUSH 13)
100   (CALL1&PUSH 20)                     ; RE-QUOTE-STRING
102   (CONST&PUSH 21)                     ; "[,	
][^
]*
"
103   (CALL&PUSH 3 22)                    ; STRING-CONCATENATE
106   (LOAD&JMPIF 2 L111)
109   (CONST 23)                          ; ""
111   L111
111   (PUSH)
112   (LOAD&PUSH 2)
113   (CALL&PUSH 3 6)                     ; STRING-MATCH
116   (CONST&PUSH 2)                      ; 0
117   (CALLSR&JMPIF 1 50 L125)            ; >=
121   (CONST&PUSH 24)                     ; "Can't find node  ~a?"
122   (LOAD&PUSH 13)
123   (CALL2 5)                           ; INFO-ERROR
125   L125
125   (CONST&PUSH 2)                      ; 0
126   (CALL1 25)                          ; MATCH-BEGINNING
128   (CONST&PUSH 2)                      ; 0
129   (CALL1&PUSH 26)                     ; MATCH-END
131   (LOADV&PUSH 0 2)
134   (LOAD&PUSH 3)
135   (LOAD&PUSH 2)
136   (CALL&PUSH 3 6)                     ; STRING-MATCH
139   (CONST&PUSH 2)                      ; 0
140   (CALLSR&JMPIF 1 50 L282)            ; >=
145   (LOAD&PUSH 2)
146   (CALLS2 71)                         ; LENGTH
148   L148
148   (PUSH)
149   (LOAD&JMPIFNOT 13 L195)
152   (PUSH)
153   (CALL1 20)                          ; RE-QUOTE-STRING
155   (STORE 13)
157   (NIL)
158   (BIND 27)                           ; *CASE-FOLD-SEARCH*
160   (CONST&PUSH 28)                     ; "
 - [A-Za-z ]+: "
161   (LOAD&PUSH 17)
162   (CONST&PUSH 29)                     ; "[ 
]"
163   (CALL&PUSH 3 22)                    ; STRING-CONCATENATE
166   (LOAD&PUSH 7)
167   (LOAD&PUSH 6)
168   (LOAD&PUSH 6)
169   (CALL 4 6)                          ; STRING-MATCH
172   (STORE 10)
174   (PUSH)
175   (CONST&PUSH 2)                      ; 0
176   (CALLSR&JMPIF 1 50 L288)            ; >=
181   (LOAD&PUSH 16)
182   (LOAD&PUSH 7)
183   (LOAD&PUSH 6)
184   (LOAD&PUSH 6)
185   (CALL&PUSH 4 6)                     ; STRING-MATCH
188   (CONST&PUSH 2)                      ; 0
189   (CALLSR&JMPIF 1 50 L288)            ; >=
194   (UNBIND1)
195   L195
195   (LOAD&PUSH 7)
196   (CALLS2&JMPIF 147 L300)             ; MINUSP
200   (LOADV&PUSH 0 4)
203   (LOAD&PUSH 4)
204   (CONST&PUSH 7)                      ; 1
205   (LOAD&PUSH 4)
206   (LOAD&PUSH 12)
207   (CALLSR&PUSH 3 53)                  ; +
210   (LOAD&PUSH 3)
211   (CALL&PUSH 4 6)                     ; STRING-MATCH
214   (LOADV&PUSH 0 3)
217   (LOAD&PUSH 5)
218   (LOAD&PUSH 2)
219   (CONST&PUSH 2)                      ; 0
220   (CALLSR&JMPIF 1 50 L303)            ; >=
225   (CONST&PUSH 7)                      ; 1
226   (LOAD&PUSH 5)
227   (LOAD&PUSH 13)
228   (CALLSR 3 53)                       ; +
231   L231
231   (PUSH)
232   (LOAD&PUSH 4)
233   (CALL&PUSH 4 6)                     ; STRING-MATCH
236   (CONST&PUSH 2)                      ; 0
237   (CALLSR&JMPIF 1 50 L307)            ; >=
242   (LOAD 1)
243   (SKIP 1)
245   L245
245   (PUSH)
246   (LOAD&PUSH 4)
247   (LOAD&PUSH 10)
248   (LOAD&PUSH 4)
249   (CALLSR&PUSH 2 53)                  ; +
252   (LOAD&PUSH 2)
253   (CALLS2 69)                         ; SUBSEQ
255   (SKIP 10)
257   L257
257   (UNBIND1)
258   (SKIP&RET 3)
260   L260
260   (CONST 11)                          ; "Top"
261   (STORE 9)
263   (LOAD&JMPIFNOT 0 L72)
267   (JMP L69)
270   L270
270   (CONST&PUSH 15)                     ; #<COMPILED-CLOSURE SHOW-INFO-1>
271   (GETVALUE&PUSH 16)                  ; *STANDARD-OUTPUT*
273   (LOAD&PUSH 12)
274   (CALLSR 2 21)                       ; FUNCALL
277   (NIL)
278   (SKIP 5)
280   (JMP L257)
282   L282
282   (CONST&PUSH 2)                      ; 0
283   (CALL1 25)                          ; MATCH-BEGINNING
285   (JMP L148)
288   L288
288   (CONST&PUSH 2)                      ; 0
289   (CALL1&PUSH 25)                     ; MATCH-BEGINNING
291   (LOAD&PUSH 5)
292   (CALLSR&STORE 1 54 11)              ; -
296   (UNBIND1)
297   (JMP L195)
300   L300
300   (LOAD 0)
301   (JMP L245)
303   L303
303   (LOAD 2)
304   (JMP L231)
307   L307
307   (CONST&PUSH 2)                      ; 0
308   (CALL1 25)                          ; MATCH-BEGINNING
310   (SKIP 1)
312   (JMP L245)


Disassembly of function SHOW-INFO-1
(CONST 0) = 
"
Sorry, Can't find node "
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
9 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
Sorry, Can't find node "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (LOAD 1)
11    (SKIP&RET 4)


Disassembly of function #:|(DEFVAR *DEFAULT-INFO-FILES* '("gcl-si.info" "gcl-tk.info" "gcl.info"))-39|
(CONST 0) = (SPECIAL *DEFAULT-INFO-FILES*)
(CONST 1) = *DEFAULT-INFO-FILES*
(CONST 2) = ("gcl-si.info" "gcl-tk.info" "gcl.info")
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *DEFAULT-INFO-FILES*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *DEFAULT-INFO-FILES*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *DEFAULT-INFO-FILES*
8     (CONST&PUSH 2)                      ; ("gcl-si.info" "gcl-tk.info" ...)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *DEFAULT-INFO-FILES*
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN INFO-AUX (X DIRS) ...)-40|
(CONST 0) = INFO-AUX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INFO-AUX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; INFO-AUX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INFO-AUX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INFO-AUX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; INFO-AUX
8     (SKIP&RET 1)


Disassembly of function INFO-AUX
(CONST 0) = SETUP-INFO
(CONST 1) = NODE
(CONST 2) = GET-INFO-CHOICES
(CONST 3) = ADD-FILE
(CONST 4) = INDEX
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
29 byte-code instructions:
0     (LOAD&PUSH 1)
1     (NIL&PUSH)
2     (JMP L35)
4     L4
4     (LOAD&CAR&PUSH 1)
6     (LOAD&PUSH 0)
7     (CALL1 0)                           ; SETUP-INFO
9     (LOAD&PUSH 5)
10    (CONST&PUSH 1)                      ; NODE
11    (CALL2&PUSH 2)                      ; GET-INFO-CHOICES
13    (LOAD&PUSH 1)
14    (CALL2&PUSH 3)                      ; ADD-FILE
16    (LOAD&PUSH 2)
17    (CALLS1&STORE 162 1)                ; REVAPPEND
20    (LOAD&PUSH 5)
21    (CONST&PUSH 4)                      ; INDEX
22    (CALL2&PUSH 2)                      ; GET-INFO-CHOICES
24    (LOAD&PUSH 1)
25    (CALL2&PUSH 3)                      ; ADD-FILE
27    (LOAD&PUSH 2)
28    (CALLS1&STORE 162 1)                ; REVAPPEND
31    (SKIP 1)
33    (LOAD&CDR&STORE 1)
35    L35
35    (LOAD&PUSH 1)
36    (CALLS1&JMPIFNOT 146 L4)            ; ENDP
39    (LOAD&PUSH 0)
40    (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
42    (SKIP&RET 5)


Disassembly of function #:|(DEFUN INFO-SEARCH (PATTERN &OPTIONAL # ...) ...)-41|
(CONST 0) = INFO-SEARCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = FUNCTION
(CONST 3) = 
"search for PATTERN from START up to END where these are indices in
the general info file.  The search goes over all files."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
(CONST 5) = #<COMPILED-CLOSURE INFO-SEARCH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; INFO-SEARCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INFO-SEARCH
4     (CONST&PUSH 2)                      ; FUNCTION
5     (CONST&PUSH 3)                      ; "search for PATTERN from START up to END where these are indices in
the general info file.  The search goes over all files."
6     (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
9     (CONST&PUSH 0)                      ; INFO-SEARCH
10    (CONST&PUSH 5)                      ; #<COMPILED-CLOSURE INFO-SEARCH>
11    (CALLS2 130)                        ; SYSTEM::%PUTD
13    (CONST 0)                           ; INFO-SEARCH
14    (SKIP&RET 1)


Disassembly of function INFO-SEARCH
(CONST 0) = 0
(CONST 1) = INFO-SUBFILE
(CONST 2) = INFO-GET-FILE
(CONST 3) = STRING-MATCH
(CONST 4) = MATCH-BEGINNING
(CONST 5) = -1
1 required argument
2 optional arguments
No rest parameter
No keyword parameters
58 byte-code instructions:
0     (JMPIFBOUNDP 2 L5)
3     (CONST 0)                           ; 0
4     (STORE 2)
5     L5
5     (UNBOUND->NIL 1)
7     (CONST&PUSH 0)                      ; 0
8     (LOAD&JMPIFNOT 3 L71)
11    L11
11    (LOAD&PUSH 3)
12    (CALL1 1)                           ; INFO-SUBFILE
14    (NV-TO-STACK 2)
16    (LOAD 0)
17    (STORE 2)
18    (LOAD&JMPIFNOT 4 L32)
21    (LOAD&JMPIFNOT 2 L32)
24    (LOAD&PUSH 4)
25    (LOAD&PUSH 3)
26    (CALLSR&JMPIFNOT 1 47 L32)          ; <
30    (LOAD 4)
31    (STORE 2)
32    L32
32    (LOAD&CDR&PUSH 1)
34    (CALL1&PUSH 2)                      ; INFO-GET-FILE
36    (LOAD&CAR&PUSH 2)
38    (LOAD&PUSH 7)
39    (LOAD&PUSH 1)
40    (CALLSR&PUSH 1 54)                  ; -
43    (LOAD&PUSH 2)
44    (CALLS2&PUSH 71)                    ; LENGTH
46    (LOAD&PUSH 10)
47    (LOAD&PUSH 4)
48    (LOAD&PUSH 3)
49    (LOAD&JMPIF 9 L74)
52    (LOAD 3)
53    L53
53    (PUSH)
54    (CALL&PUSH 4 3)                     ; STRING-MATCH
57    (CONST&PUSH 0)                      ; 0
58    (CALLSR&JMPIF 1 50 L81)             ; >=
62    (SKIP 4)
64    (LOAD 0)
65    (STORE 5)
66    (SKIP 2)
68    (LOAD&JMPIF 3 L11)
71    L71
71    (CONST 5)                           ; -1
72    (SKIP&RET 5)
74    L74
74    (PUSH)
75    (LOAD&PUSH 6)
76    (CALLSR 1 54)                       ; -
79    (JMP L53)
81    L81
81    (LOAD&PUSH 2)
82    (CONST&PUSH 0)                      ; 0
83    (CALL1&PUSH 4)                      ; MATCH-BEGINNING
85    (CALLSR 2 53)                       ; +
88    (SKIP&RET 11)


Disassembly of function #:|(DEFUN IDESCRIBE (NAME) ...)-42|
(CONST 0) = IDESCRIBE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE IDESCRIBE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; IDESCRIBE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; IDESCRIBE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE IDESCRIBE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; IDESCRIBE
8     (SKIP&RET 1)


Disassembly of function IDESCRIBE
(CONST 0) = *DEFAULT-INFO-FILES*
(CONST 1) = INFO-AUX
(CONST 2) = #<COMPILED-CLOSURE IDESCRIBE-1>
(CONST 3) = *STANDARD-OUTPUT*
(CONST 4) = SHOW-INFO
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*STANDARD-OUTPUT* *DEFAULT-INFO-FILES*)
35 byte-code instructions:
0     (LOAD&PUSH 1)
1     (GETVALUE&PUSH 0)                   ; *DEFAULT-INFO-FILES*
3     (CALL2&PUSH 1)                      ; INFO-AUX
5     (LOAD&PUSH 0)
6     (NIL&PUSH)
7     L7
7     (LOAD&PUSH 1)
8     (CALLS1&JMPIF 146 L46)              ; ENDP
11    (LOAD&CAR&STORE 1 0)
14    (CAR)
15    (JMPIFCONSP L42)
17    (LOAD 0)
18    L18
18    (CAR&PUSH)
19    (LOAD&PUSH 5)
20    (CALLS2&JMPIFNOT 3 L38)             ; EQUALP
23    (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE IDESCRIBE-1>
24    (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
26    (LOAD&PUSH 2)
27    (CALLSR 2 21)                       ; FUNCALL
30    (LOAD&PUSH 0)
31    (NIL&PUSH)
32    (CALL2&PUSH 4)                      ; SHOW-INFO
34    (PUSH-UNBOUND 1)
36    (CALLS1 132)                        ; PRINC
38    L38
38    (LOAD&CDR&STORE 1)
40    (JMP L7)
42    L42
42    (LOAD 0)
43    (CAR)
44    (JMP L18)
46    L46
46    (NIL)
47    (SKIP&RET 5)


Disassembly of function IDESCRIBE-1
(CONST 0) = 
"
From "
(CONST 1) = 
":
"
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
From "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (CONST&PUSH 1)                      ; ":
"
11    (LOAD&PUSH 4)
12    (PUSH-UNBOUND 2)
14    (CALLS1 137)                        ; WRITE-STRING
16    (LOAD 1)
17    (SKIP&RET 4)


Disassembly of function #:|(DEFUN INFO (X &OPTIONAL # ...) ...)-43|
(CONST 0) = INFO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INFO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; INFO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INFO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INFO>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; INFO
8     (SKIP&RET 1)


Disassembly of function INFO
(CONST 0) = *DEFAULT-INFO-FILES*
(CONST 1) = *INFO-PATHS*
(CONST 2) = *CURRENT-INFO-DATA*
(CONST 3) = INFO-AUX
(CONST 4) = 0
(CONST 5) = 1
(CONST 6) = #<COMPILED-CLOSURE INFO-1>
(CONST 7) = *STANDARD-OUTPUT*
(CONST 8) = #<COMPILED-CLOSURE INFO-2>
(CONST 9) = "0"
(CONST 10) = ""
(CONST 11) = "ALL"
(CONST 12) = #<COMPILED-CLOSURE INFO-3>
(CONST 13) = #<COMPILED-CLOSURE INFO-4>
(CONST 14) = SHOW-INFO
1 required argument
2 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*CURRENT-INFO-DATA* *STANDARD-OUTPUT* *INFO-PATHS* *DEFAULT-INFO-FILES*)
192 byte-code instructions:
0     (JMPIFBOUNDP 2 L6)
3     (GETVALUE 0)                        ; *DEFAULT-INFO-FILES*
5     (STORE 2)
6     L6
6     (JMPIFBOUNDP 1 L12)
9     (GETVALUE 1)                        ; *INFO-PATHS*
11    (STORE 1)
12    L12
12    (NIL)
13    (BIND 2)                            ; *CURRENT-INFO-DATA*
15    (PUSH-NIL 4)
17    (LOAD 8)
18    (BIND 1)                            ; *INFO-PATHS*
20    (LOAD&PUSH 13)
21    (LOAD&PUSH 13)
22    (CALL2 3)                           ; INFO-AUX
24    (STORE 3)
25    (JMPIFNOT L292)
28    (NIL)
29    (MAKE-VECTOR1&PUSH 1)
31    (LOAD&PUSH 4)
32    (CALLS2 71)                         ; LENGTH
34    (STOREC 0 0)
37    (CONST&PUSH 4)                      ; 0
38    (LOAD&PUSH 5)
39    (PUSH-NIL 2)
41    (JMP L123)
44    L44
44    (NIL)
45    (JMP L114)
48    L48
48    (CONST&PUSH 8)                      ; #<COMPILED-CLOSURE INFO-2>
49    (GETVALUE&PUSH 7)                   ; *STANDARD-OUTPUT*
51    (CALLSR 1 21)                       ; FUNCALL
54    (JMP L142)
57    L57
57    (PUSH-UNBOUND 4)
59    (CALLS1 119)                        ; READ-LINE
61    (JMP L152)
64    L64
64    (LOAD&CAR&STORE 2 1)
67    (NIL&STORE 10)
69    (STORE 9)
71    (LOAD 1)
72    (JMPIFATOM L86)
74    (LOAD 1)
75    (CDR)
76    (JMPIFATOM L86)
78    (LOAD 1)
79    (CDR)
80    (CAR)
81    (STORE 10)
83    (LOAD&CAR&STORE 1 1)
86    L86
86    (LOAD 1)
87    (JMPIFATOM L94)
89    (LOAD&CAR&STORE 1 9)
92    (LOAD&CDR&STORE 1)
94    L94
94    (LOADC&PUSH 4 0)
97    (CONST&PUSH 5)                      ; 1
98    (CALLSR&JMPIFNOT 1 48 L119)         ; >
102   (CONST&PUSH 6)                      ; #<COMPILED-CLOSURE INFO-1>
103   (GETVALUE&PUSH 7)                   ; *STANDARD-OUTPUT*
105   (LOAD&PUSH 5)
106   (LOAD&PUSH 12)
107   (LOAD&PUSH 14)
108   (LOAD 5)
109   (JMPIFEQ L44)
112   (LOAD 14)
113   (STORE 4)
114   L114
114   (PUSH)
115   (LOAD&PUSH 6)
116   (CALLSR 5 21)                       ; FUNCALL
119   L119
119   (LOAD&INC&STORE 3)
121   (LOAD&CDR&STORE 2)
123   L123
123   (LOAD&PUSH 2)
124   (CALLS1&JMPIFNOT 146 L64)           ; ENDP
127   (SKIP 4)
129   (LOAD&PUSH 4)
130   (CALLS2&PUSH 71)                    ; LENGTH
132   (CONST&PUSH 5)                      ; 1
133   (CALLSR&JMPIF 1 48 L48)             ; >
138   (PUSH-UNBOUND 1)
140   (CALLS1 139)                        ; TERPRI
142   L142
142   (LOAD&PUSH 4)
143   (CALLS2&PUSH 71)                    ; LENGTH
145   (CONST&PUSH 5)                      ; 1
146   (CALLSR&JMPIF 1 48 L57)             ; >
151   (CONST 9)                           ; "0"
152   L152
152   (PUSH)
153   (CONST&PUSH 4)                      ; 0
154   (NIL&PUSH)
155   L155
155   (LOAD&PUSH 2)
156   (CONST&PUSH 10)                     ; ""
157   (CALLS2&JMPIFNOT 2 L212)            ; EQUAL
160   (PUSH-UNBOUND 4)
162   (CALLS1&STORE 119 2)                ; READ-LINE
165   (JMP L155)
167   L167
167   (LOAD&PUSH 10)
168   (CALLS2 73)                         ; NREVERSE
170   (JMP L202)
172   L172
172   (LOAD&PUSH 10)
173   (CALLS2&PUSH 140)                   ; SYMBOL-NAME
175   (CONST&PUSH 11)                     ; "ALL"
176   (CALLS2&JMPIFNOT 2 L202)            ; EQUAL
179   (LOAD&PUSH 7)
180   (CALLS2&PUSH 71)                    ; LENGTH
182   (CONST&PUSH 4)                      ; 0
183   (NIL&PUSH)
184   (JMP L191)
186   L186
186   (LOAD&PUSH 1)
187   (LOAD&CONS&STORE 0)
189   (LOAD&INC&STORE 1)
191   L191
191   (LOAD&PUSH 1)
192   (LOAD&PUSH 3)
193   (CALLSR&JMPIFNOT 1 50 L186)         ; >=
197   (LOAD&PUSH 0)
198   (CALLS1 164)                        ; SYSTEM::LIST-NREVERSE
200   (SKIP 3)
202   L202
202   (STORE 10)
204   (LOAD&JMPIFNOT 10 L267)
207   (JMP L248)
209   L209
209   (LOAD&PUSH 0)
210   (LOAD&CONS&STORE 10)
212   L212
212   (LOAD&PUSH 2)
213   (PUSH-NIL 2)
215   (PUSH-UNBOUND 3)
217   (LOAD 7)
218   (STORE 1)
219   (CALLS1 126)                        ; READ-FROM-STRING
221   (NV-TO-STACK 2)
223   (POP&STORE 2)
225   (POP&STORE 0)
227   (JMPIFNOT L236)
229   (LOAD&PUSH 0)
230   (CALLS2&JMPIF 8 L209)               ; NUMBERP
233   (LOAD 0)
234   (STORE 10)
236   L236
236   (LOAD 10)
237   (JMPIFCONSP L167)
240   (LOAD&PUSH 10)
241   (CALLS2&JMPIF 6 L172)               ; SYMBOLP
245   (LOAD&JMPIFNOT 10 L267)
248   L248
248   (LOAD&PUSH 3)
249   (COPY-CLOSURE&PUSH 12 1)            ; #<COMPILED-CLOSURE INFO-3>
252   (LOAD&PUSH 11)
253   (PUSH-UNBOUND 5)
255   (CALLS2&STORE 79 10)                ; REMOVE-IF
258   (CONST&PUSH 13)                     ; #<COMPILED-CLOSURE INFO-4>
259   (GETVALUE&PUSH 7)                   ; *STANDARD-OUTPUT*
261   (GETVALUE 2)                        ; *CURRENT-INFO-DATA*
263   (CAR&PUSH)
264   (CALLSR 2 21)                       ; FUNCALL
267   L267
267   (LOAD&PUSH 10)
268   (JMP L286)
270   L270
270   (LOAD&CAR&PUSH 0)
272   (LOAD&PUSH 0)
273   (LOAD&PUSH 10)
274   (CALLS1&PUSH 148)                   ; NTH
276   (CALL1&PUSH 14)                     ; SHOW-INFO
278   (PUSH-UNBOUND 1)
280   (CALLS1 132)                        ; PRINC
282   (SKIP 1)
284   (LOAD&CDR&STORE 0)
286   L286
286   (LOAD&PUSH 0)
287   (CALLS1&JMPIFNOT 146 L270)          ; ENDP
290   (SKIP 5)
292   L292
292   (UNBIND1)
293   (SKIP 4)
295   (VALUES0)
296   (UNBIND1)
297   (SKIP&RET 4)


Disassembly of function INFO-1
(CONST 0) = 
"
 "
(CONST 1) = SYSTEM::DO-FORMAT-DECIMAL
(CONST 2) = ": "
(CONST 3) = " :"
(CONST 4) = #\(
(CONST 5) = #\)
(CONST 6) = #\.
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
53 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
 "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 3)
7     (PUSH-NIL 6)
9     (LOAD&PUSH 9)
10    (CALL 8 1)                          ; SYSTEM::DO-FORMAT-DECIMAL
13    (CONST&PUSH 2)                      ; ": "
14    (LOAD&PUSH 4)
15    (PUSH-UNBOUND 2)
17    (CALLS1 137)                        ; WRITE-STRING
19    (LOAD 1)
20    (CAR)
21    (JMPIF L45)
23    (LOAD&CDR&STORE 1)
25    L25
25    (LOAD 1)
26    (CAR)
27    (JMPIF L60)
29    (LOAD&CDR&STORE 1)
31    L31
31    (LOAD&CAR&PUSH 1)
33    (LOAD&CDR&STORE 2)
35    (LOAD&PUSH 4)
36    (CALLS1 132)                        ; PRINC
38    (CONST&PUSH 6)                      ; #\.
39    (LOAD&PUSH 4)
40    (CALLS1 136)                        ; WRITE-CHAR
42    (LOAD 1)
43    (SKIP&RET 4)
45    L45
45    (LOAD&CAR&PUSH 1)
47    (LOAD&CDR&STORE 2)
49    (LOAD&PUSH 4)
50    (CALLS1 132)                        ; PRINC
52    (CONST&PUSH 3)                      ; " :"
53    (LOAD&PUSH 4)
54    (PUSH-UNBOUND 2)
56    (CALLS1 137)                        ; WRITE-STRING
58    (JMP L25)
60    L60
60    (CONST&PUSH 4)                      ; #\(
61    (LOAD&PUSH 4)
62    (CALLS1 136)                        ; WRITE-CHAR
64    (LOAD&CAR&PUSH 1)
66    (LOAD&CDR&STORE 2)
68    (LOAD&PUSH 4)
69    (CALLS1 132)                        ; PRINC
71    (CONST&PUSH 5)                      ; #\)
72    (LOAD&PUSH 4)
73    (CALLS1 136)                        ; WRITE-CHAR
75    (JMP L31)


Disassembly of function INFO-2
(CONST 0) = 
"
Enter n, all, none, or multiple choices eg 1 3 : "
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
Enter n, all, none, or multiple choices eg 1 3 : "
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function INFO-3
(CONST 0) = NIL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
9 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 12)                         ; INTEGERP
3     (JMPIFNOT1 L14)
5     (LOAD&PUSH 1)
6     (LOADV&PUSH 0 1)
9     (CALLSR 1 50)                       ; >=
12    (SKIP&RET 2)
14    L14
14    (SKIP&RET 2)


Disassembly of function INFO-4
(CONST 0) = 
"
Info from file "
(CONST 1) = #\:
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
12 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
Info from file "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (CONST&PUSH 1)                      ; #\:
11    (LOAD&PUSH 4)
12    (CALLS1 136)                        ; WRITE-CHAR
14    (LOAD 1)
15    (SKIP&RET 4)


Wrote file binary-clisp/cl-info.fas
Wrote file /cygdrive/e/temp/maxima/src/cl-info.lis