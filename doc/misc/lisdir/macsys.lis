Listing of compilation of file /cygdrive/e/temp/maxima/src/macsys.lisp
on 2002-12-17 13:33:19 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/macsys.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE SYSTEM)-2|
(CONST 0) = SYSTEM
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; SYSTEM
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(EVAL-WHEN (EVAL COMPILE LOAD) (SSTATUS FEATURE MAXII))-3|
(CONST 0) = :MAXII
(CONST 1) = *FEATURES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*FEATURES*)
writes special variable : (*FEATURES*)
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; :MAXII
1     (GETVALUE&PUSH 1)                   ; *FEATURES*
3     (PUSH-UNBOUND 3)
5     (CALLS1 184)                        ; ADJOIN
7     (SETVALUE 1)                        ; *FEATURES*
9     (SKIP&RET 1)


Disassembly of function #:|(DEFUN MAIN-PROMPT NIL ...)-4|
(CONST 0) = MAIN-PROMPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAIN-PROMPT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAIN-PROMPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAIN-PROMPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAIN-PROMPT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAIN-PROMPT
8     (SKIP&RET 1)


Disassembly of function MAIN-PROMPT
(CONST 0) = $INCHAR
(CONST 1) = STRIPDOLLAR
(CONST 2) = $LINENUM
(CONST 3) = #\(
(CONST 4) = SYSTEM::DO-FORMAT-DECIMAL
(CONST 5) = ") "
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($LINENUM $INCHAR)
23 byte-code instructions:
0     (PUSH-UNBOUND 2)
2     (CALLS2&PUSH 117)                   ; MAKE-STRING-OUTPUT-STREAM
4     (GETVALUE&PUSH 0)                   ; $INCHAR
6     (CALL1&PUSH 1)                      ; STRIPDOLLAR
8     (GETVALUE&PUSH 2)                   ; $LINENUM
10    (CONST&PUSH 3)                      ; #\(
11    (LOAD&PUSH 3)
12    (CALLS1 136)                        ; WRITE-CHAR
14    (LOAD&PUSH 1)
15    (LOAD&PUSH 3)
16    (CALLS1 132)                        ; PRINC
18    (LOAD&PUSH 2)
19    (PUSH-NIL 6)
21    (LOAD&PUSH 7)
22    (CALL 8 4)                          ; SYSTEM::DO-FORMAT-DECIMAL
25    (CONST&PUSH 5)                      ; ") "
26    (LOAD&PUSH 3)
27    (PUSH-UNBOUND 2)
29    (CALLS1 137)                        ; WRITE-STRING
31    (SKIP 2)
33    (LOAD&PUSH 0)
34    (CALLS2 118)                        ; GET-OUTPUT-STREAM-STRING
36    (SKIP&RET 2)


Disassembly of function #:|(DEFUN BREAK-PROMPT NIL ...)-5|
(CONST 0) = BREAK-PROMPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BREAK-PROMPT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BREAK-PROMPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BREAK-PROMPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BREAK-PROMPT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BREAK-PROMPT
8     (SKIP&RET 1)


Disassembly of function BREAK-PROMPT
(CONST 0) = $PROMPT
(CONST 1) = STRIPDOLLAR
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: ($PROMPT)
3 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; $PROMPT
2     (CALL1 1)                           ; STRIPDOLLAR
4     (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO TOPLEVEL-MACSYMA-EVAL (X) ...)-6|
(CONST 0) = TOPLEVEL-MACSYMA-EVAL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TOPLEVEL-MACSYMA-EVAL>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; TOPLEVEL-MACSYMA-EVAL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TOPLEVEL-MACSYMA-EVAL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TOPLEVEL-MACSYMA-EVAL>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; TOPLEVEL-MACSYMA-EVAL
10    (SKIP&RET 1)


Disassembly of function TOPLEVEL-MACSYMA-EVAL
(CONST 0) = 2
(CONST 1) = SYSTEM::MACRO-CALL-ERROR
(CONST 2) = X
(CONST 3) = MEVAL*
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (X)
17 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 2
4     (CALLSR&JMPIF 1 46 L21)             ; /=
8     (LOAD 2)
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; X
13    (CONST&PUSH 3)                      ; MEVAL*
14    (GETVALUE&PUSH 2)                   ; X
16    (LIST 2)
18    (UNBIND1)
19    (SKIP&RET 3)
21    L21
21    (LOAD&PUSH 2)
22    (CALL1 1)                           ; SYSTEM::MACRO-CALL-ERROR
24    (SKIP&RET 3)


Disassembly of function #:|(DEFMVAR $_ '$_ ...)-7-1|
(CONST 0) = $_
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $_
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $_
11    (LOAD&PUSH 1)
12    (CONST&PUSH 0)                      ; $_
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $_ '$_ ...)-7-2|
(CONST 0) = (SPECIAL $_)
(CONST 1) = $_
(CONST 2) = VARIABLE
(CONST 3) = "last thing read in, cooresponds to lisp +"
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $_)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $_
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $_
8     (CONST&PUSH 1)                      ; $_
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $_
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "last thing read in, cooresponds to lisp +"
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $_
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $__ '$__ ...)-8-1|
(CONST 0) = $__
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $__
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $__
11    (LOAD&PUSH 1)
12    (CONST&PUSH 0)                      ; $__
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $__ '$__ ...)-8-2|
(CONST 0) = (SPECIAL $__)
(CONST 1) = $__
(CONST 2) = VARIABLE
(CONST 3) = "thing read in which will be evaluated, cooresponds to -"
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $__)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $__
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $__
8     (CONST&PUSH 1)                      ; $__
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $__
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "thing read in which will be evaluated, cooresponds to -"
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $__
18    (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL *MREAD-PROMPT* $FILE_SEARCH_DEMO))-9|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFVAR ACCUMULATED-TIME 0.0)-10|
(CONST 0) = (SPECIAL ACCUMULATED-TIME)
(CONST 1) = ACCUMULATED-TIME
(CONST 2) = 0.0
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL ACCUMULATED-TIME)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; ACCUMULATED-TIME
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; ACCUMULATED-TIME
8     (CONST&PUSH 2)                      ; 0.0
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; ACCUMULATED-TIME
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN USED-AREA (&OPTIONAL UNUSED) ...)-11|
(CONST 0) = USED-AREA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE USED-AREA>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; USED-AREA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; USED-AREA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE USED-AREA>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; USED-AREA
8     (SKIP&RET 1)


Disassembly of function USED-AREA
(CONST 0) = #S(BYTE :SIZE 24 :POSITION 24)
0 required arguments
1 optional argument
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CALLS1 202)                        ; SYSTEM::%%TIME
2     (NV-TO-STACK 9)
4     (LOAD&PUSH 2)
5     (CONST&PUSH 0)                      ; #S(BYTE :SIZE 24 :POSITION 24)
6     (LOAD&PUSH 3)
7     (CALLS2 218)                        ; DPB
9     (SKIP&RET 11)

WARNING in CONTINUE in lines 77..223 :
*SOCKET-CONNECTION* is neither declared nor bound,
it will be treated as if it were declared SPECIAL.

Disassembly of function #:|(DEFUN CONTINUE (&OPTIONAL # BATCH-OR-DEMO-FLAG) ...)-12|
(CONST 0) = CONTINUE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CONTINUE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CONTINUE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CONTINUE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CONTINUE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CONTINUE
8     (SKIP&RET 1)


Disassembly of function CONTINUE
(CONST 0) = *STANDARD-INPUT*
(CONST 1) = :DEMO
(CONST 2) = #<COMPILED-CLOSURE CONTINUE-1>
(CONST 3) = *STANDARD-OUTPUT*
(CONST 4) = ABORT-DEMO
(CONST 5) = $INCHAR
(CONST 6) = CHECKLABEL
(CONST 7) = $LINENUM
(CONST 8) = MAKELABEL
(CONST 9) = MAIN-PROMPT
(CONST 10) = *MREAD-PROMPT*
(CONST 11) = 0
(CONST 12) = DBM-READ
(CONST 13) = *SOCKET-CONNECTION*
(CONST 14) = 10
(CONST 15) = "exiting on eof"
(CONST 16) = $QUIT
(CONST 17) = BREAK-COMMAND
(CONST 18) = BREAK-CALL
(CONST 19) = ^R
(CONST 20) = ^W
(CONST 21) = SMART-TTY
(CONST 22) = $LINEDISP
(CONST 23) = (MLABLE)
(CONST 24) = $__
(CONST 25) = DISPLA
(CONST 26) = $DONE
(CONST 27) = SET
(CONST 28) = (MLABLE)
(CONST 29) = USED-AREA
(CONST 30) = MEVAL*
(CONST 31) = $%
(CONST 32) = 1.0
(CONST 33) = #.INTERNAL-TIME-UNITS-PER-SECOND
(CONST 34) = QUOT
(CONST 35) = ACCUMULATED-TIME
(CONST 36) = $OUTCHAR
(CONST 37) = $_
(CONST 38) = $SHOWTIME
(CONST 39) = #<COMPILED-CLOSURE CONTINUE-2>
(CONST 40) = 1024
(CONST 41) = #<COMPILED-CLOSURE CONTINUE-3>
(CONST 42) = 9.765625E-4
(CONST 43) = 1048576
(CONST 44) = #<COMPILED-CLOSURE CONTINUE-4>
(CONST 45) = 1048576.0
(CONST 46) = #<COMPILED-CLOSURE CONTINUE-5>
(CONST 47) = $NOLABELS
(CONST 48) = TIME
(CONST 49) = PUTPROP
(CONST 50) = DISPLAYINPUT
(CONST 51) = (MLABLE)
(CONST 52) = "~&_"
(CONST 53) = MTELL
(CONST 54) = *TERMINAL-IO*
(CONST 55) = 
#S(HASH-TABLE EQ (#\Newline . 33) (#\t . -8) (#\x . -8) (#\e . -8) (#\n . -8)
   (#\; . -8) (#\Space . -8) (#\? . 19) (#\Page . 1))
(CONST 56) = C
(CONST 57) = CURSORPOS
(CONST 58) = "_"
(CONST 59) = "  Pausing.  Type a ';' and Enter to continue demo.~%_"
(CONST 60) = MACSYMA-QUIT
(CONST 61) = (#\Space #\Newline #\Return #\Tab)
(CONST 62) = ZL-MEMBER
0 required arguments
2 optional arguments
No rest parameter
No keyword parameters
reads special variables: 
(*TERMINAL-IO* $NOLABELS $SHOWTIME $% $OUTCHAR ACCUMULATED-TIME $__ ^R
 *SOCKET-CONNECTION* $LINENUM $INCHAR *STANDARD-OUTPUT* *STANDARD-INPUT*)
writes special variables : ($_ ACCUMULATED-TIME $% $__ *MREAD-PROMPT* $LINENUM)
292 byte-code instructions:
0     (JMPIFBOUNDP 2 L6)
3     (GETVALUE 0)                        ; *STANDARD-INPUT*
5     (STORE 2)
6     L6
6     (UNBOUND->NIL 1)
8     (LOAD&PUSH 1)
9     (JMPIFNOTEQTO 1 L18)                ; :DEMO
12    (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CONTINUE-1>
13    (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
15    (CALLSR 1 21)                       ; FUNCALL
18    L18
18    (CONST 4)                           ; ABORT-DEMO
19    (CATCH-OPEN L487)
22    (PUSH-NIL 5)
24    (LIST&PUSH 1)
26    (PUSH-NIL 7)
28    L28
28    (GETVALUE&PUSH 5)                   ; $INCHAR
30    (CALL1&JMPIF 6 L39)                 ; CHECKLABEL
33    (GETVALUE&PUSH 7)                   ; $LINENUM
35    (CALLS2 150)                        ; 1+
37    (SETVALUE 7)                        ; $LINENUM
39    L39
39    (GETVALUE&PUSH 5)                   ; $INCHAR
41    (CALL1 8)                           ; MAKELABEL
43    (STORE 1)
44    (LOAD&JMPIF 16 L54)
47    (CALL0 9)                           ; MAIN-PROMPT
49    L49
49    (BIND 10)                           ; *MREAD-PROMPT*
51    (CONST&PUSH 11)                     ; 0
52    (JMP L91)
54    L54
54    (NIL)
55    (JMP L49)
57    L57
57    (CONST&PUSH 41)                     ; #<COMPILED-CLOSURE CONTINUE-3>
59    (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
61    (CONST&PUSH 42)                     ; 9.765625E-4
63    (LOAD&PUSH 3)
64    (CALLSR 2 55)                       ; *
67    (JMP L337)
70    L70
70    (CONST&PUSH 44)                     ; #<COMPILED-CLOSURE CONTINUE-4>
72    (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
74    (LOAD&PUSH 2)
75    (CONST&PUSH 45)                     ; 1048576.0
77    (CALLSR 1 56)                       ; /
80    (JMP L337)
83    L83
83    (LOAD&CAR&PUSH 15)
85    (LOAD&CDR&PUSH 16)
87    (CONST&PUSH 17)                     ; BREAK-COMMAND
88    (CALL 3 18)                         ; BREAK-CALL
91    L91
91    (LOAD&PUSH 21)
92    (NIL&PUSH)
93    (LOAD&PUSH 13)
94    (CALL 3 12)                         ; DBM-READ
97    (STORE 15)
99    (PUSH)
100   (LOAD 12)
101   (JMPIFNOTEQ L127)
103   (LOAD&PUSH 21)
104   (GETVALUE 0)                        ; *STANDARD-INPUT*
106   (JMPIFEQ L127)
108   (CONST&PUSH 13)                     ; *SOCKET-CONNECTION*
109   (CALLS1&JMPIFNOT 79 L127)           ; BOUNDP
112   (GETVALUE 0)                        ; *STANDARD-INPUT*
114   (STORE 21)
116   (NIL)
117   (SETVALUE 10)                       ; *MREAD-PROMPT*
119   (LOAD&PUSH 21)
120   (NIL&PUSH)
121   (LOAD&PUSH 13)
122   (CALL 3 12)                         ; DBM-READ
125   (STORE 15)
127   L127
127   (LOAD&PUSH 15)
128   (LOAD 12)
129   (JMPIFNOTEQ L155)
131   (CONST&PUSH 13)                     ; *SOCKET-CONNECTION*
132   (CALLS1&JMPIFNOT 79 L155)           ; BOUNDP
135   (LOAD&PUSH 21)
136   (GETVALUE 13)                       ; *SOCKET-CONNECTION*
138   (JMPIFNOTEQ L155)
140   (LOAD&INC&STORE 0)
142   (PUSH)
143   (CONST&PUSH 14)                     ; 10
144   (CALLSR&JMPIFNOT 1 50 L91)          ; >=
148   (CONST&PUSH 15)                     ; "exiting on eof"
149   (PUSH-UNBOUND 1)
151   (CALLS1 130)                        ; PRINT
153   (CALL0 16)                          ; $QUIT
155   L155
155   (LOAD 15)
157   (JMPIFATOM L165)
159   (LOAD&CAR&PUSH 15)
161   (CALLS2&JMPIF 141 L83)              ; KEYWORDP
165   L165
165   (SKIP 1)
167   (UNBIND1)
168   (GETVALUE 19)                       ; ^R
170   (JMPIFNOT L191)
172   (T)
173   (BIND 20)                           ; ^W
175   (NIL)
176   (BIND 21)                           ; SMART-TTY
178   (NIL)
179   (BIND 22)                           ; $LINEDISP
181   (CONST&PUSH 23)                     ; (MLABLE)
182   (LOAD&PUSH 11)
183   (GETVALUE&PUSH 24)                  ; $__
185   (LIST&PUSH 3)
187   (CALL1 25)                          ; DISPLA
189   (UNBIND 3)
191   L191
191   (LOAD&PUSH 11)
192   (LOAD 8)
193   (JMPIFEQ L480)
196   (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
198   (CALLS1 140)                        ; FRESH-LINE
200   (LOAD 11)
201   (CDR)
202   (CDR)
203   (CAR)
204   (SETVALUE 24)                       ; $__
206   (LOAD&PUSH 1)
207   (GETVALUE&PUSH 24)                  ; $__
209   (CALL2 27)                          ; SET
211   (LOAD&JMPIFNOT 16 L222)
214   (CONST&PUSH 28)                     ; (MLABLE)
215   (LOAD&PUSH 2)
216   (GETVALUE&PUSH 24)                  ; $__
218   (LIST&PUSH 3)
220   (CALL1 25)                          ; DISPLA
222   L222
222   (CALLS1&STORE 199 10)               ; GET-INTERNAL-RUN-TIME
225   (CALLS1&STORE 200 6)                ; GET-INTERNAL-REAL-TIME
228   (CALL0 29)                          ; USED-AREA
230   (STORE 4)
231   (GETVALUE&PUSH 24)                  ; $__
233   (CALL1 30)                          ; MEVAL*
235   (SETVALUE 31)                       ; $%
237   (CALLS1&STORE 200 5)                ; GET-INTERNAL-REAL-TIME
240   (CALLS1&STORE 199 9)                ; GET-INTERNAL-RUN-TIME
243   (CALL0 29)                          ; USED-AREA
245   (STORE 3)
246   (LOAD&PUSH 9)
247   (LOAD&PUSH 11)
248   (CALLSR&PUSH 1 54)                  ; -
251   (CONST&PUSH 32)                     ; 1.0
253   (CALLS2&PUSH 174)                   ; COMMON-LISP:FLOAT
255   (CONST&PUSH 33)                     ; #.INTERNAL-TIME-UNITS-PER-SECOND
257   (CALL2 34)                          ; QUOT
259   (STORE 8)
261   (LOAD&PUSH 5)
262   (LOAD&PUSH 7)
263   (CALLSR&PUSH 1 54)                  ; -
266   (CONST&PUSH 32)                     ; 1.0
268   (CALLS2&PUSH 174)                   ; COMMON-LISP:FLOAT
270   (CONST&PUSH 33)                     ; #.INTERNAL-TIME-UNITS-PER-SECOND
272   (CALL2 34)                          ; QUOT
274   (STORE 2)
275   (GETVALUE&PUSH 35)                  ; ACCUMULATED-TIME
277   (LOAD&PUSH 9)
278   (CALLSR 2 53)                       ; +
281   (SETVALUE 35)                       ; ACCUMULATED-TIME
283   (GETVALUE&PUSH 36)                  ; $OUTCHAR
285   (CALL1 8)                           ; MAKELABEL
287   (STORE 0)
288   (PUSH)
289   (GETVALUE&PUSH 31)                  ; $%
291   (CALL2 27)                          ; SET
293   (GETVALUE 24)                       ; $__
295   (SETVALUE 37)                       ; $_
297   (GETVALUE 38)                       ; $SHOWTIME
299   (JMPIFNOT L408)
302   (CONST&PUSH 39)                     ; #<COMPILED-CLOSURE CONTINUE-2>
304   (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
306   (LOAD&PUSH 10)
307   (LOAD&PUSH 5)
308   (CALLSR 3 21)                       ; FUNCALL
311   (LOAD&PUSH 3)
312   (LOAD&PUSH 5)
313   (CALLSR&PUSH 1 54)                  ; -
316   (LOAD&PUSH 0)
317   (CONST&PUSH 40)                     ; 1024
319   (CALLSR&JMPIF 1 48 L57)             ; >
324   (LOAD&PUSH 0)
325   (CONST&PUSH 43)                     ; 1048576
327   (CALLSR&JMPIF 1 48 L70)             ; >
332   (CONST&PUSH 46)                     ; #<COMPILED-CLOSURE CONTINUE-5>
334   (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
336   (LOAD 2)
337   L337
337   (PUSH)
338   (CALLSR 2 21)                       ; FUNCALL
341   (SKIP 1)
343   (GETVALUE 47)                       ; $NOLABELS
345   (JMPIFNOT L412)
348   (JMP L421)
351   L351
351   (CONST&PUSH 52)                     ; "~&_"
353   (CALL1 53)                          ; MTELL
355   (NIL&PUSH)
356   L356
356   (GETVALUE&PUSH 54)                  ; *TERMINAL-IO*
358   (PUSH-UNBOUND 3)
360   (CALLS1 120)                        ; READ-CHAR
362   (JMPHASH 55 L393 L365 L383 L356 L356 L356 L356 L356 L356 L397)
365   L365
365   (CONST&PUSH 56)                     ; C
367   (LOAD&PUSH 19)
368   (CALL2&JMPIF 57 L375)               ; CURSORPOS
371   (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
373   (CALLS1 139)                        ; TERPRI
375   L375
375   (CONST&PUSH 58)                     ; "_"
377   (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
379   (CALLS1 132)                        ; PRINC
381   (JMP L356)
383   L383
383   (CONST&PUSH 59)                     ; "  Pausing.  Type a ';' and Enter to continue demo.~%_"
385   (CALL1 53)                          ; MTELL
387   (JMP L356)
389   L389
389   (CONST 4)                           ; ABORT-DEMO
390   (JMP L462)
393   L393
393   (T&STORE 0)
395   (JMP L356)
397   L397
397   (LOAD&JMPIF 0 L389)
400   (SKIP 1)
402   (LOAD&JMPIFNOT 16 L28)
406   (JMP L449)
408   L408
408   (GETVALUE 47)                       ; $NOLABELS
410   (JMPIF L421)
412   L412
412   (LOAD&PUSH 0)
413   (LOAD&PUSH 9)
414   (CONST 11)                          ; 0
415   (CONS&PUSH)
416   (CONST&PUSH 48)                     ; TIME
418   (CALL 3 49)                         ; PUTPROP
421   L421
421   (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
423   (CALLS1 140)                        ; FRESH-LINE
425   (LOAD 11)
426   (CAR)
427   (CAR&PUSH)
428   (JMPIFNOTEQTO 50 L440)              ; DISPLAYINPUT
431   (CONST&PUSH 51)                     ; (MLABLE)
433   (LOAD&PUSH 1)
434   (GETVALUE&PUSH 31)                  ; $%
436   (LIST&PUSH 3)
438   (CALL1 25)                          ; DISPLA
440   L440
440   (LOAD&PUSH 16)
441   (JMPIFEQTO 1 L351)                  ; :DEMO
445   (LOAD&JMPIFNOT 16 L28)
449   L449
449   (NIL&PUSH)
450   L450
450   (LOAD&PUSH 18)
451   (PUSH-NIL 2)
453   (PUSH-UNBOUND 1)
455   (CALLS1&STORE 120 0)                ; READ-CHAR
458   (JMPIF L465)
460   (CONST 60)                          ; MACSYMA-QUIT
462   L462
462   (PUSH)
463   (NIL)
464   (THROW)
465   L465
465   (LOAD&PUSH 0)
466   (CONST&PUSH 61)                     ; (#\Space #\Newline #\Return #\Tab)
468   (CALL2&JMPIF 62 L450)               ; ZL-MEMBER
471   (LOAD&PUSH 0)
472   (LOAD&PUSH 19)
473   (CALLS1 121)                        ; UNREAD-CHAR
475   (SKIP 1)
477   (JMP L28)
480   L480
480   (CONST 26)                          ; $DONE
482   (SKIP 12)
484   (CATCH-CLOSE)
485   (SKIP&RET 3)
487   L487
487   (SKIP&RET 3)


Disassembly of function CONTINUE-1
(CONST 0) = 
"
 At the _ prompt, type ';' followed by enter to get next demo"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
 At the _ prompt, type ';' followed by enter to get next demo"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function CONTINUE-2
(CONST 0) = "Evaluation took "
(CONST 1) = SYSTEM::DO-FORMAT-DOLLARS-FLOAT
(CONST 2) = " seconds ("
(CONST 3) = " elapsed)"
3 required arguments
0 optional arguments
Rest parameter
No keyword parameters
24 byte-code instructions:
0     (LOAD&PUSH 4)
1     (CALLS1 140)                        ; FRESH-LINE
3     (CONST&PUSH 0)                      ; "Evaluation took "
4     (LOAD&PUSH 5)
5     (PUSH-UNBOUND 2)
7     (CALLS1 137)                        ; WRITE-STRING
9     (LOAD&PUSH 4)
10    (PUSH-NIL 6)
12    (LOAD&PUSH 10)
13    (CALL 8 1)                          ; SYSTEM::DO-FORMAT-DOLLARS-FLOAT
16    (CONST&PUSH 2)                      ; " seconds ("
17    (LOAD&PUSH 5)
18    (PUSH-UNBOUND 2)
20    (CALLS1 137)                        ; WRITE-STRING
22    (LOAD&PUSH 4)
23    (PUSH-NIL 6)
25    (LOAD&PUSH 9)
26    (CALL 8 1)                          ; SYSTEM::DO-FORMAT-DOLLARS-FLOAT
29    (CONST&PUSH 3)                      ; " elapsed)"
30    (LOAD&PUSH 5)
31    (PUSH-UNBOUND 2)
33    (CALLS1 137)                        ; WRITE-STRING
35    (LOAD 1)
36    (SKIP&RET 5)


Disassembly of function CONTINUE-3
(CONST 0) = " using "
(CONST 1) = 3
(CONST 2) = SYSTEM::DO-FORMAT-FIXED-FLOAT
(CONST 3) = " KB."
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
16 byte-code instructions:
0     (CONST&PUSH 0)                      ; " using "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 3)
7     (PUSH-NIL 3)
9     (CONST&PUSH 1)                      ; 3
10    (PUSH-NIL 3)
12    (LOAD&PUSH 10)
13    (CALL 9 2)                          ; SYSTEM::DO-FORMAT-FIXED-FLOAT
16    (CONST&PUSH 3)                      ; " KB."
17    (LOAD&PUSH 4)
18    (PUSH-UNBOUND 2)
20    (CALLS1 137)                        ; WRITE-STRING
22    (LOAD 1)
23    (SKIP&RET 4)


Disassembly of function CONTINUE-4
(CONST 0) = " using "
(CONST 1) = 3
(CONST 2) = SYSTEM::DO-FORMAT-FIXED-FLOAT
(CONST 3) = " MB."
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
16 byte-code instructions:
0     (CONST&PUSH 0)                      ; " using "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 3)
7     (PUSH-NIL 3)
9     (CONST&PUSH 1)                      ; 3
10    (PUSH-NIL 3)
12    (LOAD&PUSH 10)
13    (CALL 9 2)                          ; SYSTEM::DO-FORMAT-FIXED-FLOAT
16    (CONST&PUSH 3)                      ; " MB."
17    (LOAD&PUSH 4)
18    (PUSH-UNBOUND 2)
20    (CALLS1 137)                        ; WRITE-STRING
22    (LOAD 1)
23    (SKIP&RET 4)


Disassembly of function CONTINUE-5
(CONST 0) = " using "
(CONST 1) = SYSTEM::DO-FORMAT-DECIMAL
(CONST 2) = " bytes."
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
15 byte-code instructions:
0     (CONST&PUSH 0)                      ; " using "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 3)
7     (T&PUSH)
8     (PUSH-NIL 5)
10    (LOAD&PUSH 9)
11    (CALL 8 1)                          ; SYSTEM::DO-FORMAT-DECIMAL
14    (CONST&PUSH 2)                      ; " bytes."
15    (LOAD&PUSH 4)
16    (PUSH-UNBOUND 2)
18    (CALLS1 137)                        ; WRITE-STRING
20    (LOAD 1)
21    (SKIP&RET 4)


Disassembly of function #:|(DEFUN $BREAK (&REST ARG-LIST) ...)-13|
(CONST 0) = $BREAK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $BREAK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $BREAK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $BREAK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $BREAK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $BREAK
8     (SKIP&RET 1)


Disassembly of function $BREAK
(CONST 0) = $PRINT
(CONST 1) = MBREAK-LOOP
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; $PRINT
2     (LOAD 2)
3     (APPLY&PUSH 0)
5     (CALL0 1)                           ; MBREAK-LOOP
7     (POP)
8     (SKIP&RET 2)


Disassembly of function #:|(DEFUN MBREAK-LOOP NIL ...)-14|
(CONST 0) = MBREAK-LOOP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MBREAK-LOOP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MBREAK-LOOP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MBREAK-LOOP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MBREAK-LOOP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MBREAK-LOOP
8     (SKIP&RET 1)


Disassembly of function MBREAK-LOOP
(CONST 0) = *DEBUG-IO*
(CONST 1) = *STANDARD-INPUT*
(CONST 2) = *STANDARD-OUTPUT*
(CONST 3) = BREAK-EXIT
(CONST 4) = #<COMPILED-CLOSURE MBREAK-LOOP-1>
(CONST 5) = BREAK-PROMPT
(CONST 6) = *MREAD-PROMPT*
(CONST 7) = MREAD
(CONST 8) = $EXIT
(CONST 9) = #(NIL)
(CONST 10) = (#(ERROR 61) 3 . 2)
(CONST 11) = MEVAL
(CONST 12) = DISPLA
(CONST 13) = ERRSET
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (ERRSET *STANDARD-INPUT* *STANDARD-OUTPUT* *DEBUG-IO*)
52 byte-code instructions:
0     (GETVALUE 0)                        ; *DEBUG-IO*
2     (BIND 1)                            ; *STANDARD-INPUT*
4     (GETVALUE 0)                        ; *DEBUG-IO*
6     (BIND 2)                            ; *STANDARD-OUTPUT*
8     (CONST 3)                           ; BREAK-EXIT
9     (CATCH-OPEN L80)
12    (CONST&PUSH 4)                      ; #<COMPILED-CLOSURE MBREAK-LOOP-1>
13    (GETVALUE&PUSH 2)                   ; *STANDARD-OUTPUT*
15    (CALLSR 1 21)                       ; FUNCALL
18    (NIL&PUSH)
19    L19
19    (PUSH-UNBOUND 1)
21    (CALLS1 140)                        ; FRESH-LINE
23    (CALL0 5)                           ; BREAK-PROMPT
25    (BIND 6)                            ; *MREAD-PROMPT*
27    (GETVALUE&PUSH 1)                   ; *STANDARD-INPUT*
29    (CALL1 7)                           ; MREAD
31    (UNBIND1)
32    (CDR)
33    (CDR)
34    (CAR)
35    (STORE 0)
36    (PUSH)
37    (JMPIFEQTO 8 L58)                   ; $EXIT
40    (NIL&PUSH)
41    (TAGBODY-OPEN 9 L72)                ; #(NIL)
44    (HANDLER-OPEN 10 L61)               ; (#(ERROR 61) 3 . 2)
46    (LOAD&PUSH 9)
47    (CALL1&PUSH 11)                     ; MEVAL
49    (CALL1 12)                          ; DISPLA
51    (SKIP 4)
53    L53
53    (TAGBODY-CLOSE)
54    (SKIP 1)
56    (JMP L19)
58    L58
58    (CONST&PUSH 3)                      ; BREAK-EXIT
59    (T)
60    (THROW)
61    L61
61    (HANDLER-BEGIN&PUSH)
62    (LOAD 0)
63    (STOREI 0 0 4)
67    (GO-I 0 0 2 0)
72    L72
72    (GETVALUE 13)                       ; ERRSET
74    (JMPIFNOT L53)
76    (LOAD&PUSH 4)
77    (CALLSR 0 29)                       ; ERROR
80    L80
80    (UNBIND 2)
82    (SKIP&RET 1)


Disassembly of function MBREAK-LOOP-1
(CONST 0) = 
"
Entering a Macsyma break point. Type EXIT; to resume"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
Entering a Macsyma break point. Type EXIT; to resume"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function #:|(DEFUN MERRBREAK (&OPTIONAL ARG) ...)-15|
(CONST 0) = MERRBREAK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MERRBREAK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MERRBREAK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MERRBREAK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MERRBREAK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MERRBREAK
8     (SKIP&RET 1)


Disassembly of function MERRBREAK
(CONST 0) = *DEBUG-IO*
(CONST 1) = #<COMPILED-CLOSURE MERRBREAK-1>
(CONST 2) = FORMAT
(CONST 3) = MBREAK-LOOP
0 required arguments
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (*DEBUG-IO*)
7 byte-code instructions:
0     (UNBOUND->NIL 1)
2     (GETVALUE&PUSH 0)                   ; *DEBUG-IO*
4     (CONST&PUSH 1)                      ; #<COMPILED-CLOSURE MERRBREAK-1>
5     (LOAD&PUSH 3)
6     (CALL 3 2)                          ; FORMAT
9     (CALL0 3)                           ; MBREAK-LOOP
11    (SKIP&RET 2)


Disassembly of function MERRBREAK-1
(CONST 0) = 
"
Merrbreak:"
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
9 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
Merrbreak:"
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (LOAD 1)
11    (SKIP&RET 4)


Disassembly of function #:|(DEFUN RETRIEVE (MSG FLAG &AUX ...) ...)-16|
(CONST 0) = RETRIEVE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RETRIEVE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RETRIEVE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RETRIEVE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RETRIEVE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RETRIEVE
8     (SKIP&RET 1)


Disassembly of function RETRIEVE
(CONST 0) = MSG
(CONST 1) = FLAG
(CONST 2) = PRINT?
(CONST 3) = NOPRINT
(CONST 4) = MTERPRI
(CONST 5) = #.#'PRINC
(CONST 6) = DISPLA
(CONST 7) = *QUERY-IO*
(CONST 8) = MREAD-NOPROMPT
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*QUERY-IO* MSG PRINT? FLAG)
writes special variable : (PRINT?)
49 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; MSG
3     (LOAD 4)
4     (BIND 1)                            ; FLAG
6     (NIL)
7     (BIND 2)                            ; PRINT?
9     (GETVALUE&PUSH 1)                   ; FLAG
11    (JMPIFNOTEQTO 3 L46)                ; NOPRINT
14    (GETVALUE 2)                        ; PRINT?
16    (JMPIFNOT L53)
18    L18
18    (GETVALUE 0)                        ; MSG
20    (JMPIFNOT L37)
22    (GETVALUE 0)                        ; MSG
24    (JMPIFATOM L58)
26    (GETVALUE&PUSH 1)                   ; FLAG
28    (T)
29    (JMPIFEQ L68)
31    (GETVALUE&PUSH 0)                   ; MSG
33    (CALL1 6)                           ; DISPLA
35    (CALL0 4)                           ; MTERPRI
37    L37
37    (GETVALUE&PUSH 7)                   ; *QUERY-IO*
39    (NIL&PUSH)
40    (CALL2 8)                           ; MREAD-NOPROMPT
42    (UNBIND 3)
44    (SKIP&RET 3)
46    L46
46    (T)
47    (SETVALUE 2)                        ; PRINT?
49    (GETVALUE 2)                        ; PRINT?
51    (JMPIF L18)
53    L53
53    (T)
54    (SETVALUE 2)                        ; PRINT?
56    (JMP L37)
58    L58
58    (GETVALUE&PUSH 0)                   ; MSG
60    (PUSH-UNBOUND 1)
62    (CALLS1 132)                        ; PRINC
64    (CALL0 4)                           ; MTERPRI
66    (JMP L37)
68    L68
68    (CONST&PUSH 5)                      ; #.#'PRINC
69    (GETVALUE 0)                        ; MSG
71    (CDR&PUSH)
72    (CALLSR 0 24)                       ; MAPC
75    (CALL0 4)                           ; MTERPRI
77    (JMP L37)


Disassembly of function #:|(DEFMFUN $READ (&REST L) ...)-17|
(CONST 0) = $READ
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $READ>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $READ
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $READ
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $READ>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $READ
8     (SKIP&RET 1)


Disassembly of function $READ
(CONST 0) = $READONLY
(CONST 1) = MEVAL
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&SYMBOL-FUNCTION&PUSH 0)      ; $READONLY
2     (LOAD 2)
3     (APPLY&PUSH 0)
5     (CALL1 1)                           ; MEVAL
7     (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN $READONLY (&REST L) ...)-18|
(CONST 0) = $READONLY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $READONLY>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $READONLY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $READONLY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $READONLY>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $READONLY
8     (SKIP&RET 1)


Disassembly of function $READONLY
(CONST 0) = (#\n)
(CONST 1) = *STANDARD-OUTPUT*
(CONST 2) = $PRINT
(CONST 3) = CLOSE
(CONST 4) = STRING-RIGHT-TRIM
(CONST 5) = ""
(CONST 6) = *MREAD-PROMPT*
(CONST 7) = *QUERY-IO*
(CONST 8) = MREAD
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (*STANDARD-OUTPUT* *QUERY-IO*)
33 byte-code instructions:
0     (LOAD&JMPIF 1 L16)
3     (CONST 5)                           ; ""
4     L4
4     (BIND 6)                            ; *MREAD-PROMPT*
6     (GETVALUE&PUSH 7)                   ; *QUERY-IO*
8     (CALL1 8)                           ; MREAD
10    (CDR)
11    (CDR)
12    (CAR)
13    (UNBIND1)
14    (SKIP&RET 2)
16    L16
16    (CONST&PUSH 0)                      ; (#\n)
17    (NIL&PUSH)
18    (PUSH-UNBOUND 1)
20    (CALLS2 117)                        ; MAKE-STRING-OUTPUT-STREAM
22    (BIND 1)                            ; *STANDARD-OUTPUT*
24    (UNWIND-PROTECT-OPEN L36)
26    (CONST&PUSH 2)                      ; $PRINT
27    (LOAD 8)
28    (APPLY 0)
30    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
32    (CALLS2 118)                        ; GET-OUTPUT-STREAM-STRING
34    (VALUES1)
35    (UNWIND-PROTECT-NORMAL-EXIT)
36    L36
36    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
38    (CALL1 3)                           ; CLOSE
40    (UNWIND-PROTECT-CLOSE)
41    (UNBIND1)
42    (PUSH)
43    (CALL2 4)                           ; STRING-RIGHT-TRIM
45    (JMP L4)


Disassembly of function #:|(DEFUN MAKE-INPUT-STREAM (X Y) ...)-19|
(CONST 0) = MAKE-INPUT-STREAM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MAKE-INPUT-STREAM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MAKE-INPUT-STREAM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MAKE-INPUT-STREAM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MAKE-INPUT-STREAM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MAKE-INPUT-STREAM
8     (SKIP&RET 1)


Disassembly of function MAKE-INPUT-STREAM
(CONST 0) = X
(CONST 1) = Y
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
7 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE 0)                        ; X
8     (UNBIND 2)
10    (SKIP&RET 3)


Disassembly of function #:|(DEFUN BATCH (FILENAME &OPTIONAL DEMO-P ...) ...)-20|
(CONST 0) = BATCH
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BATCH>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BATCH
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BATCH
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BATCH>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BATCH
8     (SKIP&RET 1)


Disassembly of function BATCH
(CONST 0) = 0.0
(CONST 1) = ACCUMULATED-TIME
(CONST 2) = $FILE_SEARCH_DEMO
(CONST 3) = $FILE_SEARCH_MAXIMA
(CONST 4) = $FILE_SEARCH
(CONST 5) = "Could not find ~M in ~M: ~M"
(CONST 6) = MERROR
(CONST 7) = BATCH-INTERNAL
(CONST 8) = $SHOWTIME
(CONST 9) = #<COMPILED-CLOSURE BATCH-1>
(CONST 10) = *STANDARD-OUTPUT*
(CONST 11) = CLOSE
(CONST 12) = #<COMPILED-CLOSURE BATCH-2>
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variables: (ACCUMULATED-TIME *STANDARD-OUTPUT* $SHOWTIME)
68 byte-code instructions:
0     (UNBOUND->NIL 1)
2     (LOAD&PUSH 2)
3     (PUSH-NIL 2)
5     (CONST 0)                           ; 0.0
6     (BIND 1)                            ; ACCUMULATED-TIME
8     (T&PUSH)
9     (LOAD&JMPIF 8 L89)
13    (CONST 3)                           ; $FILE_SEARCH_MAXIMA
14    L14
14    (STORE 5)
15    (LOAD&PUSH 9)
16    (LOAD&PUSH 6)
17    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
19    (CALL2 4)                           ; $FILE_SEARCH
21    (STORE 9)
23    (JMPIF L34)
25    (CONST&PUSH 5)                      ; "Could not find ~M in ~M: ~M"
26    (LOAD&PUSH 7)
27    (LOAD&PUSH 7)
28    (LOAD&PUSH 8)
29    (CALLS1&PUSH 78)                    ; SYMBOL-VALUE
31    (CALL 4 6)                          ; MERROR
34    L34
34    (UNWIND-PROTECT-OPEN L93)
36    (LOAD&PUSH 11)
37    (PUSH-UNBOUND 6)
39    (CALLS1&STORE 249 6)                ; OPEN
42    (PUSH)
43    (LOAD&PUSH 11)
44    (CALL2 7)                           ; BATCH-INTERNAL
46    (NIL&STORE 2)
48    (GETVALUE 8)                        ; $SHOWTIME
50    (JMPIFNOT1 L60)
52    (CONST&PUSH 9)                      ; #<COMPILED-CLOSURE BATCH-1>
53    (GETVALUE&PUSH 10)                  ; *STANDARD-OUTPUT*
55    (GETVALUE&PUSH 1)                   ; ACCUMULATED-TIME
57    (CALLSR 2 21)                       ; FUNCALL
60    L60
60    (UNWIND-PROTECT-NORMAL-EXIT)
61    (LOADI 0 0 4)
65    (JMPIFNOT L99)
67    L67
67    (PUSH)
68    (CALL1 11)                          ; CLOSE
70    (LOADI 0 0 0)
74    (JMPIFNOT L105)
76    L76
76    (CONST&PUSH 12)                     ; #<COMPILED-CLOSURE BATCH-2>
77    (GETVALUE&PUSH 10)                  ; *STANDARD-OUTPUT*
79    (LOADI&PUSH 0 0 9)
83    (CALLSR 2 21)                       ; FUNCALL
86    (UNWIND-PROTECT-CLOSE)
87    (JMP L106)
89    L89
89    (CONST 2)                           ; $FILE_SEARCH_DEMO
90    (JMP L14)
93    L93
93    (LOADI 0 0 4)
97    (JMPIF L67)
99    L99
99    (LOADI 0 0 0)
103   (JMPIF L76)
105   L105
105   (UNWIND-PROTECT-CLOSE)
106   L106
106   (SKIP 1)
108   (UNBIND1)
109   (SKIP&RET 6)


Disassembly of function BATCH-1
(CONST 0) = "Batch spent "
(CONST 1) = SYSTEM::DO-FORMAT-DOLLARS-FLOAT
(CONST 2) = 
" seconds in evaluation.
"
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
16 byte-code instructions:
0     (LOAD&PUSH 3)
1     (CALLS1 140)                        ; FRESH-LINE
3     (CONST&PUSH 0)                      ; "Batch spent "
4     (LOAD&PUSH 4)
5     (PUSH-UNBOUND 2)
7     (CALLS1 137)                        ; WRITE-STRING
9     (LOAD&PUSH 3)
10    (PUSH-NIL 6)
12    (LOAD&PUSH 9)
13    (CALL 8 1)                          ; SYSTEM::DO-FORMAT-DOLLARS-FLOAT
16    (CONST&PUSH 2)                      ; " seconds in evaluation.
"
17    (LOAD&PUSH 4)
18    (PUSH-UNBOUND 2)
20    (CALLS1 137)                        ; WRITE-STRING
22    (LOAD 1)
23    (SKIP&RET 4)


Disassembly of function BATCH-2
(CONST 0) = "(Batch of "
(CONST 1) = 
" aborted.)
"
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 3)
1     (CALLS1 140)                        ; FRESH-LINE
3     (CONST&PUSH 0)                      ; "(Batch of "
4     (LOAD&PUSH 4)
5     (PUSH-UNBOUND 2)
7     (CALLS1 137)                        ; WRITE-STRING
9     (LOAD&PUSH 2)
10    (LOAD&PUSH 4)
11    (CALLS1 132)                        ; PRINC
13    (CONST&PUSH 1)                      ; " aborted.)
"
14    (LOAD&PUSH 4)
15    (PUSH-UNBOUND 2)
17    (CALLS1 137)                        ; WRITE-STRING
19    (LOAD 1)
20    (SKIP&RET 4)


Disassembly of function #:|(DEFUN BATCH-INTERNAL (FILEOBJ DEMO-P) ...)-21|
(CONST 0) = BATCH-INTERNAL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BATCH-INTERNAL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; BATCH-INTERNAL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BATCH-INTERNAL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BATCH-INTERNAL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; BATCH-INTERNAL
8     (SKIP&RET 1)


Disassembly of function BATCH-INTERNAL
(CONST 0) = "Batch Input Stream"
(CONST 1) = MAKE-INPUT-STREAM
(CONST 2) = MAKE-ECHO-INPUT-STREAM
(CONST 3) = :DEMO
(CONST 4) = :BATCH
(CONST 5) = CONTINUE
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
13 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CONST&PUSH 0)                      ; "Batch Input Stream"
2     (CALL2&PUSH 1)                      ; MAKE-INPUT-STREAM
4     (CALL1&PUSH 2)                      ; MAKE-ECHO-INPUT-STREAM
6     (LOAD&JMPIF 2 L15)
9     (CONST 4)                           ; :BATCH
10    L10
10    (PUSH)
11    (CALL2 5)                           ; CONTINUE
13    (SKIP&RET 3)
15    L15
15    (CONST 3)                           ; :DEMO
16    (JMP L10)


Disassembly of function #:|(DEFUN FILENAME-FROM-ARG-LIST (ARG-LIST) ...)-22|
(CONST 0) = FILENAME-FROM-ARG-LIST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FILENAME-FROM-ARG-LIST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FILENAME-FROM-ARG-LIST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FILENAME-FROM-ARG-LIST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FILENAME-FROM-ARG-LIST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FILENAME-FROM-ARG-LIST
8     (SKIP&RET 1)


Disassembly of function FILENAME-FROM-ARG-LIST
(CONST 0) = 1
(CONST 1) = $FILENAME_MERGE
(CONST 2) = (MLIST)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2&PUSH 71)                    ; LENGTH
3     (CONST&PUSH 0)                      ; 1
4     (CALLSR&JMPIF 1 45 L16)             ; =
8     (CONST&PUSH 2)                      ; (MLIST)
9     (LOAD 2)
10    (CONS)
11    L11
11    (PUSH)
12    (CALL1 1)                           ; $FILENAME_MERGE
14    (SKIP&RET 2)
16    L16
16    (LOAD 1)
17    (CAR)
18    (JMP L11)


Disassembly of function #:|(DEFMSPEC $GRINDEF (FORM) ...)-23-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $GRINDEF (FORM) ...)-23-2-1|>
(CONST 1) = $GRINDEF
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $GRINDEF (FORM) ...)-23-2-1|>
1     (CONST&PUSH 1)                      ; $GRINDEF
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $GRINDEF (FORM) ...)-23-2-1|
(CONST 0) = GRINDEF
(CONST 1) = $DONE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; GRINDEF
1     (LOAD 2)
2     (CDR)
3     (CONS&PUSH)
4     (CALLS1 91)                         ; EVAL
6     (CONST 1)                           ; $DONE
7     (SKIP&RET 2)


Disassembly of function #:|(DEFUN $DEMO (&REST ARG-LIST) ...)-24|
(CONST 0) = $DEMO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $DEMO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $DEMO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $DEMO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $DEMO>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $DEMO
8     (SKIP&RET 1)


Disassembly of function $DEMO
(CONST 0) = $FILE_SEARCH_DEMO
(CONST 1) = $FILE_SEARCH
(CONST 2) = "Could not find ~M in  ~M: ~M"
(CONST 3) = MERROR
(CONST 4) = $DEMO
(CONST 5) = $BATCH
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variable: ($FILE_SEARCH_DEMO)
14 byte-code instructions:
0     (LOAD&CAR&PUSH 1)
2     (GETVALUE&PUSH 0)                   ; $FILE_SEARCH_DEMO
4     (CALL2&PUSH 1)                      ; $FILE_SEARCH
6     (LOAD&JMPIF 0 L18)
9     (CONST&PUSH 2)                      ; "Could not find ~M in  ~M: ~M"
10    (LOAD&CAR&PUSH 3)
12    (CONST&PUSH 0)                      ; $FILE_SEARCH_DEMO
13    (GETVALUE&PUSH 0)                   ; $FILE_SEARCH_DEMO
15    (CALL 4 3)                          ; MERROR
18    L18
18    (LOAD&PUSH 0)
19    (CONST&PUSH 4)                      ; $DEMO
20    (CALL2 5)                           ; $BATCH
22    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN $BUG_REPORT NIL ...)-25|
(CONST 0) = $BUG_REPORT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $BUG_REPORT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $BUG_REPORT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $BUG_REPORT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $BUG_REPORT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $BUG_REPORT
8     (SKIP&RET 1)


Disassembly of function $BUG_REPORT
(CONST 0) = #<COMPILED-CLOSURE $BUG_REPORT-1>
(CONST 1) = *STANDARD-OUTPUT*
(CONST 2) = #<COMPILED-CLOSURE $BUG_REPORT-2>
(CONST 3) = #<COMPILED-CLOSURE $BUG_REPORT-3>
(CONST 4) = #<COMPILED-CLOSURE $BUG_REPORT-4>
(CONST 5) = #<COMPILED-CLOSURE $BUG_REPORT-5>
(CONST 6) = $BUILD_INFO
(CONST 7) = #<COMPILED-CLOSURE $BUG_REPORT-6>
(CONST 8) = #<COMPILED-CLOSURE $BUG_REPORT-7>
(CONST 9) = ""
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*STANDARD-OUTPUT*)
24 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE $BUG_REPORT-1>
1     (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
3     (CALLSR 1 21)                       ; FUNCALL
6     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $BUG_REPORT-2>
7     (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
9     (CALLSR 1 21)                       ; FUNCALL
12    (CONST&PUSH 3)                      ; #<COMPILED-CLOSURE $BUG_REPORT-3>
13    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
15    (CALLSR 1 21)                       ; FUNCALL
18    (CONST&PUSH 4)                      ; #<COMPILED-CLOSURE $BUG_REPORT-4>
19    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
21    (CALLSR 1 21)                       ; FUNCALL
24    (CONST&PUSH 5)                      ; #<COMPILED-CLOSURE $BUG_REPORT-5>
25    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
27    (CALLSR 1 21)                       ; FUNCALL
30    (CALL0 6)                           ; $BUILD_INFO
32    (CONST&PUSH 7)                      ; #<COMPILED-CLOSURE $BUG_REPORT-6>
33    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
35    (CALLSR 1 21)                       ; FUNCALL
38    (CONST&PUSH 8)                      ; #<COMPILED-CLOSURE $BUG_REPORT-7>
39    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
41    (CALLSR 1 21)                       ; FUNCALL
44    (CONST 9)                           ; ""
45    (SKIP&RET 1)


Disassembly of function $BUG_REPORT-1
(CONST 0) = 
"
The Maxima bug database is available at
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
The Maxima bug database is available at
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function $BUG_REPORT-2
(CONST 0) = 
"    http://sourceforge.net/tracker/?atid=104933&group_id=4933&func=browse
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "    http://sourceforge.net/tracker/?atid=104933&group_id=4933&func=browse
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function $BUG_REPORT-3
(CONST 0) = 
"Submit bug reports by following the 'Submit New' link on that page.
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "Submit bug reports by following the 'Submit New' link on that page.
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function $BUG_REPORT-4
(CONST 0) = 
"Please include the following build information with your bug report:
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "Please include the following build information with your bug report:
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function $BUG_REPORT-5
(CONST 0) = 
"-------------------------------------------------------------
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "-------------------------------------------------------------
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function $BUG_REPORT-6
(CONST 0) = 
"-------------------------------------------------------------
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "-------------------------------------------------------------
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function $BUG_REPORT-7
(CONST 0) = 
"The above information is also available from the Maxima function build_info().

"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "The above information is also available from the Maxima function build_info().

"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)

WARNING in $BUILD_INFO in lines 353..364 :
*AUTOCONF-VERSION* is neither declared nor bound,
it will be treated as if it were declared SPECIAL.
WARNING in $BUILD_INFO in lines 353..364 :
*AUTOCONF-HOST* is neither declared nor bound,
it will be treated as if it were declared SPECIAL.

Disassembly of function #:|(DEFMFUN $BUILD_INFO NIL ...)-26|
(CONST 0) = $BUILD_INFO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $BUILD_INFO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $BUILD_INFO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $BUILD_INFO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $BUILD_INFO>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $BUILD_INFO
8     (SKIP&RET 1)


Disassembly of function $BUILD_INFO
(CONST 0) = #<COMPILED-CLOSURE $BUILD_INFO-1>
(CONST 1) = *STANDARD-OUTPUT*
(CONST 2) = *AUTOCONF-VERSION*
(CONST 3) = #<COMPILED-CLOSURE $BUILD_INFO-2>
(CONST 4) = COMMON-LISP-USER:*MAXIMA-BUILD-TIME*
(CONST 5) = #<COMPILED-CLOSURE $BUILD_INFO-3>
(CONST 6) = *AUTOCONF-HOST*
(CONST 7) = #<COMPILED-CLOSURE $BUILD_INFO-4>
(CONST 8) = #<COMPILED-CLOSURE $BUILD_INFO-5>
(CONST 9) = ""
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: 
(*AUTOCONF-HOST* COMMON-LISP-USER:*MAXIMA-BUILD-TIME* *AUTOCONF-VERSION*
 *STANDARD-OUTPUT*)
37 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE $BUILD_INFO-1>
1     (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
3     (GETVALUE&PUSH 2)                   ; *AUTOCONF-VERSION*
5     (CALLSR 2 21)                       ; FUNCALL
8     (CONST&PUSH 3)                      ; #<COMPILED-CLOSURE $BUILD_INFO-2>
9     (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
11    (GETVALUE 4)                        ; COMMON-LISP-USER:*MAXIMA-BUILD-TIME*
13    (CDR)
14    (CDR)
15    (CAR&PUSH)
16    (GETVALUE 4)                        ; COMMON-LISP-USER:*MAXIMA-BUILD-TIME*
18    (CDR)
19    (CAR&PUSH)
20    (GETVALUE&PUSH 4)                   ; COMMON-LISP-USER:*MAXIMA-BUILD-TIME*
22    (CALLS1&PUSH 149)                   ; FIFTH
24    (GETVALUE 4)                        ; COMMON-LISP-USER:*MAXIMA-BUILD-TIME*
26    (CDR)
27    (CDR)
28    (CDR)
29    (CAR&PUSH)
30    (GETVALUE&PUSH 4)                   ; COMMON-LISP-USER:*MAXIMA-BUILD-TIME*
32    (CALLS1&PUSH 150)                   ; SIXTH
34    (CALLSR 6 21)                       ; FUNCALL
37    (CONST&PUSH 5)                      ; #<COMPILED-CLOSURE $BUILD_INFO-3>
38    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
40    (GETVALUE&PUSH 6)                   ; *AUTOCONF-HOST*
42    (CALLSR 2 21)                       ; FUNCALL
45    (CONST&PUSH 7)                      ; #<COMPILED-CLOSURE $BUILD_INFO-4>
46    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
48    (CALLS1&PUSH 193)                   ; LISP-IMPLEMENTATION-TYPE
50    (CALLSR 2 21)                       ; FUNCALL
53    (CONST&PUSH 8)                      ; #<COMPILED-CLOSURE $BUILD_INFO-5>
54    (GETVALUE&PUSH 1)                   ; *STANDARD-OUTPUT*
56    (CALLS1&PUSH 194)                   ; LISP-IMPLEMENTATION-VERSION
58    (CALLSR 2 21)                       ; FUNCALL
61    (CONST 9)                           ; ""
62    (SKIP&RET 1)


Disassembly of function $BUILD_INFO-1
(CONST 0) = 
"
Maxima version: "
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; "
Maxima version: "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (LOAD&PUSH 3)
11    (CALLS1 139)                        ; TERPRI
13    (LOAD 1)
14    (SKIP&RET 4)


Disassembly of function $BUILD_INFO-2
(CONST 0) = "Maxima build date: "
(CONST 1) = #\:
(CONST 2) = #\Space
(CONST 3) = #\/
6 required arguments
0 optional arguments
Rest parameter
No keyword parameters
35 byte-code instructions:
0     (CONST&PUSH 0)                      ; "Maxima build date: "
1     (LOAD&PUSH 8)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 6)
7     (LOAD&PUSH 8)
8     (CALLS1 132)                        ; PRINC
10    (CONST&PUSH 1)                      ; #\:
11    (LOAD&PUSH 8)
12    (CALLS1 136)                        ; WRITE-CHAR
14    (LOAD&PUSH 5)
15    (LOAD&PUSH 8)
16    (CALLS1 132)                        ; PRINC
18    (CONST&PUSH 2)                      ; #\Space
19    (LOAD&PUSH 8)
20    (CALLS1 136)                        ; WRITE-CHAR
22    (LOAD&PUSH 4)
23    (LOAD&PUSH 8)
24    (CALLS1 132)                        ; PRINC
26    (CONST&PUSH 3)                      ; #\/
27    (LOAD&PUSH 8)
28    (CALLS1 136)                        ; WRITE-CHAR
30    (LOAD&PUSH 3)
31    (LOAD&PUSH 8)
32    (CALLS1 132)                        ; PRINC
34    (CONST&PUSH 3)                      ; #\/
35    (LOAD&PUSH 8)
36    (CALLS1 136)                        ; WRITE-CHAR
38    (LOAD&PUSH 2)
39    (LOAD&PUSH 8)
40    (CALLS1 132)                        ; PRINC
42    (LOAD&PUSH 7)
43    (CALLS1 139)                        ; TERPRI
45    (LOAD 1)
46    (SKIP&RET 8)


Disassembly of function $BUILD_INFO-3
(CONST 0) = "host type: "
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; "host type: "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (LOAD&PUSH 3)
11    (CALLS1 139)                        ; TERPRI
13    (LOAD 1)
14    (SKIP&RET 4)


Disassembly of function $BUILD_INFO-4
(CONST 0) = "lisp-implementation-type: "
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; "lisp-implementation-type: "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (LOAD&PUSH 3)
11    (CALLS1 139)                        ; TERPRI
13    (LOAD 1)
14    (SKIP&RET 4)


Disassembly of function $BUILD_INFO-5
(CONST 0) = "lisp-implementation-version: "
(CONST 1) = 
"

"
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; "lisp-implementation-version: "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (CONST&PUSH 1)                      ; "

"
11    (LOAD&PUSH 4)
12    (PUSH-UNBOUND 2)
14    (CALLS1 137)                        ; WRITE-STRING
16    (LOAD 1)
17    (SKIP&RET 4)


Disassembly of function #:|(DEFVAR *MAXIMA-STARTED* NIL)-27|
(CONST 0) = (SPECIAL *MAXIMA-STARTED*)
(CONST 1) = *MAXIMA-STARTED*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL *MAXIMA-STARTED*)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; *MAXIMA-STARTED*
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; *MAXIMA-STARTED*
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; *MAXIMA-STARTED*
12    (SKIP&RET 1)

WARNING in MACSYMA-TOP-LEVEL in lines 368..391 :
*AUTOCONF-VERSION* is neither declared nor bound,
it will be treated as if it were declared SPECIAL.

Disassembly of function #:|(DEFUN MACSYMA-TOP-LEVEL (&OPTIONAL # BATCH-FLAG) ...)-28|
(CONST 0) = MACSYMA-TOP-LEVEL
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MACSYMA-TOP-LEVEL
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MACSYMA-TOP-LEVEL
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MACSYMA-TOP-LEVEL
8     (SKIP&RET 1)


Disassembly of function MACSYMA-TOP-LEVEL
(CONST 0) = *STANDARD-INPUT*
(CONST 1) = "MAXIMA"
(CONST 2) = *PACKAGE*
(CONST 3) = *MAXIMA-STARTED*
(CONST 4) = #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-1>
(CONST 5) = *STANDARD-OUTPUT*
(CONST 6) = #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-2>
(CONST 7) = *AUTOCONF-VERSION*
(CONST 8) = #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-3>
(CONST 9) = #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-4>
(CONST 10) = #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-5>
(CONST 11) = #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-6>
(CONST 12) = "maxima-init.lisp"
(CONST 13) = $FILE_SEARCH
(CONST 14) = "maxima-init.lisp"
(CONST 15) = $LOAD
(CONST 16) = "maxima-init.mac"
(CONST 17) = "maxima-init.mac"
(CONST 18) = $BATCHLOAD
(CONST 19) = QUIT-TO-LISP
(CONST 20) = "MAXIMA"
(CONST 21) = MACSYMA-QUIT
(CONST 22) = CONTINUE
(CONST 23) = BYE
0 required arguments
2 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*AUTOCONF-VERSION* *STANDARD-OUTPUT* *MAXIMA-STARTED* *STANDARD-INPUT*)
writes special variables : (*PACKAGE* *MAXIMA-STARTED*)
67 byte-code instructions:
0     (JMPIFBOUNDP 2 L6)
3     (GETVALUE 0)                        ; *STANDARD-INPUT*
5     (STORE 2)
6     L6
6     (UNBOUND->NIL 1)
8     (CONST&PUSH 1)                      ; "MAXIMA"
9     (CALLS1 204)                        ; FIND-PACKAGE
11    (BIND 2)                            ; *PACKAGE*
13    (GETVALUE 3)                        ; *MAXIMA-STARTED*
15    (JMPIF L92)
18    (CONST&PUSH 6)                      ; #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-2>
19    (GETVALUE&PUSH 5)                   ; *STANDARD-OUTPUT*
21    (GETVALUE&PUSH 7)                   ; *AUTOCONF-VERSION*
23    (CALLSR 2 21)                       ; FUNCALL
26    (CONST&PUSH 8)                      ; #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-3>
27    (GETVALUE&PUSH 5)                   ; *STANDARD-OUTPUT*
29    (CALLSR 1 21)                       ; FUNCALL
32    (CONST&PUSH 9)                      ; #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-4>
33    (GETVALUE&PUSH 5)                   ; *STANDARD-OUTPUT*
35    (CALLSR 1 21)                       ; FUNCALL
38    (CONST&PUSH 10)                     ; #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-5>
39    (GETVALUE&PUSH 5)                   ; *STANDARD-OUTPUT*
41    (CALLSR 1 21)                       ; FUNCALL
44    (CONST&PUSH 11)                     ; #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-6>
45    (GETVALUE&PUSH 5)                   ; *STANDARD-OUTPUT*
47    (CALLSR 1 21)                       ; FUNCALL
50    (T)
51    (SETVALUE 3)                        ; *MAXIMA-STARTED*
53    L53
53    (CONST&PUSH 12)                     ; "maxima-init.lisp"
54    (CALL1&JMPIFNOT 13 L60)             ; $FILE_SEARCH
57    (CONST&PUSH 14)                     ; "maxima-init.lisp"
58    (CALL1 15)                          ; $LOAD
60    L60
60    (CONST&PUSH 16)                     ; "maxima-init.mac"
61    (CALL1&JMPIFNOT 13 L67)             ; $FILE_SEARCH
64    (CONST&PUSH 17)                     ; "maxima-init.mac"
65    (CALL1 18)                          ; $BATCHLOAD
67    L67
67    (CONST 19)                          ; QUIT-TO-LISP
68    (CATCH-OPEN L103)
70    (CONST&PUSH 20)                     ; "MAXIMA"
71    (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
73    (SETVALUE 2)                        ; *PACKAGE*
75    L75
75    (NIL)
76    (CATCH-OPEN L75)
78    (CONST 21)                          ; MACSYMA-QUIT
80    (CATCH-OPEN L100)
82    (LOAD&PUSH 14)
83    (LOAD&PUSH 14)
84    (CALL2 22)                          ; CONTINUE
86    (CALL0 23)                          ; BYE
88    (CATCH-CLOSE)
89    (CATCH-CLOSE)
90    (JMP L75)
92    L92
92    (CONST&PUSH 4)                      ; #<COMPILED-CLOSURE MACSYMA-TOP-LEVEL-1>
93    (GETVALUE&PUSH 5)                   ; *STANDARD-OUTPUT*
95    (CALLSR 1 21)                       ; FUNCALL
98    (JMP L53)
100   L100
100   (CATCH-CLOSE)
101   (JMP L75)
103   L103
103   (UNBIND1)
104   (SKIP&RET 3)


Disassembly of function MACSYMA-TOP-LEVEL-1
(CONST 0) = 
"Maxima restarted.
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "Maxima restarted.
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function MACSYMA-TOP-LEVEL-2
(CONST 0) = "Maxima "
(CONST 1) = 
" http://maxima.sourceforge.net
"
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; "Maxima "
1     (LOAD&PUSH 4)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD&PUSH 2)
7     (LOAD&PUSH 4)
8     (CALLS1 132)                        ; PRINC
10    (CONST&PUSH 1)                      ; " http://maxima.sourceforge.net
"
11    (LOAD&PUSH 4)
12    (PUSH-UNBOUND 2)
14    (CALLS1 137)                        ; WRITE-STRING
16    (LOAD 1)
17    (SKIP&RET 4)


Disassembly of function MACSYMA-TOP-LEVEL-3
(CONST 0) = 
"Distributed under the GNU Public License. See the file COPYING.
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "Distributed under the GNU Public License. See the file COPYING.
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function MACSYMA-TOP-LEVEL-4
(CONST 0) = 
"Dedicated to the memory of William Schelter.
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "Dedicated to the memory of William Schelter.
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function MACSYMA-TOP-LEVEL-5
(CONST 0) = 
"This is a development version of Maxima. The function bug_report()
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "This is a development version of Maxima. The function bug_report()
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function MACSYMA-TOP-LEVEL-6
(CONST 0) = 
"provides bug reporting information.
"
1 required argument
0 optional arguments
Rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; "provides bug reporting information.
"
1     (LOAD&PUSH 3)
2     (PUSH-UNBOUND 2)
4     (CALLS1 137)                        ; WRITE-STRING
6     (LOAD 1)
7     (SKIP&RET 3)


Disassembly of function #:|(PROGN (DEFUN THROW-MACSYMA-TOP NIL ...) (DEFMFUN $WRITEFILE # ...) ...)-29-1|
(CONST 0) = THROW-MACSYMA-TOP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE THROW-MACSYMA-TOP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; THROW-MACSYMA-TOP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; THROW-MACSYMA-TOP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE THROW-MACSYMA-TOP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function THROW-MACSYMA-TOP
(CONST 0) = MACSYMA-QUIT
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (CONST&PUSH 0)                      ; MACSYMA-QUIT
1     (T)
2     (THROW)


Disassembly of function #:|(PROGN (DEFUN THROW-MACSYMA-TOP NIL ...) (DEFMFUN $WRITEFILE # ...) ...)-29-2|
(CONST 0) = $WRITEFILE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $WRITEFILE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $WRITEFILE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $WRITEFILE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $WRITEFILE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function $WRITEFILE
(CONST 0) = X
(CONST 1) = 1
(CONST 2) = DRIBBLE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
10 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS1&PUSH 75)                    ; STRING
7     (CONST&PUSH 1)                      ; 1
8     (PUSH-UNBOUND 1)
10    (CALLS2&PUSH 69)                    ; SUBSEQ
12    (CALL1 2)                           ; DRIBBLE
14    (UNBIND1)
15    (SKIP&RET 2)


Disassembly of function #:|(PROGN (DEFUN THROW-MACSYMA-TOP NIL ...) (DEFMFUN $WRITEFILE # ...) ...)-29-3|
(CONST 0) = (SPECIAL $APPENDFILE)
(CONST 1) = $APPENDFILE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $APPENDFILE)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $APPENDFILE
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $APPENDFILE
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (VALUES0)
12    (SKIP&RET 1)

WARNING in $APPENDFILE in lines 393..450 :
*APPENDFILE-DATA* is neither declared nor bound,
it will be treated as if it were declared SPECIAL.

Disassembly of function #:|(PROGN (DEFUN THROW-MACSYMA-TOP NIL ...) (DEFMFUN $WRITEFILE # ...) ...)-29-4|
(CONST 0) = $APPENDFILE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $APPENDFILE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $APPENDFILE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $APPENDFILE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $APPENDFILE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function $APPENDFILE
(CONST 0) = NAME
(CONST 1) = 1
(CONST 2) = GETCHARN
(CONST 3) = (#\& #\$)
(CONST 4) = $APPENDFILE
(CONST 5) = "already in appendfile, use closefile first"
(CONST 6) = MERROR
(CONST 7) = :OUTPUT
(CONST 8) = :APPEND
(CONST 9) = :CREATE
(CONST 10) = *TERMINAL-IO*
(CONST 11) = *APPENDFILE-DATA*
(CONST 12) = GET-DECODED-TIME
(CONST 13) = #<COMPILED-CLOSURE $APPENDFILE-1>
(CONST 14) = *STANDARD-OUTPUT*
(CONST 15) = $DONE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*STANDARD-OUTPUT* *TERMINAL-IO* $APPENDFILE NAME)
writes special variables : (NAME *TERMINAL-IO* $APPENDFILE *APPENDFILE-DATA*)
66 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; NAME
3     (GETVALUE&PUSH 0)                   ; NAME
5     (CALLS2&JMPIFNOT 6 L20)             ; SYMBOLP
8     (GETVALUE&PUSH 0)                   ; NAME
10    (CONST&PUSH 1)                      ; 1
11    (CALL2&PUSH 2)                      ; GETCHARN
13    (CONST&PUSH 3)                      ; (#\& #\$)
14    (PUSH-UNBOUND 3)
16    (CALLS1&JMPIF 180 L90)              ; MEMBER
20    L20
20    (GETVALUE 4)                        ; $APPENDFILE
22    (JMPIFNOT L27)
24    L24
24    (CONST&PUSH 5)                      ; "already in appendfile, use closefile first"
25    (CALL1 6)                           ; MERROR
27    L27
27    (GETVALUE&PUSH 0)                   ; NAME
29    (CONST&PUSH 7)                      ; :OUTPUT
30    (PUSH-UNBOUND 5)
32    (CONST 8)                           ; :APPEND
33    (STORE 3)
34    (CONST 9)                           ; :CREATE
35    (STORE 2)
36    (CALLS1&PUSH 249)                   ; OPEN
38    (LOAD&PUSH 0)
39    (GETVALUE&PUSH 10)                  ; *TERMINAL-IO*
41    (GETVALUE&PUSH 0)                   ; NAME
43    (LIST 3)
45    (SETVALUE 11)                       ; *APPENDFILE-DATA*
47    (GETVALUE&PUSH 10)                  ; *TERMINAL-IO*
49    (LOAD&PUSH 1)
50    (CALLS2&PUSH 113)                   ; MAKE-ECHO-STREAM
52    (GETVALUE&PUSH 10)                  ; *TERMINAL-IO*
54    (LOAD&PUSH 2)
55    (CALLSR&PUSH 2 43)                  ; MAKE-BROADCAST-STREAM
58    (CALLS2 111)                        ; MAKE-TWO-WAY-STREAM
60    (SETVALUE 4)                        ; $APPENDFILE
62    (SETVALUE 10)                       ; *TERMINAL-IO*
64    (CALL0 12)                          ; GET-DECODED-TIME
66    (NV-TO-STACK 6)
68    (CONST&PUSH 13)                     ; #<COMPILED-CLOSURE $APPENDFILE-1>
69    (GETVALUE&PUSH 14)                  ; *STANDARD-OUTPUT*
71    (GETVALUE&PUSH 0)                   ; NAME
73    (LOAD&PUSH 3)
74    (LOAD&PUSH 5)
75    (LOAD&PUSH 7)
76    (LOAD&PUSH 9)
77    (LOAD&PUSH 11)
78    (LOAD&PUSH 13)
79    (CALLSR 8 21)                       ; FUNCALL
82    (SKIP 6)
84    (CONST 15)                          ; $DONE
85    (SKIP 1)
87    (UNBIND1)
88    (SKIP&RET 2)
90    L90
90    (GETVALUE&PUSH 0)                   ; NAME
92    (CALLS2&PUSH 140)                   ; SYMBOL-NAME
94    (CONST&PUSH 1)                      ; 1
95    (PUSH-UNBOUND 1)
97    (CALLS2 69)                         ; SUBSEQ
99    (SETVALUE 0)                        ; NAME
101   (GETVALUE 4)                        ; $APPENDFILE
103   (JMPIFNOT L27)
106   (JMP L24)


Disassembly of function $APPENDFILE-1
(CONST 0) = "/* Starts dribbling to "
(CONST 1) = " ("
(CONST 2) = SYSTEM::DO-FORMAT-DECIMAL
(CONST 3) = #\/
(CONST 4) = ", "
(CONST 5) = #\:
(CONST 6) = ").*/"
8 required arguments
0 optional arguments
Rest parameter
No keyword parameters
59 byte-code instructions:
0     (LOAD&PUSH 9)
1     (CALLS1 140)                        ; FRESH-LINE
3     (CONST&PUSH 0)                      ; "/* Starts dribbling to "
4     (LOAD&PUSH 10)
5     (PUSH-UNBOUND 2)
7     (CALLS1 137)                        ; WRITE-STRING
9     (LOAD&PUSH 8)
10    (LOAD&PUSH 10)
11    (CALLS1 132)                        ; PRINC
13    (CONST&PUSH 1)                      ; " ("
14    (LOAD&PUSH 10)
15    (PUSH-UNBOUND 2)
17    (CALLS1 137)                        ; WRITE-STRING
19    (LOAD&PUSH 9)
20    (PUSH-NIL 6)
22    (LOAD&PUSH 14)
23    (CALL 8 2)                          ; SYSTEM::DO-FORMAT-DECIMAL
26    (CONST&PUSH 3)                      ; #\/
27    (LOAD&PUSH 10)
28    (CALLS1 136)                        ; WRITE-CHAR
30    (LOAD&PUSH 9)
31    (PUSH-NIL 6)
33    (LOAD&PUSH 13)
34    (CALL 8 2)                          ; SYSTEM::DO-FORMAT-DECIMAL
37    (CONST&PUSH 3)                      ; #\/
38    (LOAD&PUSH 10)
39    (CALLS1 136)                        ; WRITE-CHAR
41    (LOAD&PUSH 9)
42    (PUSH-NIL 6)
44    (LOAD&PUSH 12)
45    (CALL 8 2)                          ; SYSTEM::DO-FORMAT-DECIMAL
48    (CONST&PUSH 4)                      ; ", "
49    (LOAD&PUSH 10)
50    (PUSH-UNBOUND 2)
52    (CALLS1 137)                        ; WRITE-STRING
54    (LOAD&PUSH 9)
55    (PUSH-NIL 6)
57    (LOAD&PUSH 11)
58    (CALL 8 2)                          ; SYSTEM::DO-FORMAT-DECIMAL
61    (CONST&PUSH 5)                      ; #\:
62    (LOAD&PUSH 10)
63    (CALLS1 136)                        ; WRITE-CHAR
65    (LOAD&PUSH 9)
66    (PUSH-NIL 6)
68    (LOAD&PUSH 10)
69    (CALL 8 2)                          ; SYSTEM::DO-FORMAT-DECIMAL
72    (CONST&PUSH 5)                      ; #\:
73    (LOAD&PUSH 10)
74    (CALLS1 136)                        ; WRITE-CHAR
76    (LOAD&PUSH 9)
77    (PUSH-NIL 6)
79    (LOAD&PUSH 9)
80    (CALL 8 2)                          ; SYSTEM::DO-FORMAT-DECIMAL
83    (CONST&PUSH 6)                      ; ").*/"
84    (LOAD&PUSH 10)
85    (PUSH-UNBOUND 2)
87    (CALLS1 137)                        ; WRITE-STRING
89    (LOAD 1)
90    (SKIP&RET 10)

WARNING in $CLOSEFILE in lines 393..450 :
*APPENDFILE-DATA* is neither declared nor bound,
it will be treated as if it were declared SPECIAL.
WARNING in $CLOSEFILE in lines 393..450 :
*APPENDFILE-DATA* is neither declared nor bound,
it will be treated as if it were declared SPECIAL.
WARNING in $CLOSEFILE in lines 393..450 :
*APPENDFILE-DATA* is neither declared nor bound,
it will be treated as if it were declared SPECIAL.
WARNING in $CLOSEFILE in lines 393..450 :
*APPENDFILE-DATA* is neither declared nor bound,
it will be treated as if it were declared SPECIAL.

Disassembly of function #:|(PROGN (DEFUN THROW-MACSYMA-TOP NIL ...) (DEFMFUN $WRITEFILE # ...) ...)-29-5|
(CONST 0) = $CLOSEFILE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $CLOSEFILE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $CLOSEFILE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $CLOSEFILE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $CLOSEFILE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function $CLOSEFILE
(CONST 0) = $APPENDFILE
(CONST 1) = *TERMINAL-IO*
(CONST 2) = #<COMPILED-CLOSURE $CLOSEFILE-1>
(CONST 3) = *STANDARD-OUTPUT*
(CONST 4) = 2
(CONST 5) = *APPENDFILE-DATA*
(CONST 6) = 1
(CONST 7) = 
"*TERMINAL-IO* was rebound while APPENDFILE is on.~%~
                   You may miss some dribble output."
(CONST 8) = WARN
(CONST 9) = 0
(CONST 10) = CLOSE
(CONST 11) = DRIBBLE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*TERMINAL-IO* *APPENDFILE-DATA* *STANDARD-OUTPUT* $APPENDFILE)
writes special variables : ($APPENDFILE *APPENDFILE-DATA* *TERMINAL-IO*)
31 byte-code instructions:
0     (GETVALUE 0)                        ; $APPENDFILE
2     (JMPIF L28)
4     (CALL0 11)                          ; DRIBBLE
6     (SKIP&RET 1)
8     L8
8     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $CLOSEFILE-1>
9     (GETVALUE&PUSH 3)                   ; *STANDARD-OUTPUT*
11    (CONST&PUSH 4)                      ; 2
12    (GETVALUE&PUSH 5)                   ; *APPENDFILE-DATA*
14    (CALLS1&PUSH 148)                   ; NTH
16    (CALLSR 2 21)                       ; FUNCALL
19    (CONST&PUSH 6)                      ; 1
20    (GETVALUE&PUSH 5)                   ; *APPENDFILE-DATA*
22    (CALLS1 148)                        ; NTH
24    (SETVALUE 1)                        ; *TERMINAL-IO*
26    (JMP L36)
28    L28
28    (PUSH)
29    (GETVALUE 1)                        ; *TERMINAL-IO*
31    (JMPIFEQ L8)
33    (CONST&PUSH 7)                      ; "*TERMINAL-IO* was rebound while APPENDFILE is on.~%~
                   You may miss some dribble output."
34    (CALL1 8)                           ; WARN
36    L36
36    (CONST&PUSH 9)                      ; 0
37    (GETVALUE&PUSH 5)                   ; *APPENDFILE-DATA*
39    (CALLS1&PUSH 148)                   ; NTH
41    (CALL1 10)                          ; CLOSE
43    (NIL)
44    (SETVALUE 5)                        ; *APPENDFILE-DATA*
46    (SETVALUE 0)                        ; $APPENDFILE
48    (SKIP&RET 1)


Disassembly of function $CLOSEFILE-1
(CONST 0) = "/*Finished dribbling to "
(CONST 1) = ".*/"
2 required arguments
0 optional arguments
Rest parameter
No keyword parameters
15 byte-code instructions:
0     (LOAD&PUSH 3)
1     (CALLS1 140)                        ; FRESH-LINE
3     (CONST&PUSH 0)                      ; "/*Finished dribbling to "
4     (LOAD&PUSH 4)
5     (PUSH-UNBOUND 2)
7     (CALLS1 137)                        ; WRITE-STRING
9     (LOAD&PUSH 2)
10    (LOAD&PUSH 4)
11    (CALLS1 132)                        ; PRINC
13    (CONST&PUSH 1)                      ; ".*/"
14    (LOAD&PUSH 4)
15    (PUSH-UNBOUND 2)
17    (CALLS1 137)                        ; WRITE-STRING
19    (LOAD 1)
20    (SKIP&RET 4)


Disassembly of function #:|(PROGN (DEFUN THROW-MACSYMA-TOP NIL ...) (DEFMFUN $WRITEFILE # ...) ...)-29-6|
(CONST 0) = $ED
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $ED>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ED
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $ED
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $ED>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function $ED
(CONST 0) = X
(CONST 1) = 1
(CONST 2) = ED
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
10 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS1&PUSH 75)                    ; STRING
7     (CONST&PUSH 1)                      ; 1
8     (PUSH-UNBOUND 1)
10    (CALLS2&PUSH 69)                    ; SUBSEQ
12    (CALL1 2)                           ; ED
14    (UNBIND1)
15    (SKIP&RET 2)


Disassembly of function #:|(PROGN (DEFUN THROW-MACSYMA-TOP NIL ...) (DEFMFUN $WRITEFILE # ...) ...)-29-7|
(CONST 0) = $CLI
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $CLI>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $CLI
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $CLI
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $CLI>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function $CLI
(CONST 0) = ":CLI.PR"
(CONST 1) = PROCESS
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
3 byte-code instructions:
0     (CONST&PUSH 0)                      ; ":CLI.PR"
1     (CALL1 1)                           ; PROCESS
3     (SKIP&RET 1)


Disassembly of function #:|(PROGN (DEFUN THROW-MACSYMA-TOP NIL ...) (DEFMFUN $WRITEFILE # ...) ...)-29-8|
(CONST 0) = NSUBSTRING
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE NSUBSTRING>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; NSUBSTRING
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; NSUBSTRING
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE NSUBSTRING>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (VALUES0)
8     (SKIP&RET 1)


Disassembly of function NSUBSTRING
(CONST 0) = X
(CONST 1) = Y
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Y X)
10 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; X
3     (LOAD 4)
4     (BIND 1)                            ; Y
6     (GETVALUE&PUSH 0)                   ; X
8     (GETVALUE&PUSH 1)                   ; Y
10    (PUSH-UNBOUND 1)
12    (CALLS2 69)                         ; SUBSEQ
14    (UNBIND 2)
16    (SKIP&RET 3)


Disassembly of function #:|(PROGN (DEFUN THROW-MACSYMA-TOP NIL ...) (DEFMFUN $WRITEFILE # ...) ...)-29-9|
(CONST 0) = FILESTRIP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FILESTRIP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FILESTRIP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FILESTRIP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FILESTRIP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FILESTRIP
8     (SKIP&RET 1)


Disassembly of function FILESTRIP
(CONST 0) = X
(CONST 1) = 1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
10 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (CAR&PUSH)
6     (CALLS1&PUSH 75)                    ; STRING
8     (CONST&PUSH 1)                      ; 1
9     (PUSH-UNBOUND 1)
11    (CALLS2 69)                         ; SUBSEQ
13    (UNBIND1)
14    (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $WITH_STDOUT (ARG) ...)-30-2|
(CONST 0) = #<COMPILED-CLOSURE #:|(DEFMSPEC $WITH_STDOUT (ARG) ...)-30-2-1|>
(CONST 1) = $WITH_STDOUT
(CONST 2) = MFEXPR*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; #<COMPILED-CLOSURE #:|(DEFMSPEC $WITH_STDOUT (ARG) ...)-30-2-1|>
1     (CONST&PUSH 1)                      ; $WITH_STDOUT
2     (CONST&PUSH 2)                      ; MFEXPR*
3     (LOAD&PUSH 2)
4     (CALLS2 136)                        ; SYSTEM::%PUT
6     (SKIP&RET 2)


Disassembly of function #:|(DEFMSPEC $WITH_STDOUT (ARG) ...)-30-2-1|
(CONST 0) = STRIPDOLLAR
(CONST 1) = :OUTPUT
(CONST 2) = *STANDARD-OUTPUT*
(CONST 3) = #.#'VALUES
(CONST 4) = MEVAL*
(CONST 5) = CLOSE
(CONST 6) = :ABORT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*STANDARD-OUTPUT*)
50 byte-code instructions:
0     (LOAD&CDR&STORE 1)
2     (CDR&PUSH)
3     (NIL&PUSH)
4     (LOAD&CAR&PUSH 3)
6     (CALL1&PUSH 0)                      ; STRIPDOLLAR
8     (PUSH-UNBOUND 1)
10    (CALLS1&PUSH 244)                   ; NAMESTRING
12    (CONST&PUSH 1)                      ; :OUTPUT
13    (PUSH-UNBOUND 5)
15    (CALLS1 249)                        ; OPEN
17    (BIND 2)                            ; *STANDARD-OUTPUT*
19    (UNWIND-PROTECT-OPEN L59)
21    (CONST 3)                           ; #.#'VALUES
22    (MVCALLP)
23    (LOAD&PUSH 7)
24    (NIL&PUSH)
25    (JMP L37)
27    L27
27    (LOAD&CAR&STORE 1 0)
30    (PUSH)
31    (CALL1 4)                           ; MEVAL*
33    (STORE 8)
35    (LOAD&CDR&STORE 1)
37    L37
37    (LOAD&PUSH 1)
38    (CALLS1&JMPIFNOT 146 L27)           ; ENDP
41    (SKIP 2)
43    (LOAD&PUSH 6)
44    (GETVALUE 2)                        ; *STANDARD-OUTPUT*
46    (JMPIFNOT L51)
48    (PUSH)
49    (CALL1 5)                           ; CLOSE
51    L51
51    (MVCALL)
52    (UNWIND-PROTECT-NORMAL-EXIT)
53    (GETVALUE 2)                        ; *STANDARD-OUTPUT*
55    (JMPIFNOT L69)
57    (JMP L63)
59    L59
59    (GETVALUE 2)                        ; *STANDARD-OUTPUT*
61    (JMPIFNOT L69)
63    L63
63    (PUSH)
64    (CONST&PUSH 6)                      ; :ABORT
65    (T&PUSH)
66    (CALL 3 5)                          ; CLOSE
69    L69
69    (UNWIND-PROTECT-CLOSE)
70    (UNBIND1)
71    (SKIP&RET 4)


Disassembly of function #:|(DEFUN $SCONCAT (&REST X) ...)-31|
(CONST 0) = $SCONCAT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $SCONCAT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $SCONCAT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $SCONCAT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $SCONCAT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $SCONCAT
8     (SKIP&RET 1)


Disassembly of function $SCONCAT
(CONST 0) = X
(CONST 1) = ""
(CONST 2) = STRING
(CONST 3) = 1
(CONST 4) = GETCHARN
(CONST 5) = #\&
(CONST 6) = MSTRING
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variable: (X)
44 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (CONST&PUSH 1)                      ; ""
4     (GETVALUE&PUSH 0)                   ; X
6     (NIL&PUSH)
7     (JMP L55)
9     L9
9     (LOAD&PUSH 2)
10    (CALLS2&PUSH 140)                   ; SYMBOL-NAME
12    (CONST&PUSH 3)                      ; 1
13    (PUSH-UNBOUND 1)
15    (CALLS2 69)                         ; SUBSEQ
17    (JMP L48)
19    L19
19    (LOAD 2)
20    (JMP L48)
22    L22
22    (LOAD&CAR&STORE 1 0)
25    (CONST&PUSH 2)                      ; STRING
26    (LOAD&PUSH 3)
27    (LOAD&PUSH 2)
28    (CALLS2&JMPIFNOT 6 L38)             ; SYMBOLP
31    (LOAD&PUSH 2)
32    (CONST&PUSH 3)                      ; 1
33    (CALL2&PUSH 4)                      ; GETCHARN
35    (JMPIFEQTO 5 L9)                    ; #\&
38    L38
38    (LOAD&PUSH 2)
39    (CALLS2&JMPIF 7 L19)                ; STRINGP
42    (LOAD&PUSH 2)
43    (CALL1&PUSH 6)                      ; MSTRING
45    (CONST&PUSH 2)                      ; STRING
46    (CALLS2 42)                         ; COERCE
48    L48
48    (PUSH)
49    (CALLSR&STORE 2 37 2)               ; CONCATENATE
53    (LOAD&CDR&STORE 1)
55    L55
55    (LOAD&PUSH 1)
56    (CALLS1&JMPIFNOT 146 L22)           ; ENDP
59    (SKIP 2)
61    (POP)
62    (UNBIND1)
63    (SKIP&RET 2)


Disassembly of function #:|(DEFUN $SYSTEM (&REST X) ...)-32|
(CONST 0) = $SYSTEM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $SYSTEM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $SYSTEM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $SYSTEM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $SYSTEM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $SYSTEM
8     (SKIP&RET 1)


Disassembly of function $SYSTEM
(CONST 0) = X
(CONST 1) = $SCONCAT
(CONST 2) = RUN-SHELL-COMMAND
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variable: (X)
8 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (CONST&PUSH 1)                      ; $SCONCAT
4     (GETVALUE 0)                        ; X
6     (APPLY&PUSH 0)
8     (CALL1 2)                           ; RUN-SHELL-COMMAND
10    (UNBIND1)
11    (SKIP&RET 2)


Disassembly of function #:|(DEFUN $ROOM (&OPTIONAL #) ...)-33|
(CONST 0) = $ROOM
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $ROOM>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ROOM
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $ROOM
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $ROOM>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $ROOM
8     (SKIP&RET 1)


Disassembly of function $ROOM
(CONST 0) = ROOM
0 required arguments
1 optional argument
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (BOUNDP 1)
2     (PUSH)
3     (JMPIFBOUNDP 2 L16)
6     (NIL&STORE 2)
8     (LOAD&JMPIFNOT 0 L19)
11    L11
11    (LOAD&PUSH 2)
12    (CALL1 0)                           ; ROOM
14    (SKIP&RET 3)
16    L16
16    (LOAD&JMPIF 0 L11)
19    L19
19    (CALL0 0)                           ; ROOM
21    (SKIP&RET 3)


Wrote file binary-clisp/macsys.fas
Wrote file /cygdrive/e/temp/maxima/src/macsys.lis