Listing of compilation of file /cygdrive/e/temp/maxima/src/sublis.lisp
on 2002-12-17 13:32:06 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/sublis.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE SUBLIS)-2|
(CONST 0) = SUBLIS
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; SUBLIS
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $SUBLIS_APPLY_LAMBDA T ...)-3-1|
(CONST 0) = $SUBLIS_APPLY_LAMBDA
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; $SUBLIS_APPLY_LAMBDA
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; $SUBLIS_APPLY_LAMBDA
11    (LOAD&PUSH 1)
12    (T&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR $SUBLIS_APPLY_LAMBDA T ...)-3-2|
(CONST 0) = (SPECIAL $SUBLIS_APPLY_LAMBDA)
(CONST 1) = $SUBLIS_APPLY_LAMBDA
(CONST 2) = VARIABLE
(CONST 3) = 
"a flag which controls whether LAMBDA's substituted are applied in
   simplification after the SUBLIS or whether you have to do an
   EV to get things to apply. A value of TRUE means perform the application."
(CONST 4) = SYSTEM::%SET-DOCUMENTATION
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
14 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL $SUBLIS_APPLY_LAMBDA)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; $SUBLIS_APPLY_LAMBDA
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; $SUBLIS_APPLY_LAMBDA
8     (T&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST&PUSH 1)                      ; $SUBLIS_APPLY_LAMBDA
12    (CONST&PUSH 2)                      ; VARIABLE
13    (CONST&PUSH 3)                      ; "a flag which controls whether LAMBDA's substituted are applied in
   simplification after the SUBLIS or whether you have to do an
   EV to get things to apply. A value of TRUE means perform the application."
14    (CALL 3 4)                          ; SYSTEM::%SET-DOCUMENTATION
17    (CONST 1)                           ; $SUBLIS_APPLY_LAMBDA
18    (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL *MSUBLIS-MARKER*))-4|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $SUBLIS (SUBSTITUTIONS FORM) ...)-5|
(CONST 0) = $SUBLIS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $SUBLIS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $SUBLIS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $SUBLIS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $SUBLIS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $SUBLIS
8     (SKIP&RET 1)


Disassembly of function $SUBLIS
(CONST 0) = $LISTP
(CONST 1) = MEQUAL
(CONST 2) = "Usage is SUBLIS([sym1=form1,...],expression)"
(CONST 3) = MERROR
(CONST 4) = "Usage is SUBLIS([sym1=form1,...],expression)"
(CONST 5) = MSUBLIS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
48 byte-code instructions:
0     (LOAD&PUSH 2)
1     (CALL1&JMPIF 0 L27)                 ; $LISTP
4     (CONST&PUSH 4)                      ; "Usage is SUBLIS([sym1=form1,...],expression)"
5     (CALL1 3)                           ; MERROR
7     L7
7     (LOAD&PUSH 2)
8     (LOAD&PUSH 2)
9     (CALL2 5)                           ; MSUBLIS
11    (SKIP&RET 3)
13    L13
13    (LOAD&CAR&PUSH 0)
15    (LOAD&CDR&STORE 1)
17    (LOAD&CAR&PUSH 1)
19    (LOAD&CDR&STORE 2)
21    (POP)
22    (CONS&PUSH)
23    (LOAD&CONS&STORE 1)
25    (JMP L61)
27    L27
27    (LOAD&CDR&PUSH 2)
29    (PUSH-NIL 2)
31    (LOAD&JMPIFNOT 2 L66)
34    L34
34    (LOAD&CAR&STORE 2 0)
37    (JMPIFATOM L58)
39    (LOAD 0)
40    (CAR)
41    (JMPIFATOM L58)
43    (LOAD 0)
44    (CAR)
45    (CAR&PUSH)
46    (JMPIFNOTEQTO 1 L58)                ; MEQUAL
49    (LOAD&CAR&PUSH 0)
51    (LOAD&CDR&STORE 1)
53    (POP)
54    (CAR&PUSH)
55    (CALLS2&JMPIF 6 L13)                ; SYMBOLP
58    L58
58    (CONST&PUSH 2)                      ; "Usage is SUBLIS([sym1=form1,...],expression)"
59    (CALL1 3)                           ; MERROR
61    L61
61    (LOAD&CDR&STORE 2)
63    (LOAD&JMPIF 2 L34)
66    L66
66    (LOAD 1)
67    (STORE 5)
68    (SKIP 3)
70    (JMP L7)


Disassembly of function #:|(DEFUN MSUBLIS (S Y) ...)-6|
(CONST 0) = MSUBLIS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MSUBLIS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MSUBLIS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MSUBLIS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MSUBLIS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MSUBLIS
8     (SKIP&RET 1)


Disassembly of function MSUBLIS
(CONST 0) = S
(CONST 1) = *MSUBLIS-MARKER*
(CONST 2) = COPY-SYMBOL
(CONST 3) = MSUBLIS-SETUP
(CONST 4) = MSUBLIS-SUBST
(CONST 5) = MSUBLIS-UNSETUP
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
17 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; S
3     (CONST&PUSH 1)                      ; *MSUBLIS-MARKER*
4     (NIL&PUSH)
5     (CALL2 2)                           ; COPY-SYMBOL
7     (BIND 1)                            ; *MSUBLIS-MARKER*
9     (CALL0 3)                           ; MSUBLIS-SETUP
11    (UNWIND-PROTECT-OPEN L18)
13    (LOAD&PUSH 9)
14    (T&PUSH)
15    (CALL2 4)                           ; MSUBLIS-SUBST
17    (UNWIND-PROTECT-NORMAL-EXIT)
18    L18
18    (CALL0 5)                           ; MSUBLIS-UNSETUP
20    (UNWIND-PROTECT-CLOSE)
21    (UNBIND 2)
23    (SKIP&RET 3)


Disassembly of function #:|(DEFUN MSUBLIS-SETUP NIL ...)-7|
(CONST 0) = MSUBLIS-SETUP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MSUBLIS-SETUP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MSUBLIS-SETUP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MSUBLIS-SETUP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MSUBLIS-SETUP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MSUBLIS-SETUP
8     (SKIP&RET 1)


Disassembly of function MSUBLIS-SETUP
(CONST 0) = S
(CONST 1) = "SUBLIS: Bad 1st arg"
(CONST 2) = MERROR
(CONST 3) = *MSUBLIS-MARKER*
(CONST 4) = SETPLIST
(CONST 5) = GETOPR
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*MSUBLIS-MARKER* S)
writes special variable : (S)
48 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; S
2     (PUSH-NIL 2)
4     (LOAD&JMPIFNOT 2 L64)
7     L7
7     (LOAD 2)
8     (CAR)
9     (CAR)
10    (STORE 1)
11    (PUSH)
12    (CALLS2&JMPIF 6 L18)                ; SYMBOLP
15    (CONST&PUSH 1)                      ; "SUBLIS: Bad 1st arg"
16    (CALL1 2)                           ; MERROR
18    L18
18    (LOAD&PUSH 1)
19    (GETVALUE&PUSH 3)                   ; *MSUBLIS-MARKER*
21    (LOAD 4)
22    (CAR)
23    (CDR&PUSH)
24    (LOAD&PUSH 4)
25    (CALLS2 139)                        ; SYMBOL-PLIST
27    (LIST*&PUSH 2)
29    (CALL2 4)                           ; SETPLIST
31    (LOAD&PUSH 1)
32    (LOAD&PUSH 2)
33    (CALL1 5)                           ; GETOPR
35    (STORE 1)
36    (JMPIFEQ L59)
38    (LOAD&PUSH 0)
39    (GETVALUE&PUSH 3)                   ; *MSUBLIS-MARKER*
41    (LOAD 4)
42    (CAR)
43    (CDR&PUSH)
44    (LOAD&PUSH 3)
45    (CALLS2 139)                        ; SYMBOL-PLIST
47    (LIST*&PUSH 2)
49    (CALL2 4)                           ; SETPLIST
51    (LOAD&PUSH 0)
52    (NIL)
53    (CONS&PUSH)
54    (GETVALUE 0)                        ; S
56    (CONS)
57    (SETVALUE 0)                        ; S
59    L59
59    (LOAD&CDR&STORE 2)
61    (LOAD&JMPIF 2 L7)
64    L64
64    (NIL)
65    (SKIP&RET 4)


Disassembly of function #:|(DEFUN MSUBLIS-UNSETUP NIL ...)-8|
(CONST 0) = MSUBLIS-UNSETUP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MSUBLIS-UNSETUP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MSUBLIS-UNSETUP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MSUBLIS-UNSETUP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MSUBLIS-UNSETUP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MSUBLIS-UNSETUP
8     (SKIP&RET 1)


Disassembly of function MSUBLIS-UNSETUP
(CONST 0) = S
(CONST 1) = *MSUBLIS-MARKER*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*MSUBLIS-MARKER* S)
13 byte-code instructions:
0     (GETVALUE&PUSH 0)                   ; S
2     (LOAD&JMPIFNOT 0 L17)
5     L5
5     (LOAD 0)
6     (CAR)
7     (CAR&PUSH)
8     (GETVALUE&PUSH 1)                   ; *MSUBLIS-MARKER*
10    (CALLS2 137)                        ; REMPROP
12    (LOAD&CDR&STORE 0)
14    (LOAD&JMPIF 0 L5)
17    L17
17    (NIL)
18    (SKIP&RET 2)


Disassembly of function #:|(DEFUN MSUBLIS-SUBST (FORM FLAG) ...)-9|
(CONST 0) = MSUBLIS-SUBST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MSUBLIS-SUBST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MSUBLIS-SUBST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MSUBLIS-SUBST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MSUBLIS-SUBST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MSUBLIS-SUBST
8     (SKIP&RET 1)


Disassembly of function MSUBLIS-SUBST
(CONST 0) = *MSUBLIS-MARKER*
(CONST 1) = $RATP
(CONST 2) = $RATDISREP
(CONST 3) = $RAT
(CONST 4) = "SUBLIS: Illegal object in expression being substituted for."
(CONST 5) = MERROR
(CONST 6) = $SUBLIS_APPLY_LAMBDA
(CONST 7) = MQAPPLY
(CONST 8) = LAMBDA
(CONST 9) = ARRAY
(CONST 10) = MEMQ
(CONST 11) = (ARRAY)
(CONST 12) = (ARRAY)
(CONST 13) = (ARRAY)
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: ($SUBLIS_APPLY_LAMBDA *MSUBLIS-MARKER*)
162 byte-code instructions:
0     L0
0     (LOAD 2)
1     (JMPIFCONSP L195)
4     (LOAD&JMPIF 2 L10)
7     (LOAD&JMPIFNOT 1 L25)
10    L10
10    (LOAD&PUSH 2)
11    (CALLS2&JMPIFNOT 6 L22)             ; SYMBOLP
14    (LOAD&PUSH 2)
15    (CALLS2 139)                        ; SYMBOL-PLIST
17    (CAR&PUSH)
18    (GETVALUE 0)                        ; *MSUBLIS-MARKER*
20    (JMPIFEQ L28)
22    L22
22    (LOAD 2)
23    (SKIP&RET 3)
25    L25
25    (NIL)
26    (SKIP&RET 3)
28    L28
28    (LOAD&PUSH 2)
29    (CALLS2 139)                        ; SYMBOL-PLIST
31    (CDR)
32    (CAR)
33    (SKIP&RET 3)
35    L35
35    (LOAD&PUSH 2)
36    (CALL1&PUSH 2)                      ; $RATDISREP
38    (LOAD&PUSH 0)
39    (T&PUSH)
40    (JSR&PUSH L0)
42    (LOAD&PUSH 1)
43    (LOAD 1)
44    (JMPIFEQ L221)
47    (LOAD&PUSH 0)
48    (CALL1 3)                           ; $RAT
50    (SKIP&RET 5)
52    L52
52    (CONST&PUSH 4)                      ; "SUBLIS: Illegal object in expression being substituted for."
53    (CALL1 5)                           ; MERROR
55    (SKIP&RET 3)
57    L57
57    (CONST 11)                          ; (ARRAY)
58    (JMP L69)
60    L60
60    (LOAD&CAR&PUSH 1)
62    (CONST&PUSH 9)                      ; ARRAY
63    (LOAD&CAR&PUSH 6)
65    (CALL2&JMPIF 10 L57)                ; MEMQ
68    (NIL)
69    L69
69    (CONS&PUSH)
70    (LOAD 2)
71    (CDR)
72    (JMP L226)
75    L75
75    (CONST 12)                          ; (ARRAY)
76    (JMP L86)
78    L78
78    (CONST&PUSH 7)                      ; MQAPPLY
79    (CONST&PUSH 9)                      ; ARRAY
80    (LOAD&CAR&PUSH 6)
82    (CALL2&JMPIF 10 L75)                ; MEMQ
85    (NIL)
86    L86
86    (CONS&PUSH)
87    (LOAD&PUSH 1)
88    (LOAD 3)
89    (LIST* 2)
91    (SKIP&RET 5)
93    L93
93    (CONST 13)                          ; (ARRAY)
94    (JMP L191)
97    L97
97    (LOAD&PUSH 2)
98    (CALL1&JMPIF 1 L35)                 ; $RATP
102   (LOAD 2)
103   (CAR)
104   (JMPIFATOM L52)
106   (LOAD&CDR&PUSH 2)
108   (NIL&PUSH)
109   (JSR&PUSH L0)
112   (LOAD 3)
113   (CAR)
114   (CAR&PUSH)
115   (T&PUSH)
116   (JSR&PUSH L0)
119   (LOAD&PUSH 1)
120   (LOAD 5)
121   (CDR)
122   (JMPIFNOTEQ L131)
124   (LOAD 4)
125   (CAR)
126   (CAR&PUSH)
127   (LOAD 1)
128   (JMPIFEQ L221)
131   L131
131   (GETVALUE 6)                        ; $SUBLIS_APPLY_LAMBDA
133   (JMPIFNOT L162)
135   (LOAD 4)
136   (CAR)
137   (CAR&PUSH)
138   (JMPIFNOTEQTO 7 L162)               ; MQAPPLY
141   (LOAD&PUSH 0)
142   (JMPIFNOTEQTO 7 L162)               ; MQAPPLY
145   (LOAD 4)
146   (CDR)
147   (CAR)
148   (JMPIFCONSP L162)
150   (LOAD 1)
151   (CAR)
152   (JMPIFATOM L162)
154   (LOAD 1)
155   (CAR)
156   (CAR)
157   (CAR&PUSH)
158   (JMPIFEQTO 8 L60)                   ; LAMBDA
162   L162
162   (LOAD 0)
163   (JMPIFATOM L182)
165   (LOAD&CAR&PUSH 0)
167   (JMPIFEQTO 8 L177)                  ; LAMBDA
170   (LOAD 0)
171   (CAR)
172   (CAR&PUSH)
173   (JMPIFNOTEQTO 8 L78)                ; LAMBDA
177   L177
177   (GETVALUE 6)                        ; $SUBLIS_APPLY_LAMBDA
179   (JMPIFNOT L78)
182   L182
182   (LOAD&PUSH 0)
183   (CONST&PUSH 9)                      ; ARRAY
184   (LOAD&CAR&PUSH 6)
186   (CALL2&JMPIF 10 L93)                ; MEMQ
190   (NIL)
191   L191
191   (CONS&PUSH)
192   (LOAD 2)
193   (JMP L226)
195   L195
195   (LOAD&JMPIF 1 L97)
199   (LOAD&CAR&PUSH 2)
201   (T&PUSH)
202   (JSR&PUSH L0)
205   (LOAD&CDR&PUSH 3)
207   (NIL&PUSH)
208   (JSR&PUSH L0)
211   (LOAD&CAR&PUSH 4)
213   (LOAD 2)
214   (JMPIFNOTEQ L224)
216   (LOAD&CDR&PUSH 4)
218   (LOAD 1)
219   (JMPIFNOTEQ L224)
221   L221
221   (LOAD 4)
222   (SKIP&RET 5)
224   L224
224   (LOAD&PUSH 1)
225   (LOAD 1)
226   L226
226   (CONS)
227   (SKIP&RET 5)


Wrote file binary-clisp/sublis.fas
Wrote file /cygdrive/e/temp/maxima/src/sublis.lis