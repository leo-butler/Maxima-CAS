Listing of compilation of file /cygdrive/e/temp/maxima/src/elim.lisp
on 2002-12-17 13:36:07 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/elim.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(EVAL-WHEN (COMPILE EVAL LOAD) (DEFPROP $ELIMINATE T ...) ...)-2-1|
(CONST 0) = $ELIMINATE
(CONST 1) = TRANSLATED
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ELIMINATE
1     (CONST&PUSH 1)                      ; TRANSLATED
2     (T&PUSH)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (VALUES0)
6     (SKIP&RET 1)


Disassembly of function #:|(EVAL-WHEN (COMPILE EVAL LOAD) (DEFPROP $ELIMINATE T ...) ...)-2-2|
(CONST 0) = $ELIMINATE
(CONST 1) = $PROPS
(CONST 2) = ADD2LNC
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: ($PROPS)
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ELIMINATE
1     (GETVALUE&PUSH 1)                   ; $PROPS
3     (CALL2 2)                           ; ADD2LNC
5     (VALUES0)
6     (SKIP&RET 1)


Disassembly of function #:|(EVAL-WHEN (COMPILE EVAL LOAD) (DEFPROP $ELIMINATE T ...) ...)-2-3-1|
(CONST 0) = $ELIMINATE
(CONST 1) = TRANSLATE
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ELIMINATE
1     (CONST&PUSH 1)                      ; TRANSLATE
2     (CALLS2 137)                        ; REMPROP
4     (VALUES0)
5     (SKIP&RET 1)


Disassembly of function #:|(EVAL-WHEN (COMPILE EVAL LOAD) (DEFPROP $ELIMINATE T ...) ...)-2-3-2|
(CONST 0) = $ELIMINATE
(CONST 1) = FUNCTION-MODE
(CONST 2) = $ANY
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ELIMINATE
1     (CONST&PUSH 1)                      ; FUNCTION-MODE
2     (CONST&PUSH 2)                      ; $ANY
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (VALUES0)
6     (SKIP&RET 1)


Disassembly of function #:|(EVAL-WHEN (COMPILE EVAL LOAD) (DEFPROP $ELIMINATE T ...) ...)-2-3-3|
(CONST 0) = :MACSYMA
(CONST 1) = *FEATURES*
(CONST 2) = $ELIMINATE
(CONST 3) = $FIXED_NUM_ARGS_FUNCTION
(CONST 4) = MPUTPROP
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*FEATURES*)
11 byte-code instructions:
0     (CONST&PUSH 0)                      ; :MACSYMA
1     (GETVALUE&PUSH 1)                   ; *FEATURES*
3     (PUSH-UNBOUND 3)
5     (CALLS1&JMPIFNOT 180 L14)           ; MEMBER
8     (CONST&PUSH 2)                      ; $ELIMINATE
9     (T&PUSH)
10    (CONST&PUSH 3)                      ; $FIXED_NUM_ARGS_FUNCTION
11    (CALL 3 4)                          ; MPUTPROP
14    L14
14    (VALUES0)
15    (SKIP&RET 1)


Disassembly of function #:|(EVAL-WHEN (COMPILE EVAL LOAD) (DEFPROP $ELIMINATE T ...) ...)-2-3-5|
(CONST 0) = $ELIMINATE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $ELIMINATE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $ELIMINATE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $ELIMINATE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $ELIMINATE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $ELIMINATE
8     (SKIP&RET 1)


Disassembly of function $ELIMINATE
(CONST 0) = $TEQNS
(CONST 1) = $SV
(CONST 2) = $SE
(CONST 3) = $L
(CONST 4) = $FLAG
(CONST 5) = $DISPFLAG
(CONST 6) = $LISTP
(CONST 7) = |&THE ARGUMENTS MUST BOTH BE LISTS|
(CONST 8) = $ERROR
(CONST 9) = SIMPLIFY
(CONST 10) = $LENGTH
(CONST 11) = |&MORE VARIABLES THEN EQUATIONS|
(CONST 12) = 1
(CONST 13) = |&CAN'T ELIMINATE FROM ONLY ONE EQUATION|
(CONST 14) = $REVERSE
(CONST 15) = MAREF1
(CONST 16) = $REST
(CONST 17) = MEQHK
(CONST 18) = GETOPR
(CONST 19) = MAP1
(CONST 20) = $V
(CONST 21) = ((MLIST))
(CONST 22) = $FIRST
(CONST 23) = $FREEOF
(CONST 24) = $CONS
(CONST 25) = ((MLIST))
(CONST 26) = LIKE
(CONST 27) = $APPEND
(CONST 28) = -1
(CONST 29) = ADD*
(CONST 30) = ((MLIST))
(CONST 31) = $RESULTANT
(CONST 32) = (MLIST)
(CONST 33) = $EV
(CONST 34) = $SOLVE
(CONST 35) = $LAST
(CONST 36) = $EVAL
(CONST 37) = MFUNCALL
(CONST 38) = $RHS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: ($V)
writes special variables : ($V $DISPFLAG)
172 byte-code instructions:
0     (CONST&PUSH 0)                      ; $TEQNS
1     (CONST&PUSH 1)                      ; $SV
2     (CONST&PUSH 2)                      ; $SE
3     (CONST&PUSH 3)                      ; $L
4     (CONST&PUSH 4)                      ; $FLAG
5     (CONST 5)                           ; $DISPFLAG
6     (BIND 5)                            ; $DISPFLAG
8     (NIL)
9     (SETVALUE 5)                        ; $DISPFLAG
11    (STORE 3)
12    (LOAD&PUSH 10)
13    (CALL1&JMPIFNOT 6 L20)              ; $LISTP
16    (LOAD&PUSH 9)
17    (CALL1&JMPIF 6 L25)                 ; $LISTP
20    L20
20    (CONST&PUSH 7)                      ; |&THE ARGUMENTS MUST BOTH BE LISTS|
21    (CALL1&PUSH 8)                      ; $ERROR
23    (CALL1 9)                           ; SIMPLIFY
25    L25
25    (LOAD&PUSH 9)
26    (CALL1&PUSH 10)                     ; $LENGTH
28    (LOAD&PUSH 11)
29    (CALL1 10)                          ; $LENGTH
31    (STORE 5)
32    (PUSH)
33    (CALLSR&JMPIFNOT 1 48 L42)          ; >
37    (CONST&PUSH 11)                     ; |&MORE VARIABLES THEN EQUATIONS|
38    (CALL1&PUSH 8)                      ; $ERROR
40    (CALL1 9)                           ; SIMPLIFY
42    L42
42    (LOAD&PUSH 4)
43    (JMPIFNOTEQTO 12 L51)               ; 1
46    (CONST&PUSH 13)                     ; |&CAN'T ELIMINATE FROM ONLY ONE EQUATION|
47    (CALL1&PUSH 8)                      ; $ERROR
49    (CALL1 9)                           ; SIMPLIFY
51    L51
51    (LOAD&PUSH 9)
52    (CALL1&PUSH 10)                     ; $LENGTH
54    (LOAD&PUSH 5)
55    (CALLS2&JMPIFNOT 1 L79)             ; EQL
58    (LOAD&PUSH 9)
59    (CALL1 14)                          ; $REVERSE
61    (STORE 9)
63    (PUSH)
64    (CONST&PUSH 12)                     ; 1
65    (CALL2 15)                          ; MAREF1
67    (STORE 6)
68    (LOAD&PUSH 9)
69    (CALL1&PUSH 16)                     ; $REST
71    (CALL1&PUSH 9)                      ; SIMPLIFY
73    (CALL1 14)                          ; $REVERSE
75    (STORE 9)
77    (T&STORE 3)
79    L79
79    (CONST&PUSH 17)                     ; MEQHK
80    (CALL1&PUSH 18)                     ; GETOPR
82    (LOAD&PUSH 11)
83    (CALL2&PUSH 19)                     ; MAP1
85    (CALL1 9)                           ; SIMPLIFY
87    (STORE 10)
89    (NIL&PUSH)
90    (LOAD&CDR&PUSH 10)
92    (LOAD 1)
93    (BIND 20)                           ; $V
95    (LOAD&JMPIFNOT 3 L262)
99    L99
99    (LOAD 3)
100   (CAR)
101   (SETVALUE 20)                       ; $V
103   (CONST 21)                          ; ((MLIST))
105   (STORE 12)
107   (CONST&PUSH 12)                     ; 1
108   (JMP L139)
110   L110
110   (LOAD 12)
111   (STORE 15)
113   (JMP L256)
116   L116
116   (LOAD&PUSH 16)
117   (CALL1&PUSH 22)                     ; $FIRST
119   (CALL1&PUSH 9)                      ; SIMPLIFY
121   (LOAD&PUSH 14)
122   (CALL2 24)                          ; $CONS
124   (STORE 13)
126   (LOAD&PUSH 16)
127   (CALL1&PUSH 16)                     ; $REST
129   (CALL1 9)                           ; SIMPLIFY
131   (STORE 16)
133   (CONST&PUSH 12)                     ; 1
134   (LOAD&PUSH 1)
135   (CALLSR&STORE 2 53 0)               ; +
139   L139
139   (LOAD&PUSH 0)
140   (LOAD&PUSH 11)
141   (CALLSR&JMPIF 1 48 L155)            ; >
145   (GETVALUE&PUSH 20)                  ; $V
147   (LOAD&PUSH 17)
148   (CALL1&PUSH 22)                     ; $FIRST
150   (CALL1&PUSH 9)                      ; SIMPLIFY
152   (CALL2&JMPIF 23 L116)               ; $FREEOF
155   L155
155   (SKIP 1)
157   (LOAD&PUSH 15)
158   (CONST&PUSH 25)                     ; ((MLIST))
159   (CALL2&JMPIF 26 L110)               ; LIKE
162   (LOAD&PUSH 12)
163   (LOAD&PUSH 16)
164   (CALL1&PUSH 16)                     ; $REST
166   (CALL1&PUSH 9)                      ; SIMPLIFY
168   (CALL2 27)                          ; $APPEND
170   (STORE 12)
172   (LOAD&PUSH 15)
173   (CALL1&PUSH 22)                     ; $FIRST
175   (CALL1 9)                           ; SIMPLIFY
177   (STORE 15)
179   (LOAD&PUSH 9)
180   (CONST&PUSH 28)                     ; -1
181   (CALL2 29)                          ; ADD*
183   (STORE 9)
185   (CONST 30)                          ; ((MLIST))
187   (STORE 10)
189   (CONST&PUSH 12)                     ; 1
190   (JMP L245)
192   L192
192   (CONST&PUSH 32)                     ; (MLIST)
194   (CONST&PUSH 33)                     ; $EV
196   (LOAD&PUSH 12)
197   (CONST&PUSH 12)                     ; 1
198   (CALL2&PUSH 15)                     ; MAREF1
200   (LOAD&PUSH 9)
201   (CALL2&PUSH 34)                     ; $SOLVE
203   (CALL1&PUSH 9)                      ; SIMPLIFY
205   (CALL1&PUSH 35)                     ; $LAST
207   (CALL1&PUSH 9)                      ; SIMPLIFY
209   (CONST&PUSH 36)                     ; $EVAL
211   (CALL&PUSH 3 37)                    ; MFUNCALL
214   (CALL1&PUSH 9)                      ; SIMPLIFY
216   (CALL1&PUSH 38)                     ; $RHS
218   (LIST 2)
220   (JMP L270)
222   L222
222   (LOAD&PUSH 16)
223   (LOAD&PUSH 14)
224   (LOAD&PUSH 2)
225   (CALL2&PUSH 15)                     ; MAREF1
227   (GETVALUE&PUSH 20)                  ; $V
229   (CALL&PUSH 3 31)                    ; $RESULTANT
232   (CALL1&PUSH 9)                      ; SIMPLIFY
234   (LOAD&PUSH 12)
235   (CALL2 24)                          ; $CONS
237   (STORE 11)
239   (CONST&PUSH 12)                     ; 1
240   (LOAD&PUSH 1)
241   (CALLSR&STORE 2 53 0)               ; +
245   L245
245   (LOAD&PUSH 0)
246   (LOAD&PUSH 11)
247   (CALLSR&JMPIFNOT 1 48 L222)         ; >
251   (SKIP 1)
253   (LOAD 10)
254   (STORE 15)
256   L256
256   (LOAD&CDR&STORE 3)
258   (LOAD&JMPIF 3 L99)
262   L262
262   (UNBIND1)
263   (SKIP 2)
265   (LOAD&JMPIF 3 L192)
269   (LOAD 10)
270   L270
270   (UNBIND1)
271   (SKIP&RET 8)


Wrote file binary-clisp/elim.fas
Wrote file /cygdrive/e/temp/maxima/src/elim.lis