Listing of compilation of file /cygdrive/e/temp/maxima/src/pois3.lisp
on 2002-12-17 13:36:01 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/pois3.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE POIS3)-2|
(CONST 0) = POIS3
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; POIS3
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPECIAL *ARGC *COEF ...) (*LEXPR $PRINT $COEFF) ...)-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFVAR TRIM NIL)-4|
(CONST 0) = (SPECIAL TRIM)
(CONST 1) = TRIM
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL TRIM)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; TRIM
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; TRIM
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; TRIM
12    (SKIP&RET 1)


Disassembly of function #:|(DEFUN FUMCHECK (X) ...)-5|
(CONST 0) = FUMCHECK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FUMCHECK>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FUMCHECK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FUMCHECK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FUMCHECK>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FUMCHECK
8     (SKIP&RET 1)


Disassembly of function FUMCHECK
(CONST 0) = X
(CONST 1) = POISTSM
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISTSM X)
18 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALLS2&JMPIFNOT 5 L13)             ; ATOM
8     (GETVALUE&PUSH 0)                   ; X
10    (CALLS2&JMPIF 12 L17)               ; INTEGERP
13    L13
13    (NOT)
14    L14
14    (UNBIND1)
15    (SKIP&RET 2)
17    L17
17    (GETVALUE&PUSH 0)                   ; X
19    (CALLS2&PUSH 158)                   ; ABS
21    (GETVALUE&PUSH 1)                   ; POISTSM
23    (CALLSR 1 47)                       ; <
26    (NOT)
27    (JMP L14)


Disassembly of function #:|(DEFUN CHECKENCODE (R) ...)-6|
(CONST 0) = CHECKENCODE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE CHECKENCODE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; CHECKENCODE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; CHECKENCODE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE CHECKENCODE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; CHECKENCODE
8     (SKIP&RET 1)


Disassembly of function CHECKENCODE
(CONST 0) = R
(CONST 1) = Q
(CONST 2) = $U
(CONST 3) = $COEFF
(CONST 4) = FUMCHECK
(CONST 5) = (MPLUS)
(CONST 6) = (MTIMES)
(CONST 7) = -1
(CONST 8) = SIMPLIFYA
(CONST 9) = $V
(CONST 10) = (MPLUS)
(CONST 11) = (MTIMES)
(CONST 12) = $W
(CONST 13) = (MPLUS)
(CONST 14) = (MTIMES)
(CONST 15) = $X
(CONST 16) = (MPLUS)
(CONST 17) = (MTIMES)
(CONST 18) = $Y
(CONST 19) = (MPLUS)
(CONST 20) = (MTIMES)
(CONST 21) = $Z
(CONST 22) = (MPLUS)
(CONST 23) = (MTIMES)
(CONST 24) = 0
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Q R)
writes special variables : (R Q)
118 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; R
3     (NIL)
4     (BIND 1)                            ; Q
6     (GETVALUE&PUSH 0)                   ; R
8     (CONST&PUSH 2)                      ; $U
9     (CALL2 3)                           ; $COEFF
11    (SETVALUE 1)                        ; Q
13    (PUSH)
14    (CALL1&JMPIF 4 L183)                ; FUMCHECK
18    (CONST&PUSH 5)                      ; (MPLUS)
19    (GETVALUE&PUSH 0)                   ; R
21    (CONST&PUSH 6)                      ; (MTIMES)
22    (CONST&PUSH 7)                      ; -1
23    (CONST&PUSH 2)                      ; $U
24    (GETVALUE&PUSH 1)                   ; Q
26    (LIST&PUSH 4)
28    (LIST&PUSH 3)
30    (NIL&PUSH)
31    (CALL2 8)                           ; SIMPLIFYA
33    (SETVALUE 0)                        ; R
35    (GETVALUE&PUSH 0)                   ; R
37    (CONST&PUSH 9)                      ; $V
38    (CALL2 3)                           ; $COEFF
40    (SETVALUE 1)                        ; Q
42    (PUSH)
43    (CALL1&JMPIF 4 L183)                ; FUMCHECK
47    (CONST&PUSH 10)                     ; (MPLUS)
48    (GETVALUE&PUSH 0)                   ; R
50    (CONST&PUSH 11)                     ; (MTIMES)
51    (CONST&PUSH 7)                      ; -1
52    (CONST&PUSH 9)                      ; $V
53    (GETVALUE&PUSH 1)                   ; Q
55    (LIST&PUSH 4)
57    (LIST&PUSH 3)
59    (NIL&PUSH)
60    (CALL2 8)                           ; SIMPLIFYA
62    (SETVALUE 0)                        ; R
64    (GETVALUE&PUSH 0)                   ; R
66    (CONST&PUSH 12)                     ; $W
67    (CALL2 3)                           ; $COEFF
69    (SETVALUE 1)                        ; Q
71    (PUSH)
72    (CALL1&JMPIF 4 L183)                ; FUMCHECK
76    (CONST&PUSH 13)                     ; (MPLUS)
77    (GETVALUE&PUSH 0)                   ; R
79    (CONST&PUSH 14)                     ; (MTIMES)
80    (CONST&PUSH 7)                      ; -1
81    (CONST&PUSH 12)                     ; $W
82    (GETVALUE&PUSH 1)                   ; Q
84    (LIST&PUSH 4)
86    (LIST&PUSH 3)
88    (NIL&PUSH)
89    (CALL2 8)                           ; SIMPLIFYA
91    (SETVALUE 0)                        ; R
93    (GETVALUE&PUSH 0)                   ; R
95    (CONST&PUSH 15)                     ; $X
96    (CALL2 3)                           ; $COEFF
98    (SETVALUE 1)                        ; Q
100   (PUSH)
101   (CALL1&JMPIF 4 L183)                ; FUMCHECK
105   (CONST&PUSH 16)                     ; (MPLUS)
106   (GETVALUE&PUSH 0)                   ; R
108   (CONST&PUSH 17)                     ; (MTIMES)
109   (CONST&PUSH 7)                      ; -1
110   (CONST&PUSH 15)                     ; $X
111   (GETVALUE&PUSH 1)                   ; Q
113   (LIST&PUSH 4)
115   (LIST&PUSH 3)
117   (NIL&PUSH)
118   (CALL2 8)                           ; SIMPLIFYA
120   (SETVALUE 0)                        ; R
122   (GETVALUE&PUSH 0)                   ; R
124   (CONST&PUSH 18)                     ; $Y
125   (CALL2 3)                           ; $COEFF
127   (SETVALUE 1)                        ; Q
129   (PUSH)
130   (CALL1&JMPIF 4 L183)                ; FUMCHECK
133   (CONST&PUSH 19)                     ; (MPLUS)
134   (GETVALUE&PUSH 0)                   ; R
136   (CONST&PUSH 20)                     ; (MTIMES)
137   (CONST&PUSH 7)                      ; -1
138   (CONST&PUSH 18)                     ; $Y
139   (GETVALUE&PUSH 1)                   ; Q
141   (LIST&PUSH 4)
143   (LIST&PUSH 3)
145   (NIL&PUSH)
146   (CALL2 8)                           ; SIMPLIFYA
148   (SETVALUE 0)                        ; R
150   (GETVALUE&PUSH 0)                   ; R
152   (CONST&PUSH 21)                     ; $Z
153   (CALL2 3)                           ; $COEFF
155   (SETVALUE 1)                        ; Q
157   (PUSH)
158   (CALL1&JMPIF 4 L183)                ; FUMCHECK
161   (CONST&PUSH 22)                     ; (MPLUS)
162   (GETVALUE&PUSH 0)                   ; R
164   (CONST&PUSH 23)                     ; (MTIMES)
165   (CONST&PUSH 7)                      ; -1
166   (CONST&PUSH 21)                     ; $Z
167   (GETVALUE&PUSH 1)                   ; Q
169   (LIST&PUSH 4)
171   (LIST&PUSH 3)
173   (NIL&PUSH)
174   (CALL2 8)                           ; SIMPLIFYA
176   (SETVALUE 0)                        ; R
178   (GETVALUE&PUSH 0)                   ; R
180   (JMPIFEQTO 24 L188)                 ; 0
183   L183
183   (NIL)
184   (UNBIND1)
185   L185
185   (UNBIND1)
186   (SKIP&RET 2)
188   L188
188   (T)
189   (UNBIND1)
190   (JMP L185)


Disassembly of function #:|(DEFMFUN $POISSIMP (X) ...)-7|
(CONST 0) = $POISSIMP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISSIMP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISSIMP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISSIMP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISSIMP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISSIMP
8     (SKIP&RET 1)


Disassembly of function $POISSIMP
(CONST 0) = X
(CONST 1) = MBAGP
(CONST 2) = $POISSIMP
(CONST 3) = $OUTOFPOIS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
18 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALL1&JMPIF 1 L15)                 ; MBAGP
8     (GETVALUE&PUSH 0)                   ; X
10    (CALL1 3)                           ; $OUTOFPOIS
12    L12
12    (UNBIND1)
13    (SKIP&RET 2)
15    L15
15    (GETVALUE 0)                        ; X
17    (CAR&PUSH)
18    (CONST&SYMBOL-FUNCTION&PUSH 2)      ; $POISSIMP
20    (GETVALUE 0)                        ; X
22    (CDR&PUSH)
23    (CALLSR 0 22)                       ; MAPCAR
26    (CONS)
27    (JMP L12)


Disassembly of function #:|(DECLARE-TOP (FIXNUM AE POISHIFT ...))-8|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFPROP MPOIS (LAMBDA # X) ...)-9|
(CONST 0) = MPOIS
(CONST 1) = MFEXPR*
(CONST 2) = (LAMBDA (X) X)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; MPOIS
1     (CONST&PUSH 1)                      ; MFEXPR*
2     (CONST&PUSH 2)                      ; (LAMBDA (X) X)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $POISPLUS (A B) ...)-10|
(CONST 0) = $POISPLUS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISPLUS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISPLUS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISPLUS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISPLUS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISPLUS
8     (SKIP&RET 1)


Disassembly of function $POISPLUS
(CONST 0) = A
(CONST 1) = B
(CONST 2) = INTOPOIS
(CONST 3) = (MPOIS SIMP)
(CONST 4) = POISMERGE22
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B A)
writes special variables : (B A)
30 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; B
6     (GETVALUE&PUSH 0)                   ; A
8     (CALL1 2)                           ; INTOPOIS
10    (SETVALUE 0)                        ; A
12    (GETVALUE&PUSH 1)                   ; B
14    (CALL1 2)                           ; INTOPOIS
16    (SETVALUE 1)                        ; B
18    (CONST&PUSH 3)                      ; (MPOIS SIMP)
19    (GETVALUE 0)                        ; A
21    (CDR)
22    (CAR&PUSH)
23    (GETVALUE 1)                        ; B
25    (CDR)
26    (CAR&PUSH)
27    (CALL2&PUSH 4)                      ; POISMERGE22
29    (GETVALUE 0)                        ; A
31    (CDR)
32    (CDR)
33    (CAR&PUSH)
34    (GETVALUE 1)                        ; B
36    (CDR)
37    (CDR)
38    (CAR&PUSH)
39    (CALL2&PUSH 4)                      ; POISMERGE22
41    (LIST 3)
43    (UNBIND 2)
45    (SKIP&RET 3)


Disassembly of function #:|(DECLARE-TOP (SPECIAL *B *FN))-11|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN $POISMAP (P SINFN COSFN) ...)-12|
(CONST 0) = $POISMAP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISMAP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISMAP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISMAP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISMAP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISMAP
8     (SKIP&RET 1)


Disassembly of function $POISMAP
(CONST 0) = P
(CONST 1) = *B
(CONST 2) = *FN
(CONST 3) = INTOPOIS
(CONST 4) = POISMAP
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (P)
writes special variables : (*FN P)
29 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; P
3     (NIL)
4     (BIND 1)                            ; *B
6     (NIL)
7     (BIND 2)                            ; *FN
9     (GETVALUE&PUSH 0)                   ; P
11    (CALL1 3)                           ; INTOPOIS
13    (SETVALUE 0)                        ; P
15    (LOAD&PUSH 11)
16    (LIST 1)
18    (SETVALUE 2)                        ; *FN
20    (GETVALUE 0)                        ; P
22    (CAR&PUSH)
23    (GETVALUE 0)                        ; P
25    (CDR)
26    (CAR&PUSH)
27    (CALL1&PUSH 4)                      ; POISMAP
29    (LOAD&PUSH 12)
30    (LIST 1)
32    (SETVALUE 2)                        ; *FN
34    (GETVALUE 0)                        ; P
36    (CDR)
37    (CDR)
38    (CAR&PUSH)
39    (CALL1&PUSH 4)                      ; POISMAP
41    (LIST 3)
43    (UNBIND 3)
45    (SKIP&RET 4)


Disassembly of function #:|(DEFUN POISMAP (Y) ...)-13|
(CONST 0) = POISMAP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISMAP>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISMAP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISMAP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISMAP>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISMAP
8     (SKIP&RET 1)


Disassembly of function POISMAP
(CONST 0) = Y
(CONST 1) = *FN
(CONST 2) = POISCDECODE
(CONST 3) = POISDECODEC
(CONST 4) = MEVAL
(CONST 5) = *B
(CONST 6) = INTOPOISCO
(CONST 7) = TCONS3
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*B *FN Y)
writes special variable : (*B)
31 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; Y
3     (GETVALUE 0)                        ; Y
5     (JMPIFNOT L45)
7     (GETVALUE&PUSH 1)                   ; *FN
9     (GETVALUE 0)                        ; Y
11    (CDR)
12    (CAR&PUSH)
13    (CALL1&PUSH 2)                      ; POISCDECODE
15    (GETVALUE 0)                        ; Y
17    (CAR&PUSH)
18    (CALL1&PUSH 3)                      ; POISDECODEC
20    (LIST&PUSH 3)
22    (CALL1 4)                           ; MEVAL
24    (SETVALUE 5)                        ; *B
26    (GETVALUE 0)                        ; Y
28    (CAR&PUSH)
29    (GETVALUE&PUSH 5)                   ; *B
31    (CALL1&PUSH 6)                      ; INTOPOISCO
33    (GETVALUE 0)                        ; Y
35    (CDR)
36    (CDR&PUSH)
37    (JSR&PUSH L0)
39    (CALL 3 7)                          ; TCONS3
42    L42
42    (UNBIND1)
43    (SKIP&RET 2)
45    L45
45    (NIL)
46    (JMP L42)


Disassembly of function #:|(DEFUN POISMERGE22 (R S) ...)-14|
(CONST 0) = POISMERGE22
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISMERGE22>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISMERGE22
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISMERGE22
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISMERGE22>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISMERGE22
8     (SKIP&RET 1)


Disassembly of function POISMERGE22
(CONST 0) = R
(CONST 1) = S
(CONST 2) = POISCO+
(CONST 3) = POISPZERO
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (S R)
89 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; R
3     (LOAD 4)
4     (BIND 1)                            ; S
6     (GETVALUE 0)                        ; R
8     (JMPIFNOT L56)
10    (GETVALUE 1)                        ; S
12    (JMPIFNOT L60)
14    (GETVALUE 0)                        ; R
16    (CAR&PUSH)
17    (GETVALUE 1)                        ; S
19    (CAR&PUSH)
20    (CALLS2&JMPIF 2 L79)                ; EQUAL
23    (GETVALUE 0)                        ; R
25    (CAR&PUSH)
26    (GETVALUE 1)                        ; S
28    (CAR&PUSH)
29    (CALLSR&JMPIF 1 47 L116)            ; <
34    (GETVALUE 1)                        ; S
36    (CAR&PUSH)
37    (GETVALUE 1)                        ; S
39    (CDR)
40    (CAR&PUSH)
41    (GETVALUE 1)                        ; S
43    (CDR)
44    (CDR&PUSH)
45    (GETVALUE 0)                        ; R
47    L47
47    (PUSH)
48    (JSR L0)
50    (CONS)
51    (CONS)
52    L52
52    (UNBIND 2)
54    (SKIP&RET 3)
56    L56
56    (GETVALUE 1)                        ; S
58    (JMP L52)
60    L60
60    (GETVALUE 0)                        ; R
62    (JMP L52)
64    L64
64    (GETVALUE 0)                        ; R
66    (CDR)
67    (CDR&PUSH)
68    (GETVALUE 1)                        ; S
70    (CDR)
71    (CDR&PUSH)
72    (JSR L0)
75    (SKIP 1)
77    (JMP L52)
79    L79
79    (NIL&PUSH)
80    (GETVALUE 0)                        ; R
82    (CDR)
83    (CAR&PUSH)
84    (GETVALUE 1)                        ; S
86    (CDR)
87    (CAR&PUSH)
88    (CALL2 2)                           ; POISCO+
90    (STORE 0)
91    (PUSH)
92    (CALL1&JMPIF 3 L64)                 ; POISPZERO
95    (GETVALUE 1)                        ; S
97    (CAR&PUSH)
98    (LOAD&PUSH 1)
99    (GETVALUE 0)                        ; R
101   (CDR)
102   (CDR&PUSH)
103   (GETVALUE 1)                        ; S
105   (CDR)
106   (CDR&PUSH)
107   (JSR L0)
110   (CONS)
111   (CONS)
112   (SKIP 1)
114   (JMP L52)
116   L116
116   (GETVALUE 0)                        ; R
118   (CAR&PUSH)
119   (GETVALUE 0)                        ; R
121   (CDR)
122   (CAR&PUSH)
123   (GETVALUE 0)                        ; R
125   (CDR)
126   (CDR&PUSH)
127   (GETVALUE 1)                        ; S
129   (JMP L47)


Disassembly of function #:|(DEFUN POISCOSINE (M) ...)-15|
(CONST 0) = POISCOSINE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISCOSINE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISCOSINE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISCOSINE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISCOSINE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISCOSINE
8     (SKIP&RET 1)


Disassembly of function POISCOSINE
(CONST 0) = M
(CONST 1) = POISENCODE
(CONST 2) = POISNEGPRED
(CONST 3) = POISCHANGESIGN
(CONST 4) = (MPOIS SIMP)
(CONST 5) = POISCO1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISCO1 M)
writes special variable : (M)
19 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; M
3     (GETVALUE&PUSH 0)                   ; M
5     (CALL1 1)                           ; POISENCODE
7     (SETVALUE 0)                        ; M
9     (PUSH)
10    (CALL1&JMPIFNOT 2 L19)              ; POISNEGPRED
13    (GETVALUE&PUSH 0)                   ; M
15    (CALL1 3)                           ; POISCHANGESIGN
17    (SETVALUE 0)                        ; M
19    L19
19    (CONST&PUSH 4)                      ; (MPOIS SIMP)
20    (NIL&PUSH)
21    (GETVALUE&PUSH 0)                   ; M
23    (GETVALUE&PUSH 5)                   ; POISCO1
25    (LIST&PUSH 2)
27    (LIST 3)
29    (UNBIND1)
30    (SKIP&RET 2)


Disassembly of function #:|(DEFUN POISSINE (M) ...)-16|
(CONST 0) = POISSINE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISSINE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISSINE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISSINE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISSINE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISSINE
8     (SKIP&RET 1)


Disassembly of function POISSINE
(CONST 0) = M
(CONST 1) = POISENCODE
(CONST 2) = POISNEGPRED
(CONST 3) = (MPOIS SIMP)
(CONST 4) = POISCHANGESIGN
(CONST 5) = POISCOM1
(CONST 6) = (MPOIS SIMP)
(CONST 7) = POISCO1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISCOM1 POISCO1 M)
writes special variable : (M)
23 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; M
3     (GETVALUE&PUSH 0)                   ; M
5     (CALL1 1)                           ; POISENCODE
7     (SETVALUE 0)                        ; M
9     (PUSH)
10    (CALL1&JMPIF 2 L27)                 ; POISNEGPRED
13    (CONST&PUSH 6)                      ; (MPOIS SIMP)
14    (GETVALUE&PUSH 0)                   ; M
16    (GETVALUE 7)                        ; POISCO1
18    L18
18    (PUSH)
19    (LIST&PUSH 2)
21    (NIL&PUSH)
22    (LIST 3)
24    (UNBIND1)
25    (SKIP&RET 2)
27    L27
27    (CONST&PUSH 3)                      ; (MPOIS SIMP)
28    (GETVALUE&PUSH 0)                   ; M
30    (CALL1&PUSH 4)                      ; POISCHANGESIGN
32    (GETVALUE 5)                        ; POISCOM1
34    (JMP L18)


Disassembly of function #:|(DEFMFUN $INTOPOIS (X) ...)-17|
(CONST 0) = $INTOPOIS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $INTOPOIS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $INTOPOIS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $INTOPOIS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $INTOPOIS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $INTOPOIS
8     (SKIP&RET 1)


Disassembly of function $INTOPOIS
(CONST 0) = X
(CONST 1) = *A
(CONST 2) = INTOPOIS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
8 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (NIL)
4     (BIND 1)                            ; *A
6     (GETVALUE&PUSH 0)                   ; X
8     (CALL1 2)                           ; INTOPOIS
10    (UNBIND 2)
12    (SKIP&RET 2)


Disassembly of function #:|(DEFUN INTOPOIS (A) ...)-18|
(CONST 0) = INTOPOIS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INTOPOIS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; INTOPOIS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INTOPOIS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INTOPOIS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; INTOPOIS
8     (SKIP&RET 1)


Disassembly of function INTOPOIS
(CONST 0) = A
(CONST 1) = 0
(CONST 2) = $POISZ
(CONST 3) = (MPOIS SIMP)
(CONST 4) = POISHIFT
(CONST 5) = INTOPOISCO
(CONST 6) = MPOIS
(CONST 7) = %SIN
(CONST 8) = POISSINE
(CONST 9) = %COS
(CONST 10) = POISCOSINE
(CONST 11) = MEXPT
(CONST 12) = $POISEXPT
(CONST 13) = MPLUS
(CONST 14) = *A
(CONST 15) = Z
(CONST 16) = $POISPLUS
(CONST 17) = MTIMES
(CONST 18) = $POISTIMES
(CONST 19) = MRAT
(CONST 20) = RATDISREP
(CONST 21) = (MPOIS SIMP)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (Z *A $POISZ POISHIFT A)
writes special variable : (*A)
151 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; A
3     (GETVALUE 0)                        ; A
5     (JMPIFATOM L103)
8     (GETVALUE 0)                        ; A
10    (CAR)
11    (CAR&PUSH)
12    (JMPIFEQTO 6 L111)                  ; MPOIS
16    (GETVALUE 0)                        ; A
18    (CAR)
19    (CAR&PUSH)
20    (JMPIFEQTO 7 L115)                  ; %SIN
24    (GETVALUE 0)                        ; A
26    (CAR)
27    (CAR&PUSH)
28    (JMPIFEQTO 9 L123)                  ; %COS
32    (GETVALUE 0)                        ; A
34    (CAR)
35    (CAR&PUSH)
36    (JMPIFNOTEQTO 11 L58)               ; MEXPT
39    (GETVALUE 0)                        ; A
41    (CDR)
42    (CDR)
43    (CAR&PUSH)
44    (CALLS2&JMPIFNOT 8 L58)             ; NUMBERP
47    (GETVALUE 0)                        ; A
49    (CDR)
50    (CDR)
51    (CAR&PUSH)
52    (CONST&PUSH 1)                      ; 0
53    (CALLSR&JMPIF 1 48 L131)            ; >
58    L58
58    (GETVALUE 0)                        ; A
60    (CAR)
61    (CAR&PUSH)
62    (JMPIFEQTO 13 L147)                 ; MPLUS
66    (GETVALUE 0)                        ; A
68    (CAR)
69    (CAR&PUSH)
70    (JMPIFEQTO 17 L189)                 ; MTIMES
74    (GETVALUE 0)                        ; A
76    (CAR)
77    (CAR&PUSH)
78    (JMPIFEQTO 19 L237)                 ; MRAT
82    (CONST 21)                          ; (MPOIS SIMP)
84    L84
84    (PUSH)
85    (NIL&PUSH)
86    (GETVALUE&PUSH 4)                   ; POISHIFT
88    (GETVALUE&PUSH 0)                   ; A
90    (CALL1&PUSH 5)                      ; INTOPOISCO
92    (LIST&PUSH 2)
94    (LIST 3)
96    L96
96    (UNBIND1)
97    (SKIP&RET 2)
99    L99
99    (GETVALUE 2)                        ; $POISZ
101   (JMP L96)
103   L103
103   (GETVALUE&PUSH 0)                   ; A
105   (JMPIFEQTO 1 L99)                   ; 0
108   (CONST 3)                           ; (MPOIS SIMP)
109   (JMP L84)
111   L111
111   (GETVALUE 0)                        ; A
113   (JMP L96)
115   L115
115   (GETVALUE 0)                        ; A
117   (CDR)
118   (CAR&PUSH)
119   (CALL1 8)                           ; POISSINE
121   (JMP L96)
123   L123
123   (GETVALUE 0)                        ; A
125   (CDR)
126   (CAR&PUSH)
127   (CALL1 10)                          ; POISCOSINE
129   (JMP L96)
131   L131
131   (GETVALUE 0)                        ; A
133   (CDR)
134   (CAR&PUSH)
135   (JSR&PUSH L0)
138   (GETVALUE 0)                        ; A
140   (CDR)
141   (CDR)
142   (CAR&PUSH)
143   (CALL2 12)                          ; $POISEXPT
145   (JMP L96)
147   L147
147   (GETVALUE 0)                        ; A
149   (CDR)
150   (CAR&PUSH)
151   (JSR L0)
154   (SETVALUE 14)                       ; *A
156   (GETVALUE 0)                        ; A
158   (CDR)
159   (CDR&PUSH)
160   (LOAD&PUSH 0)
161   L161
161   (LOAD&PUSH 0)
162   (CALLS1&JMPIF 146 L230)             ; ENDP
166   (LOAD&CAR&PUSH 0)
168   (LOAD 0)
169   (BIND 15)                           ; Z
171   (GETVALUE&PUSH 14)                  ; *A
173   (GETVALUE&PUSH 15)                  ; Z
175   (JSR&PUSH L0)
178   (CALL2 16)                          ; $POISPLUS
180   (SETVALUE 14)                       ; *A
182   (UNBIND1)
183   (SKIP 1)
185   (LOAD&CDR&STORE 0)
187   (JMP L161)
189   L189
189   (GETVALUE 0)                        ; A
191   (CDR)
192   (CAR&PUSH)
193   (JSR L0)
196   (SETVALUE 14)                       ; *A
198   (GETVALUE 0)                        ; A
200   (CDR)
201   (CDR&PUSH)
202   (LOAD&PUSH 0)
203   (JMP L226)
205   L205
205   (LOAD&CAR&PUSH 0)
207   (LOAD 0)
208   (BIND 15)                           ; Z
210   (GETVALUE&PUSH 14)                  ; *A
212   (GETVALUE&PUSH 15)                  ; Z
214   (JSR&PUSH L0)
217   (CALL2 18)                          ; $POISTIMES
219   (SETVALUE 14)                       ; *A
221   (UNBIND1)
222   (SKIP 1)
224   (LOAD&CDR&STORE 0)
226   L226
226   (LOAD&PUSH 0)
227   (CALLS1&JMPIFNOT 146 L205)          ; ENDP
230   L230
230   (SKIP 2)
232   (GETVALUE 14)                       ; *A
234   (JMP L96)
237   L237
237   (GETVALUE&PUSH 0)                   ; A
239   (CALL1&PUSH 20)                     ; RATDISREP
241   (JSR L0)
244   (JMP L96)


Disassembly of function #:|(DEFUN TCONS (R S) ...)-19|
(CONST 0) = TCONS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TCONS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TCONS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TCONS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TCONS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TCONS
8     (SKIP&RET 1)


Disassembly of function TCONS
(CONST 0) = R
(CONST 1) = S
(CONST 2) = POISPZERO
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (R S)
17 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; R
3     (LOAD 4)
4     (BIND 1)                            ; S
6     (GETVALUE 1)                        ; S
8     (CAR&PUSH)
9     (CALL1&JMPIF 2 L21)                 ; POISPZERO
12    (GETVALUE&PUSH 0)                   ; R
14    (GETVALUE 1)                        ; S
16    (CONS)
17    L17
17    (UNBIND 2)
19    (SKIP&RET 3)
21    L21
21    (GETVALUE 1)                        ; S
23    (CDR)
24    (JMP L17)


Disassembly of function #:|(DEFUN POISNEGPRED ($N) ...)-20|
(CONST 0) = POISNEGPRED
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISNEGPRED>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISNEGPRED
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISNEGPRED
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISNEGPRED>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISNEGPRED
8     (SKIP&RET 1)


Disassembly of function POISNEGPRED
(CONST 0) = 0
(CONST 1) = POISTS
(CONST 2) = POISTSM
(CONST 3) = QUOT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISTSM POISTS)
27 byte-code instructions:
0     (NIL&PUSH)
1     L1
1     (LOAD&PUSH 2)
2     (JMPIFEQTO 0 L22)                   ; 0
5     (LOAD&PUSH 2)
6     (GETVALUE&PUSH 1)                   ; POISTS
8     (CALLS2&PUSH 184)                   ; REM
10    (GETVALUE&PUSH 2)                   ; POISTSM
12    (CALLSR&STORE 1 54 0)               ; -
16    (PUSH)
17    (CONST&PUSH 0)                      ; 0
18    (CALLSR&JMPIFNOT 1 48 L28)          ; >
22    L22
22    (NIL)
23    (SKIP&RET 3)
25    L25
25    (T)
26    (SKIP&RET 3)
28    L28
28    (CONST&PUSH 0)                      ; 0
29    (LOAD&PUSH 1)
30    (CALLSR&JMPIF 1 48 L25)             ; >
34    (LOAD&PUSH 2)
35    (GETVALUE&PUSH 1)                   ; POISTS
37    (CALL2 3)                           ; QUOT
39    (STORE 2)
40    (JMP L1)


Disassembly of function #:|(DEFUN POISCHANGESIGN ($N) ...)-21|
(CONST 0) = POISCHANGESIGN
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISCHANGESIGN>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISCHANGESIGN
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISCHANGESIGN
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISCHANGESIGN>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISCHANGESIGN
8     (SKIP&RET 1)


Disassembly of function POISCHANGESIGN
(CONST 0) = 2
(CONST 1) = POISHIFT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (POISHIFT)
6 byte-code instructions:
0     (CONST&PUSH 0)                      ; 2
1     (GETVALUE&PUSH 1)                   ; POISHIFT
3     (CALLSR&PUSH 2 55)                  ; *
6     (LOAD&PUSH 2)
7     (CALLSR 1 54)                       ; -
10    (SKIP&RET 2)


Disassembly of function #:|(DECLARE-TOP (SPECIAL $U $V ...))-22|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN POISENCODE (H*) ...)-23|
(CONST 0) = POISENCODE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISENCODE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISENCODE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISENCODE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISENCODE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISENCODE
8     (SKIP&RET 1)


Disassembly of function POISENCODE
(CONST 0) = H*
(CONST 1) = CHECKENCODE
(CONST 2) = "Illegal arg to POISSIMP:~%~M"
(CONST 3) = MERROR
(CONST 4) = POISVALS
(CONST 5) = $Z
(CONST 6) = $Y
(CONST 7) = $X
(CONST 8) = $W
(CONST 9) = $V
(CONST 10) = $U
(CONST 11) = MEVAL
(CONST 12) = "Illegal trig arg to POISSON form"
(CONST 13) = POISHIFT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISHIFT POISVALS H*)
writes special variable : (H*)
37 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; H*
3     (GETVALUE&PUSH 0)                   ; H*
5     (CALL1&JMPIF 1 L13)                 ; CHECKENCODE
8     (CONST&PUSH 2)                      ; "Illegal arg to POISSIMP:~%~M"
9     (GETVALUE&PUSH 0)                   ; H*
11    (CALL2 3)                           ; MERROR
13    L13
13    (GETVALUE 4)                        ; POISVALS
15    (UNLIST 6 0)
18    (LOAD 5)
19    (BIND 5)                            ; $Z
21    (LOAD 7)
22    (BIND 6)                            ; $Y
24    (LOAD 9)
25    (BIND 7)                            ; $X
27    (LOAD 11)
28    (BIND 8)                            ; $W
30    (LOAD 13)
31    (BIND 9)                            ; $V
33    (LOAD 15)
35    (BIND 10)                           ; $U
37    (GETVALUE&PUSH 0)                   ; H*
39    (CALL1 11)                          ; MEVAL
41    (SETVALUE 0)                        ; H*
43    (PUSH)
44    (CALLS2&JMPIF 12 L50)               ; INTEGERP
47    (CONST&PUSH 12)                     ; "Illegal trig arg to POISSON form"
48    (CALL1 3)                           ; MERROR
50    L50
50    (GETVALUE&PUSH 13)                  ; POISHIFT
52    (GETVALUE&PUSH 0)                   ; H*
54    (CALLSR 2 53)                       ; +
57    (UNBIND 6)
59    (SKIP 6)
61    (UNBIND1)
62    (SKIP&RET 2)


Disassembly of function #:|(PROG (N) (SETQ N 5) ...)-24|
(CONST 0) = N
(CONST 1) = 5
(CONST 2) = POISVALS
(CONST 3) = 2
(CONST 4) = POISTS
(CONST 5) = 0
(CONST 6) = J
(CONST 7) = POISSIZ
(CONST 8) = POISTSM
(CONST 9) = SUM
(CONST 10) = POISHIFT
(CONST 11) = ((MPOIS SIMP) NIL NIL)
(CONST 12) = $POISZ
(CONST 13) = (MPOIS SIMP)
(CONST 14) = 1
(CONST 15) = $POIS1
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISHIFT POISTSM SUM POISVALS J POISTS N)
writes special variables : ($POIS1 $POISZ POISHIFT SUM POISTSM POISSIZ J POISTS POISVALS N)
71 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; N
3     (CONST 1)                           ; 5
4     (SETVALUE 0)                        ; N
6     (NIL)
7     (SETVALUE 2)                        ; POISVALS
9     (CONST&PUSH 3)                      ; 2
10    (GETVALUE&PUSH 0)                   ; N
12    (CALLS2 154)                        ; EXPT
14    (SETVALUE 4)                        ; POISTS
16    (CONST 5)                           ; 0
17    (BIND 6)                            ; J
19    (JMP L38)
21    L21
21    (GETVALUE&PUSH 4)                   ; POISTS
23    (GETVALUE&PUSH 6)                   ; J
25    (CALLS2&PUSH 154)                   ; EXPT
27    (GETVALUE 2)                        ; POISVALS
29    (CONS)
30    (SETVALUE 2)                        ; POISVALS
32    (GETVALUE&PUSH 6)                   ; J
34    (CALLS2 150)                        ; 1+
36    (SETVALUE 6)                        ; J
38    L38
38    (GETVALUE&PUSH 6)                   ; J
40    (CONST&PUSH 1)                      ; 5
41    (CALLSR&JMPIFNOT 1 48 L21)          ; >
45    (UNBIND1)
46    (GETVALUE 0)                        ; N
48    (SETVALUE 7)                        ; POISSIZ
50    (CONST&PUSH 3)                      ; 2
51    (GETVALUE&PUSH 0)                   ; N
53    (CALLS2&PUSH 151)                   ; 1-
55    (CALLS2 154)                        ; EXPT
57    (SETVALUE 8)                        ; POISTSM
59    (NIL)
60    (BIND 9)                            ; SUM
62    (CONST 5)                           ; 0
63    (SETVALUE 9)                        ; SUM
65    (PUSH)
66    (JMP L87)
68    L68
68    (GETVALUE&PUSH 9)                   ; SUM
70    (GETVALUE&PUSH 8)                   ; POISTSM
72    (GETVALUE&PUSH 4)                   ; POISTS
74    (LOAD&PUSH 3)
75    (CALLS2&PUSH 154)                   ; EXPT
77    (CALLSR&PUSH 2 55)                  ; *
80    (CALLSR 2 53)                       ; +
83    (SETVALUE 9)                        ; SUM
85    (LOAD&INC&STORE 0)
87    L87
87    (LOAD&PUSH 0)
88    (CONST&PUSH 1)                      ; 5
89    (CALLSR&JMPIFNOT 1 48 L68)          ; >
93    (SKIP 1)
95    (GETVALUE 9)                        ; SUM
97    (UNBIND1)
98    (SETVALUE 10)                       ; POISHIFT
100   (CONST 11)                          ; ((MPOIS SIMP) NIL NIL)
101   (SETVALUE 12)                       ; $POISZ
103   (CONST&PUSH 13)                     ; (MPOIS SIMP)
104   (NIL&PUSH)
105   (GETVALUE&PUSH 10)                  ; POISHIFT
107   (CONST&PUSH 14)                     ; 1
108   (LIST&PUSH 2)
110   (LIST 3)
112   (SETVALUE 15)                       ; $POIS1
114   (NIL)
115   (UNBIND1)
116   (SKIP&RET 1)


Disassembly of function #:|(DEFUN POISDECODEC (M) ...)-25|
(CONST 0) = POISDECODEC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISDECODEC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISDECODEC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISDECODEC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISDECODEC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISDECODEC
8     (SKIP&RET 1)


Disassembly of function POISDECODEC
(CONST 0) = M
(CONST 1) = ARG
(CONST 2) = H
(CONST 3) = (MTIMES)
(CONST 4) = POISTS
(CONST 5) = POISTSM
(CONST 6) = $U
(CONST 7) = QUOT
(CONST 8) = (MPLUS)
(CONST 9) = (MTIMES)
(CONST 10) = $V
(CONST 11) = (MPLUS)
(CONST 12) = (MTIMES)
(CONST 13) = $W
(CONST 14) = (MPLUS)
(CONST 15) = (MTIMES)
(CONST 16) = $X
(CONST 17) = (MPLUS)
(CONST 18) = (MTIMES)
(CONST 19) = $Y
(CONST 20) = (MPLUS)
(CONST 21) = (MTIMES)
(CONST 22) = $Z
(CONST 23) = SIMPLIFYA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (ARG POISTSM POISTS H M)
writes special variables : (ARG H)
102 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; M
3     (NIL)
4     (BIND 1)                            ; ARG
6     (NIL)
7     (BIND 2)                            ; H
9     (GETVALUE 0)                        ; M
11    (SETVALUE 2)                        ; H
13    (CONST&PUSH 3)                      ; (MTIMES)
14    (GETVALUE&PUSH 2)                   ; H
16    (GETVALUE&PUSH 4)                   ; POISTS
18    (CALLS2&PUSH 184)                   ; REM
20    (GETVALUE&PUSH 5)                   ; POISTSM
22    (CALLSR&PUSH 1 54)                  ; -
25    (CONST&PUSH 6)                      ; $U
26    (LIST 3)
28    (SETVALUE 1)                        ; ARG
30    (GETVALUE&PUSH 2)                   ; H
32    (GETVALUE&PUSH 4)                   ; POISTS
34    (CALL2 7)                           ; QUOT
36    (SETVALUE 2)                        ; H
38    (CONST&PUSH 8)                      ; (MPLUS)
39    (GETVALUE&PUSH 1)                   ; ARG
41    (CONST&PUSH 9)                      ; (MTIMES)
42    (GETVALUE&PUSH 2)                   ; H
44    (GETVALUE&PUSH 4)                   ; POISTS
46    (CALLS2&PUSH 184)                   ; REM
48    (GETVALUE&PUSH 5)                   ; POISTSM
50    (CALLSR&PUSH 1 54)                  ; -
53    (CONST&PUSH 10)                     ; $V
54    (LIST&PUSH 3)
56    (LIST 3)
58    (SETVALUE 1)                        ; ARG
60    (GETVALUE&PUSH 2)                   ; H
62    (GETVALUE&PUSH 4)                   ; POISTS
64    (CALL2 7)                           ; QUOT
66    (SETVALUE 2)                        ; H
68    (CONST&PUSH 11)                     ; (MPLUS)
69    (GETVALUE&PUSH 1)                   ; ARG
71    (CONST&PUSH 12)                     ; (MTIMES)
72    (GETVALUE&PUSH 2)                   ; H
74    (GETVALUE&PUSH 4)                   ; POISTS
76    (CALLS2&PUSH 184)                   ; REM
78    (GETVALUE&PUSH 5)                   ; POISTSM
80    (CALLSR&PUSH 1 54)                  ; -
83    (CONST&PUSH 13)                     ; $W
84    (LIST&PUSH 3)
86    (LIST 3)
88    (SETVALUE 1)                        ; ARG
90    (GETVALUE&PUSH 2)                   ; H
92    (GETVALUE&PUSH 4)                   ; POISTS
94    (CALL2 7)                           ; QUOT
96    (SETVALUE 2)                        ; H
98    (CONST&PUSH 14)                     ; (MPLUS)
99    (GETVALUE&PUSH 1)                   ; ARG
101   (CONST&PUSH 15)                     ; (MTIMES)
102   (GETVALUE&PUSH 2)                   ; H
104   (GETVALUE&PUSH 4)                   ; POISTS
106   (CALLS2&PUSH 184)                   ; REM
108   (GETVALUE&PUSH 5)                   ; POISTSM
110   (CALLSR&PUSH 1 54)                  ; -
113   (CONST&PUSH 16)                     ; $X
114   (LIST&PUSH 3)
116   (LIST 3)
118   (SETVALUE 1)                        ; ARG
120   (GETVALUE&PUSH 2)                   ; H
122   (GETVALUE&PUSH 4)                   ; POISTS
124   (CALL2 7)                           ; QUOT
126   (SETVALUE 2)                        ; H
128   (CONST&PUSH 17)                     ; (MPLUS)
129   (GETVALUE&PUSH 1)                   ; ARG
131   (CONST&PUSH 18)                     ; (MTIMES)
132   (GETVALUE&PUSH 2)                   ; H
134   (GETVALUE&PUSH 4)                   ; POISTS
136   (CALLS2&PUSH 184)                   ; REM
138   (GETVALUE&PUSH 5)                   ; POISTSM
140   (CALLSR&PUSH 1 54)                  ; -
143   (CONST&PUSH 19)                     ; $Y
144   (LIST&PUSH 3)
146   (LIST 3)
148   (SETVALUE 1)                        ; ARG
150   (GETVALUE&PUSH 2)                   ; H
152   (GETVALUE&PUSH 4)                   ; POISTS
154   (CALL2 7)                           ; QUOT
156   (SETVALUE 2)                        ; H
158   (CONST&PUSH 20)                     ; (MPLUS)
159   (GETVALUE&PUSH 1)                   ; ARG
161   (CONST&PUSH 21)                     ; (MTIMES)
162   (GETVALUE&PUSH 2)                   ; H
164   (GETVALUE&PUSH 4)                   ; POISTS
166   (CALLS2&PUSH 184)                   ; REM
168   (GETVALUE&PUSH 5)                   ; POISTSM
170   (CALLSR&PUSH 1 54)                  ; -
173   (CONST&PUSH 22)                     ; $Z
174   (LIST&PUSH 3)
176   (LIST 3)
178   (SETVALUE 1)                        ; ARG
180   (PUSH)
181   (NIL&PUSH)
182   (CALL2 23)                          ; SIMPLIFYA
184   (UNBIND 3)
186   (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN $POISCTIMES (C P) ...)-26|
(CONST 0) = $POISCTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISCTIMES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISCTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISCTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISCTIMES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISCTIMES
8     (SKIP&RET 1)


Disassembly of function $POISCTIMES
(CONST 0) = C
(CONST 1) = P
(CONST 2) = (MPOIS SIMP)
(CONST 3) = INTOPOISCO
(CONST 4) = POISCTIMES1
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (P C)
writes special variable : (C)
22 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; C
3     (LOAD 4)
4     (BIND 1)                            ; P
6     (CONST&PUSH 2)                      ; (MPOIS SIMP)
7     (GETVALUE&PUSH 0)                   ; C
9     (CALL1 3)                           ; INTOPOISCO
11    (SETVALUE 0)                        ; C
13    (PUSH)
14    (GETVALUE 1)                        ; P
16    (CDR)
17    (CAR&PUSH)
18    (CALL2&PUSH 4)                      ; POISCTIMES1
20    (GETVALUE&PUSH 0)                   ; C
22    (GETVALUE 1)                        ; P
24    (CDR)
25    (CDR)
26    (CAR&PUSH)
27    (CALL2&PUSH 4)                      ; POISCTIMES1
29    (LIST 3)
31    (UNBIND 2)
33    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN $OUTOFPOIS (P) ...)-27|
(CONST 0) = $OUTOFPOIS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $OUTOFPOIS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $OUTOFPOIS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $OUTOFPOIS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $OUTOFPOIS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $OUTOFPOIS
8     (SKIP&RET 1)


Disassembly of function $OUTOFPOIS
(CONST 0) = P
(CONST 1) = ANS
(CONST 2) = MPOIS
(CONST 3) = INTOPOIS
(CONST 4) = M
(CONST 5) = (MTIMES)
(CONST 6) = POISCDECODE
(CONST 7) = (%SIN)
(CONST 8) = POISDECODEC
(CONST 9) = (MTIMES)
(CONST 10) = POISHIFT
(CONST 11) = 1
(CONST 12) = (%COS)
(CONST 13) = 0
(CONST 14) = (MPLUS)
(CONST 15) = SIMPLIFYA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISHIFT ANS M P)
writes special variables : (M ANS P)
98 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (NIL)
4     (BIND 1)                            ; ANS
6     (GETVALUE 0)                        ; P
8     (JMPIFATOM L17)
10    (GETVALUE 0)                        ; P
12    (CAR)
13    (CAR&PUSH)
14    (JMPIFEQTO 2 L23)                   ; MPOIS
17    L17
17    (GETVALUE&PUSH 0)                   ; P
19    (CALL1 3)                           ; INTOPOIS
21    (SETVALUE 0)                        ; P
23    L23
23    (GETVALUE 0)                        ; P
25    (CDR)
26    (CAR)
27    (BIND 4)                            ; M
29    (GETVALUE 4)                        ; M
31    (JMPIFNOT L65)
33    L33
33    (CONST&PUSH 5)                      ; (MTIMES)
34    (GETVALUE 4)                        ; M
36    (CDR)
37    (CAR&PUSH)
38    (CALL1&PUSH 6)                      ; POISCDECODE
40    (CONST&PUSH 7)                      ; (%SIN)
41    (GETVALUE 4)                        ; M
43    (CAR&PUSH)
44    (CALL1&PUSH 8)                      ; POISDECODEC
46    (LIST&PUSH 2)
48    (LIST&PUSH 3)
50    (GETVALUE 1)                        ; ANS
52    (CONS)
53    (SETVALUE 1)                        ; ANS
55    (GETVALUE 4)                        ; M
57    (CDR)
58    (CDR)
59    (SETVALUE 4)                        ; M
61    (GETVALUE 4)                        ; M
63    (JMPIF L33)
65    L65
65    (UNBIND1)
66    (GETVALUE 0)                        ; P
68    (CDR)
69    (CDR)
70    (CAR)
71    (BIND 4)                            ; M
73    (GETVALUE 4)                        ; M
75    (JMPIFNOT L118)
77    L77
77    (CONST&PUSH 9)                      ; (MTIMES)
78    (GETVALUE 4)                        ; M
80    (CDR)
81    (CAR&PUSH)
82    (CALL1&PUSH 6)                      ; POISCDECODE
84    (GETVALUE 4)                        ; M
86    (CAR&PUSH)
87    (GETVALUE&PUSH 10)                  ; POISHIFT
89    (CALLS2&JMPIF 2 L134)               ; EQUAL
92    (CONST&PUSH 12)                     ; (%COS)
93    (GETVALUE 4)                        ; M
95    (CAR&PUSH)
96    (CALL1&PUSH 8)                      ; POISDECODEC
98    (LIST 2)
100   L100
100   (PUSH)
101   (LIST&PUSH 3)
103   (GETVALUE 1)                        ; ANS
105   (CONS)
106   (SETVALUE 1)                        ; ANS
108   (GETVALUE 4)                        ; M
110   (CDR)
111   (CDR)
112   (SETVALUE 4)                        ; M
114   (GETVALUE 4)                        ; M
116   (JMPIF L77)
118   L118
118   (UNBIND1)
119   (GETVALUE 1)                        ; ANS
121   (JMPIFNOT L137)
123   (CONST&PUSH 14)                     ; (MPLUS)
124   (GETVALUE 1)                        ; ANS
126   (CONS&PUSH)
127   (NIL&PUSH)
128   (CALL2 15)                          ; SIMPLIFYA
130   (UNBIND1)
131   L131
131   (UNBIND1)
132   (SKIP&RET 2)
134   L134
134   (CONST 11)                          ; 1
135   (JMP L100)
137   L137
137   (CONST 13)                          ; 0
138   (UNBIND1)
139   (JMP L131)


Disassembly of function #:|(DEFMFUN $PRINTPOIS (P) ...)-28|
(CONST 0) = $PRINTPOIS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $PRINTPOIS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $PRINTPOIS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $PRINTPOIS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $PRINTPOIS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $PRINTPOIS
8     (SKIP&RET 1)


Disassembly of function $PRINTPOIS
(CONST 0) = P
(CONST 1) = INTOPOIS
(CONST 2) = M
(CONST 3) = (MTIMES)
(CONST 4) = POISCDECODE
(CONST 5) = (%SIN)
(CONST 6) = POISDECODEC
(CONST 7) = SIMPLIFYA
(CONST 8) = DISPLA
(CONST 9) = (MTIMES)
(CONST 10) = POISHIFT
(CONST 11) = 1
(CONST 12) = (%COS)
(CONST 13) = $DONE
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISHIFT M P)
writes special variables : (M P)
79 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; P
3     (GETVALUE&PUSH 0)                   ; P
5     (CALL1 1)                           ; INTOPOIS
7     (SETVALUE 0)                        ; P
9     (CDR)
10    (CAR)
11    (BIND 2)                            ; M
13    (GETVALUE 2)                        ; M
15    (JMPIFNOT L53)
17    L17
17    (CONST&PUSH 3)                      ; (MTIMES)
18    (GETVALUE 2)                        ; M
20    (CDR)
21    (CAR&PUSH)
22    (CALL1&PUSH 4)                      ; POISCDECODE
24    (CONST&PUSH 5)                      ; (%SIN)
25    (GETVALUE 2)                        ; M
27    (CAR&PUSH)
28    (CALL1&PUSH 6)                      ; POISDECODEC
30    (LIST&PUSH 2)
32    (LIST&PUSH 3)
34    (T&PUSH)
35    (CALL2&PUSH 7)                      ; SIMPLIFYA
37    (CALL1 8)                           ; DISPLA
39    (PUSH-UNBOUND 1)
41    (CALLS1 139)                        ; TERPRI
43    (GETVALUE 2)                        ; M
45    (CDR)
46    (CDR)
47    (SETVALUE 2)                        ; M
49    (GETVALUE 2)                        ; M
51    (JMPIF L17)
53    L53
53    (UNBIND1)
54    (GETVALUE 0)                        ; P
56    (CDR)
57    (CDR)
58    (CAR)
59    (BIND 2)                            ; M
61    (GETVALUE 2)                        ; M
63    (JMPIFNOT L110)
65    L65
65    (CONST&PUSH 9)                      ; (MTIMES)
66    (GETVALUE 2)                        ; M
68    (CDR)
69    (CAR&PUSH)
70    (CALL1&PUSH 4)                      ; POISCDECODE
72    (GETVALUE 2)                        ; M
74    (CAR&PUSH)
75    (GETVALUE&PUSH 10)                  ; POISHIFT
77    (CALLS2&JMPIF 2 L115)               ; EQUAL
80    (CONST&PUSH 12)                     ; (%COS)
81    (GETVALUE 2)                        ; M
83    (CAR&PUSH)
84    (CALL1&PUSH 6)                      ; POISDECODEC
86    (LIST 2)
88    L88
88    (PUSH)
89    (LIST&PUSH 3)
91    (T&PUSH)
92    (CALL2&PUSH 7)                      ; SIMPLIFYA
94    (CALL1 8)                           ; DISPLA
96    (PUSH-UNBOUND 1)
98    (CALLS1 139)                        ; TERPRI
100   (GETVALUE 2)                        ; M
102   (CDR)
103   (CDR)
104   (SETVALUE 2)                        ; M
106   (GETVALUE 2)                        ; M
108   (JMPIF L65)
110   L110
110   (UNBIND1)
111   (CONST 13)                          ; $DONE
112   (UNBIND1)
113   (SKIP&RET 2)
115   L115
115   (CONST 11)                          ; 1
116   (JMP L88)


Disassembly of function #:|(DEFMFUN $POISDIFF (P M) ...)-29|
(CONST 0) = $POISDIFF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISDIFF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISDIFF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISDIFF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISDIFF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISDIFF
8     (SKIP&RET 1)


Disassembly of function $POISDIFF
(CONST 0) = P
(CONST 1) = M
(CONST 2) = ($U $V $W $X $Y $Z)
(CONST 3) = MEMQ
(CONST 4) = COSDIF
(CONST 5) = SINDIF
(CONST 6) = POISDIF4
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (P M)
38 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (LOAD 4)
4     (BIND 1)                            ; M
6     (GETVALUE&PUSH 1)                   ; M
8     (CONST&PUSH 2)                      ; ($U $V $W $X $Y $Z)
9     (CALL2&JMPIF 3 L35)                 ; MEMQ
12    (GETVALUE 0)                        ; P
14    (CAR&PUSH)
15    (GETVALUE 0)                        ; P
17    (CDR)
18    (CAR&PUSH)
19    (CALL1&PUSH 6)                      ; POISDIF4
21    (GETVALUE 0)                        ; P
23    (CDR)
24    (CDR)
25    (CAR&PUSH)
26    (CALL1 6)                           ; POISDIF4
28    L28
28    (PUSH)
29    (LIST 3)
31    (UNBIND 2)
33    (SKIP&RET 3)
35    L35
35    (GETVALUE 0)                        ; P
37    (CAR&PUSH)
38    (GETVALUE 0)                        ; P
40    (CDR)
41    (CDR)
42    (CAR&PUSH)
43    (GETVALUE&PUSH 1)                   ; M
45    (CALL2&PUSH 4)                      ; COSDIF
47    (GETVALUE 0)                        ; P
49    (CDR)
50    (CAR&PUSH)
51    (GETVALUE&PUSH 1)                   ; M
53    (CALL2 5)                           ; SINDIF
55    (JMP L28)


Disassembly of function #:|(DEFUN POISDIF4 (Y) ...)-30|
(CONST 0) = POISDIF4
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISDIF4>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISDIF4
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISDIF4
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISDIF4>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISDIF4
8     (SKIP&RET 1)


Disassembly of function POISDIF4
(CONST 0) = Y
(CONST 1) = M
(CONST 2) = POISCODIF
(CONST 3) = TCONS3
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (M Y)
23 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; Y
3     (GETVALUE 0)                        ; Y
5     (JMPIFNOT L30)
7     (GETVALUE 0)                        ; Y
9     (CAR&PUSH)
10    (GETVALUE 0)                        ; Y
12    (CDR)
13    (CAR&PUSH)
14    (GETVALUE&PUSH 1)                   ; M
16    (CALL2&PUSH 2)                      ; POISCODIF
18    (GETVALUE 0)                        ; Y
20    (CDR)
21    (CDR&PUSH)
22    (JSR&PUSH L0)
24    (CALL 3 3)                          ; TCONS3
27    L27
27    (UNBIND1)
28    (SKIP&RET 2)
30    L30
30    (NIL)
31    (JMP L27)


Disassembly of function #:|(DEFUN COSDIF (H M) ...)-31|
(CONST 0) = COSDIF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COSDIF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COSDIF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COSDIF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COSDIF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COSDIF
8     (SKIP&RET 1)


Disassembly of function COSDIF
(CONST 0) = H
(CONST 1) = M
(CONST 2) = POISXCOEF
(CONST 3) = INTOPOISCO
(CONST 4) = POISCO*
(CONST 5) = TCONS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (M H)
32 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; H
3     (LOAD 4)
4     (BIND 1)                            ; M
6     (GETVALUE 0)                        ; H
8     (JMPIFNOT L46)
10    (GETVALUE 0)                        ; H
12    (CAR&PUSH)
13    (GETVALUE 0)                        ; H
15    (CAR&PUSH)
16    (GETVALUE&PUSH 1)                   ; M
18    (CALL2&PUSH 2)                      ; POISXCOEF
20    (CALLSR&PUSH 0 54)                  ; -
23    (CALL1&PUSH 3)                      ; INTOPOISCO
25    (GETVALUE 0)                        ; H
27    (CDR)
28    (CAR&PUSH)
29    (CALL2&PUSH 4)                      ; POISCO*
31    (GETVALUE 0)                        ; H
33    (CDR)
34    (CDR&PUSH)
35    (GETVALUE&PUSH 1)                   ; M
37    (JSR L0)
39    (CONS&PUSH)
40    (CALL2 5)                           ; TCONS
42    L42
42    (UNBIND 2)
44    (SKIP&RET 3)
46    L46
46    (NIL)
47    (JMP L42)


Disassembly of function #:|(DEFUN SINDIF (H M) ...)-32|
(CONST 0) = SINDIF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SINDIF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SINDIF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SINDIF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SINDIF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SINDIF
8     (SKIP&RET 1)


Disassembly of function SINDIF
(CONST 0) = H
(CONST 1) = M
(CONST 2) = POISXCOEF
(CONST 3) = INTOPOISCO
(CONST 4) = POISCO*
(CONST 5) = TCONS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (M H)
31 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; H
3     (LOAD 4)
4     (BIND 1)                            ; M
6     (GETVALUE 0)                        ; H
8     (JMPIFNOT L43)
10    (GETVALUE 0)                        ; H
12    (CAR&PUSH)
13    (GETVALUE 0)                        ; H
15    (CAR&PUSH)
16    (GETVALUE&PUSH 1)                   ; M
18    (CALL2&PUSH 2)                      ; POISXCOEF
20    (CALL1&PUSH 3)                      ; INTOPOISCO
22    (GETVALUE 0)                        ; H
24    (CDR)
25    (CAR&PUSH)
26    (CALL2&PUSH 4)                      ; POISCO*
28    (GETVALUE 0)                        ; H
30    (CDR)
31    (CDR&PUSH)
32    (GETVALUE&PUSH 1)                   ; M
34    (JSR L0)
36    (CONS&PUSH)
37    (CALL2 5)                           ; TCONS
39    L39
39    (UNBIND 2)
41    (SKIP&RET 3)
43    L43
43    (NIL)
44    (JMP L39)


Disassembly of function #:|(DEFUN POISXCOEF (H M) ...)-33|
(CONST 0) = POISXCOEF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISXCOEF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISXCOEF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISXCOEF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISXCOEF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISXCOEF
8     (SKIP&RET 1)


Disassembly of function POISXCOEF
(CONST 0) = H
(CONST 1) = M
(CONST 2) = POISTS
(CONST 3) = ($U 0 $V 1 $W 2 $X 3 $Y 4 $Z 5)
(CONST 4) = MEMQ
(CONST 5) = QUOT
(CONST 6) = POISTSM
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISTSM M POISTS H)
19 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; H
3     (LOAD 4)
4     (BIND 1)                            ; M
6     (GETVALUE&PUSH 0)                   ; H
8     (GETVALUE&PUSH 2)                   ; POISTS
10    (GETVALUE&PUSH 1)                   ; M
12    (CONST&PUSH 3)                      ; ($U 0 $V 1 $W 2 $X 3 $Y 4 $Z 5)
13    (CALL2 4)                           ; MEMQ
15    (CDR)
16    (CAR&PUSH)
17    (CALLS2&PUSH 154)                   ; EXPT
19    (CALL2&PUSH 5)                      ; QUOT
21    (GETVALUE&PUSH 2)                   ; POISTS
23    (CALLS2&PUSH 184)                   ; REM
25    (GETVALUE&PUSH 6)                   ; POISTSM
27    (CALLSR 1 54)                       ; -
30    (UNBIND 2)
32    (SKIP&RET 3)


Disassembly of function #:|(DECLARE-TOP (SPECIAL ANS))-34|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMACRO KEY (&REST L) ...)-35|
(CONST 0) = KEY
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE KEY>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; KEY
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; KEY
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE KEY>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; KEY
10    (SKIP&RET 1)


Disassembly of function KEY
(CONST 0) = L
(CONST 1) = CAR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
8 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (CONST&PUSH 1)                      ; CAR
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (UNBIND1)
9     (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO LLINK (&REST L) ...)-36|
(CONST 0) = LLINK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE LLINK>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; LLINK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; LLINK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE LLINK>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; LLINK
10    (SKIP&RET 1)


Disassembly of function LLINK
(CONST 0) = L
(CONST 1) = CAADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
8 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (CONST&PUSH 1)                      ; CAADR
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (UNBIND1)
9     (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO RLINK (&REST L) ...)-37|
(CONST 0) = RLINK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RLINK>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; RLINK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RLINK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RLINK>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; RLINK
10    (SKIP&RET 1)


Disassembly of function RLINK
(CONST 0) = L
(CONST 1) = CDADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
8 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (CONST&PUSH 1)                      ; CDADR
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (UNBIND1)
9     (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO BP (&REST L) ...)-38|
(CONST 0) = BP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE BP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; BP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; BP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE BP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; BP
10    (SKIP&RET 1)


Disassembly of function BP
(CONST 0) = L
(CONST 1) = CADDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
8 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (CONST&PUSH 1)                      ; CADDR
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (UNBIND1)
9     (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO REC (&REST L) ...)-39|
(CONST 0) = REC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE REC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; REC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; REC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE REC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; REC
10    (SKIP&RET 1)


Disassembly of function REC
(CONST 0) = L
(CONST 1) = CDDDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
8 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (CONST&PUSH 1)                      ; CDDDR
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (UNBIND1)
9     (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO ORDER< (&REST L) ...)-40|
(CONST 0) = ORDER<
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ORDER<>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; ORDER<
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ORDER<
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ORDER<>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; ORDER<
10    (SKIP&RET 1)


Disassembly of function ORDER<
(CONST 0) = L
(CONST 1) = <
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
8 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (CONST&PUSH 1)                      ; <
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (UNBIND1)
9     (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO ORDER= (&REST L) ...)-41|
(CONST 0) = ORDER=
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ORDER=>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; ORDER=
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ORDER=
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ORDER=>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; ORDER=
10    (SKIP&RET 1)


Disassembly of function ORDER=
(CONST 0) = L
(CONST 1) = =
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
8 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (CONST&PUSH 1)                      ; =
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (UNBIND1)
9     (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SETRLINK (&REST L) ...)-42|
(CONST 0) = SETRLINK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SETRLINK>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SETRLINK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SETRLINK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SETRLINK>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SETRLINK
10    (SKIP&RET 1)


Disassembly of function SETRLINK
(CONST 0) = L
(CONST 1) = RPLACD
(CONST 2) = CADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
writes special variable : (L)
20 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (NIL&PUSH)
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (SETVALUE 0)                        ; L
10    (CONST&PUSH 1)                      ; RPLACD
11    (CONST&PUSH 2)                      ; CADR
12    (GETVALUE 0)                        ; L
14    (CDR)
15    (CAR&PUSH)
16    (LIST&PUSH 2)
18    (GETVALUE 0)                        ; L
20    (CDR)
21    (CDR)
22    (CAR&PUSH)
23    (LIST 3)
25    (UNBIND1)
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SETLLINK (&REST L) ...)-43|
(CONST 0) = SETLLINK
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SETLLINK>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SETLLINK
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SETLLINK
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SETLLINK>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SETLLINK
10    (SKIP&RET 1)


Disassembly of function SETLLINK
(CONST 0) = L
(CONST 1) = RPLACA
(CONST 2) = CADR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
writes special variable : (L)
20 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (NIL&PUSH)
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (SETVALUE 0)                        ; L
10    (CONST&PUSH 1)                      ; RPLACA
11    (CONST&PUSH 2)                      ; CADR
12    (GETVALUE 0)                        ; L
14    (CDR)
15    (CAR&PUSH)
16    (LIST&PUSH 2)
18    (GETVALUE 0)                        ; L
20    (CDR)
21    (CDR)
22    (CAR&PUSH)
23    (LIST 3)
25    (UNBIND1)
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SETBP (&REST L) ...)-44|
(CONST 0) = SETBP
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SETBP>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SETBP
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SETBP
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SETBP>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SETBP
10    (SKIP&RET 1)


Disassembly of function SETBP
(CONST 0) = L
(CONST 1) = RPLACA
(CONST 2) = CDDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
writes special variable : (L)
20 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (NIL&PUSH)
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (SETVALUE 0)                        ; L
10    (CONST&PUSH 1)                      ; RPLACA
11    (CONST&PUSH 2)                      ; CDDR
12    (GETVALUE 0)                        ; L
14    (CDR)
15    (CAR&PUSH)
16    (LIST&PUSH 2)
18    (GETVALUE 0)                        ; L
20    (CDR)
21    (CDR)
22    (CAR&PUSH)
23    (LIST 3)
25    (UNBIND1)
26    (SKIP&RET 3)


Disassembly of function #:|(DEFMACRO SETREC (&REST L) ...)-45|
(CONST 0) = SETREC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SETREC>
(CONST 3) = SYSTEM::MAKE-MACRO
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
8 byte-code instructions:
0     (CONST&PUSH 0)                      ; SETREC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SETREC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SETREC>
5     (CALL1&PUSH 3)                      ; SYSTEM::MAKE-MACRO
7     (CALLS2 130)                        ; SYSTEM::%PUTD
9     (CONST 0)                           ; SETREC
10    (SKIP&RET 1)


Disassembly of function SETREC
(CONST 0) = L
(CONST 1) = RPLACD
(CONST 2) = CDDR
1 required argument
1 optional argument
No rest parameter
No keyword parameters
reads special variable: (L)
writes special variable : (L)
20 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (BIND 0)                            ; L
4     (NIL&PUSH)
5     (GETVALUE 0)                        ; L
7     (CONS)
8     (SETVALUE 0)                        ; L
10    (CONST&PUSH 1)                      ; RPLACD
11    (CONST&PUSH 2)                      ; CDDR
12    (GETVALUE 0)                        ; L
14    (CDR)
15    (CAR&PUSH)
16    (LIST&PUSH 2)
18    (GETVALUE 0)                        ; L
20    (CDR)
21    (CDR)
22    (CAR&PUSH)
23    (LIST 3)
25    (UNBIND1)
26    (SKIP&RET 3)


Disassembly of function #:|(DEFUN INSERT-IT (PP NEWREC) ...)-46|
(CONST 0) = INSERT-IT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INSERT-IT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; INSERT-IT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INSERT-IT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INSERT-IT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; INSERT-IT
8     (SKIP&RET 1)


Disassembly of function INSERT-IT
(CONST 0) = POISCO+
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
11 byte-code instructions:
0     (LOAD 2)
1     (CDR)
2     (CDR&PUSH)
3     (LOAD 3)
4     (CDR)
5     (CDR)
6     (CDR&PUSH)
7     (LOAD&PUSH 3)
8     (CALL2&PUSH 0)                      ; POISCO+
10    (CALLS1 170)                        ; RPLACD
12    (SKIP&RET 3)


Disassembly of function #:|(DEFUN AVLINSERT (K NEWREC HEAD) ...)-47|
(CONST 0) = AVLINSERT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE AVLINSERT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; AVLINSERT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; AVLINSERT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE AVLINSERT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; AVLINSERT
8     (SKIP&RET 1)


Disassembly of function AVLINSERT
(CONST 0) = K
(CONST 1) = SS
(CONST 2) = INSERT-IT
(CONST 3) = 0
(CONST 4) = -1
(CONST 5) = 1
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (SS K)
writes special variable : (SS)
472 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; K
3     (PUSH-NIL 2)
5     (NIL)
6     (BIND 1)                            ; SS
8     (PUSH-NIL 2)
10    (LOAD 11)
11    (STORE 5)
12    (CDR)
13    (CAR)
14    (CDR)
15    (STORE 1)
16    (SETVALUE 1)                        ; SS
18    L18
18    (GETVALUE&PUSH 0)                   ; K
20    (LOAD&CAR&PUSH 2)
22    (CALLSR&JMPIF 1 47 L85)             ; <
26    (LOAD&CAR&PUSH 1)
28    (GETVALUE&PUSH 0)                   ; K
30    (CALLSR&JMPIFNOT 1 47 L60)          ; <
34    (LOAD 1)
35    (CDR)
36    (CAR)
37    (CDR)
38    (STORE 6)
39    (JMPIFNOT L102)
41    (CONST 3)                           ; 0
42    L42
42    (PUSH)
43    (LOAD 7)
44    (CDR)
45    (CDR)
46    (CAR&PUSH)
47    (CALLSR&JMPIF 1 45 L56)             ; =
51    (LOAD 1)
52    (STORE 5)
53    (LOAD 6)
54    (SETVALUE 1)                        ; SS
56    L56
56    (LOAD 6)
57    (STORE 1)
58    (JMP L18)
60    L60
60    (LOAD&PUSH 1)
61    (LOAD&PUSH 13)
62    (CALL2 2)                           ; INSERT-IT
64    (JMP L626)
67    L67
67    (LOAD 1)
68    (CDR)
69    (CAR&PUSH)
70    (GETVALUE&PUSH 0)                   ; K
72    (NIL&PUSH)
73    (NIL)
74    (CONS&PUSH)
75    (CONST&PUSH 3)                      ; 0
76    (LOAD 16)
78    (CONS)
79    (CONS)
80    (CONS&PUSH)
81    (CALLS1 168)                        ; RPLACA
83    (JMP L118)
85    L85
85    (LOAD 1)
86    (CDR)
87    (CAR)
88    (CAR)
89    (STORE 6)
90    (JMPIFNOT L67)
92    (CONST 3)                           ; 0
93    (JMP L42)
95    L95
95    (GETVALUE 1)                        ; SS
97    (CDR)
98    (CAR)
99    (CAR)
100   (JMP L132)
102   L102
102   (LOAD 1)
103   (CDR)
104   (CAR&PUSH)
105   (GETVALUE&PUSH 0)                   ; K
107   (NIL&PUSH)
108   (NIL)
109   (CONS&PUSH)
110   (CONST&PUSH 3)                      ; 0
111   (LOAD 16)
113   (CONS)
114   (CONS)
115   (CONS&PUSH)
116   (CALLS1 170)                        ; RPLACD
118   L118
118   (GETVALUE&PUSH 0)                   ; K
120   (GETVALUE 1)                        ; SS
122   (CAR&PUSH)
123   (CALLSR&JMPIF 1 47 L95)             ; <
127   (GETVALUE 1)                        ; SS
129   (CDR)
130   (CAR)
131   (CDR)
132   L132
132   (STORE 1)
133   (STORE 0)
134   (JMP L456)
137   L137
137   (LOAD 1)
138   (CDR)
139   (CDR&PUSH)
140   (CONST&PUSH 4)                      ; -1
141   (CALLS1 168)                        ; RPLACA
143   (LOAD 1)
144   (CDR)
145   (CAR)
146   (CAR)
147   (STORE 1)
148   (JMP L456)
151   L151
151   (GETVALUE 1)                        ; SS
153   (CDR)
154   (CDR&PUSH)
155   (CONST 4)                           ; -1
156   (JMP L352)
159   L159
159   (GETVALUE 1)                        ; SS
161   (CDR)
162   (CDR&PUSH)
163   (CONST 3)                           ; 0
164   (JMP L623)
167   L167
167   (LOAD 0)
168   (STORE 1)
169   (GETVALUE 1)                        ; SS
171   (CDR)
172   (CAR&PUSH)
173   (LOAD 1)
174   (CDR)
175   (CAR)
176   (CDR&PUSH)
177   (CALLS1 168)                        ; RPLACA
179   (LOAD 0)
180   (CDR)
181   (CAR&PUSH)
182   (GETVALUE&PUSH 1)                   ; SS
184   (CALLS1 170)                        ; RPLACD
186   (GETVALUE 1)                        ; SS
188   (CDR)
189   (CDR&PUSH)
190   (CONST&PUSH 3)                      ; 0
191   (CALLS1 168)                        ; RPLACA
193   (LOAD 0)
194   (CDR)
195   (CDR&PUSH)
196   (CONST 3)                           ; 0
197   (JMP L607)
200   L200
200   (GETVALUE 1)                        ; SS
202   (CDR)
203   (CDR&PUSH)
204   (CONST&PUSH 5)                      ; 1
205   (CALLS1 168)                        ; RPLACA
207   (LOAD 0)
208   (CDR)
209   (CDR&PUSH)
210   (CONST 3)                           ; 0
211   (JMP L337)
214   L214
214   (GETVALUE 1)                        ; SS
216   (CDR)
217   (CDR&PUSH)
218   (CONST&PUSH 3)                      ; 0
219   (CALLS1 168)                        ; RPLACA
221   (LOAD 0)
222   (CDR)
223   (CDR&PUSH)
224   (CONST 3)                           ; 0
225   (JMP L337)
228   L228
228   (CONST&PUSH 3)                      ; 0
229   (GETVALUE 1)                        ; SS
231   (CDR)
232   (CDR)
233   (CAR&PUSH)
234   (CALLSR&JMPIF 1 45 L151)            ; =
239   (GETVALUE 1)                        ; SS
241   (CDR)
242   (CDR)
243   (CAR&PUSH)
244   (CONST&PUSH 5)                      ; 1
245   (CALLSR&JMPIF 1 45 L159)            ; =
250   (LOAD 0)
251   (CDR)
252   (CDR)
253   (CAR&PUSH)
254   (CONST&PUSH 4)                      ; -1
255   (CALLSR&JMPIF 1 45 L167)            ; =
260   (LOAD 0)
261   (CDR)
262   (CAR)
263   (CDR)
264   (STORE 1)
265   (LOAD 0)
266   (CDR)
267   (CAR&PUSH)
268   (LOAD 2)
269   (CDR)
270   (CAR)
271   (CAR&PUSH)
272   (CALLS1 170)                        ; RPLACD
274   (LOAD 1)
275   (CDR)
276   (CAR&PUSH)
277   (LOAD&PUSH 1)
278   (CALLS1 168)                        ; RPLACA
280   (GETVALUE 1)                        ; SS
282   (CDR)
283   (CAR&PUSH)
284   (LOAD 2)
285   (CDR)
286   (CAR)
287   (CDR&PUSH)
288   (CALLS1 168)                        ; RPLACA
290   (LOAD 1)
291   (CDR)
292   (CAR&PUSH)
293   (GETVALUE&PUSH 1)                   ; SS
295   (CALLS1 170)                        ; RPLACD
297   (LOAD 1)
298   (CDR)
299   (CDR)
300   (CAR&PUSH)
301   (CONST&PUSH 4)                      ; -1
302   (CALLSR&JMPIF 1 45 L200)            ; =
307   (LOAD 1)
308   (CDR)
309   (CDR)
310   (CAR&PUSH)
311   (CONST&PUSH 3)                      ; 0
312   (CALLSR&JMPIF 1 45 L214)            ; =
317   (LOAD 1)
318   (CDR)
319   (CDR)
320   (CAR&PUSH)
321   (CONST&PUSH 5)                      ; 1
322   (CALLSR&JMPIFNOT 1 45 L340)         ; =
326   (GETVALUE 1)                        ; SS
328   (CDR)
329   (CDR&PUSH)
330   (CONST&PUSH 3)                      ; 0
331   (CALLS1 168)                        ; RPLACA
333   (LOAD 0)
334   (CDR)
335   (CDR&PUSH)
336   (CONST 4)                           ; -1
337   L337
337   (PUSH)
338   (CALLS1 168)                        ; RPLACA
340   L340
340   (LOAD 1)
341   (CDR)
342   (CDR&PUSH)
343   (CONST 3)                           ; 0
344   (JMP L607)
347   L347
347   (GETVALUE 1)                        ; SS
349   (CDR)
350   (CDR&PUSH)
351   (CONST 5)                           ; 1
352   L352
352   (PUSH)
353   (CALLS1 168)                        ; RPLACA
355   (LOAD 11)
356   (CDR)
357   (CAR&PUSH)
358   (LOAD 12)
359   (CDR)
360   (CAR)
361   (CAR&PUSH)
362   (CALLS2 150)                        ; 1+
364   (JMP L623)
367   L367
367   (GETVALUE 1)                        ; SS
369   (CDR)
370   (CDR&PUSH)
371   (CONST 3)                           ; 0
372   (JMP L623)
375   L375
375   (LOAD 0)
376   (STORE 1)
377   (GETVALUE 1)                        ; SS
379   (CDR)
380   (CAR&PUSH)
381   (LOAD 1)
382   (CDR)
383   (CAR)
384   (CAR&PUSH)
385   (CALLS1 170)                        ; RPLACD
387   (LOAD 0)
388   (CDR)
389   (CAR&PUSH)
390   (GETVALUE&PUSH 1)                   ; SS
392   (CALLS1 168)                        ; RPLACA
394   (GETVALUE 1)                        ; SS
396   (CDR)
397   (CDR&PUSH)
398   (CONST&PUSH 3)                      ; 0
399   (CALLS1 168)                        ; RPLACA
401   (LOAD 0)
402   (CDR)
403   (CDR&PUSH)
404   (CONST 3)                           ; 0
405   (JMP L607)
408   L408
408   (GETVALUE 1)                        ; SS
410   (CDR)
411   (CDR&PUSH)
412   (CONST&PUSH 4)                      ; -1
413   (CALLS1 168)                        ; RPLACA
415   (LOAD 0)
416   (CDR)
417   (CDR&PUSH)
418   (CONST 3)                           ; 0
419   (JMP L600)
422   L422
422   (GETVALUE 1)                        ; SS
424   (CDR)
425   (CDR&PUSH)
426   (CONST&PUSH 3)                      ; 0
427   (CALLS1 168)                        ; RPLACA
429   (LOAD 0)
430   (CDR)
431   (CDR&PUSH)
432   (CONST 3)                           ; 0
433   (JMP L600)
436   L436
436   (LOAD 5)
437   (CDR)
438   (CAR&PUSH)
439   (LOAD&PUSH 2)
440   (CALLS1 170)                        ; RPLACD
442   (JMP L626)
445   L445
445   (LOAD 1)
446   (CDR)
447   (CDR&PUSH)
448   (CONST&PUSH 5)                      ; 1
449   (CALLS1 168)                        ; RPLACA
451   (LOAD 1)
452   (CDR)
453   (CAR)
454   (CDR)
455   (STORE 1)
456   L456
456   (GETVALUE&PUSH 0)                   ; K
458   (LOAD&CAR&PUSH 2)
460   (CALLSR&JMPIF 1 47 L137)            ; <
465   (LOAD&CAR&PUSH 1)
467   (GETVALUE&PUSH 0)                   ; K
469   (CALLSR&JMPIF 1 47 L445)            ; <
473   (GETVALUE&PUSH 0)                   ; K
475   (LOAD&CAR&PUSH 2)
477   (CALLSR&JMPIFNOT 1 45 L456)         ; =
481   (GETVALUE&PUSH 0)                   ; K
483   (GETVALUE 1)                        ; SS
485   (CAR&PUSH)
486   (CALLSR&JMPIF 1 47 L228)            ; <
491   (CONST&PUSH 3)                      ; 0
492   (GETVALUE 1)                        ; SS
494   (CDR)
495   (CDR)
496   (CAR&PUSH)
497   (CALLSR&JMPIF 1 45 L347)            ; =
502   (GETVALUE 1)                        ; SS
504   (CDR)
505   (CDR)
506   (CAR&PUSH)
507   (CONST&PUSH 4)                      ; -1
508   (CALLSR&JMPIF 1 45 L367)            ; =
513   (LOAD 0)
514   (CDR)
515   (CDR)
516   (CAR&PUSH)
517   (CONST&PUSH 5)                      ; 1
518   (CALLSR&JMPIF 1 45 L375)            ; =
523   (LOAD 0)
524   (CDR)
525   (CAR)
526   (CAR)
527   (STORE 1)
528   (LOAD 0)
529   (CDR)
530   (CAR&PUSH)
531   (LOAD 2)
532   (CDR)
533   (CAR)
534   (CDR&PUSH)
535   (CALLS1 168)                        ; RPLACA
537   (LOAD 1)
538   (CDR)
539   (CAR&PUSH)
540   (LOAD&PUSH 1)
541   (CALLS1 170)                        ; RPLACD
543   (GETVALUE 1)                        ; SS
545   (CDR)
546   (CAR&PUSH)
547   (LOAD 2)
548   (CDR)
549   (CAR)
550   (CAR&PUSH)
551   (CALLS1 170)                        ; RPLACD
553   (LOAD 1)
554   (CDR)
555   (CAR&PUSH)
556   (GETVALUE&PUSH 1)                   ; SS
558   (CALLS1 168)                        ; RPLACA
560   (LOAD 1)
561   (CDR)
562   (CDR)
563   (CAR&PUSH)
564   (CONST&PUSH 5)                      ; 1
565   (CALLSR&JMPIF 1 45 L408)            ; =
570   (LOAD 1)
571   (CDR)
572   (CDR)
573   (CAR&PUSH)
574   (CONST&PUSH 3)                      ; 0
575   (CALLSR&JMPIF 1 45 L422)            ; =
580   (LOAD 1)
581   (CDR)
582   (CDR)
583   (CAR&PUSH)
584   (CONST&PUSH 4)                      ; -1
585   (CALLSR&JMPIFNOT 1 45 L603)         ; =
589   (GETVALUE 1)                        ; SS
591   (CDR)
592   (CDR&PUSH)
593   (CONST&PUSH 3)                      ; 0
594   (CALLS1 168)                        ; RPLACA
596   (LOAD 0)
597   (CDR)
598   (CDR&PUSH)
599   (CONST 5)                           ; 1
600   L600
600   (PUSH)
601   (CALLS1 168)                        ; RPLACA
603   L603
603   (LOAD 1)
604   (CDR)
605   (CDR&PUSH)
606   (CONST 3)                           ; 0
607   L607
607   (PUSH)
608   (CALLS1 168)                        ; RPLACA
610   (GETVALUE&PUSH 1)                   ; SS
612   (LOAD 6)
613   (CDR)
614   (CAR)
615   (CDR)
616   (JMPIFEQ L436)
619   (LOAD 5)
620   (CDR)
621   (CAR&PUSH)
622   (LOAD 2)
623   L623
623   (PUSH)
624   (CALLS1 168)                        ; RPLACA
626   L626
626   (LOAD 11)
627   (SKIP 2)
629   (UNBIND1)
630   (SKIP 2)
632   (UNBIND1)
633   (SKIP&RET 4)


Disassembly of function #:|(DEFUN AVLINIT (KEY REC) ...)-48|
(CONST 0) = AVLINIT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE AVLINIT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; AVLINIT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; AVLINIT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE AVLINIT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; AVLINIT
8     (SKIP&RET 1)


Disassembly of function AVLINIT
(CONST 0) = TOP
(CONST 1) = 0
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
18 byte-code instructions:
0     (CONST&PUSH 0)                      ; TOP
1     (CONST&PUSH 1)                      ; 0
2     (LOAD&PUSH 4)
3     (NIL&PUSH)
4     (NIL)
5     (CONS&PUSH)
6     (CONST&PUSH 1)                      ; 0
7     (LOAD 6)
8     (CONS)
9     (CONS)
10    (CONS)
11    (CONS&PUSH)
12    (CONST&PUSH 1)                      ; 0
13    (NIL)
14    (CONS)
15    (CONS)
16    (CONS)
17    (SKIP&RET 3)


Disassembly of function #:|(DEFUN UNTREE (H) ...)-49|
(CONST 0) = UNTREE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNTREE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNTREE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNTREE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNTREE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNTREE
8     (SKIP&RET 1)


Disassembly of function UNTREE
(CONST 0) = H
(CONST 1) = ANS
(CONST 2) = UNTREE1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (ANS H)
12 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; H
3     (NIL)
4     (BIND 1)                            ; ANS
6     (GETVALUE 0)                        ; H
8     (CDR)
9     (CAR)
10    (CDR&PUSH)
11    (CALL1 2)                           ; UNTREE1
13    (GETVALUE 1)                        ; ANS
15    (UNBIND 2)
17    (SKIP&RET 2)


Disassembly of function #:|(DEFUN UNTREE1 (H) ...)-50|
(CONST 0) = UNTREE1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE UNTREE1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; UNTREE1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; UNTREE1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE UNTREE1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; UNTREE1
8     (SKIP&RET 1)


Disassembly of function UNTREE1
(CONST 0) = H
(CONST 1) = ANS
(CONST 2) = TCONS3
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (ANS H)
writes special variable : (ANS)
45 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; H
3     (GETVALUE 0)                        ; H
5     (JMPIFNOT L45)
7     (GETVALUE 0)                        ; H
9     (CDR)
10    (CAR)
11    (CDR)
12    (JMPIFNOT L49)
14    (GETVALUE 0)                        ; H
16    (CAR&PUSH)
17    (GETVALUE 0)                        ; H
19    (CDR)
20    (CDR)
21    (CDR&PUSH)
22    (GETVALUE 0)                        ; H
24    (CDR)
25    (CAR)
26    (CDR&PUSH)
27    (JSR L0)
29    L29
29    (PUSH)
30    (CALL 3 2)                          ; TCONS3
33    (SETVALUE 1)                        ; ANS
35    (GETVALUE 0)                        ; H
37    (CDR)
38    (CAR)
39    (CAR&PUSH)
40    (JSR L0)
42    L42
42    (UNBIND1)
43    (SKIP&RET 2)
45    L45
45    (GETVALUE 1)                        ; ANS
47    (JMP L42)
49    L49
49    (GETVALUE 0)                        ; H
51    (CAR&PUSH)
52    (GETVALUE 0)                        ; H
54    (CDR)
55    (CDR)
56    (CDR&PUSH)
57    (GETVALUE 1)                        ; ANS
59    (JMP L29)


Disassembly of function #:|(DEFUN TCONS3 (R S TT) ...)-51|
(CONST 0) = TCONS3
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TCONS3>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TCONS3
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TCONS3
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TCONS3>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TCONS3
8     (SKIP&RET 1)


Disassembly of function TCONS3
(CONST 0) = R
(CONST 1) = S
(CONST 2) = POISPZERO
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (R S)
17 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; R
3     (LOAD 5)
4     (BIND 1)                            ; S
6     (GETVALUE&PUSH 1)                   ; S
8     (CALL1&JMPIF 2 L22)                 ; POISPZERO
11    (GETVALUE&PUSH 0)                   ; R
13    (GETVALUE&PUSH 1)                   ; S
15    (LOAD 9)
16    (CONS)
17    (CONS)
18    L18
18    (UNBIND 2)
20    (SKIP&RET 4)
22    L22
22    (LOAD 7)
23    (JMP L18)


Disassembly of function #:|(DEFUN POISMERGES (A AE L) ...)-52|
(CONST 0) = POISMERGES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISMERGES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISMERGES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISMERGES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISMERGES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISMERGES
8     (SKIP&RET 1)


Disassembly of function POISMERGES
(CONST 0) = A
(CONST 1) = L
(CONST 2) = POISHIFT
(CONST 3) = POISNEGPRED
(CONST 4) = POISCOM1
(CONST 5) = POISCO*
(CONST 6) = POISCHANGESIGN
(CONST 7) = POISMERGE
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISCOM1 L A POISHIFT)
28 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; L
6     (GETVALUE&PUSH 2)                   ; POISHIFT
8     (LOAD&PUSH 9)
9     (CALLS2&JMPIF 2 L29)                ; EQUAL
12    (LOAD&PUSH 8)
13    (CALL1&JMPIF 3 L33)                 ; POISNEGPRED
16    (GETVALUE&PUSH 0)                   ; A
18    (LOAD 9)
19    L19
19    (PUSH)
20    (GETVALUE&PUSH 1)                   ; L
22    (CALL 3 7)                          ; POISMERGE
25    L25
25    (UNBIND 2)
27    (SKIP&RET 4)
29    L29
29    (GETVALUE 1)                        ; L
31    (JMP L25)
33    L33
33    (GETVALUE&PUSH 4)                   ; POISCOM1
35    (GETVALUE&PUSH 0)                   ; A
37    (CALL2&PUSH 5)                      ; POISCO*
39    (LOAD&PUSH 9)
40    (CALL1 6)                           ; POISCHANGESIGN
42    (JMP L19)


Disassembly of function #:|(DEFUN POISMERGEC (A AE L) ...)-53|
(CONST 0) = POISMERGEC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISMERGEC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISMERGEC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISMERGEC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISMERGEC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISMERGEC
8     (SKIP&RET 1)


Disassembly of function POISMERGEC
(CONST 0) = A
(CONST 1) = L
(CONST 2) = POISNEGPRED
(CONST 3) = POISCHANGESIGN
(CONST 4) = POISMERGE
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L A)
19 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; L
6     (LOAD&PUSH 8)
7     (CALL1&JMPIF 2 L23)                 ; POISNEGPRED
10    (GETVALUE&PUSH 0)                   ; A
12    (LOAD 9)
13    L13
13    (PUSH)
14    (GETVALUE&PUSH 1)                   ; L
16    (CALL 3 4)                          ; POISMERGE
19    (UNBIND 2)
21    (SKIP&RET 4)
23    L23
23    (GETVALUE&PUSH 0)                   ; A
25    (LOAD&PUSH 9)
26    (CALL1 3)                           ; POISCHANGESIGN
28    (JMP L13)


Disassembly of function #:|(DEFUN POISMERGE (A AE L) ...)-54|
(CONST 0) = POISMERGE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISMERGE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISMERGE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISMERGE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISMERGE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISMERGE
8     (SKIP&RET 1)


Disassembly of function POISMERGE
(CONST 0) = A
(CONST 1) = L
(CONST 2) = POISPZERO
(CONST 3) = MERGE11
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L A)
16 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; L
6     (GETVALUE&PUSH 0)                   ; A
8     (CALL1&JMPIF 2 L23)                 ; POISPZERO
11    (GETVALUE&PUSH 0)                   ; A
13    (LOAD&PUSH 9)
14    (GETVALUE&PUSH 1)                   ; L
16    (CALL 3 3)                          ; MERGE11
19    L19
19    (UNBIND 2)
21    (SKIP&RET 4)
23    L23
23    (NIL)
24    (JMP L19)


Disassembly of function #:|(DEFUN POISMERGE2 (R S) ...)-55|
(CONST 0) = POISMERGE2
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISMERGE2>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISMERGE2
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISMERGE2
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISMERGE2>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISMERGE2
8     (SKIP&RET 1)


Disassembly of function POISMERGE2
(CONST 0) = R
(CONST 1) = S
(CONST 2) = M
(CONST 3) = N
(CONST 4) = 0
(CONST 5) = POISCO+
(CONST 6) = POISPZERO
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (N M S R)
writes special variables : (R M S N)
110 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; R
3     (LOAD 4)
4     (BIND 1)                            ; S
6     (GETVALUE 0)                        ; R
8     (JMPIFNOT L29)
10    (GETVALUE 1)                        ; S
12    (JMPIFNOT L34)
14    (NIL)
15    (BIND 2)                            ; M
17    (NIL)
18    (BIND 3)                            ; N
20    (NIL&PUSH)
21    (CONST&PUSH 4)                      ; 0
22    (GETVALUE 0)                        ; R
24    (CONS)
25    (SETVALUE 3)                        ; N
27    (JMP L74)
29    L29
29    (GETVALUE 1)                        ; S
31    (JMP L168)
34    L34
34    (GETVALUE 0)                        ; R
36    (JMP L168)
39    L39
39    (GETVALUE 0)                        ; R
41    (CAR&PUSH)
42    (GETVALUE 1)                        ; S
44    (CAR&PUSH)
45    (CALLSR&JMPIFNOT 1 48 L122)         ; >
50    (GETVALUE&PUSH 2)                   ; M
52    (GETVALUE&PUSH 1)                   ; S
54    (CALLS1 170)                        ; RPLACD
56    (GETVALUE 1)                        ; S
58    (CDR)
59    (CDR)
60    (SETVALUE 1)                        ; S
62    (GETVALUE 2)                        ; M
64    (CDR)
65    (CDR&PUSH)
66    (GETVALUE&PUSH 0)                   ; R
68    (CALLS1 170)                        ; RPLACD
70    L70
70    (GETVALUE 2)                        ; M
72    (CDR)
73    (CDR)
74    L74
74    (SETVALUE 2)                        ; M
76    (GETVALUE 0)                        ; R
78    (JMPIFNOT L155)
81    L81
81    (GETVALUE 1)                        ; S
83    (JMPIFNOT L161)
86    (GETVALUE 0)                        ; R
88    (CAR&PUSH)
89    (GETVALUE 1)                        ; S
91    (CAR&PUSH)
92    (CALLS2&JMPIFNOT 2 L39)             ; EQUAL
95    (GETVALUE 0)                        ; R
97    (CDR)
98    (CAR&PUSH)
99    (GETVALUE 1)                        ; S
101   (CDR)
102   (CAR&PUSH)
103   (CALL2 5)                           ; POISCO+
105   (STORE 0)
106   (PUSH)
107   (CALL1&JMPIF 6 L130)                ; POISPZERO
110   (GETVALUE 0)                        ; R
112   (CDR&PUSH)
113   (LOAD&PUSH 1)
114   (CALLS1 168)                        ; RPLACA
116   (GETVALUE 1)                        ; S
118   (CDR)
119   (CDR)
120   (SETVALUE 1)                        ; S
122   L122
122   (GETVALUE 0)                        ; R
124   (CDR)
125   (CDR)
126   (SETVALUE 0)                        ; R
128   (JMP L70)
130   L130
130   (GETVALUE&PUSH 2)                   ; M
132   (GETVALUE 0)                        ; R
134   (CDR)
135   (CDR&PUSH)
136   (CALLS1 170)                        ; RPLACD
138   (GETVALUE 0)                        ; R
140   (CDR)
141   (CDR)
142   (SETVALUE 0)                        ; R
144   (GETVALUE 1)                        ; S
146   (CDR)
147   (CDR)
148   (SETVALUE 1)                        ; S
150   (GETVALUE 0)                        ; R
152   (JMPIF L81)
155   L155
155   (GETVALUE&PUSH 2)                   ; M
157   (GETVALUE&PUSH 1)                   ; S
159   (CALLS1 170)                        ; RPLACD
161   L161
161   (GETVALUE 3)                        ; N
163   (CDR)
164   (SKIP 1)
166   (UNBIND 2)
168   L168
168   (UNBIND 2)
170   (SKIP&RET 3)


Disassembly of function #:|(DEFUN MERGE11 (A AE L) ...)-56|
(CONST 0) = MERGE11
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE MERGE11>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; MERGE11
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; MERGE11
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE MERGE11>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; MERGE11
8     (SKIP&RET 1)


Disassembly of function MERGE11
(CONST 0) = A
(CONST 1) = L
(CONST 2) = POISMERGE2
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L A)
11 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; L
6     (LOAD&PUSH 8)
7     (GETVALUE&PUSH 0)                   ; A
9     (LIST&PUSH 2)
11    (GETVALUE&PUSH 1)                   ; L
13    (CALL2 2)                           ; POISMERGE2
15    (UNBIND 2)
17    (SKIP&RET 4)


Disassembly of function #:|(DEFUN POISMERGESX (A AE L) ...)-57|
(CONST 0) = POISMERGESX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISMERGESX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISMERGESX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISMERGESX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISMERGESX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISMERGESX
8     (SKIP&RET 1)


Disassembly of function POISMERGESX
(CONST 0) = A
(CONST 1) = L
(CONST 2) = POISHIFT
(CONST 3) = POISNEGPRED
(CONST 4) = POISCHANGESIGN
(CONST 5) = POISCOM1
(CONST 6) = POISCO*
(CONST 7) = AVLINSERT
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (POISCOM1 L A POISHIFT)
28 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; L
6     (GETVALUE&PUSH 2)                   ; POISHIFT
8     (LOAD&PUSH 9)
9     (CALLS2&JMPIF 2 L29)                ; EQUAL
12    (LOAD&PUSH 8)
13    (CALL1&JMPIF 3 L33)                 ; POISNEGPRED
16    (LOAD&PUSH 8)
17    (GETVALUE 0)                        ; A
19    L19
19    (PUSH)
20    (GETVALUE&PUSH 1)                   ; L
22    (CALL 3 7)                          ; AVLINSERT
25    L25
25    (UNBIND 2)
27    (SKIP&RET 4)
29    L29
29    (GETVALUE 1)                        ; L
31    (JMP L25)
33    L33
33    (LOAD&PUSH 8)
34    (CALL1&PUSH 4)                      ; POISCHANGESIGN
36    (GETVALUE&PUSH 5)                   ; POISCOM1
38    (GETVALUE&PUSH 0)                   ; A
40    (CALL2 6)                           ; POISCO*
42    (JMP L19)


Disassembly of function #:|(DEFUN POISMERGECX (A AE L) ...)-58|
(CONST 0) = POISMERGECX
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISMERGECX>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISMERGECX
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISMERGECX
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISMERGECX>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISMERGECX
8     (SKIP&RET 1)


Disassembly of function POISMERGECX
(CONST 0) = A
(CONST 1) = L
(CONST 2) = POISNEGPRED
(CONST 3) = POISCHANGESIGN
(CONST 4) = AVLINSERT
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (L A)
18 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; L
6     (LOAD&PUSH 8)
7     (CALL1&JMPIF 2 L23)                 ; POISNEGPRED
10    (LOAD 8)
11    L11
11    (PUSH)
12    (GETVALUE&PUSH 0)                   ; A
14    (GETVALUE&PUSH 1)                   ; L
16    (CALL 3 4)                          ; AVLINSERT
19    (UNBIND 2)
21    (SKIP&RET 4)
23    L23
23    (LOAD&PUSH 8)
24    (CALL1 3)                           ; POISCHANGESIGN
26    (JMP L11)


Disassembly of function #:|(DECLARE-TOP (SPECIAL TRIM POISCOM1 ...))-59|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN POISCTIMES1 (C H) ...)-60|
(CONST 0) = POISCTIMES1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISCTIMES1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISCTIMES1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISCTIMES1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISCTIMES1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISCTIMES1
8     (SKIP&RET 1)


Disassembly of function POISCTIMES1
(CONST 0) = C
(CONST 1) = H
(CONST 2) = TRIM
(CONST 3) = TRIMF
(CONST 4) = POISCO*
(CONST 5) = TCONS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (C TRIM H)
40 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; C
3     (LOAD 4)
4     (BIND 1)                            ; H
6     (GETVALUE 1)                        ; H
8     (JMPIFNOT L46)
10    (GETVALUE 2)                        ; TRIM
12    (JMPIFNOT L20)
14    (GETVALUE 1)                        ; H
16    (CAR&PUSH)
17    (CALL1&JMPIF 3 L49)                 ; TRIMF
20    L20
20    (GETVALUE 1)                        ; H
22    (CAR&PUSH)
23    (GETVALUE&PUSH 0)                   ; C
25    (GETVALUE 1)                        ; H
27    (CDR)
28    (CAR&PUSH)
29    (CALL2&PUSH 4)                      ; POISCO*
31    (GETVALUE&PUSH 0)                   ; C
33    (GETVALUE 1)                        ; H
35    (CDR)
36    (CDR&PUSH)
37    (JSR L0)
39    (CONS&PUSH)
40    (CALL2 5)                           ; TCONS
42    L42
42    (UNBIND 2)
44    (SKIP&RET 3)
46    L46
46    (NIL)
47    (JMP L42)
49    L49
49    (GETVALUE&PUSH 0)                   ; C
51    (GETVALUE 1)                        ; H
53    (CDR)
54    (CDR&PUSH)
55    (JSR L0)
57    (JMP L42)


Disassembly of function #:|(DEFUN TRIMF (M) ...)-61|
(CONST 0) = TRIMF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE TRIMF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; TRIMF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; TRIMF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE TRIMF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; TRIMF
8     (SKIP&RET 1)


Disassembly of function TRIMF
(CONST 0) = M
(CONST 1) = ($POISTRIM)
(CONST 2) = $U
(CONST 3) = POISXCOEF
(CONST 4) = $V
(CONST 5) = $W
(CONST 6) = $X
(CONST 7) = $Y
(CONST 8) = $Z
(CONST 9) = MEVAL
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (M)
25 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; M
3     (CONST&PUSH 1)                      ; ($POISTRIM)
4     (GETVALUE&PUSH 0)                   ; M
6     (CONST&PUSH 2)                      ; $U
7     (CALL2&PUSH 3)                      ; POISXCOEF
9     (GETVALUE&PUSH 0)                   ; M
11    (CONST&PUSH 4)                      ; $V
12    (CALL2&PUSH 3)                      ; POISXCOEF
14    (GETVALUE&PUSH 0)                   ; M
16    (CONST&PUSH 5)                      ; $W
17    (CALL2&PUSH 3)                      ; POISXCOEF
19    (GETVALUE&PUSH 0)                   ; M
21    (CONST&PUSH 6)                      ; $X
22    (CALL2&PUSH 3)                      ; POISXCOEF
24    (GETVALUE&PUSH 0)                   ; M
26    (CONST&PUSH 7)                      ; $Y
27    (CALL2&PUSH 3)                      ; POISXCOEF
29    (GETVALUE&PUSH 0)                   ; M
31    (CONST&PUSH 8)                      ; $Z
32    (CALL2&PUSH 3)                      ; POISXCOEF
34    (LIST&PUSH 7)
36    (CALL1 9)                           ; MEVAL
38    (UNBIND1)
39    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN $POISTIMES (A B) ...)-62|
(CONST 0) = $POISTIMES
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISTIMES>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISTIMES
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISTIMES
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISTIMES>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISTIMES
8     (SKIP&RET 1)


Disassembly of function $POISTIMES
(CONST 0) = A
(CONST 1) = B
(CONST 2) = TEMP
(CONST 3) = AA
(CONST 4) = TRIM
(CONST 5) = INTOPOIS
(CONST 6) = $POISTRIM
(CONST 7) = (EXPR SUBR)
(CONST 8) = GETL-LM-FCN-PROP
(CONST 9) = MEXPR
(CONST 10) = MGET
(CONST 11) = NONPERIOD
(CONST 12) = $POISCTIMES
(CONST 13) = POISHIFT
(CONST 14) = 0
(CONST 15) = INTOPOISCO
(CONST 16) = AVLINIT
(CONST 17) = HALVE
(CONST 18) = TRIMF
(CONST 19) = POISCO*
(CONST 20) = POISPZERO
(CONST 21) = POISMERGECX
(CONST 22) = POISCOM1
(CONST 23) = POISMERGESX
(CONST 24) = (MPOIS SIMP)
(CONST 25) = UNTREE
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (AA TRIM POISHIFT POISCOM1 TEMP B A)
writes special variables : (TEMP AA TRIM B A)
364 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; A
3     (LOAD 4)
4     (BIND 1)                            ; B
6     (PUSH-NIL 2)
8     (NIL)
9     (BIND 2)                            ; TEMP
11    (NIL&PUSH)
12    (NIL)
13    (BIND 3)                            ; AA
15    (NIL&PUSH)
16    (NIL)
17    (BIND 4)                            ; TRIM
19    (PUSH-NIL 4)
21    (GETVALUE&PUSH 0)                   ; A
23    (CALL1 5)                           ; INTOPOIS
25    (SETVALUE 0)                        ; A
27    (GETVALUE&PUSH 1)                   ; B
29    (CALL1 5)                           ; INTOPOIS
31    (SETVALUE 1)                        ; B
33    (CONST&PUSH 6)                      ; $POISTRIM
34    (CONST&PUSH 7)                      ; (EXPR SUBR)
35    (CALL2&JMPIF 8 L43)                 ; GETL-LM-FCN-PROP
38    (CONST&PUSH 6)                      ; $POISTRIM
39    (CONST&PUSH 9)                      ; MEXPR
40    (CALL2&JMPIFNOT 10 L46)             ; MGET
43    L43
43    (T)
44    (SETVALUE 4)                        ; TRIM
46    L46
46    (GETVALUE&PUSH 0)                   ; A
48    (CALL1&JMPIF 11 L83)                ; NONPERIOD
51    (GETVALUE&PUSH 1)                   ; B
53    (CALL1&JMPIFNOT 11 L198)            ; NONPERIOD
57    (GETVALUE 1)                        ; B
59    (CDR)
60    (CDR)
61    (CAR)
62    (CDR)
63    (CAR&PUSH)
64    (GETVALUE 0)                        ; A
66    L66
66    (PUSH)
67    (CALL2 12)                          ; $POISCTIMES
69    (SKIP 4)
71    (UNBIND1)
72    (SKIP 1)
74    (UNBIND1)
75    (SKIP 1)
77    (UNBIND1)
78    (SKIP 2)
80    (JMP L608)
83    L83
83    (GETVALUE 0)                        ; A
85    (CDR)
86    (CDR)
87    (CAR)
88    (CDR)
89    (CAR&PUSH)
90    (GETVALUE 1)                        ; B
92    (JMP L66)
94    L94
94    (LOAD&PUSH 5)
95    (CALL1 18)                          ; TRIMF
97    (STORE 3)
98    (LOAD&PUSH 4)
99    (CALL1 18)                          ; TRIMF
101   (STORE 2)
102   (JMP L275)
105   L105
105   (GETVALUE&PUSH 2)                   ; TEMP
107   (LOAD&PUSH 6)
108   (LOAD&PUSH 19)
109   (CALL 3 21)                         ; POISMERGECX
112   (LOAD&JMPIFNOT 2 L295)
116   (JMP L306)
119   L119
119   (LOAD&PUSH 5)
120   (CALL1 18)                          ; TRIMF
122   (STORE 3)
123   (LOAD&PUSH 4)
124   (CALL1 18)                          ; TRIMF
126   (STORE 2)
127   (JMP L357)
130   L130
130   (GETVALUE&PUSH 2)                   ; TEMP
132   (LOAD&PUSH 6)
133   (LOAD&PUSH 20)
134   (CALL 3 23)                         ; POISMERGESX
137   (LOAD&JMPIFNOT 2 L377)
141   (JMP L384)
144   L144
144   (LOAD&PUSH 5)
145   (CALL1 18)                          ; TRIMF
147   (STORE 3)
148   (LOAD&PUSH 4)
149   (CALL1 18)                          ; TRIMF
151   (STORE 2)
152   (JMP L463)
155   L155
155   (GETVALUE&PUSH 22)                  ; POISCOM1
157   (GETVALUE&PUSH 2)                   ; TEMP
159   (CALL2&PUSH 19)                     ; POISCO*
161   (LOAD&PUSH 6)
162   (LOAD&PUSH 20)
163   (CALL 3 23)                         ; POISMERGESX
166   (LOAD&JMPIFNOT 2 L483)
170   (JMP L490)
173   L173
173   (LOAD&PUSH 5)
174   (CALL1 18)                          ; TRIMF
176   (STORE 3)
177   (LOAD&PUSH 4)
178   (CALL1 18)                          ; TRIMF
180   (STORE 2)
181   (JMP L541)
184   L184
184   (GETVALUE&PUSH 2)                   ; TEMP
186   (LOAD&PUSH 6)
187   (LOAD&PUSH 19)
188   (CALL 3 21)                         ; POISMERGECX
191   (LOAD&JMPIFNOT 2 L561)
195   (JMP L568)
198   L198
198   (GETVALUE&PUSH 13)                  ; POISHIFT
200   (CONST&PUSH 14)                     ; 0
201   (CALL1 15)                          ; INTOPOISCO
203   (STORE 8)
205   (PUSH)
206   (CALL2 16)                          ; AVLINIT
208   (STORE 16)
210   (GETVALUE&PUSH 13)                  ; POISHIFT
212   (LOAD&PUSH 8)
213   (CALL2 16)                          ; AVLINIT
215   (STORE 15)
217   (GETVALUE 0)                        ; A
219   (CDR)
220   (CAR&PUSH)
221   (LOAD&JMPIFNOT 0 L402)
225   L225
225   (LOAD 0)
226   (CDR)
227   (CAR&PUSH)
228   (CALL1 17)                          ; HALVE
230   (SETVALUE 3)                        ; AA
232   (LOAD&CAR&STORE 0 12)
235   (GETVALUE 1)                        ; B
237   (CDR)
238   (CAR&PUSH)
239   (LOAD&JMPIFNOT 0 L314)
243   L243
243   (LOAD&PUSH 13)
244   (GETVALUE&PUSH 13)                  ; POISHIFT
246   (LOAD&CAR&PUSH 2)
248   (CALLSR&PUSH 0 54)                  ; -
251   (CALLSR&STORE 3 53 5)               ; +
255   (LOAD&PUSH 13)
256   (GETVALUE&PUSH 13)                  ; POISHIFT
258   (CALLSR&PUSH 0 54)                  ; -
261   (LOAD&CAR&PUSH 2)
263   (CALLSR&STORE 3 53 4)               ; +
267   (GETVALUE 4)                        ; TRIM
269   (JMPIF L94)
272   (NIL&STORE 3)
274   (STORE 2)
275   L275
275   (GETVALUE&PUSH 3)                   ; AA
277   (LOAD 1)
278   (CDR)
279   (CAR&PUSH)
280   (CALL2 19)                          ; POISCO*
282   (SETVALUE 2)                        ; TEMP
284   (PUSH)
285   (CALL1&JMPIF 20 L306)               ; POISPZERO
288   (LOAD&JMPIFNOT 3 L105)
292   (LOAD&JMPIF 2 L306)
295   L295
295   (GETVALUE&PUSH 22)                  ; POISCOM1
297   (GETVALUE&PUSH 2)                   ; TEMP
299   (CALL2&PUSH 19)                     ; POISCO*
301   (LOAD&PUSH 5)
302   (LOAD&PUSH 19)
303   (CALL 3 21)                         ; POISMERGECX
306   L306
306   (LOAD 0)
307   (CDR)
308   (CDR)
309   (STORE 0)
310   (LOAD&JMPIF 0 L243)
314   L314
314   (SKIP 1)
316   (GETVALUE 1)                        ; B
318   (CDR)
319   (CDR)
320   (CAR&PUSH)
321   (LOAD&JMPIFNOT 0 L392)
325   L325
325   (LOAD&PUSH 13)
326   (GETVALUE&PUSH 13)                  ; POISHIFT
328   (LOAD&CAR&PUSH 2)
330   (CALLSR&PUSH 0 54)                  ; -
333   (CALLSR&STORE 3 53 5)               ; +
337   (LOAD&PUSH 13)
338   (GETVALUE&PUSH 13)                  ; POISHIFT
340   (CALLSR&PUSH 0 54)                  ; -
343   (LOAD&CAR&PUSH 2)
345   (CALLSR&STORE 3 53 4)               ; +
349   (GETVALUE 4)                        ; TRIM
351   (JMPIF L119)
354   (NIL&STORE 3)
356   (STORE 2)
357   L357
357   (GETVALUE&PUSH 3)                   ; AA
359   (LOAD 1)
360   (CDR)
361   (CAR&PUSH)
362   (CALL2 19)                          ; POISCO*
364   (SETVALUE 2)                        ; TEMP
366   (PUSH)
367   (CALL1&JMPIF 20 L384)               ; POISPZERO
370   (LOAD&JMPIFNOT 3 L130)
374   (LOAD&JMPIF 2 L384)
377   L377
377   (GETVALUE&PUSH 2)                   ; TEMP
379   (LOAD&PUSH 5)
380   (LOAD&PUSH 20)
381   (CALL 3 23)                         ; POISMERGESX
384   L384
384   (LOAD 0)
385   (CDR)
386   (CDR)
387   (STORE 0)
388   (LOAD&JMPIF 0 L325)
392   L392
392   (SKIP 1)
394   (LOAD 0)
395   (CDR)
396   (CDR)
397   (STORE 0)
398   (LOAD&JMPIF 0 L225)
402   L402
402   (SKIP 1)
404   (GETVALUE 0)                        ; A
406   (CDR)
407   (CDR)
408   (CAR&PUSH)
409   (LOAD&JMPIFNOT 0 L586)
413   L413
413   (LOAD 0)
414   (CDR)
415   (CAR&PUSH)
416   (CALL1 17)                          ; HALVE
418   (SETVALUE 3)                        ; AA
420   (LOAD&CAR&STORE 0 12)
423   (GETVALUE 1)                        ; B
425   (CDR)
426   (CAR&PUSH)
427   (LOAD&JMPIFNOT 0 L498)
431   L431
431   (LOAD&PUSH 13)
432   (GETVALUE&PUSH 13)                  ; POISHIFT
434   (LOAD&CAR&PUSH 2)
436   (CALLSR&PUSH 0 54)                  ; -
439   (CALLSR&STORE 3 53 5)               ; +
443   (LOAD&PUSH 13)
444   (GETVALUE&PUSH 13)                  ; POISHIFT
446   (CALLSR&PUSH 0 54)                  ; -
449   (LOAD&CAR&PUSH 2)
451   (CALLSR&STORE 3 53 4)               ; +
455   (GETVALUE 4)                        ; TRIM
457   (JMPIF L144)
460   (NIL&STORE 3)
462   (STORE 2)
463   L463
463   (GETVALUE&PUSH 3)                   ; AA
465   (LOAD 1)
466   (CDR)
467   (CAR&PUSH)
468   (CALL2 19)                          ; POISCO*
470   (SETVALUE 2)                        ; TEMP
472   (PUSH)
473   (CALL1&JMPIF 20 L490)               ; POISPZERO
476   (LOAD&JMPIFNOT 3 L155)
480   (LOAD&JMPIF 2 L490)
483   L483
483   (GETVALUE&PUSH 2)                   ; TEMP
485   (LOAD&PUSH 5)
486   (LOAD&PUSH 20)
487   (CALL 3 23)                         ; POISMERGESX
490   L490
490   (LOAD 0)
491   (CDR)
492   (CDR)
493   (STORE 0)
494   (LOAD&JMPIF 0 L431)
498   L498
498   (SKIP 1)
500   (GETVALUE 1)                        ; B
502   (CDR)
503   (CDR)
504   (CAR&PUSH)
505   (LOAD&JMPIFNOT 0 L576)
509   L509
509   (LOAD&PUSH 13)
510   (GETVALUE&PUSH 13)                  ; POISHIFT
512   (LOAD&CAR&PUSH 2)
514   (CALLSR&PUSH 0 54)                  ; -
517   (CALLSR&STORE 3 53 5)               ; +
521   (LOAD&PUSH 13)
522   (GETVALUE&PUSH 13)                  ; POISHIFT
524   (CALLSR&PUSH 0 54)                  ; -
527   (LOAD&CAR&PUSH 2)
529   (CALLSR&STORE 3 53 4)               ; +
533   (GETVALUE 4)                        ; TRIM
535   (JMPIF L173)
538   (NIL&STORE 3)
540   (STORE 2)
541   L541
541   (GETVALUE&PUSH 3)                   ; AA
543   (LOAD 1)
544   (CDR)
545   (CAR&PUSH)
546   (CALL2 19)                          ; POISCO*
548   (SETVALUE 2)                        ; TEMP
550   (PUSH)
551   (CALL1&JMPIF 20 L568)               ; POISPZERO
554   (LOAD&JMPIFNOT 3 L184)
558   (LOAD&JMPIF 2 L568)
561   L561
561   (GETVALUE&PUSH 2)                   ; TEMP
563   (LOAD&PUSH 5)
564   (LOAD&PUSH 19)
565   (CALL 3 21)                         ; POISMERGECX
568   L568
568   (LOAD 0)
569   (CDR)
570   (CDR)
571   (STORE 0)
572   (LOAD&JMPIF 0 L509)
576   L576
576   (SKIP 1)
578   (LOAD 0)
579   (CDR)
580   (CDR)
581   (STORE 0)
582   (LOAD&JMPIF 0 L413)
586   L586
586   (SKIP 1)
588   (CONST&PUSH 24)                     ; (MPOIS SIMP)
589   (LOAD&PUSH 17)
590   (CALL1&PUSH 25)                     ; UNTREE
592   (LOAD&PUSH 17)
593   (CALL1&PUSH 25)                     ; UNTREE
595   (LIST 3)
597   (SKIP 4)
599   (UNBIND1)
600   (SKIP 1)
602   (UNBIND1)
603   (SKIP 1)
605   (UNBIND1)
606   (SKIP 2)
608   L608
608   (UNBIND 2)
610   (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN $POISEXPT (P N) ...)-63|
(CONST 0) = $POISEXPT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISEXPT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISEXPT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISEXPT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISEXPT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISEXPT
8     (SKIP&RET 1)


Disassembly of function $POISEXPT
(CONST 0) = P
(CONST 1) = N
(CONST 2) = U
(CONST 3) = H
(CONST 4) = 1
(CONST 5) = INTOPOIS
(CONST 6) = -1
(CONST 7) = LSH
(CONST 8) = $POISTIMES
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (H U P N)
writes special variables : (P N U H)
44 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (LOAD 4)
4     (BIND 1)                            ; N
6     (NIL)
7     (BIND 2)                            ; U
9     (NIL)
10    (BIND 3)                            ; H
12    (GETVALUE&PUSH 1)                   ; N
14    (CALLS2&JMPIF 148 L55)              ; ODDP
17    (CONST&PUSH 4)                      ; 1
18    (CALL1 5)                           ; INTOPOIS
20    (SETVALUE 3)                        ; H
22    (SETVALUE 2)                        ; U
24    L24
24    (GETVALUE&PUSH 1)                   ; N
26    (CONST&PUSH 6)                      ; -1
27    (CALL2 7)                           ; LSH
29    (SETVALUE 1)                        ; N
31    (PUSH)
32    (CALLS2&JMPIF 145 L71)              ; ZEROP
35    (GETVALUE&PUSH 0)                   ; P
37    (GETVALUE&PUSH 0)                   ; P
39    (CALL2 8)                           ; $POISTIMES
41    (SETVALUE 0)                        ; P
43    (GETVALUE&PUSH 1)                   ; N
45    (CALLS2&JMPIFNOT 148 L24)           ; ODDP
48    (GETVALUE&PUSH 2)                   ; U
50    (GETVALUE&PUSH 3)                   ; H
52    (CALLS2&JMPIFNOT 2 L61)             ; EQUAL
55    L55
55    (GETVALUE 0)                        ; P
57    (SETVALUE 2)                        ; U
59    (JMP L24)
61    L61
61    (GETVALUE&PUSH 2)                   ; U
63    (GETVALUE&PUSH 0)                   ; P
65    (CALL2 8)                           ; $POISTIMES
67    (SETVALUE 2)                        ; U
69    (JMP L24)
71    L71
71    (GETVALUE 2)                        ; U
73    (UNBIND 4)
75    (SKIP&RET 3)


Disassembly of function #:|(DEFMFUN $POISSQUARE (A) ...)-64|
(CONST 0) = $POISSQUARE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISSQUARE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISSQUARE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISSQUARE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISSQUARE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISSQUARE
8     (SKIP&RET 1)


Disassembly of function $POISSQUARE
(CONST 0) = A
(CONST 1) = 2
(CONST 2) = $POISEXPT
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (A)
7 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; A
3     (GETVALUE&PUSH 0)                   ; A
5     (CONST&PUSH 1)                      ; 2
6     (CALL2 2)                           ; $POISEXPT
8     (UNBIND1)
9     (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN $POISINT (P M) ...)-65|
(CONST 0) = $POISINT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISINT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISINT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISINT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISINT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISINT
8     (SKIP&RET 1)


Disassembly of function $POISINT
(CONST 0) = P
(CONST 1) = M
(CONST 2) = B*
(CONST 3) = INTOPOIS
(CONST 4) = ($U $V $W $X $Y $Z)
(CONST 5) = MEMQ
(CONST 6) = COSINT*
(CONST 7) = SININT*
(CONST 8) = POISINT4
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (M P)
writes special variable : (P)
43 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; P
3     (LOAD 4)
4     (BIND 1)                            ; M
6     (NIL)
7     (BIND 2)                            ; B*
9     (GETVALUE&PUSH 0)                   ; P
11    (CALL1 3)                           ; INTOPOIS
13    (SETVALUE 0)                        ; P
15    (GETVALUE&PUSH 1)                   ; M
17    (CONST&PUSH 4)                      ; ($U $V $W $X $Y $Z)
18    (CALL2&JMPIF 5 L44)                 ; MEMQ
21    (GETVALUE 0)                        ; P
23    (CAR&PUSH)
24    (GETVALUE 0)                        ; P
26    (CDR)
27    (CAR&PUSH)
28    (CALL1&PUSH 8)                      ; POISINT4
30    (GETVALUE 0)                        ; P
32    (CDR)
33    (CDR)
34    (CAR&PUSH)
35    (CALL1 8)                           ; POISINT4
37    L37
37    (PUSH)
38    (LIST 3)
40    (UNBIND 3)
42    (SKIP&RET 3)
44    L44
44    (GETVALUE 0)                        ; P
46    (CAR&PUSH)
47    (GETVALUE 0)                        ; P
49    (CDR)
50    (CDR)
51    (CAR&PUSH)
52    (GETVALUE&PUSH 1)                   ; M
54    (CALL2&PUSH 6)                      ; COSINT*
56    (GETVALUE 0)                        ; P
58    (CDR)
59    (CAR&PUSH)
60    (GETVALUE&PUSH 1)                   ; M
62    (CALL2 7)                           ; SININT*
64    (JMP L37)


Disassembly of function #:|(DEFUN POISINT4 (Y) ...)-66|
(CONST 0) = POISINT4
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISINT4>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISINT4
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISINT4
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISINT4>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISINT4
8     (SKIP&RET 1)


Disassembly of function POISINT4
(CONST 0) = Y
(CONST 1) = M
(CONST 2) = POISCOINTEG
(CONST 3) = TCONS3
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (M Y)
23 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; Y
3     (GETVALUE 0)                        ; Y
5     (JMPIFNOT L30)
7     (GETVALUE 0)                        ; Y
9     (CAR&PUSH)
10    (GETVALUE 0)                        ; Y
12    (CDR)
13    (CAR&PUSH)
14    (GETVALUE&PUSH 1)                   ; M
16    (CALL2&PUSH 2)                      ; POISCOINTEG
18    (GETVALUE 0)                        ; Y
20    (CDR)
21    (CDR&PUSH)
22    (JSR&PUSH L0)
24    (CALL 3 3)                          ; TCONS3
27    L27
27    (UNBIND1)
28    (SKIP&RET 2)
30    L30
30    (NIL)
31    (JMP L27)


Disassembly of function #:|(DEFUN COSINT* (H M) ...)-67|
(CONST 0) = COSINT*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE COSINT*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; COSINT*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; COSINT*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE COSINT*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; COSINT*
8     (SKIP&RET 1)


Disassembly of function COSINT*
(CONST 0) = H
(CONST 1) = M
(CONST 2) = POISXCOEF
(CONST 3) = B*
(CONST 4) = 0
(CONST 5) = (MEXPT)
(CONST 6) = -1
(CONST 7) = INTOPOISCO
(CONST 8) = POISCO*
(CONST 9) = TCONS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B* M H)
writes special variable : (B*)
45 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; H
3     (LOAD 4)
4     (BIND 1)                            ; M
6     (GETVALUE 0)                        ; H
8     (JMPIFNOT L55)
10    (GETVALUE 0)                        ; H
12    (CAR&PUSH)
13    (GETVALUE&PUSH 1)                   ; M
15    (CALL2 2)                           ; POISXCOEF
17    (SETVALUE 3)                        ; B*
19    (PUSH)
20    (JMPIFEQTO 4 L58)                   ; 0
23    (GETVALUE 0)                        ; H
25    (CAR&PUSH)
26    (CONST&PUSH 5)                      ; (MEXPT)
27    (GETVALUE&PUSH 3)                   ; B*
29    (CONST&PUSH 6)                      ; -1
30    (LIST&PUSH 3)
32    (CALL1&PUSH 7)                      ; INTOPOISCO
34    (GETVALUE 0)                        ; H
36    (CDR)
37    (CAR&PUSH)
38    (CALL2&PUSH 8)                      ; POISCO*
40    (GETVALUE 0)                        ; H
42    (CDR)
43    (CDR&PUSH)
44    (GETVALUE&PUSH 1)                   ; M
46    (JSR L0)
48    (CONS&PUSH)
49    (CALL2 9)                           ; TCONS
51    L51
51    (UNBIND 2)
53    (SKIP&RET 3)
55    L55
55    (NIL)
56    (JMP L51)
58    L58
58    (GETVALUE 0)                        ; H
60    (CDR)
61    (CDR&PUSH)
62    (GETVALUE&PUSH 1)                   ; M
64    (JSR L0)
67    (JMP L51)


Disassembly of function #:|(DEFUN SININT* (H M) ...)-68|
(CONST 0) = SININT*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SININT*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SININT*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SININT*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SININT*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SININT*
8     (SKIP&RET 1)


Disassembly of function SININT*
(CONST 0) = H
(CONST 1) = M
(CONST 2) = POISXCOEF
(CONST 3) = B*
(CONST 4) = 0
(CONST 5) = (MEXPT)
(CONST 6) = -1
(CONST 7) = INTOPOISCO
(CONST 8) = POISCO*
(CONST 9) = TCONS
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (M H)
writes special variable : (B*)
49 byte-code instructions:
0     L0
0     (LOAD 2)
1     (BIND 0)                            ; H
3     (LOAD 4)
4     (BIND 1)                            ; M
6     (GETVALUE 0)                        ; H
8     (JMPIFNOT L63)
10    (GETVALUE 0)                        ; H
12    (CAR&PUSH)
13    (GETVALUE&PUSH 1)                   ; M
15    (CALL2 2)                           ; POISXCOEF
17    (SETVALUE 3)                        ; B*
19    (PUSH)
20    (JMPIFEQTO 4 L66)                   ; 0
23    (GETVALUE 0)                        ; H
25    (CAR&PUSH)
26    (CONST&PUSH 5)                      ; (MEXPT)
27    (GETVALUE 0)                        ; H
29    (CAR&PUSH)
30    (GETVALUE&PUSH 1)                   ; M
32    (CALL2&PUSH 2)                      ; POISXCOEF
34    (CALLSR&PUSH 0 54)                  ; -
37    (CONST&PUSH 6)                      ; -1
38    (LIST&PUSH 3)
40    (CALL1&PUSH 7)                      ; INTOPOISCO
42    (GETVALUE 0)                        ; H
44    (CDR)
45    (CAR&PUSH)
46    (CALL2&PUSH 8)                      ; POISCO*
48    (GETVALUE 0)                        ; H
50    (CDR)
51    (CDR&PUSH)
52    (GETVALUE&PUSH 1)                   ; M
54    (JSR L0)
56    (CONS&PUSH)
57    (CALL2 9)                           ; TCONS
59    L59
59    (UNBIND 2)
61    (SKIP&RET 3)
63    L63
63    (NIL)
64    (JMP L59)
66    L66
66    (GETVALUE 0)                        ; H
68    (CDR)
69    (CDR&PUSH)
70    (GETVALUE&PUSH 1)                   ; M
72    (JSR L0)
75    (JMP L59)


Disassembly of function #:|(DEFUN POISSUBSTA (A B* C) ...)-69|
(CONST 0) = POISSUBSTA
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISSUBSTA>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISSUBSTA
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISSUBSTA
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISSUBSTA>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISSUBSTA
8     (SKIP&RET 1)


Disassembly of function POISSUBSTA
(CONST 0) = A
(CONST 1) = B*
(CONST 2) = C
(CONST 3) = SS
(CONST 4) = CC
(CONST 5) = (MPLUS)
(CONST 6) = (MTIMES)
(CONST 7) = -1
(CONST 8) = POISENCODE
(CONST 9) = POISHIFT
(CONST 10) = H*
(CONST 11) = POISSUBST1S
(CONST 12) = POISSUBST1C
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CC SS C POISHIFT B* A)
writes special variable : (H*)
37 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 5)
4     (BIND 1)                            ; B*
6     (LOAD 7)
7     (BIND 2)                            ; C
9     (NIL)
10    (BIND 3)                            ; SS
12    (NIL)
13    (BIND 4)                            ; CC
15    (CONST&PUSH 5)                      ; (MPLUS)
16    (GETVALUE&PUSH 0)                   ; A
18    (CONST&PUSH 6)                      ; (MTIMES)
19    (CONST&PUSH 7)                      ; -1
20    (GETVALUE&PUSH 1)                   ; B*
22    (LIST&PUSH 3)
24    (LIST&PUSH 3)
26    (CALL1&PUSH 8)                      ; POISENCODE
28    (GETVALUE&PUSH 9)                   ; POISHIFT
30    (CALLSR 1 54)                       ; -
33    (SETVALUE 10)                       ; H*
35    (GETVALUE 2)                        ; C
37    (CDR)
38    (CAR&PUSH)
39    (CALL1 11)                          ; POISSUBST1S
41    (GETVALUE 2)                        ; C
43    (CDR)
44    (CDR)
45    (CAR&PUSH)
46    (CALL1 12)                          ; POISSUBST1C
48    (GETVALUE 2)                        ; C
50    (CAR&PUSH)
51    (GETVALUE&PUSH 3)                   ; SS
53    (GETVALUE&PUSH 4)                   ; CC
55    (LIST 3)
57    (UNBIND 5)
59    (SKIP&RET 4)


Disassembly of function #:|(DEFUN POISSUBST1S (C) ...)-70|
(CONST 0) = POISSUBST1S
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISSUBST1S>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISSUBST1S
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISSUBST1S
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISSUBST1S>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISSUBST1S
8     (SKIP&RET 1)


Disassembly of function POISSUBST1S
(CONST 0) = C
(CONST 1) = ARGSUBST
(CONST 2) = SS
(CONST 3) = POISMERGES
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (SS C)
writes special variable : (SS)
24 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; C
3     (GETVALUE 0)                        ; C
5     (JMPIFNOT L32)
7     (GETVALUE 0)                        ; C
9     (CDR)
10    (CAR&PUSH)
11    (GETVALUE 0)                        ; C
13    (CAR&PUSH)
14    (CALL1&PUSH 1)                      ; ARGSUBST
16    (GETVALUE&PUSH 2)                   ; SS
18    (CALL 3 3)                          ; POISMERGES
21    (SETVALUE 2)                        ; SS
23    (GETVALUE 0)                        ; C
25    (CDR)
26    (CDR&PUSH)
27    (JSR L0)
29    L29
29    (UNBIND1)
30    (SKIP&RET 2)
32    L32
32    (NIL)
33    (JMP L29)


Disassembly of function #:|(DEFUN POISSUBST1C (C) ...)-71|
(CONST 0) = POISSUBST1C
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISSUBST1C>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISSUBST1C
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISSUBST1C
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISSUBST1C>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISSUBST1C
8     (SKIP&RET 1)


Disassembly of function POISSUBST1C
(CONST 0) = C
(CONST 1) = ARGSUBST
(CONST 2) = CC
(CONST 3) = POISMERGEC
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (CC C)
writes special variable : (CC)
24 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; C
3     (GETVALUE 0)                        ; C
5     (JMPIFNOT L32)
7     (GETVALUE 0)                        ; C
9     (CDR)
10    (CAR&PUSH)
11    (GETVALUE 0)                        ; C
13    (CAR&PUSH)
14    (CALL1&PUSH 1)                      ; ARGSUBST
16    (GETVALUE&PUSH 2)                   ; CC
18    (CALL 3 3)                          ; POISMERGEC
21    (SETVALUE 2)                        ; CC
23    (GETVALUE 0)                        ; C
25    (CDR)
26    (CDR&PUSH)
27    (JSR L0)
29    L29
29    (UNBIND1)
30    (SKIP&RET 2)
32    L32
32    (NIL)
33    (JMP L29)


Disassembly of function #:|(DEFUN ARGSUBST (C) ...)-72|
(CONST 0) = ARGSUBST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE ARGSUBST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; ARGSUBST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; ARGSUBST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE ARGSUBST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; ARGSUBST
8     (SKIP&RET 1)


Disassembly of function ARGSUBST
(CONST 0) = C
(CONST 1) = H*
(CONST 2) = B*
(CONST 3) = POISXCOEF
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B* H* C)
11 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; C
3     (GETVALUE&PUSH 0)                   ; C
5     (GETVALUE&PUSH 1)                   ; H*
7     (GETVALUE&PUSH 0)                   ; C
9     (GETVALUE&PUSH 2)                   ; B*
11    (CALL2&PUSH 3)                      ; POISXCOEF
13    (CALLSR&PUSH 2 55)                  ; *
16    (CALLSR 2 53)                       ; +
19    (UNBIND1)
20    (SKIP&RET 2)


Disassembly of function #:|(DEFMFUN $POISSUBST N ...)-73|
(CONST 0) = $POISSUBST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE $POISSUBST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; $POISSUBST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; $POISSUBST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE $POISSUBST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; $POISSUBST
8     (SKIP&RET 1)


Disassembly of function $POISSUBST
(CONST 0) = N
(CONST 1) = 3
(CONST 2) = 5
(CONST 3) = "WRONG NUMBER OF ARGS TO POISSUBST"
(CONST 4) = MERROR
(CONST 5) = 1
(CONST 6) = NARG1
(CONST 7) = 2
(CONST 8) = INTOPOIS
(CONST 9) = 4
(CONST 10) = FANCYPOISSUBST
(CONST 11) = C
(CONST 12) = A*
(CONST 13) = B*
(CONST 14) = ($U $V $W $X $Y $Z)
(CONST 15) = MEMQ
(CONST 16) = POISSUBSTA
(CONST 17) = POISSUBSTCO1
0 required arguments
0 optional arguments
Rest parameter
No keyword parameters
reads special variables: (A* C B* N)
76 byte-code instructions:
0     (LOAD&PUSH 1)
1     (CALLS2 71)                         ; LENGTH
3     (BIND 0)                            ; N
5     (GETVALUE&PUSH 0)                   ; N
7     (JMPIFEQTO 1 L15)                   ; 3
10    (GETVALUE&PUSH 0)                   ; N
12    (JMPIFNOTEQTO 2 L73)                ; 5
15    L15
15    (GETVALUE&PUSH 0)                   ; N
17    (JMPIFEQTO 2 L78)                   ; 5
20    (CONST&PUSH 5)                      ; 1
21    (LOAD&PUSH 5)
22    (CALL2&PUSH 6)                      ; NARG1
24    (CONST&PUSH 7)                      ; 2
25    (LOAD&PUSH 6)
26    (CALL2&PUSH 6)                      ; NARG1
28    (CONST&PUSH 1)                      ; 3
29    (LOAD&PUSH 7)
30    (CALL2&PUSH 6)                      ; NARG1
32    (CALL1 8)                           ; INTOPOIS
34    (BIND 11)                           ; C
36    (LOAD 4)
37    (BIND 12)                           ; A*
39    (LOAD 6)
40    (BIND 13)                           ; B*
42    (GETVALUE&PUSH 13)                  ; B*
44    (CONST&PUSH 14)                     ; ($U $V $W $X $Y $Z)
45    (CALL2&JMPIF 15 L107)               ; MEMQ
48    (GETVALUE 11)                       ; C
50    (CAR&PUSH)
51    (GETVALUE 11)                       ; C
53    (CDR)
54    (CAR&PUSH)
55    (CALL1&PUSH 17)                     ; POISSUBSTCO1
57    (GETVALUE 11)                       ; C
59    (CDR)
60    (CDR)
61    (CAR&PUSH)
62    (CALL1&PUSH 17)                     ; POISSUBSTCO1
64    (LIST 3)
66    L66
66    (UNBIND 3)
68    (SKIP 2)
70    L70
70    (UNBIND1)
71    (SKIP&RET 2)
73    L73
73    (CONST&PUSH 3)                      ; "WRONG NUMBER OF ARGS TO POISSUBST"
74    (CALL1 4)                           ; MERROR
76    (JMP L70)
78    L78
78    (CONST&PUSH 5)                      ; 1
79    (LOAD&PUSH 5)
80    (CALL2&PUSH 6)                      ; NARG1
82    (CONST&PUSH 7)                      ; 2
83    (LOAD&PUSH 6)
84    (CALL2&PUSH 6)                      ; NARG1
86    (CONST&PUSH 1)                      ; 3
87    (LOAD&PUSH 7)
88    (CALL2&PUSH 6)                      ; NARG1
90    (CALL1&PUSH 8)                      ; INTOPOIS
92    (CONST&PUSH 9)                      ; 4
93    (LOAD&PUSH 8)
94    (CALL2&PUSH 6)                      ; NARG1
96    (CALL1&PUSH 8)                      ; INTOPOIS
98    (CONST&PUSH 2)                      ; 5
99    (LOAD&PUSH 9)
100   (CALL2&PUSH 6)                      ; NARG1
102   (CALL 5 10)                         ; FANCYPOISSUBST
105   (JMP L70)
107   L107
107   (GETVALUE&PUSH 12)                  ; A*
109   (GETVALUE&PUSH 13)                  ; B*
111   (GETVALUE&PUSH 11)                  ; C
113   (CALL 3 16)                         ; POISSUBSTA
116   (JMP L66)


Disassembly of function #:|(DECLARE-TOP (UNSPECIAL $U $V ...))-74|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN POISSUBSTCO1 (C) ...)-75|
(CONST 0) = POISSUBSTCO1
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISSUBSTCO1>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISSUBSTCO1
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISSUBSTCO1
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISSUBSTCO1>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISSUBSTCO1
8     (SKIP&RET 1)


Disassembly of function POISSUBSTCO1
(CONST 0) = C
(CONST 1) = A*
(CONST 2) = B*
(CONST 3) = POISSUBSTCO
(CONST 4) = TCONS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (B* A* C)
25 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; C
3     (GETVALUE 0)                        ; C
5     (JMPIFNOT L33)
7     (GETVALUE 0)                        ; C
9     (CAR&PUSH)
10    (GETVALUE&PUSH 1)                   ; A*
12    (GETVALUE&PUSH 2)                   ; B*
14    (GETVALUE 0)                        ; C
16    (CDR)
17    (CAR&PUSH)
18    (CALL&PUSH 3 3)                     ; POISSUBSTCO
21    (GETVALUE 0)                        ; C
23    (CDR)
24    (CDR&PUSH)
25    (JSR L0)
27    (CONS&PUSH)
28    (CALL2 4)                           ; TCONS
30    L30
30    (UNBIND1)
31    (SKIP&RET 2)
33    L33
33    (NIL)
34    (JMP L30)


Disassembly of function #:|(DECLARE-TOP (SPECIAL DC DS ...))-76|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN FANCYPOISSUBST (A B* C ...) ...)-77|
(CONST 0) = FANCYPOISSUBST
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FANCYPOISSUBST>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FANCYPOISSUBST
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FANCYPOISSUBST
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FANCYPOISSUBST>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FANCYPOISSUBST
8     (SKIP&RET 1)


Disassembly of function FANCYPOISSUBST
(CONST 0) = A
(CONST 1) = B*
(CONST 2) = C
(CONST 3) = D
(CONST 4) = N
(CONST 5) = H*
(CONST 6) = DC
(CONST 7) = DS
(CONST 8) = *ANS
(CONST 9) = (MPOIS SIMP)
(CONST 10) = INTOPOIS
(CONST 11) = 1
(CONST 12) = 0
(CONST 13) = $POISSUBST
(CONST 14) = FANCYPOIS1S
(CONST 15) = (MPLUS)
(CONST 16) = (MTIMES)
(CONST 17) = -1
(CONST 18) = POISENCODE
(CONST 19) = POISHIFT
(CONST 20) = FANCYPAS
(CONST 21) = FANCYPAC
5 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (*ANS C POISHIFT B* A N D)
writes special variables : (H* DS DC D *ANS)
68 byte-code instructions:
0     (LOAD 5)
1     (BIND 0)                            ; A
3     (LOAD 7)
4     (BIND 1)                            ; B*
6     (LOAD 9)
7     (BIND 2)                            ; C
9     (LOAD 11)
10    (BIND 3)                            ; D
12    (LOAD 13)
13    (BIND 4)                            ; N
15    (NIL)
16    (BIND 5)                            ; H*
18    (NIL)
19    (BIND 6)                            ; DC
21    (NIL)
22    (BIND 7)                            ; DS
24    (NIL)
25    (BIND 8)                            ; *ANS
27    (CONST&PUSH 9)                      ; (MPOIS SIMP)
28    (PUSH-NIL 2)
30    (LIST 3)
32    (SETVALUE 8)                        ; *ANS
34    (GETVALUE&PUSH 3)                   ; D
36    (CALL1 10)                          ; INTOPOIS
38    (SETVALUE 3)                        ; D
40    (CONST&PUSH 11)                     ; 1
41    (CALL1 10)                          ; INTOPOIS
43    (SETVALUE 6)                        ; DC
45    (CONST&PUSH 12)                     ; 0
46    (CALL1 10)                          ; INTOPOIS
48    (SETVALUE 7)                        ; DS
50    (GETVALUE&PUSH 4)                   ; N
52    (JMPIFEQTO 12 L103)                 ; 0
55    (GETVALUE&PUSH 3)                   ; D
57    (CONST&PUSH 11)                     ; 1
58    (CONST&PUSH 11)                     ; 1
59    (GETVALUE&PUSH 4)                   ; N
61    (CALL 4 14)                         ; FANCYPOIS1S
64    (CONST&PUSH 15)                     ; (MPLUS)
65    (GETVALUE&PUSH 0)                   ; A
67    (CONST&PUSH 16)                     ; (MTIMES)
68    (CONST&PUSH 17)                     ; -1
69    (GETVALUE&PUSH 1)                   ; B*
71    (LIST&PUSH 3)
73    (LIST&PUSH 3)
75    (CALL1&PUSH 18)                     ; POISENCODE
77    (GETVALUE&PUSH 19)                  ; POISHIFT
79    (CALLSR 1 54)                       ; -
82    (SETVALUE 5)                        ; H*
84    (GETVALUE 2)                        ; C
86    (CDR)
87    (CAR&PUSH)
88    (CALL1 20)                          ; FANCYPAS
90    (GETVALUE 2)                        ; C
92    (CDR)
93    (CDR)
94    (CAR&PUSH)
95    (CALL1 21)                          ; FANCYPAC
97    (GETVALUE 8)                        ; *ANS
99    L99
99    (UNBIND 9)
101   (SKIP&RET 6)
103   L103
103   (GETVALUE&PUSH 0)                   ; A
105   (GETVALUE&PUSH 1)                   ; B*
107   (GETVALUE&PUSH 2)                   ; C
109   (CALL 3 13)                         ; $POISSUBST
112   (JMP L99)


Disassembly of function #:|(DEFUN FANCYPOIS1S (D DP N ...) ...)-78|
(CONST 0) = FANCYPOIS1S
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FANCYPOIS1S>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FANCYPOIS1S
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FANCYPOIS1S
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FANCYPOIS1S>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FANCYPOIS1S
8     (SKIP&RET 1)


Disassembly of function FANCYPOIS1S
(CONST 0) = D
(CONST 1) = N
(CONST 2) = DS
(CONST 3) = (RAT)
(CONST 4) = -1
(CONST 5) = 2
(CONST 6) = QUOT
(CONST 7) = FACTORIAL
(CONST 8) = $POISTIMES
(CONST 9) = $POISCTIMES
(CONST 10) = $POISPLUS
(CONST 11) = FANCYPOIS1C
4 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (D DS N)
writes special variable : (DS)
38 byte-code instructions:
0     (LOAD 4)
1     (BIND 0)                            ; D
3     (LOAD 5)
4     (BIND 1)                            ; N
6     (GETVALUE&PUSH 1)                   ; N
8     (LOAD&PUSH 8)
9     (CALLSR&JMPIF 1 48 L61)             ; >
13    (GETVALUE&PUSH 2)                   ; DS
15    (CONST&PUSH 3)                      ; (RAT)
16    (CONST&PUSH 4)                      ; -1
17    (GETVALUE&PUSH 1)                   ; N
19    (CALLS2&PUSH 151)                   ; 1-
21    (CONST&PUSH 5)                      ; 2
22    (CALL2&PUSH 6)                      ; QUOT
24    (CALLS2&PUSH 154)                   ; EXPT
26    (GETVALUE&PUSH 1)                   ; N
28    (CALL1&PUSH 7)                      ; FACTORIAL
30    (LIST&PUSH 3)
32    (LOAD&PUSH 11)
33    (GETVALUE&PUSH 0)                   ; D
35    (CALL2 8)                           ; $POISTIMES
37    (STORE 11)
39    (PUSH)
40    (CALL2&PUSH 9)                      ; $POISCTIMES
42    (CALL2 10)                          ; $POISPLUS
44    (SETVALUE 2)                        ; DS
46    (GETVALUE&PUSH 0)                   ; D
48    (LOAD&PUSH 10)
49    (GETVALUE&PUSH 1)                   ; N
51    (CALLS2&PUSH 150)                   ; 1+
53    (LOAD&PUSH 10)
54    (CALL 4 11)                         ; FANCYPOIS1C
57    L57
57    (UNBIND 2)
59    (SKIP&RET 5)
61    L61
61    (NIL)
62    (JMP L57)


Disassembly of function #:|(DEFUN FANCYPOIS1C (D DP N ...) ...)-79|
(CONST 0) = FANCYPOIS1C
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FANCYPOIS1C>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FANCYPOIS1C
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FANCYPOIS1C
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FANCYPOIS1C>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FANCYPOIS1C
8     (SKIP&RET 1)


Disassembly of function FANCYPOIS1C
(CONST 0) = D
(CONST 1) = N
(CONST 2) = DC
(CONST 3) = (RAT)
(CONST 4) = -1
(CONST 5) = 2
(CONST 6) = QUOT
(CONST 7) = FACTORIAL
(CONST 8) = $POISTIMES
(CONST 9) = $POISCTIMES
(CONST 10) = $POISPLUS
(CONST 11) = FANCYPOIS1S
4 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (D DC N)
writes special variable : (DC)
37 byte-code instructions:
0     (LOAD 4)
1     (BIND 0)                            ; D
3     (LOAD 5)
4     (BIND 1)                            ; N
6     (GETVALUE&PUSH 1)                   ; N
8     (LOAD&PUSH 8)
9     (CALLSR&JMPIF 1 48 L59)             ; >
13    (GETVALUE&PUSH 2)                   ; DC
15    (CONST&PUSH 3)                      ; (RAT)
16    (CONST&PUSH 4)                      ; -1
17    (GETVALUE&PUSH 1)                   ; N
19    (CONST&PUSH 5)                      ; 2
20    (CALL2&PUSH 6)                      ; QUOT
22    (CALLS2&PUSH 154)                   ; EXPT
24    (GETVALUE&PUSH 1)                   ; N
26    (CALL1&PUSH 7)                      ; FACTORIAL
28    (LIST&PUSH 3)
30    (LOAD&PUSH 11)
31    (GETVALUE&PUSH 0)                   ; D
33    (CALL2 8)                           ; $POISTIMES
35    (STORE 11)
37    (PUSH)
38    (CALL2&PUSH 9)                      ; $POISCTIMES
40    (CALL2 10)                          ; $POISPLUS
42    (SETVALUE 2)                        ; DC
44    (GETVALUE&PUSH 0)                   ; D
46    (LOAD&PUSH 10)
47    (GETVALUE&PUSH 1)                   ; N
49    (CALLS2&PUSH 150)                   ; 1+
51    (LOAD&PUSH 10)
52    (CALL 4 11)                         ; FANCYPOIS1S
55    L55
55    (UNBIND 2)
57    (SKIP&RET 5)
59    L59
59    (NIL)
60    (JMP L55)


Disassembly of function #:|(DECLARE-TOP (SPECIAL *ARGC *COEF))-80|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFUN FANCYPAC (C) ...)-81|
(CONST 0) = FANCYPAC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FANCYPAC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FANCYPAC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FANCYPAC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FANCYPAC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FANCYPAC
8     (SKIP&RET 1)


Disassembly of function FANCYPAC
(CONST 0) = C
(CONST 1) = B*
(CONST 2) = POISXCOEF
(CONST 3) = *COEF
(CONST 4) = 0
(CONST 5) = *ANS
(CONST 6) = (MPOIS SIMP)
(CONST 7) = $POISPLUS
(CONST 8) = INTOPOISCO
(CONST 9) = POISCO*
(CONST 10) = POISPZERO
(CONST 11) = ARGSUBST
(CONST 12) = *ARGC
(CONST 13) = (MPOIS SIMP)
(CONST 14) = POISMERGEC
(CONST 15) = DC
(CONST 16) = $POISTIMES
(CONST 17) = (MPOIS SIMP)
(CONST 18) = POISCOM1
(CONST 19) = POISMERGES
(CONST 20) = DS
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (DS POISCOM1 DC *ARGC *ANS *COEF B* C)
writes special variables : (*ANS *ARGC *COEF)
75 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; C
3     (GETVALUE 0)                        ; C
5     (JMPIFNOT L101)
8     (GETVALUE 0)                        ; C
10    (CAR&PUSH)
11    (GETVALUE&PUSH 1)                   ; B*
13    (CALL2 2)                           ; POISXCOEF
15    (SETVALUE 3)                        ; *COEF
17    (PUSH)
18    (JMPIFEQTO 4 L104)                  ; 0
22    (GETVALUE 0)                        ; C
24    (CDR)
25    (CAR&PUSH)
26    (GETVALUE&PUSH 3)                   ; *COEF
28    (CALL1&PUSH 8)                      ; INTOPOISCO
30    (CALL2 9)                           ; POISCO*
32    (SETVALUE 3)                        ; *COEF
34    (PUSH)
35    (CALL1&JMPIF 10 L90)                ; POISPZERO
38    (GETVALUE 0)                        ; C
40    (CAR&PUSH)
41    (CALL1 11)                          ; ARGSUBST
43    (SETVALUE 12)                       ; *ARGC
45    (GETVALUE&PUSH 5)                   ; *ANS
47    (CONST&PUSH 13)                     ; (MPOIS SIMP)
48    (NIL&PUSH)
49    (GETVALUE&PUSH 3)                   ; *COEF
51    (GETVALUE&PUSH 12)                  ; *ARGC
53    (NIL&PUSH)
54    (CALL&PUSH 3 14)                    ; POISMERGEC
57    (LIST&PUSH 3)
59    (GETVALUE&PUSH 15)                  ; DC
61    (CALL2&PUSH 16)                     ; $POISTIMES
63    (CONST&PUSH 17)                     ; (MPOIS SIMP)
64    (GETVALUE&PUSH 18)                  ; POISCOM1
66    (GETVALUE&PUSH 3)                   ; *COEF
68    (CALL2&PUSH 9)                      ; POISCO*
70    (GETVALUE&PUSH 12)                  ; *ARGC
72    (NIL&PUSH)
73    (CALL&PUSH 3 19)                    ; POISMERGES
76    (NIL&PUSH)
77    (LIST&PUSH 3)
79    (GETVALUE&PUSH 20)                  ; DS
81    (CALL2&PUSH 16)                     ; $POISTIMES
83    (CALL2 7)                           ; $POISPLUS
85    L85
85    (PUSH)
86    (CALL2 7)                           ; $POISPLUS
88    (SETVALUE 5)                        ; *ANS
90    L90
90    (GETVALUE 0)                        ; C
92    (CDR)
93    (CDR&PUSH)
94    (JSR L0)
97    (NIL)
98    L98
98    (UNBIND1)
99    (SKIP&RET 2)
101   L101
101   (NIL)
102   (JMP L98)
104   L104
104   (GETVALUE&PUSH 5)                   ; *ANS
106   (CONST&PUSH 6)                      ; (MPOIS SIMP)
107   (NIL&PUSH)
108   (GETVALUE 0)                        ; C
110   (CAR&PUSH)
111   (GETVALUE 0)                        ; C
113   (CDR)
114   (CAR&PUSH)
115   (LIST&PUSH 2)
117   (LIST 3)
119   (JMP L85)


Disassembly of function #:|(DEFUN FANCYPAS (C) ...)-82|
(CONST 0) = FANCYPAS
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE FANCYPAS>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; FANCYPAS
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; FANCYPAS
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE FANCYPAS>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; FANCYPAS
8     (SKIP&RET 1)


Disassembly of function FANCYPAS
(CONST 0) = C
(CONST 1) = B*
(CONST 2) = POISXCOEF
(CONST 3) = *COEF
(CONST 4) = 0
(CONST 5) = *ANS
(CONST 6) = (MPOIS SIMP)
(CONST 7) = $POISPLUS
(CONST 8) = INTOPOISCO
(CONST 9) = POISCO*
(CONST 10) = POISPZERO
(CONST 11) = ARGSUBST
(CONST 12) = *ARGC
(CONST 13) = (MPOIS SIMP)
(CONST 14) = POISMERGEC
(CONST 15) = DS
(CONST 16) = $POISTIMES
(CONST 17) = (MPOIS SIMP)
(CONST 18) = POISMERGES
(CONST 19) = DC
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (DC DS *ARGC *ANS *COEF B* C)
writes special variables : (*ANS *ARGC *COEF)
73 byte-code instructions:
0     L0
0     (LOAD 1)
1     (BIND 0)                            ; C
3     (GETVALUE 0)                        ; C
5     (JMPIFNOT L97)
8     (GETVALUE 0)                        ; C
10    (CAR&PUSH)
11    (GETVALUE&PUSH 1)                   ; B*
13    (CALL2 2)                           ; POISXCOEF
15    (SETVALUE 3)                        ; *COEF
17    (PUSH)
18    (JMPIFEQTO 4 L100)                  ; 0
22    (GETVALUE 0)                        ; C
24    (CDR)
25    (CAR&PUSH)
26    (GETVALUE&PUSH 3)                   ; *COEF
28    (CALL1&PUSH 8)                      ; INTOPOISCO
30    (CALL2 9)                           ; POISCO*
32    (SETVALUE 3)                        ; *COEF
34    (PUSH)
35    (CALL1&JMPIF 10 L86)                ; POISPZERO
38    (GETVALUE 0)                        ; C
40    (CAR&PUSH)
41    (CALL1 11)                          ; ARGSUBST
43    (SETVALUE 12)                       ; *ARGC
45    (GETVALUE&PUSH 5)                   ; *ANS
47    (CONST&PUSH 13)                     ; (MPOIS SIMP)
48    (NIL&PUSH)
49    (GETVALUE&PUSH 3)                   ; *COEF
51    (GETVALUE&PUSH 12)                  ; *ARGC
53    (NIL&PUSH)
54    (CALL&PUSH 3 14)                    ; POISMERGEC
57    (LIST&PUSH 3)
59    (GETVALUE&PUSH 15)                  ; DS
61    (CALL2&PUSH 16)                     ; $POISTIMES
63    (CONST&PUSH 17)                     ; (MPOIS SIMP)
64    (GETVALUE&PUSH 3)                   ; *COEF
66    (GETVALUE&PUSH 12)                  ; *ARGC
68    (NIL&PUSH)
69    (CALL&PUSH 3 18)                    ; POISMERGES
72    (NIL&PUSH)
73    (LIST&PUSH 3)
75    (GETVALUE&PUSH 19)                  ; DC
77    (CALL2&PUSH 16)                     ; $POISTIMES
79    (CALL2 7)                           ; $POISPLUS
81    L81
81    (PUSH)
82    (CALL2 7)                           ; $POISPLUS
84    (SETVALUE 5)                        ; *ANS
86    L86
86    (GETVALUE 0)                        ; C
88    (CDR)
89    (CDR&PUSH)
90    (JSR L0)
93    (NIL)
94    L94
94    (UNBIND1)
95    (SKIP&RET 2)
97    L97
97    (NIL)
98    (JMP L94)
100   L100
100   (GETVALUE&PUSH 5)                   ; *ANS
102   (CONST&PUSH 6)                      ; (MPOIS SIMP)
103   (GETVALUE 0)                        ; C
105   (CAR&PUSH)
106   (GETVALUE 0)                        ; C
108   (CDR)
109   (CAR&PUSH)
110   (LIST&PUSH 2)
112   (NIL&PUSH)
113   (LIST 3)
115   (JMP L81)

WARNING in (DEFUN POISCDECODE (X) ...)-83 in lines 722..730 :
Function POISCDECODE
 was already defined in file #P"/cygdrive/e/temp/maxima/src/ratpoi.lisp" in lines 20..24

Disassembly of function #:|(DEFUN POISCDECODE (X) ...)-83|
(CONST 0) = POISCDECODE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISCDECODE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISCDECODE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISCDECODE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISCDECODE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISCDECODE
8     (SKIP&RET 1)


Disassembly of function POISCDECODE
(CONST 0) = X
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
5 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE 0)                        ; X
5     (UNBIND1)
6     (SKIP&RET 2)

WARNING in (DEFUN INTOPOISCO (X) ...)-84 in lines 733..735 :
Function INTOPOISCO
 was already defined in file #P"/cygdrive/e/temp/maxima/src/ratpoi.lisp" in lines 26..34

Disassembly of function #:|(DEFUN INTOPOISCO (X) ...)-84|
(CONST 0) = INTOPOISCO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE INTOPOISCO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; INTOPOISCO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; INTOPOISCO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE INTOPOISCO>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; INTOPOISCO
8     (SKIP&RET 1)


Disassembly of function INTOPOISCO
(CONST 0) = X
(CONST 1) = SIMPLIFYA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
7 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (NIL&PUSH)
6     (CALL2 1)                           ; SIMPLIFYA
8     (UNBIND1)
9     (SKIP&RET 2)

WARNING in (DEFUN POISCO+ (R S) ...)-85 in lines 738..740 :
Function POISCO+
 was already defined in file #P"/cygdrive/e/temp/maxima/src/ratpoi.lisp" in line 41

Disassembly of function #:|(DEFUN POISCO+ (R S) ...)-85|
(CONST 0) = POISCO+
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISCO+>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISCO+
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISCO+
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISCO+>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISCO+
8     (SKIP&RET 1)


Disassembly of function POISCO+
(CONST 0) = R
(CONST 1) = S
(CONST 2) = (MPLUS)
(CONST 3) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (S R)
12 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; R
3     (LOAD 4)
4     (BIND 1)                            ; S
6     (CONST&PUSH 2)                      ; (MPLUS)
7     (GETVALUE&PUSH 0)                   ; R
9     (GETVALUE&PUSH 1)                   ; S
11    (LIST&PUSH 3)
13    (NIL&PUSH)
14    (CALL2 3)                           ; SIMPLIFYA
16    (UNBIND 2)
18    (SKIP&RET 3)

WARNING in (DEFUN POISCO* (R S) ...)-86 in lines 743..745 :
Function POISCO*
 was already defined in file #P"/cygdrive/e/temp/maxima/src/ratpoi.lisp" in lines 36..39

Disassembly of function #:|(DEFUN POISCO* (R S) ...)-86|
(CONST 0) = POISCO*
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISCO*>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISCO*
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISCO*
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISCO*>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISCO*
8     (SKIP&RET 1)


Disassembly of function POISCO*
(CONST 0) = R
(CONST 1) = S
(CONST 2) = (MTIMES)
(CONST 3) = SIMPLIFYA
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (S R)
12 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; R
3     (LOAD 4)
4     (BIND 1)                            ; S
6     (CONST&PUSH 2)                      ; (MTIMES)
7     (GETVALUE&PUSH 0)                   ; R
9     (GETVALUE&PUSH 1)                   ; S
11    (LIST&PUSH 3)
13    (NIL&PUSH)
14    (CALL2 3)                           ; SIMPLIFYA
16    (UNBIND 2)
18    (SKIP&RET 3)

WARNING in (DEFUN HALVE (R) ...)-87 in lines 748..750 :
Function HALVE
 was already defined in file #P"/cygdrive/e/temp/maxima/src/ratpoi.lisp" in lines 43..45

Disassembly of function #:|(DEFUN HALVE (R) ...)-87|
(CONST 0) = HALVE
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE HALVE>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; HALVE
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; HALVE
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE HALVE>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; HALVE
8     (SKIP&RET 1)


Disassembly of function HALVE
(CONST 0) = R
(CONST 1) = (MTIMES)
(CONST 2) = ((RAT) 1 2)
(CONST 3) = SIMPLIFYA
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (R)
10 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; R
3     (CONST&PUSH 1)                      ; (MTIMES)
4     (CONST&PUSH 2)                      ; ((RAT) 1 2)
5     (GETVALUE&PUSH 0)                   ; R
7     (LIST&PUSH 3)
9     (NIL&PUSH)
10    (CALL2 3)                           ; SIMPLIFYA
12    (UNBIND1)
13    (SKIP&RET 2)

WARNING in (DEFUN POISSUBSTCO (A B C) ...)-88 in lines 753..755 :
Function POISSUBSTCO
 was already defined in file #P"/cygdrive/e/temp/maxima/src/ratpoi.lisp" in lines 47..55

Disassembly of function #:|(DEFUN POISSUBSTCO (A B C) ...)-88|
(CONST 0) = POISSUBSTCO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISSUBSTCO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISSUBSTCO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISSUBSTCO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISSUBSTCO>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISSUBSTCO
8     (SKIP&RET 1)


Disassembly of function POISSUBSTCO
(CONST 0) = A
(CONST 1) = B
(CONST 2) = C
(CONST 3) = MAXIMA-SUBSTITUTE
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (C B A)
12 byte-code instructions:
0     (LOAD 3)
1     (BIND 0)                            ; A
3     (LOAD 5)
4     (BIND 1)                            ; B
6     (LOAD 7)
7     (BIND 2)                            ; C
9     (GETVALUE&PUSH 0)                   ; A
11    (GETVALUE&PUSH 1)                   ; B
13    (GETVALUE&PUSH 2)                   ; C
15    (CALL 3 3)                          ; MAXIMA-SUBSTITUTE
18    (UNBIND 3)
20    (SKIP&RET 4)


Disassembly of function #:|(DEFUN POISCODIF (H VAR) ...)-89|
(CONST 0) = POISCODIF
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISCODIF>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISCODIF
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISCODIF
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISCODIF>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISCODIF
8     (SKIP&RET 1)


Disassembly of function POISCODIF
(CONST 0) = H
(CONST 1) = VAR
(CONST 2) = $DIFF
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VAR H)
9 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; H
3     (LOAD 4)
4     (BIND 1)                            ; VAR
6     (GETVALUE&PUSH 0)                   ; H
8     (GETVALUE&PUSH 1)                   ; VAR
10    (CALL2 2)                           ; $DIFF
12    (UNBIND 2)
14    (SKIP&RET 3)

WARNING in (DEFUN POISCOINTEG (H VAR) ...)-90 in lines 761..762 :
Function POISCOINTEG
 was already defined in file #P"/cygdrive/e/temp/maxima/src/ratpoi.lisp" in lines 60..62

Disassembly of function #:|(DEFUN POISCOINTEG (H VAR) ...)-90|
(CONST 0) = POISCOINTEG
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISCOINTEG>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISCOINTEG
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISCOINTEG
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISCOINTEG>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISCOINTEG
8     (SKIP&RET 1)


Disassembly of function POISCOINTEG
(CONST 0) = H
(CONST 1) = VAR
(CONST 2) = POISCDECODE
(CONST 3) = $INTEGRATE
(CONST 4) = INTOPOISCO
2 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (VAR H)
11 byte-code instructions:
0     (LOAD 2)
1     (BIND 0)                            ; H
3     (LOAD 4)
4     (BIND 1)                            ; VAR
6     (GETVALUE&PUSH 0)                   ; H
8     (CALL1&PUSH 2)                      ; POISCDECODE
10    (GETVALUE&PUSH 1)                   ; VAR
12    (CALL2&PUSH 3)                      ; $INTEGRATE
14    (CALL1 4)                           ; INTOPOISCO
16    (UNBIND 2)
18    (SKIP&RET 3)

WARNING in (DEFUN POISPZERO (X) ...)-91 in lines 764..766 :
Function POISPZERO
 was already defined in file #P"/cygdrive/e/temp/maxima/src/ratpoi.lisp" in line 57

Disassembly of function #:|(DEFUN POISPZERO (X) ...)-91|
(CONST 0) = POISPZERO
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE POISPZERO>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; POISPZERO
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; POISPZERO
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE POISPZERO>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; POISPZERO
8     (SKIP&RET 1)


Disassembly of function POISPZERO
(CONST 0) = X
(CONST 1) = ZEROP1
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (X)
6 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (GETVALUE&PUSH 0)                   ; X
5     (CALL1 1)                           ; ZEROP1
7     (UNBIND1)
8     (SKIP&RET 2)


Disassembly of function #:|(SETQ POISCO1 1 ...)-92|
(CONST 0) = 1
(CONST 1) = POISCO1
(CONST 2) = -1
(CONST 3) = POISCOM1
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variables : (POISCOM1 POISCO1)
5 byte-code instructions:
0     (CONST 0)                           ; 1
1     (SETVALUE 1)                        ; POISCO1
3     (CONST 2)                           ; -1
4     (SETVALUE 3)                        ; POISCOM1
6     (SKIP&RET 1)


Wrote file binary-clisp/pois3.fas
Wrote file /cygdrive/e/temp/maxima/src/pois3.lis