Listing of compilation of file /cygdrive/e/temp/maxima/src/psolve.lisp
on 2002-12-17 13:35:31 by CLISP, version 2.30 (released 2002-09-15) (built 3249143430) (memory 3249145291)
Compiling file /cygdrive/e/temp/maxima/src/psolve.lisp ...

Disassembly of function #:|(IN-PACKAGE "MAXIMA")-1|
(CONST 0) = "MAXIMA"
(CONST 1) = *PACKAGE*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
writes special variable : (*PACKAGE*)
4 byte-code instructions:
0     (CONST&PUSH 0)                      ; "MAXIMA"
1     (CALLS1 228)                        ; SYSTEM::%FIND-PACKAGE
3     (SETVALUE 1)                        ; *PACKAGE*
5     (SKIP&RET 1)


Disassembly of function #:|(MACSYMA-MODULE PSOLVE)-2|
(CONST 0) = PSOLVE
(CONST 1) = MACSYMA-MODULE
(CONST 2) = (RUNTIME)
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
5 byte-code instructions:
0     (CONST&PUSH 0)                      ; PSOLVE
1     (CONST&PUSH 1)                      ; MACSYMA-MODULE
2     (CONST&PUSH 2)                      ; (RUNTIME)
3     (CALLS2 136)                        ; SYSTEM::%PUT
5     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (GENPREFIX PSO) (SPECIAL MULT *ROOTS ...))-3|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE SCUBIC))-4|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR FLAG4 NIL)-5-1|
(CONST 0) = FLAG4
(CONST 1) = *VARIABLE-INITIAL-VALUES*
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*VARIABLE-INITIAL-VALUES*)
13 byte-code instructions:
0     (CONST&PUSH 0)                      ; FLAG4
1     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
3     (PUSH-UNBOUND 1)
5     (CALLS1&JMPIF 99 L17)               ; GETHASH
8     (GETVALUE&PUSH 1)                   ; *VARIABLE-INITIAL-VALUES*
10    (CONST&PUSH 0)                      ; FLAG4
11    (LOAD&PUSH 1)
12    (NIL&PUSH)
13    (CALLS1 100)                        ; SYSTEM::PUTHASH
15    (SKIP 1)
17    L17
17    (VALUES0)
18    (SKIP&RET 1)


Disassembly of function #:|(DEFMVAR FLAG4 NIL)-5-2|
(CONST 0) = (SPECIAL FLAG4)
(CONST 1) = FLAG4
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
10 byte-code instructions:
0     (CONST&PUSH 0)                      ; (SPECIAL FLAG4)
1     (CALLS1 90)                         ; PROCLAIM
3     (CONST&PUSH 1)                      ; FLAG4
4     (CALLS1&JMPIF 79 L11)               ; BOUNDP
7     (CONST&PUSH 1)                      ; FLAG4
8     (NIL&PUSH)
9     (CALLS1 82)                         ; SYSTEM::SET-SYMBOL-VALUE
11    L11
11    (CONST 1)                           ; FLAG4
12    (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN SOLVECUBIC (X) ...)-6|
(CONST 0) = SOLVECUBIC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SOLVECUBIC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SOLVECUBIC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SOLVECUBIC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SOLVECUBIC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SOLVECUBIC
8     (SKIP&RET 1)


Disassembly of function SOLVECUBIC
(CONST 0) = X
(CONST 1) = (MTIMES)
(CONST 2) = ((RAT) -1 3)
(CONST 3) = 2
(CONST 4) = PTERM
(CONST 5) = RATREDUCE
(CONST 6) = RDIS
(CONST 7) = 1
(CONST 8) = 0
(CONST 9) = ((MTIMES) ((RAT) 1 2) $%I ((MEXPT) 3 ((RAT) 1 2)))
(CONST 10) = (MPLUS)
(CONST 11) = ((RAT) -1 2)
(CONST 12) = (MPLUS)
(CONST 13) = ((RAT) -1 2)
(CONST 14) = (MTIMES)
(CONST 15) = -1
(CONST 16) = (1 . 3)
(CONST 17) = RATTIMES
(CONST 18) = RATEXPT
(CONST 19) = (-1 . 9)
(CONST 20) = RATPLUS
(CONST 21) = MEVAL*
(CONST 22) = (MTIMES)
(CONST 23) = ((RAT) 1 3)
(CONST 24) = (MPLUS)
(CONST 25) = 3
(CONST 26) = (-27 . 1)
(CONST 27) = SIMPNRT
(CONST 28) = (MTIMES)
(CONST 29) = SIMPTIMES
(CONST 30) = FLAG4
(CONST 31) = MULT
(CONST 32) = SOLVE3
(CONST 33) = (1 . 27)
(CONST 34) = (MPLUS)
(CONST 35) = (MTIMES)
(CONST 36) = (MPLUS)
(CONST 37) = (MTIMES)
(CONST 38) = J
(CONST 39) = (-3 . 1)
(CONST 40) = (1 . 6)
(CONST 41) = (-1 . 27)
(CONST 42) = (MPLUS)
(CONST 43) = (MEXPT)
(CONST 44) = (MEXPT)
(CONST 45) = SIMPLUS
(CONST 46) = COMPLICATED
(CONST 47) = ADISPLINE
(CONST 48) = (MEXPT)
(CONST 49) = (MPLUS)
(CONST 50) = ((RAT) 1 3)
(CONST 51) = SIMPEXPT
(CONST 52) = "Arithmetic overflow - SOLVECUBIC"
(CONST 53) = MERROR
(CONST 54) = (MPLUS)
(CONST 55) = (MTIMES)
(CONST 56) = (MEXPT)
(CONST 57) = (MPLUS)
(CONST 58) = (MTIMES)
(CONST 59) = (MTIMES)
(CONST 60) = (MEXPT)
(CONST 61) = (MPLUS)
(CONST 62) = (MTIMES)
(CONST 63) = (MTIMES)
(CONST 64) = (MEXPT)
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (J MULT FLAG4 X)
writes special variable : (X)
304 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (PUSH-NIL 14)
5     (GETVALUE 0)                        ; X
7     (CDR)
8     (SETVALUE 0)                        ; X
10    (CDR)
11    (CAR)
12    (STORE 8)
14    (CONST&PUSH 1)                      ; (MTIMES)
15    (CONST&PUSH 2)                      ; ((RAT) -1 3)
16    (GETVALUE&PUSH 0)                   ; X
18    (CONST&PUSH 3)                      ; 2
19    (CALL2&PUSH 4)                      ; PTERM
21    (LOAD&PUSH 11)
22    (CALL2 5)                           ; RATREDUCE
24    (STORE 12)
26    (PUSH)
27    (CALL1&PUSH 6)                      ; RDIS
29    (LIST 3)
31    (STORE 7)
32    (GETVALUE&PUSH 0)                   ; X
34    (CONST&PUSH 7)                      ; 1
35    (CALL2&PUSH 4)                      ; PTERM
37    (LOAD&PUSH 9)
38    (CALL2 5)                           ; RATREDUCE
40    (STORE 11)
42    (GETVALUE&PUSH 0)                   ; X
44    (CONST&PUSH 8)                      ; 0
45    (CALL2&PUSH 4)                      ; PTERM
47    (LOAD&PUSH 9)
48    (CALL2 5)                           ; RATREDUCE
50    (STORE 12)
52    (CONST 9)                           ; ((MTIMES) ((RAT) 1 2) $%I ...)
53    (STORE 13)
55    (CONST&PUSH 10)                     ; (MPLUS)
56    (CONST&PUSH 11)                     ; ((RAT) -1 2)
57    (LOAD&PUSH 15)
58    (LIST 3)
60    (STORE 3)
61    (CONST&PUSH 12)                     ; (MPLUS)
62    (CONST&PUSH 13)                     ; ((RAT) -1 2)
63    (CONST&PUSH 14)                     ; (MTIMES)
64    (CONST&PUSH 15)                     ; -1
65    (LOAD&PUSH 17)
66    (LIST&PUSH 3)
68    (LIST 3)
70    (STORE 6)
71    (LOAD&PUSH 11)
72    (CONST&PUSH 16)                     ; (1 . 3)
73    (T&PUSH)
74    (CALL&PUSH 3 17)                    ; RATTIMES
77    (LOAD&PUSH 11)
78    (CONST&PUSH 3)                      ; 2
79    (CALL2&PUSH 18)                     ; RATEXPT
81    (CONST&PUSH 19)                     ; (-1 . 9)
82    (T&PUSH)
83    (CALL&PUSH 3 17)                    ; RATTIMES
86    (CALL2&PUSH 20)                     ; RATPLUS
88    (CALL1&PUSH 6)                      ; RDIS
90    (CALL1 21)                          ; MEVAL*
92    (STORE 5)
93    (PUSH)
94    (JMPIFEQTO 8 L232)                  ; 0
98    (LOAD&PUSH 11)
99    (LOAD&PUSH 11)
100   (T&PUSH)
101   (CALL&PUSH 3 17)                    ; RATTIMES
104   (CONST&PUSH 39)                     ; (-3 . 1)
106   (LOAD&PUSH 14)
107   (T&PUSH)
108   (CALL&PUSH 3 17)                    ; RATTIMES
111   (CALL2&PUSH 20)                     ; RATPLUS
113   (CONST&PUSH 40)                     ; (1 . 6)
115   (T&PUSH)
116   (CALL&PUSH 3 17)                    ; RATTIMES
119   (LOAD&PUSH 11)
120   (CONST&PUSH 25)                     ; 3
121   (CALL2&PUSH 18)                     ; RATEXPT
123   (CONST&PUSH 41)                     ; (-1 . 27)
125   (T&PUSH)
126   (CALL&PUSH 3 17)                    ; RATTIMES
129   (CALL2&PUSH 20)                     ; RATPLUS
131   (CALL1 6)                           ; RDIS
133   (STORE 4)
134   (PUSH)
135   (JMPIFEQTO 8 L337)                  ; 0
139   (CONST&PUSH 42)                     ; (MPLUS)
141   (CONST&PUSH 43)                     ; (MEXPT)
143   (LOAD&PUSH 7)
144   (CONST&PUSH 25)                     ; 3
145   (LIST&PUSH 3)
147   (CONST&PUSH 44)                     ; (MEXPT)
149   (LOAD&PUSH 7)
150   (CONST&PUSH 3)                      ; 2
151   (LIST&PUSH 3)
153   (LIST&PUSH 3)
155   (CONST&PUSH 7)                      ; 1
156   (NIL&PUSH)
157   (CALL 3 45)                         ; SIMPLUS
160   (STORE 9)
162   (PUSH)
163   (JMPIFEQTO 8 L347)                  ; 0
167   (LOAD&PUSH 9)
168   (CONST&PUSH 3)                      ; 2
169   (CALL2 27)                          ; SIMPNRT
171   (STORE 9)
173   (PUSH)
174   (CALL1&JMPIFNOT 46 L182)            ; COMPLICATED
177   (LOAD&PUSH 9)
178   (CALL1 47)                          ; ADISPLINE
180   (STORE 9)
182   L182
182   (CONST&PUSH 48)                     ; (MEXPT)
184   (CONST&PUSH 49)                     ; (MPLUS)
186   (LOAD&PUSH 6)
187   (LOAD&PUSH 12)
188   (LIST&PUSH 3)
190   (CONST&PUSH 50)                     ; ((RAT) 1 3)
192   (LIST&PUSH 3)
194   (CONST&PUSH 7)                      ; 1
195   (NIL&PUSH)
196   (CALL 3 51)                         ; SIMPEXPT
199   (STORE 1)
200   (PUSH)
201   (CALL1&JMPIFNOT 46 L208)            ; COMPLICATED
204   (LOAD&PUSH 1)
205   (CALL1 47)                          ; ADISPLINE
207   (STORE 1)
208   L208
208   (LOAD&PUSH 1)
209   (JMPIFEQTO 8 L355)                  ; 0
213   (LOAD&JMPIFNOT 2 L363)
217   L217
217   (GETVALUE 30)                       ; FLAG4
219   (JMPIFNOT L392)
222   L222
222   (LOAD&PUSH 2)
223   (GETVALUE&PUSH 31)                  ; MULT
225   (CALL2 32)                          ; SOLVE3
227   (SKIP 14)
229   (JMP L471)
232   L232
232   (CONST&PUSH 22)                     ; (MTIMES)
233   (CONST&PUSH 23)                     ; ((RAT) 1 3)
234   (CONST&PUSH 24)                     ; (MPLUS)
235   (LOAD&PUSH 13)
236   (CONST&PUSH 25)                     ; 3
237   (CALL2&PUSH 18)                     ; RATEXPT
239   (CONST&PUSH 26)                     ; (-27 . 1)
240   (LOAD&PUSH 17)
241   (T&PUSH)
242   (CALL&PUSH 3 17)                    ; RATTIMES
245   (CALL2 20)                          ; RATPLUS
247   (STORE 3)
248   (PUSH)
249   (CALL1&PUSH 6)                      ; RDIS
251   (CONST&PUSH 25)                     ; 3
252   (CALL2&PUSH 27)                     ; SIMPNRT
254   (CONST&PUSH 28)                     ; (MTIMES)
255   (CONST&PUSH 15)                     ; -1
256   (LOAD&PUSH 16)
257   (CALL1&PUSH 6)                      ; RDIS
259   (LIST&PUSH 3)
261   (LIST&PUSH 3)
263   (LIST&PUSH 3)
265   (CONST&PUSH 7)                      ; 1
266   (NIL&PUSH)
267   (CALL 3 29)                         ; SIMPTIMES
270   (STORE 2)
271   (GETVALUE 30)                       ; FLAG4
273   (JMPIF L222)
275   (LOAD&PUSH 0)
276   (CONST&PUSH 33)                     ; (1 . 27)
278   (T&PUSH)
279   (CALL&PUSH 3 17)                    ; RATTIMES
282   (CALL1&PUSH 6)                      ; RDIS
284   (CONST&PUSH 25)                     ; 3
285   (CALL2 27)                          ; SIMPNRT
287   (STORE 0)
288   (LOAD&PUSH 2)
289   (CONST&PUSH 34)                     ; (MPLUS)
291   (CONST&PUSH 35)                     ; (MTIMES)
293   (LOAD&PUSH 6)
294   (LOAD&PUSH 4)
295   (LIST&PUSH 3)
297   (LOAD&PUSH 10)
298   (LIST&PUSH 3)
300   (CONST&PUSH 36)                     ; (MPLUS)
302   (CONST&PUSH 37)                     ; (MTIMES)
304   (LOAD&PUSH 10)
305   (LOAD&PUSH 5)
306   (LIST&PUSH 3)
308   (LOAD&PUSH 11)
309   (LIST&PUSH 3)
311   (LIST&PUSH 3)
313   (LOAD&PUSH 0)
314   L314
314   (LOAD&PUSH 0)
315   (CALLS1&JMPIF 146 L466)             ; ENDP
319   (LOAD&CAR&PUSH 0)
321   (LOAD 0)
322   (BIND 38)                           ; J
324   (GETVALUE&PUSH 38)                  ; J
326   (GETVALUE&PUSH 31)                  ; MULT
328   (CALL2 32)                          ; SOLVE3
330   (UNBIND1)
331   (SKIP 1)
333   (LOAD&CDR&STORE 0)
335   (JMP L314)
337   L337
337   (LOAD&PUSH 5)
338   (CONST&PUSH 3)                      ; 2
339   (CALL2 27)                          ; SIMPNRT
341   (STORE 1)
342   (LOAD 7)
343   (STORE 2)
344   (JMP L208)
347   L347
347   (LOAD&PUSH 4)
348   (CONST&PUSH 25)                     ; 3
349   (CALL2 27)                          ; SIMPNRT
351   (STORE 1)
352   (JMP L208)
355   L355
355   (CONST&PUSH 52)                     ; "Arithmetic overflow - SOLVECUBIC"
357   (CALL1 53)                          ; MERROR
359   (LOAD&JMPIF 2 L217)
363   L363
363   (CONST&PUSH 54)                     ; (MPLUS)
365   (LOAD&PUSH 8)
366   (LOAD&PUSH 3)
367   (CONST&PUSH 55)                     ; (MTIMES)
369   (CONST&PUSH 15)                     ; -1
370   (LOAD&PUSH 10)
371   (CONST&PUSH 56)                     ; (MEXPT)
373   (LOAD&PUSH 8)
374   (CONST&PUSH 15)                     ; -1
375   (LIST&PUSH 3)
377   (LIST&PUSH 4)
379   (LIST&PUSH 4)
381   (CONST&PUSH 7)                      ; 1
382   (NIL&PUSH)
383   (CALL 3 45)                         ; SIMPLUS
386   (STORE 2)
387   (GETVALUE 30)                       ; FLAG4
389   (JMPIF L222)
392   L392
392   (LOAD&PUSH 2)
393   (CONST&PUSH 57)                     ; (MPLUS)
395   (LOAD&PUSH 9)
396   (CONST&PUSH 58)                     ; (MTIMES)
398   (LOAD&PUSH 7)
399   (LOAD&PUSH 6)
400   (LIST&PUSH 3)
402   (CONST&PUSH 59)                     ; (MTIMES)
404   (CONST&PUSH 15)                     ; -1
405   (LOAD&PUSH 11)
406   (LOAD&PUSH 13)
407   (CONST&PUSH 60)                     ; (MEXPT)
409   (LOAD&PUSH 10)
410   (CONST&PUSH 15)                     ; -1
411   (LIST&PUSH 3)
413   (LIST&PUSH 5)
415   (LIST&PUSH 4)
417   (CONST&PUSH 61)                     ; (MPLUS)
419   (LOAD&PUSH 10)
420   (CONST&PUSH 62)                     ; (MTIMES)
422   (LOAD&PUSH 11)
423   (LOAD&PUSH 7)
424   (LIST&PUSH 3)
426   (CONST&PUSH 63)                     ; (MTIMES)
428   (CONST&PUSH 15)                     ; -1
429   (LOAD&PUSH 12)
430   (LOAD&PUSH 11)
431   (CONST&PUSH 64)                     ; (MEXPT)
433   (LOAD&PUSH 11)
434   (CONST&PUSH 15)                     ; -1
435   (LIST&PUSH 3)
437   (LIST&PUSH 5)
439   (LIST&PUSH 4)
441   (LIST&PUSH 3)
443   (LOAD&PUSH 0)
444   (JMP L462)
446   L446
446   (LOAD&CAR&PUSH 0)
448   (LOAD 0)
449   (BIND 38)                           ; J
451   (GETVALUE&PUSH 38)                  ; J
453   (GETVALUE&PUSH 31)                  ; MULT
455   (CALL2 32)                          ; SOLVE3
457   (UNBIND1)
458   (SKIP 1)
460   (LOAD&CDR&STORE 0)
462   L462
462   (LOAD&PUSH 0)
463   (CALLS1&JMPIFNOT 146 L446)          ; ENDP
466   L466
466   (SKIP 1)
468   (POP)
469   (SKIP 14)
471   L471
471   (UNBIND1)
472   (SKIP&RET 2)


Disassembly of function #:|(DECLARE-TOP (SPLITFILE SQUART))-7|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Disassembly of function #:|(DEFMFUN SOLVEQUARTIC (X) ...)-8|
(CONST 0) = SOLVEQUARTIC
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE SOLVEQUARTIC>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; SOLVEQUARTIC
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; SOLVEQUARTIC
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE SOLVEQUARTIC>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; SOLVEQUARTIC
8     (SKIP&RET 1)


Disassembly of function SOLVEQUARTIC
(CONST 0) = X
(CONST 1) = B1
(CONST 2) = B2
(CONST 3) = R
(CONST 4) = D
(CONST 5) = E
(CONST 6) = 3
(CONST 7) = PTERM
(CONST 8) = RATREDUCE
(CONST 9) = 2
(CONST 10) = 1
(CONST 11) = 0
(CONST 12) = RATMINUS
(CONST 13) = RATTIMES
(CONST 14) = (4 . 1)
(CONST 15) = RATDIF
(CONST 16) = RATEXPT
(CONST 17) = (1 . 4)
(CONST 18) = (4 . 1)
(CONST 19) = (8 . 1)
(CONST 20) = RDIS
(CONST 21) = SIMPLIFY
(CONST 22) = RESOLVENT
(CONST 23) = (MPLUS)
(CONST 24) = (1 . 4)
(CONST 25) = SIMPLUS
(CONST 26) = SIMPNRT
(CONST 27) = COMPLICATED
(CONST 28) = ADISPLINE
(CONST 29) = (MPLUS)
(CONST 30) = (1 . 2)
(CONST 31) = (MTIMES)
(CONST 32) = -1
(CONST 33) = DIV*
(CONST 34) = (MPLUS)
(CONST 35) = (MEXPT)
(CONST 36) = (MTIMES)
(CONST 37) = -4
(CONST 38) = (MTIMES)
(CONST 39) = (3 . 4)
(CONST 40) = (2 . 1)
(CONST 41) = (MPLUS)
(CONST 42) = (MPLUS)
(CONST 43) = (MTIMES)
(CONST 44) = (-1 . 4)
(CONST 45) = (MPLUS)
(CONST 46) = (MPLUS)
(CONST 47) = (MTIMES)
(CONST 48) = (MPLUS)
(CONST 49) = (MTIMES)
(CONST 50) = (MPLUS)
(CONST 51) = (MTIMES)
(CONST 52) = (MTIMES)
(CONST 53) = J
(CONST 54) = MULT
(CONST 55) = SOLVE3
1 required argument
0 optional arguments
No rest parameter
No keyword parameters
reads special variables: (MULT J R E D B1 B2 X)
writes special variables : (E D R B1 B2 X)
325 byte-code instructions:
0     (LOAD 1)
1     (BIND 0)                            ; X
3     (PUSH-NIL 3)
5     (NIL)
6     (BIND 1)                            ; B1
8     (NIL)
9     (BIND 2)                            ; B2
11    (PUSH-NIL 4)
13    (NIL)
14    (BIND 3)                            ; R
16    (PUSH-NIL 2)
18    (NIL)
19    (BIND 4)                            ; D
21    (NIL&PUSH)
22    (NIL)
23    (BIND 5)                            ; E
25    (NIL&PUSH)
26    (GETVALUE 0)                        ; X
28    (CDR)
29    (SETVALUE 0)                        ; X
31    (CDR)
32    (CAR)
33    (STORE 14)
35    (GETVALUE&PUSH 0)                   ; X
37    (CONST&PUSH 6)                      ; 3
38    (CALL2&PUSH 7)                      ; PTERM
40    (LOAD&PUSH 15)
41    (CALL2 8)                           ; RATREDUCE
43    (STORE 16)
45    (GETVALUE&PUSH 0)                   ; X
47    (CONST&PUSH 9)                      ; 2
48    (CALL2&PUSH 7)                      ; PTERM
50    (LOAD&PUSH 15)
51    (CALL2 8)                           ; RATREDUCE
53    (SETVALUE 2)                        ; B2
55    (GETVALUE&PUSH 0)                   ; X
57    (CONST&PUSH 10)                     ; 1
58    (CALL2&PUSH 7)                      ; PTERM
60    (LOAD&PUSH 15)
61    (CALL2 8)                           ; RATREDUCE
63    (SETVALUE 1)                        ; B1
65    (GETVALUE&PUSH 0)                   ; X
67    (CONST&PUSH 11)                     ; 0
68    (CALL2&PUSH 7)                      ; PTERM
70    (LOAD&PUSH 15)
71    (CALL2 8)                           ; RATREDUCE
73    (STORE 15)
75    (GETVALUE&PUSH 2)                   ; B2
77    (CALL1 12)                          ; RATMINUS
79    (STORE 23)
81    (GETVALUE&PUSH 1)                   ; B1
83    (LOAD&PUSH 17)
84    (T&PUSH)
85    (CALL&PUSH 3 13)                    ; RATTIMES
88    (LOAD&PUSH 16)
89    (CONST&PUSH 14)                     ; (4 . 1)
90    (T&PUSH)
91    (CALL 3 13)                         ; RATTIMES
94    (STORE 26)
96    (PUSH)
97    (CALL2 15)                          ; RATDIF
99    (STORE 24)
101   (GETVALUE&PUSH 2)                   ; B2
103   (LOAD&PUSH 26)
105   (T&PUSH)
106   (CALL&PUSH 3 13)                    ; RATTIMES
109   (LOAD&PUSH 17)
110   (CONST&PUSH 9)                      ; 2
111   (CALL2 16)                          ; RATEXPT
113   (STORE 1)
114   (PUSH)
115   (LOAD&PUSH 17)
116   (T&PUSH)
117   (CALL&PUSH 3 13)                    ; RATTIMES
120   (CALL2&PUSH 15)                     ; RATDIF
122   (GETVALUE&PUSH 1)                   ; B1
124   (CONST&PUSH 9)                      ; 2
125   (CALL2&PUSH 16)                     ; RATEXPT
127   (CALL2 15)                          ; RATDIF
129   (STORE 25)
131   (CONST&PUSH 17)                     ; (1 . 4)
132   (LOAD&PUSH 17)
133   (GETVALUE&PUSH 2)                   ; B2
135   (CONST&PUSH 18)                     ; (4 . 1)
136   (T&PUSH)
137   (CALL&PUSH 3 13)                    ; RATTIMES
140   (T&PUSH)
141   (CALL&PUSH 3 13)                    ; RATTIMES
144   (CONST&PUSH 19)                     ; (8 . 1)
145   (GETVALUE&PUSH 1)                   ; B1
147   (T&PUSH)
148   (CALL&PUSH 3 13)                    ; RATTIMES
151   (CALL2&PUSH 15)                     ; RATDIF
153   (LOAD&PUSH 2)
154   (LOAD&PUSH 19)
155   (NIL&PUSH)
156   (CALL&PUSH 3 13)                    ; RATTIMES
159   (CALL2&PUSH 15)                     ; RATDIF
161   (T&PUSH)
162   (CALL&PUSH 3 13)                    ; RATTIMES
165   (CALL1&PUSH 20)                     ; RDIS
167   (CALL1 21)                          ; SIMPLIFY
169   (STORE 8)
171   (LOAD&PUSH 23)
172   (LOAD&PUSH 25)
174   (LOAD&PUSH 27)
176   (CALL 3 22)                         ; RESOLVENT
179   (STORE 13)
181   (CONST&PUSH 23)                     ; (MPLUS)
182   (LOAD&PUSH 14)
183   (LOAD&PUSH 2)
184   (CONST&PUSH 24)                     ; (1 . 4)
185   (T&PUSH)
186   (CALL&PUSH 3 13)                    ; RATTIMES
189   (GETVALUE&PUSH 2)                   ; B2
191   (CALL2&PUSH 15)                     ; RATDIF
193   (CALL1&PUSH 20)                     ; RDIS
195   (LIST&PUSH 3)
197   (CONST&PUSH 10)                     ; 1
198   (NIL&PUSH)
199   (CALL 3 25)                         ; SIMPLUS
202   (SETVALUE 3)                        ; R
204   (PUSH)
205   (JMPIFNOTEQTO 11 L440)              ; 0
209   (CONST&PUSH 34)                     ; (MPLUS)
211   (CONST&PUSH 35)                     ; (MEXPT)
213   (LOAD&PUSH 15)
214   (CONST&PUSH 9)                      ; 2
215   (LIST&PUSH 3)
217   (CONST&PUSH 36)                     ; (MTIMES)
219   (CONST&PUSH 37)                     ; -4
221   (LOAD&PUSH 19)
222   (CALL1&PUSH 20)                     ; RDIS
224   (LIST&PUSH 3)
226   (LIST&PUSH 3)
228   (CALL1&PUSH 21)                     ; SIMPLIFY
230   (CONST&PUSH 9)                      ; 2
231   (CALL2 26)                          ; SIMPNRT
233   (STORE 4)
234   (CONST&PUSH 38)                     ; (MTIMES)
236   (CONST&PUSH 9)                      ; 2
237   (LOAD&PUSH 6)
238   (LIST&PUSH 3)
240   (CALL1 21)                          ; SIMPLIFY
242   (STORE 8)
244   (PUSH)
245   (CALL1&JMPIFNOT 27 L253)            ; COMPLICATED
248   (LOAD&PUSH 8)
249   (CALL1 28)                          ; ADISPLINE
251   (STORE 8)
253   L253
253   (LOAD&PUSH 0)
254   (CONST&PUSH 39)                     ; (3 . 4)
256   (T&PUSH)
257   (CALL&PUSH 3 13)                    ; RATTIMES
260   (GETVALUE&PUSH 2)                   ; B2
262   (CONST&PUSH 40)                     ; (2 . 1)
264   (T&PUSH)
265   (CALL&PUSH 3 13)                    ; RATTIMES
268   (CALL2&PUSH 15)                     ; RATDIF
270   (CALL1&PUSH 20)                     ; RDIS
272   (CALL1 21)                          ; SIMPLIFY
274   (STORE 9)
276   (PUSH)
277   (CALL1&JMPIFNOT 27 L285)            ; COMPLICATED
280   (LOAD&PUSH 9)
281   (CALL1 28)                          ; ADISPLINE
283   (STORE 9)
285   L285
285   (CONST&PUSH 41)                     ; (MPLUS)
287   (LOAD&PUSH 10)
288   (LOAD&PUSH 10)
289   (LIST&PUSH 3)
291   (CALL1&PUSH 21)                     ; SIMPLIFY
293   (CONST&PUSH 9)                      ; 2
294   (CALL2 26)                          ; SIMPNRT
296   (SETVALUE 4)                        ; D
298   (CONST&PUSH 42)                     ; (MPLUS)
300   (LOAD&PUSH 10)
301   (CONST&PUSH 43)                     ; (MTIMES)
303   (CONST&PUSH 32)                     ; -1
305   (LOAD&PUSH 12)
306   (LIST&PUSH 3)
308   (LIST&PUSH 3)
310   (CALL1&PUSH 21)                     ; SIMPLIFY
312   (CONST&PUSH 9)                      ; 2
313   (CALL2 26)                          ; SIMPNRT
315   (SETVALUE 5)                        ; E
317   (GETVALUE&PUSH 4)                   ; D
319   (CONST&PUSH 9)                      ; 2
320   (CALL2 33)                          ; DIV*
322   (SETVALUE 4)                        ; D
324   (PUSH)
325   (CALL1&JMPIFNOT 27 L334)            ; COMPLICATED
328   (GETVALUE&PUSH 4)                   ; D
330   (CALL1 28)                          ; ADISPLINE
332   (SETVALUE 4)                        ; D
334   L334
334   (GETVALUE&PUSH 5)                   ; E
336   (CONST&PUSH 9)                      ; 2
337   (CALL2 33)                          ; DIV*
339   (SETVALUE 5)                        ; E
341   (PUSH)
342   (CALL1&JMPIFNOT 27 L351)            ; COMPLICATED
345   (GETVALUE&PUSH 5)                   ; E
347   (CALL1 28)                          ; ADISPLINE
349   (SETVALUE 5)                        ; E
351   L351
351   (LOAD&PUSH 16)
352   (CONST&PUSH 44)                     ; (-1 . 4)
354   (T&PUSH)
355   (CALL&PUSH 3 13)                    ; RATTIMES
358   (CALL1 20)                          ; RDIS
360   (STORE 23)
362   (GETVALUE&PUSH 3)                   ; R
364   (CONST&PUSH 9)                      ; 2
365   (CALL2 33)                          ; DIV*
367   (STORE 24)
369   (CONST&PUSH 45)                     ; (MPLUS)
371   (LOAD&PUSH 24)
372   (LOAD&PUSH 26)
374   (GETVALUE&PUSH 4)                   ; D
376   (LIST&PUSH 4)
378   (CONST&PUSH 46)                     ; (MPLUS)
380   (LOAD&PUSH 25)
382   (LOAD&PUSH 27)
384   (CONST&PUSH 47)                     ; (MTIMES)
386   (CONST&PUSH 32)                     ; -1
388   (GETVALUE&PUSH 4)                   ; D
390   (LIST&PUSH 3)
392   (LIST&PUSH 4)
394   (CONST&PUSH 48)                     ; (MPLUS)
396   (LOAD&PUSH 26)
398   (CONST&PUSH 49)                     ; (MTIMES)
400   (CONST&PUSH 32)                     ; -1
402   (LOAD&PUSH 30)
404   (LIST&PUSH 3)
406   (GETVALUE&PUSH 5)                   ; E
408   (LIST&PUSH 4)
410   (CONST&PUSH 50)                     ; (MPLUS)
412   (LOAD&PUSH 27)
414   (CONST&PUSH 51)                     ; (MTIMES)
416   (CONST&PUSH 32)                     ; -1
418   (LOAD&PUSH 31)
420   (LIST&PUSH 3)
422   (CONST&PUSH 52)                     ; (MTIMES)
424   (CONST&PUSH 32)                     ; -1
426   (GETVALUE&PUSH 5)                   ; E
428   (LIST&PUSH 3)
430   (LIST&PUSH 4)
432   (LIST 4)
434   (STORE 13)
436   (PUSH)
437   (JMP L531)
440   L440
440   (GETVALUE&PUSH 3)                   ; R
442   (CONST&PUSH 9)                      ; 2
443   (CALL2 26)                          ; SIMPNRT
445   (SETVALUE 3)                        ; R
447   (PUSH)
448   (CALL1&JMPIFNOT 27 L457)            ; COMPLICATED
451   (GETVALUE&PUSH 3)                   ; R
453   (CALL1 28)                          ; ADISPLINE
455   (SETVALUE 3)                        ; R
457   L457
457   (LOAD&PUSH 8)
458   (CALL1&JMPIFNOT 27 L466)            ; COMPLICATED
461   (LOAD&PUSH 8)
462   (CALL1 28)                          ; ADISPLINE
464   (STORE 8)
466   L466
466   (CONST&PUSH 29)                     ; (MPLUS)
467   (LOAD&PUSH 1)
468   (CONST&PUSH 30)                     ; (1 . 2)
470   (T&PUSH)
471   (CALL&PUSH 3 13)                    ; RATTIMES
474   (GETVALUE&PUSH 2)                   ; B2
476   (CALL2&PUSH 15)                     ; RATDIF
478   (CALL1&PUSH 20)                     ; RDIS
480   (CONST&PUSH 31)                     ; (MTIMES)
482   (CONST&PUSH 32)                     ; -1
484   (LOAD&PUSH 17)
485   (LIST&PUSH 3)
487   (LIST&PUSH 3)
489   (CONST&PUSH 10)                     ; 1
490   (NIL&PUSH)
491   (CALL 3 25)                         ; SIMPLUS
494   (STORE 9)
496   (PUSH)
497   (CALL1&JMPIFNOT 27 L505)            ; COMPLICATED
500   (LOAD&PUSH 9)
501   (CALL1 28)                          ; ADISPLINE
503   (STORE 9)
505   L505
505   (LOAD&PUSH 8)
506   (GETVALUE&PUSH 3)                   ; R
508   (CALL2 33)                          ; DIV*
510   (STORE 8)
512   (JMP L285)
515   L515
515   (LOAD&CAR&PUSH 0)
517   (LOAD 0)
518   (BIND 53)                           ; J
520   (GETVALUE&PUSH 53)                  ; J
522   (GETVALUE&PUSH 54)                  ; MULT
524   (CALL2 55)                          ; SOLVE3
526   (UNBIND1)
527   (SKIP 1)
529   (LOAD&CDR&STORE 0)
531   L531
531   (LOAD&PUSH 0)
532   (CALLS1&JMPIFNOT 146 L515)          ; ENDP
535   (SKIP 1)
537   (LOAD 13)
538   (SKIP 1)
540   (UNBIND1)
541   (SKIP 1)
543   (UNBIND1)
544   (SKIP 2)
546   (UNBIND1)
547   (SKIP 4)
549   (UNBIND 2)
551   (SKIP 3)
553   (UNBIND1)
554   (SKIP&RET 2)


Disassembly of function #:|(DEFUN RESOLVENT (A2 A1 A0) ...)-9|
(CONST 0) = RESOLVENT
(CONST 1) = SYSTEM::REMOVE-OLD-DEFINITIONS
(CONST 2) = #<COMPILED-CLOSURE RESOLVENT>
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
7 byte-code instructions:
0     (CONST&PUSH 0)                      ; RESOLVENT
1     (CALL1 1)                           ; SYSTEM::REMOVE-OLD-DEFINITIONS
3     (CONST&PUSH 0)                      ; RESOLVENT
4     (CONST&PUSH 2)                      ; #<COMPILED-CLOSURE RESOLVENT>
5     (CALLS2 130)                        ; SYSTEM::%PUTD
7     (CONST 0)                           ; RESOLVENT
8     (SKIP&RET 1)


Disassembly of function RESOLVENT
(CONST 0) = *ROOTS
(CONST 1) = FLAG4
(CONST 2) = *FAILURES
(CONST 3) = $SOLVEFACTORS
(CONST 4) = (MPLUS)
(CONST 5) = (MEXPT)
(CONST 6) = YY
(CONST 7) = 3
(CONST 8) = (MTIMES)
(CONST 9) = RDIS
(CONST 10) = (MEXPT)
(CONST 11) = 2
(CONST 12) = (MTIMES)
(CONST 13) = 1
(CONST 14) = SIMPLUS
(CONST 15) = SOLVE
(CONST 16) = 0
(CONST 17) = ZL-MEMBER
3 required arguments
0 optional arguments
No rest parameter
No keyword parameters
reads special variable: (*ROOTS)
writes special variables : ($SOLVEFACTORS FLAG4)
54 byte-code instructions:
0     (NIL)
1     (BIND 0)                            ; *ROOTS
3     (NIL)
4     (BIND 1)                            ; FLAG4
6     (NIL)
7     (BIND 2)                            ; *FAILURES
9     (NIL)
10    (BIND 3)                            ; $SOLVEFACTORS
12    (T)
13    (SETVALUE 1)                        ; FLAG4
15    (SETVALUE 3)                        ; $SOLVEFACTORS
17    (CONST&PUSH 4)                      ; (MPLUS)
18    (CONST&PUSH 5)                      ; (MEXPT)
19    (CONST&PUSH 6)                      ; YY
20    (CONST&PUSH 7)                      ; 3
21    (LIST&PUSH 3)
23    (CONST&PUSH 8)                      ; (MTIMES)
24    (LOAD&PUSH 18)
25    (CALL1&PUSH 9)                      ; RDIS
27    (CONST&PUSH 10)                     ; (MEXPT)
28    (CONST&PUSH 6)                      ; YY
29    (CONST&PUSH 11)                     ; 2
30    (LIST&PUSH 3)
32    (LIST&PUSH 3)
34    (CONST&PUSH 12)                     ; (MTIMES)
35    (LOAD&PUSH 18)
36    (CALL1&PUSH 9)                      ; RDIS
38    (CONST&PUSH 6)                      ; YY
39    (LIST&PUSH 3)
41    (LOAD&PUSH 17)
42    (CALL1&PUSH 9)                      ; RDIS
44    (LIST&PUSH 5)
46    (CONST&PUSH 13)                     ; 1
47    (NIL&PUSH)
48    (CALL&PUSH 3 14)                    ; SIMPLUS
51    (CONST&PUSH 6)                      ; YY
52    (CONST&PUSH 13)                     ; 1
53    (CALL 3 15)                         ; SOLVE
56    (CONST&PUSH 16)                     ; 0
57    (GETVALUE&PUSH 0)                   ; *ROOTS
59    (CALL2&JMPIF 17 L75)                ; ZL-MEMBER
62    (GETVALUE&PUSH 0)                   ; *ROOTS
64    (CALLS2 72)                         ; REVERSE
66    (CDR)
67    (CAR)
68    (CDR)
69    (CDR)
70    (CAR)
71    L71
71    (UNBIND 4)
73    (SKIP&RET 4)
75    L75
75    (CONST 16)                          ; 0
76    (JMP L71)


Disassembly of function #:|(DECLARE-TOP (UNSPECIAL MULT))-10|
0 required arguments
0 optional arguments
No rest parameter
No keyword parameters
2 byte-code instructions:
0     (NIL)
1     (SKIP&RET 1)


Wrote file binary-clisp/psolve.fas
Wrote file /cygdrive/e/temp/maxima/src/psolve.lis