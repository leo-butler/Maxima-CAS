
@menu
* Definitions for Limits::
@end menu

@node Definitions for Limits,  , Limits, Limits
@section Definitions for Limits

@defvar lhospitallim
 default: 4 - the maximum number of times L'Hospital's
rule is used in @code{limit}.  This prevents infinite looping in cases like
@code{limit(cot(x)/csc(x),x,0)}.

@end defvar

@defun limit (exp, var, val, dir)
@defunx limit (exp, var, val)
@defunx limit (exp)
finds the limit of @code{exp} as the real variable
@code{var} approaches the value @code{val} from the direction @code{dir}.  @code{dir} may have the
value @code{plus} for a limit from above, @code{minus} for a limit from below, or
may be omitted (implying a two-sided limit is to be computed).  For
the method see Wang, P., "Evaluation of Definite Integrals by Symbolic
Manipulation" - Ph.D. Thesis - MAC TR-92 October 1971.  @code{limit} uses the
following special symbols: @code{inf} (positive infinity) and @code{minf} (negative
infinity).  On output it may also use @code{und} (undefined), @code{ind} (indefinite
but bounded) and @code{infinity} (complex infinity).

@code{lhospitallim} is the maximum number of times L'Hospital's rule
is used in @code{limit}.  This prevents infinite looping in cases like
@code{limit(cot(x)/csc(x),x,0)}.

@code{tlimswitch} when true will cause the limit package to use
Taylor series when possible.

@code{limsubst} prevents @code{limit} from attempting substitutions on
unknown forms.  This is to avoid bugs like @code{limit(f(n)/f(n+1),n,inf);}
giving 1.  Setting @code{limsubst} to @code{true} will allow such
substitutions.

@code{limit} with one argument is often called upon to simplify constant expressions,
for example, @code{limit(inf-1);} .

Do @code{example(limit);} for examples.

@end defun

@defvar limsubst
default value: @code{false} - prevents @code{limit} from attempting substitutions on
unknown forms.  This is to avoid bugs like @code{limit(f(n)/f(n+1),n,inf);}
giving 1.  Setting @code{limsubst} to @code{true} will allow such
substitutions.

@end defvar

@defun tlimit (exp, var, val, dir)
@defunx tlimit (exp, var, val)
@defunx tlimit (exp)
is just the function @code{limit} with @code{tlimswitch}
set to @code{true}.

@end defun

@defvar tlimswitch
default: @code{false} - if @code{true} will cause the limit package to
use Taylor series when possible.

@end defvar

