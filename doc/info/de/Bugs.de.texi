@c -----------------------------------------------------------------------------
@c File        : Bugs.de.texi
@c License     : GNU General Public License (GPL)
@c Language    : German
@c Original    : Bugs.texi revision 1.15
@c Translation : Dr. Dieter Kaiser
@c Date        : 15.10.2010
@c 
@c This file contains documentation for the following Maxima symbols:
@c 
@c   run_testsuite
@c   testsuite_files
@c   bugreport
@c   build_info
@c 
@c This file is part of Maxima -- GPL CAS based on DOE-MACSYMA
@c -----------------------------------------------------------------------------

@menu
* Einf@"uhrung in Programmfehler::
* Funktionen und Variablen f@"ur Programmfehler::
@end menu

@c -----------------------------------------------------------------------------
@node Einf@"uhrung in Programmfehler, Funktionen und Variablen f@"ur Programmfehler, Programmfehler, Programmfehler
@section Einf@"uhrung in Programmfehler

Maxima wird st@"andig weiterentwickelt.  Der Funktionsumfang wird erweitert und 
Fehler, die bei einem Programm dieser Komplexit@"at kaum zu vermeiden sind, 
werden korrigiert.  Fehler k@"onnen berichtet werden.  Werden ausreichend
Informationen mitgeteilt, k@"onnen die Entwickler Maxima weiter verbessern.
Ein aktueller Link zur Webseite zum Berichten von Fehlern sowie die notwendigen 
Informationen @"uber die Maxima-Installation werden mit dem Befehl 
@code{bug_report()} angezeigt.  Um die Installation auf dem Rechner zu testen, 
kann die Maxima-Testsuite ausgef@"uhrt werden.  Die folgende @"Ubersicht zeigt 
die Funktionen und Variablen f@"ur das Testen der Installation und das Berichten
von Fehlern:

@verbatim
     run_testsuite     testsuite_files     bug_report     build_info
@end verbatim

@c -----------------------------------------------------------------------------
@node Funktionen und Variablen f@"ur Programmfehler, , Einf@"uhrung in Programmfehler, Programmfehler
@section Funktionen und Variablen f@"ur Programmfehler

@c --- 15.10.2010 DK -----------------------------------------------------------
@anchor{run_testsuite}
@deffn {Funktion} run_testsuite ([@var{options}])

Die Funktion @code{run_testsuite} f@"uhrt die Maxima-Testsuite aus. 
Erfolgreiche Tests und Tests, die zwar nicht erfolgreich, aber als ein bekannter
Fehler gekennzeichnet sind, geben die Meldung "passed".  @code{run_testsuite} 
akzeptiert die folgenden optionalen Schl@"usselworte als Argumente:

@table @code
@item display_all
Hat das Schl@"usselwort @code{display_all} den Wert @code{true}, werden alle 
Tests angezeigt.  Der Standardwert ist @code{false}.  In diesem Fall werden nur 
die Tests angezeigt, die fehlschlagen.

@item display_known_bugs
Hat das Schl@"usselwort @code{display_known_bugs} den Wert @code{true}, werden 
alle Tests angezeigt, die als fehlerhaft gekennzeichnet sind.  Der Standardwert 
ist @code{false}.

@item tests
Das Schl@"usselwort @code{tests} erh@"alt eine Liste mit den Testdateien, die 
ausgef@"uhrt werden sollen.  Eine Testdatei kann durch eine Zeichenkette oder 
ein Symbol angegeben werden.  Der Standard ist, dass alle Testdateien 
ausgef@"uhrt werden, die in der Optionsvariablen @mref{testsuite_files} 
enthalten sind.

@item time
Hat das Schl@"usselwort @code{time} den Wert @code{true}, werden die Laufzeiten 
der einzelnen Testdateien angezeigt.  Hat @code{time} den Wert @code{all} und
@code{display_all} den Wert @code{true}, wird die Laufzeit jedes einzelnen 
Tests angezeigt.  Der Standardwert ist @code{false}.
@end table

Das Kommando @code{run_testsuite(display_known_bugs = true, tests = [rtest5])} 
f@"uhrt die Testdatei @code{rtest5} aus und zeigt diejenigen Tests an, die als 
fehlerhaft gekennzeichnet sind.  @code{run_testsuite(display_all = true, tests 
= ["rtest1", rtest2])} f@"uhrt die Testdateien @code{rtest1} und @code{rtest2} 
aus und zeigt jeden einzelnen Test an.

Das Ausf@"uhren einer Testdatei kann die Maxima-Umgebung @"andern. 
Typischerweise f@"uhrt eine Testdatei zuerst das Kommando @code{kill(all)} aus, 
um eine definierte Umgebung herzustellen, in der keine nutzerdefinierten 
Funktionen und Variablen vorhanden sind.

@code{run_testsuite} hat den R@"uckgabewert @code{done}.

@end deffn

@c --- 15.10.2010 DK -----------------------------------------------------------
@anchor{testsuite_files}
@defvr {Optionsvariable} testsuite_files

Die Optionsvariable @code{testsuite_files} enth@"alt die Liste der Testdateien, 
die von @mref{run_testsuite} standardm@"a@ss{}ig ausgef@"uhrt werden.  Wenn 
bekannt ist, dass einzelne Tests einer Testdatei fehlschlagen werden, dann wird 
anstatt dem Namen der Datei eine Liste eingef@"ugt, die den Namen und die 
Nummern der fehlerhaften Tests enth@"alt.  Das folgende Beispiel zeigt, wie 
fehlerhafte Tests gekennzeichnet werden:

@example
 ["rtest13s", ["rtest14", 57, 63]]
@end example

Die Eintr@"age der Liste bedeuten, dass die Dateien "rtest13s" und "rtest14" 
ausgef@"uhrt werden sollen und das bekannt ist, dass die Tests mit den Nummern 
57 und 63 der Testdatei "rtest14" fehlschlagen werden.

@end defvr

@c --- 15.10.2010 DK -----------------------------------------------------------
@anchor{bug_report}
@deffn {Funktion} bug_report ()

Zeigt die Maxima- und Lisp-Version sowie einen Link zur Maxima-Projekt-Webseite.
Die Informationen zur Version werden auch von @mref{build_info} angezeigt.  Wenn 
ein Programmfehler berichtet wird, ist es hilfreich, die Maxima- und 
Lisp-Version in den Fehlerbericht aufzunehmen.  @code{bug_report} gibt eine 
leere Zeichenkette @code{""} zur@"uck.

Beispiel:

@example
(%i1) bug_report();
The Maxima bug database is available at
    http://sourceforge.net/tracker/?atid=104933&group_id=4933
Submit bug reports by following the 'Add new' link on that page.
Please include the following information with your bug report:
-------------------------------------------------------------
Maxima version: 5.20post
Maxima build date: 19:59 5/10/2010
Host type: i686-pc-linux-gnu
Lisp implementation type: SBCL
Lisp implementation version: 1.0.29.11.debian
-------------------------------------------------------------
The above information is also reported by the function 'build_info'
@end example

@end deffn

@c --- 15.10.2010 DK -----------------------------------------------------------
@anchor{build_info}
@deffn {Funktion} build_info ()

Zeigt eine @"Ubersicht mit Angaben zur installierten Version von Maxima.
@code{build_info} gibt eine leere Zeichenkette @code{""} zur@"uck.

Beispiel:

@example
(%i1) build_info();
Maxima version: 5.20post
Maxima build date: 19:59 5/10/2010
Host type: i686-pc-linux-gnu
Lisp implementation type: SBCL
Lisp implementation version: 1.0.29.11.debian
@end example

@end deffn

@c --- End of file Bugs.de.texi ------------------------------------------------

