\input texinfo
@c -*-texinfo-*-

@c 2000-04-17 Jim Van Zandt <jrv@vanzandt.mv.com> Added header,
@c info directory entry, reference to introduction chapter, and menu
@c descriptions.  Rearranged chapters.

@c to update the menus do: 
@c (texinfo-multiple-files-update "maxima.texi" t t)
@c
@c texinfo-multiple-files-update will delete the detailed node listing!
@c texinfo Coodinator Robert Dodier
@c Portuguese Translator Jorge Barros de Abreu <ficmati01@solar.com.br>

@c %**start of header
@setfilename  maxima.info
@synindex vr fn
@settitle Maxima Manual
@c %**end of header
@setchapternewpage odd
@ifinfo
This is a Texinfo Maxima Manual

Copyright 1994,2001 William F. Schelter

@format
START-INFO-DIR-ENTRY
* Maxima: (maxima).     A computer algebra system.
END-INFO-DIR-ENTRY
@end format
@end ifinfo

@ifinfo 
@macro var {expr}
<\expr\>
@end macro
@end ifinfo

@titlepage
@sp 10
@comment The title is printed in a large font.
@center @titlefont{Maxima Manual}
@end titlepage


@node Top, Introduction to Maxima, (dir), (dir)
@top

Maxima @'e um sistema de @'algebra computacional, implementado em Lisp.

Maxima @'e derivado do sistema Macsyma,
desenvolvido no MIT nos anos de 1968 a 1982 como parte do Projeto MAC.
MIT remanejou uma c@'opia do c@'odigo fonte do Macsyma para o Departamento de Energia
em 1982; aquela vers@~ao @'e agora conhecida como Macsyma DOE.
Uma c@'opia do Macsyma DOE foi mantida pelo Professor William F. Schelter
da Universidade do Texas de 1982 at@'e sua morte em 2001.
Em 1998, Schelter obteve permiss@~ao do Departamento de Energia
para liberar o c@'odigo fonte do Macsyma DOE sob a Licen@,{c}a P@'ublica GNU,
e em 2000 ele iniciou o projeto Maxima no SourceForge para manter
e desenvolver o Macsyma DOE, agora chamado Maxima.


@c includes

@menu
Infraestrutura do Maxima

* Introduction to Maxima::      Sample Maxima sessions.
* Bug Detection and Reporting:: Finding and reporting bugs in Maxima.
* Help::                        Asking for help from within a Maxima session.
* Command Line::                Maxima command line syntax.
* Operators::                   Operators used in Maxima expressions.
* Expressions::                 Expressions in Maxima.
* Simplification::              Simplifying expressions.
* Plotting::                    2D and 3D graphical output.
* Input and Output::            File input and output.
* Floating Point::              Low level numerical routines.
* Contexts::                    Sets of assumed facts.

Suporte a @'areas espec@'ificas da matem@'atica

* Polynomials::                 Standard forms for polynomials, and
                                functions operating on them.
* Constants::                   Numerical constants.
* Logarithms::                  Manipulation of expressions involving
                                logarithms.
* Trigonometric::               Manipulating expressions with trig and
                                inverse trig functions.
* Special Functions::           Special functions
* Orthogonal Polynomials::      Orthogonal Polynomials and Special functions
* Elliptic Functions::          Elliptic Functions and Integrals
* Limits::                      Limits of expressions.
* Differentiation::             Differential calculus.
* Integration::                 Integral calculus.
* Equations::                   Defining and solving equations.
* Differential Equations::      Defining and solving differential equations.
* Numerical::                   Numerical integration, Fourier
                                transforms, etc.
* Statistics::                  Statistical functions.
* Arrays and Tables::           Creating and working with arrays.
* Matrices and Linear Algebra:: Matrix operations.
* Affine::                      
* itensor::                     Indicial Tensor Manipulation.
* ctensor::                     Component Tensor Manipulation.
* atensor::                     Algebraic Tensor Manipulation.
* Series::                      Taylor and power series.
* Number Theory::               Number theory.
* Symmetries::                  
* Groups::                      Abstract algebra.

Facilidades avan@,{c}adas e programa@,{c}@~ao

* Runtime Environment::         Customization of the Maxima environment.
* Miscellaneous Options::       Options with a global effect on Maxima.
* Rules and Patterns::          User defined pattern matching and
                                simplification rules.
* Lists::                       Manipulation of lists.
* Sets::                        Manipulation of sets.
* Function Definition::         Defining functions.
* Program Flow::                Defining Maxima programs.
* Debugging::                   Debugging Maxima programs.

@'Indice

* Function and Variable Index:: Index.

@comment @detailmenu
 --- Listagem de Nodos Detalhada ---

Introdu@,{c}@~ao

* Introduction to Maxima::

Ajuda

* Introduction to Help::        
* Lisp and Maxima::            
* Garbage Collection::          
* Documentation::               
* Definitions for Help::        

Linha de Comando

* Introduction to Command Line::  
* Definitions for Command Line::  

Operadores

* nary::                        
* nofix::                       
* operator::                    
* postfix::                     
* prefix::                      
* Definitions for Operators::   

Express@~oes

* Introduction to Expressions::  
* Assignment::                  
* Complex::                     
* Inequality::                  
* Syntax::                      
* Definitions for Expressions::  

Simplifica@,{c}@~ao

* Definitions for Simplification::  

Desenhando Gr@'aficos

* Definitions for Plotting::    

Entrada e Sa@'ida

* Introduction to Input and Output::  
* Files::                       
* Definitions for Input and Output::  

Ponto Flutuante

* Definitions for Floating Point::  

Contextos

* Definitions for Contexts::    

Polin@^omios

* Introduction to Polynomials::  
* Definitions for Polynomials::  

Constantes

* Definitions for Constants::   

Logar@'itmos

* Definitions for Logarithms::  

Trigonometria

* Introduction to Trigonometric::  
* Definitions for Trigonometric::  

Fun@,{c}@~oes Especiais

* Introduction to Special Functions::  
* specint::                     
* Definitions for Special Functions::  

Polin@^omios Ortogonais

* Introduction to Orthogonal Polynomials::
* Definitions for Orthogonal Polynomials::

Fun@,{c}@~oes El@'ipticas

* Introduction to Elliptic Functions and Integrals::
* Definitions for Elliptic Functions::
* Definitions for Elliptic Integrals::

Limites

* Definitions for Limits::      

Diferencia@,{c}@~ao

* Definitions for Differentiation::  

Integra@,{c}@~ao

* Introduction to Integration::  
* Definitions for Integration::  

Equa@,{c}@~oes

* Definitions for Equations::   

Equa@,{c}@~oes Diferenciais

* Definitions for Differential Equations::  

Num@'erico

* Introduction to Numerical::   
* Fourier packages::                     
* Definitions for Numerical::   
* Definitions for Fourier Series::

Estat@'istica

* Definitions for Statistics::  

Arrays e Tabelas

* Definitions for Arrays and Tables::  

Matrizes e @'Algebra Linear

* Introduction to Matrices and Linear Algebra::  
* Dot::                         
* Vectors::                     
* eigen::
* Definitions for Matrices and Linear Algebra::  

Afim

* Definitions for Affine::      

itensor

* Introduction to itensor::      
* Definitions for itensor::      

ctensor

* Introduction to ctensor::     
* Definitions for ctensor::     

atensor

* Introduction to atensor::     
* Definitions for atensor::     

S@'eries

* Introduction to Series::      
* Definitions for Series::      

Teoria dos N@'umeros

* Definitions for Number Theory::  

Simetrias

* Definitions for Symmetries::  

Grupos

* Definitions for Groups::      

Ambiente de Execu@,{c}@~ao

* Introduction for Runtime Environment::  
* Interrupts::                  
* Definitions for Runtime Environment::  

Op@,{c}@~oes Diversas

* Introduction to Miscellaneous Options::  
* Share::                       
* Definitions for Miscellaneous Options::  

Regras e Modelos

* Introduction to Rules and Patterns::  
* Definitions for Rules and Patterns::  

Listas

* Introduction to Lists::       
* Definitions for Lists::       

Conjuntos

* Introduction to Sets::       
* Definitions for Sets::       

Defini@,{c}@~ao de Fun@,{c}@~ao

* Introduction to Function Definition::  
* Function::                    
* Macros::                      
* Definitions for Function Definition::  

Fluxo de Programa

* Introduction to Program Flow::  
* Definitions for Program Flow::  

Depurando

* Definitions for Debugging::   

@comment @end detailmenu
@end menu

@c  Put the @node lines here, rather than in the @included files,
@c  so emacs can automatically update them with C-c C-u C-e.
@c  nota bene: C-c C-u C-a and texinfo-multiple-files-update will delete
@c  the detailed node listing!

@node Introduction to Maxima, Bug Detection and Reporting, Top, Top
@chapter Introduction to Maxima
@include Introduction_pt.texi

@node Bug Detection and Reporting, Help, Introduction to Maxima, Top
@chapter Bug Detection and Reporting
@include Bugs_pt.texi

@node Help, Command Line, Bug Detection and Reporting, Top
@chapter Help
@include Help_pt.texi

@node Command Line, Operators, Help, Top
@chapter Command Line
@include Command_pt.texi

@node Operators, Expressions, Command Line, Top
@chapter Operators
@include Operators_pt.texi

@node Expressions, Simplification, Operators, Top
@chapter Expressions
@include Expressions.texi

@node Simplification, Plotting, Expressions, Top
@chapter Simplification
@include Simplification_pt.texi

@node Plotting, Input and Output, Simplification, Top
@chapter Plotting
@include Plotting_pt.texi

@node Input and Output, Floating Point, Plotting, Top
@chapter Input and Output
@include Input_pt.texi

@node Floating Point, Contexts, Input and Output, Top
@chapter Floating Point
@include Floating.texi

@node Contexts, Polynomials, Floating Point, Top
@chapter Contexts
@include Contexts.texi

@node Polynomials, Constants, Contexts, Top
@chapter Polynomials
@include Polynomials_pt.texi

@node Constants, Logarithms, Polynomials, Top
@chapter Constants
@include Constants_pt.texi

@node Logarithms, Trigonometric, Constants, Top
@chapter Logarithms
@include Logarithms.texi

@node Trigonometric, Special Functions, Logarithms, Top
@chapter Trigonometric
@include Trigonometric_pt.texi

@node Special Functions, Orthogonal Polynomials, Trigonometric, Top
@chapter Special Functions
@include Special.texi

@node Orthogonal Polynomials, Elliptic Functions, Special Functions, Top
@chapter Orthogonal Polynomials
@include SpecfunII.texi

@node Elliptic Functions, Limits, Orthogonal Polynomials, Top
@chapter Elliptic Functions
@include Elliptic.texi

@node Limits, Differentiation, Elliptic Functions, Top
@chapter Limits
@include Limits.texi

@node Differentiation, Integration, Limits, Top
@chapter Differentiation
@include Differentiation_pt.texi

@node Integration, Equations, Differentiation, Top
@chapter Integration
@include Integration_pt.texi

@node Equations, Differential Equations, Integration, Top
@chapter Equations
@include Equations_pt.texi

@node Differential Equations, Numerical, Equations, Top
@chapter Differential Equations
@include Differential.texi

@c @include NonCommutative.texi

@node Numerical, Statistics, Differential Equations, Top
@chapter Numerical
@include Numerical.texi

@node Statistics, Arrays and Tables, Numerical, Top
@chapter Statistics
@include Statistics.texi

@node Arrays and Tables, Matrices and Linear Algebra, Statistics, Top
@chapter Arrays and Tables
@include Arrays_pt.texi

@node Matrices and Linear Algebra, Affine, Arrays and Tables, Top
@chapter Matrices and Linear Algebra
@include Matrices_pt.texi

@node Affine, itensor, Matrices and Linear Algebra, Top
@chapter Affine
@include Affine_pt.texi

@node itensor, ctensor, Affine, Top
@chapter itensor
@include Itensor.texi

@node ctensor, atensor, itensor, Top
@chapter ctensor
@include Ctensor.texi

@node atensor, Series, ctensor, Top
@chapter atensor
@include Atensor_pt.texi

@node Series, Number Theory, atensor, Top
@chapter Series
@include Series.texi


@node Number Theory, Symmetries, Series, Top
@chapter Number Theory
@include Number.texi

@node Symmetries, Groups, Number Theory, Top
@chapter Symmetries
@include Symmetries.texi

@node Groups, Runtime Environment, Symmetries, Top
@chapter Groups
@include Groups.texi

@node Runtime Environment, Miscellaneous Options, Groups, Top
@chapter Runtime Environment
@include Runtime.texi

@node Miscellaneous Options, Rules and Patterns, Runtime Environment, Top
@chapter Miscellaneous Options
@include Miscellaneous_pt.texi

@node Rules and Patterns, Lists, Miscellaneous Options, Top
@chapter Rules and Patterns
@include Rules.texi


@node Lists, Sets, Rules and Patterns, Top
@chapter Lists
@include Lists_pt.texi

@node Sets, Function Definition, Lists, Top
@chapter Sets
@include nset.texi

@node Function Definition, Program Flow, Sets, Top
@chapter Function Definition
@include Function_pt.texi

@node Program Flow, Debugging, Function Definition, Top
@chapter Program Flow
@include Program_pt.texi

@node Debugging, Function and Variable Index, Program Flow, Top
@chapter Debugging
@include Debugging.texi

@node Function and Variable Index,  , Debugging, Top
@chapter Indices
@include Indices.texi

@c end includes


@summarycontents
@contents
@bye


