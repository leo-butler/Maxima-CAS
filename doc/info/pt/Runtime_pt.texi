@c /Runtime.texi/1.16/Wed Nov  2 18:37:20 2005/-ko/
@menu
* Introdu@value{cedilha}@~ao a Tempo de Execu@value{cedilha}@~ao::  
* Interrup@value{cedilha}@~oes::                  
* Defini@value{cedilha}@~oes para Tempo de Execu@value{cedilha}@~ao::  
@end menu


@node Introdu@value{cedilha}@~ao a Tempo de Execu@value{cedilha}@~ao, Interrup@value{cedilha}@~oes, Tempo de Execu@value{cedilha}@~ao, Tempo de Execu@value{cedilha}@~ao
@section Introdu@value{cedilha}@~ao a Tempo de Execu@value{cedilha}@~ao
@c THIS DISCUSSION OF maxima-init.mac REPLACES AN EARLIER WRITE-UP. !!!
@c HOWEVER IT SEEMS THAT THIS TEXT REALLY WANTS TO BE UNDER A DIFFERENT HEADING. !!!
@code{maxima-init.mac} @'e um arquivo que @'e chamado automaticamente quando o Maxima inicia.
Voc@^e pode usar @code{maxima-init.mac} para personalizar seu ambiente Maxima.
@code{maxima-init.mac}, se existir, @'e tipicamente colocado no
diret@'orio chamado por @code{:lisp (default-userdir)},
embora possa estar em qualquer outro diret@'orio procurado pela fun@value{cedilha}@~ao @code{file_search}.

Aqui est@'a um exemplo do arquivo @code{maxima-init.mac}:

@example
setup_autoload ("specfun.mac", ultraspherical, assoc_legendre_p);
showtime:all;
@end example

Nesse Exemplo, @code{setup_autoload} diz ao Maxima para chamar o
arquivo especificado
(@code{specfun.mac}) se qualquer das fun@value{cedilha}@~oes (@code{ultraspherical},
@code{assoc_legendre_p}) forem chamadas sem estarem definidas.
Dessa forma voc@^e n@~ao precisa lembrar de chamar o arquivo antes das fun@value{cedilha}@~oes.

A declara@value{cedilha}@~ao @code{showtime: all} diz ao Maxima escolher a vari@'avel @code{showtime}.
O arquivo @code{maxima-init.mac} pode conter qualquer outras atribui@value{cedilha}@~oes ou
outras declara@value{cedilha}@~oes do Maxima.

@node Interrup@value{cedilha}@~oes, Defini@value{cedilha}@~oes para Tempo de Execu@value{cedilha}@~ao, Introdu@value{cedilha}@~ao a Tempo de Execu@value{cedilha}@~ao, Tempo de Execu@value{cedilha}@~ao
@section Interrup@value{cedilha}@~oes

O usu@'ario pode parar uma computa@value{cedilha}@~ao que consome muito tempo com o
caractere ^C (control-C).
A a@value{cedilha}@~ao padr@~ao @'e parar a computa@value{cedilha}@~ao
e mostrar outra linha de comando do usu@'ario.
Nesse caso, n@~ao @'e poss@'ivel continuar a computa@value{cedilha}@~ao interrompida.

Se a vari@'avel @code{*debugger-hook*} @'e escolhida para @code{nil}, atrav@'es do comando

@example
:lisp (setq *debugger-hook* nil)
@end example

@noindent
ent@~ao na ocasi@~ao do recebimento do ^C, Maxima iniciar@'a o depurador Lisp,
e o usu@'ario pode usar o depurador para inspecionar o ambiente Lisp.
A computa@value{cedilha}@~ao interrompida pode ser retomada atrav@'es do comando
@code{continue} no depurador Lisp.
O m@'etodo de retorno para ao Maxima partindo do depurador Lisp
(outro como executando a computa@value{cedilha}@~ao para complementa@value{cedilha}@~ao)
@'e diferente para cada vers@~ao do Lisp.

Em sistemas Unix, o caratere ^Z (control-Z) faz com que Maxima
pare tudo e aguarde em segundo plano, e o controle @'e retornado para a linha de comando do shell.
O comando @code{fg} faz com que o Maxima
retorne ao primeiro plano e continue a partir do ponto no qual foi interrompido.

@c end concepts Tempo de Execu@value{cedilha}@~ao
@node Defini@value{cedilha}@~oes para Tempo de Execu@value{cedilha}@~ao,  , Interrup@value{cedilha}@~oes, Tempo de Execu@value{cedilha}@~ao
@section Defini@value{cedilha}@~oes para Tempo de Execu@value{cedilha}@~ao

@c NEEDS EXPANSION AND CLARIFICATION
@defvr {Declaration} feature
Maxima compreende dois tipos distintos de recurso,
recursos do sistema e recursos aplicados a express@~oes matem@'aticas.
Veja Tamb@'em @code{status} para informa@value{cedilha}@~oes sobre recursos do sistema.
Veja Tamb@'em @code{features} e @code{featurep} para informa@value{cedilha}@~oes sobre recursos matem@'aticos.
@c PROPERTIES, DECLARATIONS FALL UNDER THIS HEADING AS WELL
@c OTHER STUFF ??

@code{feature} por si mesmo n@~ao @'e o nome de uma fun@value{cedilha}@~ao ou vari@'avel.

@end defvr

@c NEEDS CLARIFICATION, ESPECIALLY WRT THE EXTENT OF THE FEATURE SYSTEM
@c (I.E. WHAT KINDS OF THINGS ARE FEATURES ACCORDING TO featurep)
@deffn {Fun@value{cedilha}@~ao} featurep (@var{a}, @var{f})
Tenta determinar se o objeto @var{a} tem o
recurso @var{f} na base dos fatos dentro base de dados corrente.  Se possue,
@'e retornado @code{true}, de outra forma @'e retornado @code{false}.

Note que @code{featurep} retorna @code{false} quando nem @var{f}
nem a nega@,{c}@~ao de @var{f} puderem ser estabelecidas.

@code{featurep} avalia seus argumentos.

Veja tamb@'em @code{declare} e @code{features}.
		     
@example
(%i1) declare (j, even)$
(%i2) featurep (j, integer);
(%o2)                           true
@end example

@end deffn

@deffn {Fun@value{cedilha}@~ao} room ()
@deffnx {Fun@value{cedilha}@~ao} room (true)
@deffnx {Fun@value{cedilha}@~ao} room (false)
Mostra uma descri@value{cedilha}@~ao do estado de armazenamento e
gerenciamento de pilha no Maxima. @code{room} chama a fun@value{cedilha}@~ao Lisp de
mesmo nome.

@itemize @bullet
@item
@code{room ()} mostra uma descri@value{cedilha}@~ao moderada.
@item
@code{room (true)} mostra uma descri@value{cedilha}@~ao detalhada.
@item
@code{room (false)} mostra uma descri@value{cedilha}@~ao resumida.
@end itemize

@end deffn

@deffn {Fun@value{cedilha}@~ao} status (feature)
@deffnx {Fun@value{cedilha}@~ao} status (feature, @var{recurso_ativo})
@deffnx {Fun@value{cedilha}@~ao} status (status)
Retorna informa@value{cedilha}@~oes sobre a presen@value{cedilha}a ou aus@^encia de certos
recursos dependentes do sistema operacional.

@itemize @bullet
@item
@code{status (feature)} retorna uma lista dos recursos do sistema.
Inclui a vers@~ao do Lisp, tipo de sistema operacional, etc.
A lista pode variar de um tipo de Lisp para outro.
@item @code{status (feature, @var{recurso_ativo})} retorna @code{true} se @var{recurso_ativo}
est@'a na lista de @'itens retornada atrav@'es de @code{status (feature)} e @code{false} de outra forma.
@code{status} n@~ao avalia o argumento @var{recurso_ativo}.
O operador aspas simples, @code{'@w{}'}, evita a avalia@value{cedilha}@~ao.
Um recurso cujo nome cont@'em um caractere especial, tal como um h@'ifem,
deve ser fornecido como um argumento em forma de seq@"u@^encia de caracteres. Por Exemplo,
@code{status (feature, "ansi-cl")}.
@item
@code{status (status)} retorna uma lista de dois elementos @code{[feature, status]}.
@code{feature} e @code{status} s@~ao dois argumentos aceitos pela fun@value{cedilha}@~ao @code{status};
N@~ao est@'a claro se essa lista tem signific@^ancia adicional.
@end itemize

A vari@'avel @code{features} cont@'em uma lista de recursos que se aplicam a
express@~oes matem@'aticas. Veja @code{features} e @code{featurep} para maiores informa@value{cedilha}@~oes.

@end deffn

@deffn {Fun@value{cedilha}@~ao} time (%o1, %o2, %o3, ...)
Retorna uma lista de tempos, em segundos, usados para calcular as linhas
de sa@'ida @code{%o1}, @code{%o2}, @code{%o3}, .... O tempo retornado @'e uma estimativa do Maxima do
tempo interno de computa@value{cedilha}@~ao, n@~ao do tempo decorrido. @code{time} pode somente
ser aplicado a vari@'aveis(r@'otulos) de sa@'ida de linha; para quaisquer outras vari@'aveis, @code{time}
retorna @code{unknown} (tempo desconhecido).

Escolha @code{showtime: true} para fazer com que Maxima moste o tempo de computa@value{cedilha}@~ao
e o tempo decorrido a cada linha de sa@'ida.

@end deffn

@deffn {Function} timedate ()
Retorna uma seq@"u@^encia de caracteres representando a data e hora atuais.
A seq@"u@^encia de caracteres tem o formato @code{HH:MM:SS Dia, mm/dd/aaaa (GMT-n)},
Onde os campos s@~ao
horas, minutos, segundos, dia da semana, m@^es, dia do m@^es, ano, e horas que diferem da hora GMT.

O valor de retorno @'e uma seq@"u@^encia de caracteres Lisp.

Exemplo:

@c ===beg===
@c d: timedate ();
@c print ("timedate mostra o tempo atual", d)$
@c ===end===
@example
(%i1) d: timedate ();
(%o1) 08:05:09 Wed, 11/02/2005 (GMT-7)
(%i2) print ("timedate mostra o tempo atual", d)$
timedate reports current time 08:05:09 Wed, 11/02/2005 (GMT-7)
@end example

@end deffn
