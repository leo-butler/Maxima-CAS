@c Language: Brazilian Portuguese, Encoding: iso-8859-1
@c /dynamics.texi/1.11/Mon Jan 22 13:45:03 2007//
@menu
* Introdu@,{c}@~{a}o a dynamics::
* Defini@,{c}@~{o}es para dynamics::
@end menu

@node Introdu@,{c}@~{a}o a dynamics, Defini@,{c}@~{o}es para dynamics, dynamics, dynamics
@section Introdu@,{c}@~{a}o a dynamics

O pacote adicional @code{dynamics} inclui muitas
fun@,{c}@~{o}es para criar v@'{a}rias representa@,{c}@~{o}es gr@'{a}ficas de sistemas
din@^{a}micos discretos e fractais, e uma implementa@,{c}@~{a}o deo m@'{e}todo
num@'{e}rico de Runge-Kutta de quarta ordem para a resolu@,{c}@~{a}o de sistemas de equa@,{c}òes diferenciais.

Para usar as fun@,{c}@~{o}es nesse pacote voc@^{e} deve primeiramente torn@'{a}-lo dispon@'{i}vel para uso com
@code{load("dynamics")}, e as fun@,{c}@~{o}es que ir@~{a}o criar gr@'{a}ficos
requerem que o Xmaxima esteja instalado.


@node Defini@,{c}@~{o}es para dynamics,  , Introdu@,{c}@~{a}o a dynamics, dynamics
@section Defini@,{c}@~{o}es para dynamics

@deffn {Fun@,{c}@~{a}o} chaosgame (@code{[[}@var{x1}, @var{y1}@code{]}...@code{[}@var{xm}, @var{ym}@code{]]}, @code{[}@var{x0}, @var{y0}@code{]}, @var{b}, @var{n}, ...op@,{c}@~{o}es...);

Implementa o ent@~{a}o chamado jogo do caos: o ponto inicial (@var{x0},
@var{y0}) @'{e} colocado no gr@'{a}fico e ent@~{a}o um dos @var{m} pontos
@code{[}@var{x1}, @var{y1}@code{]}...@code{[}@var{xm}, @var{ym}@code{]}
ser@'{a} selecionado de forma aleat@'{o}ria. O pr@'{o}ximo ponto colocado no gr@'{a}fico ser@'{a} sobre o
segmento que vai do ponto anteriormente colocado no gr@'{a}fico ao ponto escolhido aleat@'{o}riamente, @`a
dist@^{a}ncia do ponto aleat@'{o}rio que ser@'{a} @var{b} vezes o comprimento daquele
segmento. o procedimento @'{e} repetido @var{n} vezes.

@end deffn

@deffn {Fun@,{c}@~{a}o} evolution (@var{F}, @var{y0}, @var{n},...op@,{c}@~{o}es...);

Desenha @var{n+1} pontos em gr@'{a}fico bidimensional, onde as coordenadas
horizontais dos pontos s@~{a}o os inteiros 0, 1, 2, ..., @var{n}, e
as coordenadas verticais s@~{a}o os valores correspondentes @var{y(n)} da
seq@"{u}@^{e}ncia definida pela rela@,{c}@~{a}o de recorr@^{e}ncia
@ifnottex
@example
        y(n+1) = F(y(n))
@end example
@end ifnottex
@tex
$$y_{n+1} = F(y_n)$$
@end tex

com valor inicial @var{y(0)} igual a @var{y0}. @var{F} deve ser uma
express@~{a}o que depende somente da vari@'{a}vel @var{y} (e n@~{a}o da vari@'{a}vel @var{n}),
@var{y0} deve ser um n@'{u}mero real e @var{n} deve ser um inteiro positivo.

@end deffn

@deffn {Fun@,{c}@~{a}o} evolution2d (@code{[}@var{F}, @var{G}@code{]}, @code{[}@var{x0}, @var{y0}@code{]}, @var{n}, ...op@,{c}@~{o}es...);

Mostra, em um gr@'{a}fico bidimensional, os primeiros @var{n+1} pontos na
seq@"{u}@^{e}ncia de pontos definida por meio do sistema din@^{a}mico discreto
bidimensional com rela@,{c}@~{o}es de recorr@^{e}ncia
@ifnottex
@example
        x(n+1) = F(x(n), y(n))    y(n+1) = G(x(n), y(n))
@end example
@end ifnottex
@tex
$$\cases{x_{n+1} = F(x_n, y_n) &\cr y_{n+1} = G(x_n, y_n)}$$
@end tex

Com valores iniciais @var{x0} e @var{y0}. @var{F} e @var{G} devem ser
duas express@~{o}es que dependem apenas de @var{x} e @var{y}. 

@end deffn

@deffn {Fun@,{c}@~{a}o} ifs (@code{[}@var{r1},...,@var{rm}@code{]},@code{[}@var{A1},...,@var{Am}@code{]}, @code{[[}@var{x1},@var{y1}@code{]}...@code{[}@var{xm}, @var{ym}@code{]]}, @code{[}@var{x0},@var{y0}@code{]}, @var{n}, ...op@,{c}@~{o}es...);

Implemanta o m@'{e}todo de Sistemas de Fun@,{c}@~{o}es iteradas. Esse m@'{e}todo @'{e} similar
ao m@'{e}todo descrito na fun@,{c}@~{a}o @code{chaosgame}, mas em lugar de
encolher o segmento do ponto corrente ao ponto escolhido
aleat@'{o}riamente, as duas componentes daquele segmento ir@~{a}o ser multiplicadas pela matrix 2 por 2
@var{Ai} que corresponde ao ponto escolhido aleat@'{o}riamente.

A escolha aleat@'{o}ria de um dos @var{m} pontos de atra@,{c}@~{a}o pode ser feita com
uma distribui@,{c}@~{a}o de probabilidade n@~{a}o uniforme definida por meio dos pesos
@var{r1},...,@var{rm}. Esses pesos s@~{a}o fornecidos de forma cumulativa; por exemplo se existem 3 pontos com probabilidades 0.2, 0.5 e
0.3, os pesos @var{r1}, @var{r2} e @var{r3} podem ser 2, 7 e 10.

@end deffn

@deffn {Fun@,{c}@~{a}o} julia (@var{x}, @var{y}, ...@var{op@,{c}@~{o}es}...)

Cria um arqu@'{i}vo gr@'{a}fico com a representa@,{c}@~{a}o do conjunto de Julia para o
n@'{u}mero complexo (@var{x} + i @var{y}). Os par@^{a}metros @var{x} e @var{y}
devem ser reais. o arquivo @'{e} criado no diret@'{o}rio corrente ou no diret@'{o}rio do
do usu@'{a}rio, usando o formato gr@'{a}fico XPM. O programa pode demorar muitos
segundos para executar e concluir ap@'{o}s isso, uma mensagem ser@'{a} mostrada com
o nome do arquivo criado.

Os pontos que n@~{a}o pertencem ao conjunto de Julia recebem diferentes
cores, conforme o n@'{u}mero de itera@,{c}@~{o}es a fun@,{c}@~{a}o @code{julia} toma a seq@"{u}@^{e}ncia
iniciando naquele ponto para fora do c@'{i}rculo de converg@^{e}ncia de raio
2. O n@'{u}mero m@'{a}cimo de itera@,{c}@~{o}es @'{e} escolhido com a op@,{c}@~{a}o @var{levels};
ap@'{o}s aquele n@'{u}mero de itera@,{c}@~{o}es, se a seq@"{u}@^{e}ncia estiver ainda dentro do
c@'{i}rculo de converg@^{e}ncia, o ponto ser@'{a} desenhado com a cor definica pela
op@,{c}@~{a}o @var{color}.

Todas as cores usadas para os pontos que n@~{a}o pertencem ao conjunto de Julia
ir@~{a}o ter a mesma @var{satura@,{c}@~{a}o} e o mesmo @var{value}, mas com diferentes
@^{a}ngulos de matizes distribu@'{i}dos uniformemente entre @var{hue} e (@var{hue} +
@var{huerange})@footnote{hue - valor de matiz, huerange - valor do intervalo de matiz}.

@var{op@,{c}@~{o}es} @'{e} uma seq@"{u}@^{e}ncia facultativa de op@,{c}@~{o}es. A lista de op@,{c}@~{o}es
aceitas @'{e} fornecida em uma se@,{c}@~{a}o adiante.

@end deffn

@deffn {Fun@,{c}@~{a}o} mandelbrot (@var{op@,{c}@~{o}es})

Cria um arquivo gr@'{a}fico com a representa@,{c}@~{a}o do conjunto de
Mandelbrot. O arquivo @'{e} criado no diret@'{o}rio atual ou no diret@'{o}rio do
usu@'{a}rio, usando o formato gr@'{a}fico XPM. O programa pode demorar muitos
segundos para executar e concluir ap@'{o}s isso, uma mensagem ser@'{a} mostrada com
o nome do arquivo criado.

Os pontos que n@~{a}o pertencem ao conjunto de Mandelbrot recebem diferentes
cores, conforme o n@'{u}mero de itera@,{c}@~{o}es a fun@,{c}@~{a}o @code{mandelbrot}
toma a seq@"{u}@^{e}ncia iniciando naquele ponto para fora do c@'{i}rculo de converg@^{e}ncia de raio
2. O n@'{u}mero m@'{a}ximo de itera@,{c}@~{o}es @'{e} escolhido com a op@,{c}@~{a}o @var{levels};
ap@'{o}s aquele n@'{u}mero de itera@,{c}@~{o}es, se a seq@"{u}@^{e}ncia estiver ainda dentro do
c@'{i}rculo de converg@^{e}ncia, o ponto ser@'{a} desenhado com a cor definida pela
op@,{c}@~{a}o @var{color}.

Todas as cores usadas para os pontos que n@~{a}o pertencem ao conjunto de Julia
ir@~{a}o ter a mesma @var{saturation} e o mesmo @var{value}, mas com diferentes
@^{a}ngulos de matizes distribu@'{i}dos uniformemente entre @var{hue} e (@var{hue} +
@var{huerange}).

@var{op@,{c}@~{o}es} @'{e} uma seq@"{u}@^{e}ncia facultativa de op@,{c}@~{o}es. A lista de op@,{c}@~{o}es
aceitas @'{e} fornecida em uma se@,{c}@~{a}o adiante.

@end deffn

@deffn {Fun@,{c}@~{a}o} orbits (@var{F}, @var{y0}, @var{n1}, @var{n2}, [@var{x}, @var{x0}, @var{xf}, @var{xstep}], ...op@,{c}@~{o}es...);

Desenha o diagrama de @'{o}rbitas para uma fam@'{i}lia de sistemas din@^{a}micos
discretos unidimensionais, com um par@^{a}metro @var{x}; esse tipo de
diagrama @'{e} usado para estudar as bifurca@,{c}@~{o}es de um sistema discreto
unidimensional.

A fun@,{c}@~{a}o @var{F(y)} define uma seq@"{u}@^{e}ncia com um valor inicial de
@var{y0}, como no caso da fun@,{c}@~{a}o @code{evolution}, mas nesse
caso a fun@,{c}@~{a}o @var{F(y)} ir@'{a} tamb@'{e}m depender de um par@^{a}metro @var{x} que
receber@'{a} valores no intervalo de @var{x0} a @var{xf} com incrementos de
@var{xstep}. Cada valor usado para o par@^{a}metro @var{x} @'{e} mostrado sobre o
eixo horizontal. O eixo vertical ir@'{a} mostrar os valores  de @var{n2}
da seq@"{u}@^{e}ncia @var{y(n1+1)},..., @var{y(n1+n2+1)} obtida ap@'{o}s permitir
que a seq@"{u}@^{e}ncia produza @var{n1} iterac@~{o}es.

@end deffn

@deffn {Fun@,{c}@~{a}o} rk (EDO, var, inicio, domain)
@deffnx {Fun@,{c}@~{a}o} rk ([EDO1,...,EDOm], [v1,...,vm], [inic1,...,inicm], domain)

A primeira forma resolve numericamente uma equa@,{c}@~{a}o diferencial  de primeira
ordem, e a segunda formaresolve um sistema de m dessas equa@,{c}@~{o}es,
usando o m@'{e}todo de Runge-Kutta de quarta ordem. @code{var} representa a vari@'{a}vel
dependente. EDO deve ser uma express@~{a}o que dependa somente da vari@'{a}vel  independente e da
vari@'{a}vel dependente e defina a derivada da vari@'{a}vel
dependente com rela@,{c}@~{a}o @`a vari@'{a}vel independente.

A vari@'{a}vel independente @'{e} especificada com @code{domain}, que deve ser uma
lista dde quatro elementos como, por exemplo:
@example
[t, 0, 10, 0.1]
@end example
O primeiro elemento da lista identifica a vari@'{a}vel independente, o
segundo e o terceiro elementos s@~{a}o os valores inicial e final para para aquela
vari@'{a}vel, e o @'{u}ltimo elemento escolhe o incremento que pode ser usado
dentro daquele intervalo.

Se @var{m} equa@,{c}@~{o}es est@~{a}o sendo resolvidas, podem existir @var{m}
vari@'{a}veis dependentes @var{v1}, @var{v2}, ..., @var{vm}. Os valores iniciais
para aquelas vari@'{a}veis ser@~{a}o @var{inic1}, @var{inic2}, ..., @var{inicm}.
Ainda pode ser apenas uma vari@'{a}vel independente definida por @code{domain},
como no caso anterior. @var{EDO1}, ..., @var{EDOm} s@~{a}o as express@~{o}es
que definem as derivadas de cada vari@'{a}vel dependente em
termos da vari@'{a}vel independente. As vari@'{a}veis que podem aparecer
naquelas express@~{o}es s@~{a}o a vari@'{a}vel independente e quaisquer outras vari@'{a}veis
dependentes. @'{E} importante fornecer as derivadas @var{EDO1}, ...,
@var{EDOm} na lista exatamente na mesma ordem usada para vari@'{a}veis
dependentes; por exemplo, o terceiro elemento na lista ir@'{a} ser interpretado
com a derivada da terceira vari@'{a}vel dependente.

O programa tentar@'{a} integrar as equa@,{c}@~{o}es a partir do valor inicial
da vari@'{a}vel independente at@'{e} seu @'{u}ltimo valor, usando incrementos
constantes. Se em algum passo uma das vari@'{a}veis dependentes recebe um
valor absoluto muito grande, a integra@,{c}@~{a}o ser@'{a} interrompida naquele
ponto. O resultado ser@'{a} uma lista com tamtos elementos quantos forem o n@'{u}mero de
itera@,{c}@~{o}es feitas. Cada elemento na lista de resultado @'{e} em si mesmo outra lista
comh @var{m}+1 elementos: o valor da vari@'{a}vel independente, seguido
pelos valores das vari@'{a}veis dependentes correspondentes @`aquele ponto.

@end deffn

@deffn {Fun@,{c}@~{a}o} staircase (@var{F}, @var{y0}, @var{n}, ...op@,{c}@~{o}es...);

Desenha um diagrama em escada para a seq@"{u}@^{e}ncia definida pela rela@,{c}@~{a}o de
recorr@^{e}ncia
@ifnottex
@example
        y(n+1) = F(y(n))
@end example
@end ifnottex
@tex
$$y_{n+1} = F(y_n)$$
@end tex

A interpreta@,{c}@~{a}o e os valores permitidos dos par@^{a}metros de entrada s@~{a}o os
mesmos que para a fun@,{c}@~{a}o @code{evolution}. Um diagrama em escada consiste
de um gr@'{a}fico da fun@,{c}@~{a}o @var{F(y)}, juntamente com a linha
@var{G(y)} @code{=} @var{y}. Um segmento vertical @'{e} desenhado a partir das
point (@var{y0}, @var{y0}) on that line until the point where it
intersec@,{c}@~{o}es com a fun@,{c}@~{a}o @var{F}. A partir daquele ponto um segmento horizontal @'{e}
desenhado at@'{e} encontrar o ponto (@var{y1}, @var{y1}) sobre a linha, e
o procedimento @'{e} repetido @var{n} vezes at@'{e} que o ponto (@var{yn}, @var{yn})
@'{e} encontrado.

@end deffn

@b{op@,{c}@~{o}es}

Cada op@,{c}@~{a}o @'{e} uma lista de dois ou mais itens. O primeiro item @'{e} o nome
da op@,{c}@~{a}o, e os restantes compreendem os argumentos para a op@,{c}@~{a}o.

As op@,{c}@~{o}es aceitas pela fun@,{c}@~{a}o @code{evolution}, @code{evolution2d}, @code{staircase},
@code{orbits}, @code{ifs} e @code{chaosgame} s@~{a}o:

@itemize @bullet
@item
@dfn{domain} escolhe os valores de m@'{i}nimo e de maximo paraa a
vari@'{a}vel independente na coonstru@,{c}@~{a}o do gr@'{a}fico da fun@,{c}@~{a}o @var{F} mostrada por
@code{staircase}.

@item
@dfn{pointsize} define o raio de cada ponto mostrado, em unidades de
pontos. O valor padr@~{a}o @'{e} 1.

@item
@dfn{xaxislabel} @'{e} o r@'{o}tulo a ser colocado no eixo horizontal do gr@'{a}fico.

@item
@dfn{xcenter} @'{e} a coordenada x do ponto que pode aparecer no
centro do gr@'{a}fico. Essa op@,{c}@~{a}o n@~{a}o @'{e} utilizada na fun@,{c}@~{a}o
@code{orbits}.

@item
@dfn{xradius} @'{e} metade do comprimento do intervalo de valores que ser@~{a}o
mostrados na dire@,{c}@~{a}o x. Essa op@,{c}@~{a}o n@~{a}o @'{e} usada pela fun@,{c}@~{a}o
@code{orbits}.

@item
@dfn{yaxislabel} @'{e} o r@'{o}tulo a ser colocado sobre o eixo vertical.

@item
@dfn{ycenter} @'{e} a coordenada  y do ponto que ir@'{a}
aparecer no centro do gr@'{a}fico.

@item
@dfn{yradius} @'{e} a metade do comprimento do intervalo de valores que ser@~{a}o
mostrados na dire@,{c}@~{a}o y.

@end itemize

As seguintes op@,{c}@~{o}es s@~{a}o aceitas pelas fu@,{c}@~{o}es @code{julia} e @code{mandelbrot}:

@itemize @bullet
@item
@dfn{size} recebe um ou dois argumentos. Se somente um argumento @'{e}
fornecido, a largura e a altura do arquivo gr@'{a}fico criado ser@~{a}o iguais a
esse valor, em pixels. Se dois argumentos forem fornecidos, eles ir@~{a}o definir a
largura e a altura. O valor padr@~{a}o @'{e} 400 pixels para ambos a largura e
altura. Se os dois valores n@~{a}o forem iguais, o conjunto aparecer@'{a} distorcido.

@item
@dfn{levels} define o n@'{u}mero m@'{a}ximo de itera@,{c}@~{o}es, que tamb@'{e}m
igual ao n@'{u}mero de cores usados para pontos que n@~{a}o pertencem ao
conjunto. O valor padr@~{a}o @'{e} 12; grandes valoes significam maior quantidade de vezes de
processamento.

@item
@dfn{huerange} define o intervalo de @^{a}ngulos de matiz usados para a matiz dos
pontos n@~{a}o pertencentes ao conjunto. O valor padr@~{a}o @'{e} 360,
que significa que as cores expandir-se-@~{a}o em todo o intervalo de matizes. Valores
maiores que 360, significar@~{a}o intervalos repetidos de matizes, e valores
negativos podem ser usados para fazer o @^{a}ngulo de matiz decrescer como o n@'{u}mero de
itera@,{c}@~{o}es tamb@'{e}m decresce.

@item
@dfn{hue} conjuntos de matizes, em graus, da primeira cor usada para o
ponto que n@~{a}o pertence ao conjunto. Seu valor padr@~{a}o @'{e} 300 graus,
que corresponde ao magenta; os valores para outras cores padr@~{a}o s@~{a}o 0
para vermelho, 45 para laranja, 60 para amarelo, 120 para verde, 180 para ciano e
240 para o azul. Veja tamb@'{e}m a op@,{c}@~{a}o @var{huerange}.

@item
@dfn{saturation} escolhe o valor da satura@,{c}@~{a}o usada para pontos n@~{a}o
pertencentes ao conjunto. A @code{saturation} deve estar entre 0 e 1. o valor padr@~{a}o @'{e} 0.46.

@item
@dfn{value} escolhe o valor das cores usadas para pontos n@~{a}o pertencentes
ao conjunto. @var{value} deve estar entre 0 e 1; Valores maiores, acarretam
que as cores sejam mais brilhantes. O valor padr@~{a}o @'{e} 0.96

@item
@dfn{color} deve ser seguido por tr@^{e}s par@^{a}metros que definem o matiz,
a satura@,{c}@~{a}o e o valor, para a cor usada para representar os pontos do
conjunto. O valor padr@~{a}o @'{e} 0 para tr@^{e}s par@^{a}metos, que correspondem
ao preto. Para uma explana@,{c}@~{a}o do intervalo de valores permitidos, veja op@,{c}@~{o}es
@var{hue}, @var{saturation} e @var{value}.

@item
@dfn{center} deve ser seguida por dois par@^{a}metros reais, que fornecem as
coordenadas, sobre o plano complexo, do ponto no centro da
regi@~{a}o mostrada. O valor padr@~{a}o @'{e} 0 para ambas as coordenadas (a or@'{i}gem).

@item
@dfn{radius} escolhe o raio do maior c@'{i}rculo dentro da regi@~{a}o
quadrado que ser@'{a} mostrado. O valor padr@~{a}o @'{e} 2.

@item
@dfn{filename} fornece o nome do arquivo onde o gr@'{a}fico resultante ser@'{a}
gravado. A extens@~{a}o .xpm ser@'{a} adicionada @`a aquele nome. Se o arquivo
j@'{a} existir, ele ser@'{a} substitu@'{i}do pelo arquivo gerado pela
fun@,{c}@~{a}o. Os valores padr@~{a}o s@~{a}o @code{julia} para o conjunto de Julia, e @code{mandelbrot}
para o conjunto de Mandelbrot.

@end itemize

@b{Exemplos}

Representa@,{c}@~{a}o gr@'{a}fica e diagrama em escada para a seq@"{u}@^{e}ncia:
2, cos(2), cos(cos(2)),...

@example
(%i1) load("dynamics")$
(%i2) evolution(cos(y), 2, 11, [yaxislabel, "y"], [xaxislabel,"n"]);
(%i3) staircase(cos(y), 1, 11, [domain, 0, 1.2]);
@end example

@ifnotinfo
@image{../figures/dynamics1,8cm}
@image{../figures/dynamics2,8cm}
@end ifnotinfo

Se seu sistema for lento, voc@^{e} dever@'{a} reduzir o n@'{u}mero de itera@,{c}@~{o}es nos
seguites exemplos. E o tamanho do ponto, @var{pointsize},  que fornece melhores resultados
depende do monitor e da resolu@,{c}@~{a}o que est@'{a} sendo usada.Voc@^{e} pode
experimentar usando diferentes valores.

Diagrama de @'{o}rbitas para o mapa quadr@'{a}tico
@ifnottex
@example
        y(n+1) = x + y(n)^2
@end example
@end ifnottex
@tex
$$y_{n+1} = x + y_n^2$$
@end tex

@example
(%i4) orbits(y^2+x, 0, 50, 200, [x, -2, 0.25, 0.01], [pointsize, 0.9]);
@end example

@ifnotinfo
@image{../figures/dynamics3,8cm}
@end ifnotinfo

Para ampliar a regi@~{a}o em torno da bifurca@,{c}@~{a}o menor perto de x @code{=} -1.25 use:
@example
(%i5) orbits(x+y^2, 0, 100, 400, [x,-1,-1.53,-0.001], [pointsize,0.9],
             [ycenter,-1.2], [yradius,0.4]);
@end example

@ifnotinfo
@image{../figures/dynamics4,8cm}
@end ifnotinfo

Evolu@,{c}@~{a}o de um sistemma bidimensional que leva a um fractal:

@example
(%i6) f: 0.6*x*(1+2*x)+0.8*y*(x-1)-y^2-0.9$
(%i7) g: 0.1*x*(1-6*x+4*y)+0.1*y*(1+9*y)-0.4$
(%i8) evolution2d([f,g],[-0.5,0],50000,[pointsize,0.7]);
@end example

@ifnotinfo
@image{../figures/dynamics5,8cm}
@end ifnotinfo

E uma amplia@,{c}@~{a}o de uma pequena regial naquele fractal:

@example
(%i9) evolution2d([f,g],[-0.5,0],300000,[pointsize,0.7], [xcenter,-0.7],
                  [ycenter,-0.3],[xradius,0.1],[yradius,0.1]);
@end example

@ifnotinfo
@image{../figures/dynamics6,8cm}
@end ifnotinfo

Um gr@'{a}fico do tri@^{a}ngulo de Sierpinsky, obtido com o jogo do caos:

@example
(%i9) chaosgame([[0, 0], [1, 0], [0.5, sqrt(3)/2]], [0.1, 0.1], 1/2,
                 30000, [pointsize,0.7]);
@end example

@ifnotinfo
@image{../figures/dynamics7,8cm}
@end ifnotinfo

A samambaia de Barnsley, obtida com um Sistema de Fun@,{c}@~{o}es Iteradas:

@example
(%i10) a1: matrix([0.85,0.04],[-0.04,0.85])$
(%i11) a2: matrix([0.2,-0.26],[0.23,0.22])$
(%i12) a3: matrix([-0.15,0.28],[0.26,0.24])$
(%i13) a4: matrix([0,0],[0,0.16])$
(%i14) p1: [0,1.6]$
(%i15) p2: [0,1.6]$
(%i16) p3: [0,0.44]$
(%i17) p4: [0,0]$
(%i18) w: [85,92,99,100]$
(%i19) ifs(w,[a1,a2,a3,a4],[p1,p2,p3,p4],[5,0],50000,[pointsize,0.9]);
@end example

@ifnotinfo
@image{../figures/dynamics8,8cm}
@end ifnotinfo

Para criar um arquivo chamado @emph{dynamics9.xpm} com uma representa@,{c}@~{a}o
gr@'{a}fica do conjunto de Mandelbrot, com 12 cores, use:

@example
mandelbrot([filename,"dynamics9"])$
@end example

@ifnotinfo
@image{../figures/dynamics9,8cm}
@end ifnotinfo

e o conjunto de Julia para o n@'{u}mero (-0.55 + i 0.6) pode ser obtida com:
@example
julia(-0.55, 0.6, [levels, 36], [center, 0, 0.6], [radius, 0.3],
      [hue, 240], [huerange, -180], [filename, "dynamics10"])$
@end example

o gr@'{a}fico ser@'{a} gravado no arquivo @emph{dynamics10.xpm} e ir@'{a} mostrar
a regi@~{a}o de -0.3 a 0.3 na dire@,{c}@~{a}o x, e de 0.3 a 0.9 na
dire@,{c}@~{a}o y. 36 cores sr@~{a}o usadas, iniciando com azul e terminando
com amarelo.

@ifnotinfo
@image{../figures/dynamics10,8cm}
@end ifnotinfo

Para resolver numericamente a equa@,{c}@~{a}o diferencial

@ifnottex
@example
          dx/dt = t - x^2
@end example
@end ifnottex
@tex
$${{dx}\over{dt}} = t - x^2$$ 
@end tex

Com valor inicial x(t=0) = 1, no intervalo de @code{t} de 0 a 8 e com
incrementos de 0.1 para @code{t}, use:

@example
(%i20) results: rk(t-x^2,x,1,[t,0,8,0.1])$
@end example

os resultados ser@~{a}o salvos na lista de resultados.

Para resolver numericamente o sistema:

@ifnottex
@example
        dx/dt = 4-x^2-4*y^2     dy/dt = y^2-x^2+1
@end example
@end ifnottex
@tex
$$\cases{{\displaystyle{dx}\over\displaystyle{dt}} = 4-x^2-4y^2 &\cr &\cr {\displaystyle{dy}\over\displaystyle{dt}} = y^2-x^2+1}$$
@end tex

para @code{t} entre 0 e 4, e com valores de -1.25 e 0.75 para x e y em t=0:

@example
(%i21) sol: rk([4-x^2-4*y^2,y^2-x^2+1],[x,y],[-1.25,0.75],[t,0,4,0.02])$
@end example
