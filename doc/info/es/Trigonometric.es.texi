@menu
* Introducci@'on a la Trigonometr@'{@dotless{i}}a::  
* Definiciones para Trigonometr@'{@dotless{i}}a:: 
@end menu

@node Introducci@'on a la trigonometr@'{@dotless{i}}a, Definiciones para Trigonometr@'{@dotless{i}}a, Trigonometr@'{@dotless{i}}a, Trigonometr@'{@dotless{i}}a
@section Introducci@'on a la Trigonometr@'{@dotless{i}}a
 - MACSYMA tiene algunas funciones Trigonom@'etricas definidas.  No todas las identidades trigonom@'etricas fueron programadas, pero es posible para el usuario adicionar alguna de ellas usando el modelo que empareja capacidades del sistema. Las Funciones Trigonom@'etricas definidas en MACSYMA son: ACOS, ACOSH, ACOT, ACOTH, ACSC, ACSCH, ASEC, ASECH, ASIN, ASINH, ATAN, ATANH, COS, COSH, COT, COTH,CSC, CSCH, SEC, SECH, SIN, SINH, TAN, y TANH. Hay  un n@'umero de comandos espec@'{@dotless{i}}ficos para manejar funciones trigonom@'etricas, ver TRIGEXPAND, TRIGREDUCE, y la variable TRIGSIGN.  Dos paquetes SHARE  extienden las reglas de la simplificaci@'on construidas en MACSYMA, NTRIG y ATRIG1.  Haga DESCRIBE(cmd) para m@'as detalles.

@c end conceptos de Trigonometria
@node Definiciones para Trigonometr@'{@dotless{i}}a,  , Introducci@'on a la Trigonometr@'{@dotless{i}}a, Trigonometr@{i}a
@section Definiciones para Trigonometr@'{@dotless{i}}a
@c end concepts Trigonometric

@defun ACOS
 - Arco Coseno

@end defun
@c @node ACOSH
@c @unnumberedsec phony
@defun ACOSH
 - Arco Coseno Hiperb@'olico

@end defun
@c @node ACOT
@c @unnumberedsec phony
@defun ACOT
 - Arco Cotangente

@end defun
@c @node ACOTH
@c @unnumberedsec phony
@defun ACOTH
 - Arco Cotangente Hiperb@'olico

@end defun
@c @node ACSC
@c @unnumberedsec phony
@defun ACSC
 - Arco Cosecante

@end defun
@c @node ACSCH
@c @unnumberedsec phony
@defun ACSCH
 - Arco Cosecante Hiperb@'olico

@end defun
@c @node ASEC
@c @unnumberedsec phony
@defun ASEC
 - Arco Secante

@end defun
@c @node ASECH
@c @unnumberedsec phony
@defun ASECH
 - Arco Secante Hiperb@'olico

@end defun
@c @node ASIN
@c @unnumberedsec phony
@defun ASIN
 - Arco Seno

@end defun
@c @node ASINH
@c @unnumberedsec phony
@defun ASINH
 - Arco Seno Hiperb@'olico

@end defun
@c @node ATAN
@c @unnumberedsec phony
@defun ATAN
 - Arco Tangente

@end defun
@c @node ATAN2
@c @unnumberedsec phony
@defun ATAN2 (Y,X)
 - Retorna el valor de ATAN(Y/X) en el intervalo -%PI a %PI.

@end defun
@c @node ATANH
@c @unnumberedsec phony
@defun ATANH
 - Arco Tangente Hiperb@'olico

@end defun
@c @node ATRIG1
@c @unnumberedsec phony
@defun ATRIG1
 - SHARE1;ATRIG1 FASL contiene varias reglas de simplificaci@'on adicionales para funciones trigonom@'etricas inversas. Junto con reglas ya conocidas en Macsyma, los siguientes @'angulos estan totalmente implementados:
0, %PI/6, %PI/4, %PI/3, y %PI/2.  Los corrrespondientes @'angulos en los otros tres cuadrantes tambi@'en est@'an disponibles.  Haga LOAD(ATRIG1); para usar dichas reglas.

@end defun
@c @node COS
@c @unnumberedsec phony
@defun COS
 - Coseno

@end defun
@c @node COSH
@c @unnumberedsec phony
@defun COSH
 - Coseno Hiperb@'olico

@end defun
@c @node COT
@c @unnumberedsec phony
@defun COT
 - Cotangente

@end defun
@c @node COTH
@c @unnumberedsec phony
@defun COTH
 - Cotangente Hiperb@'olico

@end defun
@c @node CSC
@c @unnumberedsec phony
@defun CSC
 - Cosecante

@end defun
@c @node CSCH
@c @unnumberedsec phony
@defun CSCH
 - Cosecante Hiperb@'olica

@end defun
@c @node HALFANGLES
@c @unnumberedsec phony
@defvar HALFANGLES
 por defecto: [FALSE] - si su valor es TRUE causa que los @'angulos-medios sean simplificados fuera.

@end defvar
@c @node SEC
@c @unnumberedsec phony
@defun SEC
 - Secante

@end defun
@c @node SECH
@c @unnumberedsec phony
@defun SECH
 - Secante Hiperb@'olico

@end defun
@c @node SIN
@c @unnumberedsec phony
@defun SIN
 - Seno

@end defun
@c @node SINH
@c @unnumberedsec phony
@defun SINH
 - Seno Hiperb@'olico

@end defun
@c @node TAN
@c @unnumberedsec phony
@defun TAN
 - Tangente

@end defun
@c @node TANH
@c @unnumberedsec phony
@defun TANH
 - Tangente Hiperb@'olico

@end defun
@c @node TRIGEXPAND
@c @unnumberedsec phony
@defun TRIGEXPAND (exp)
expande funciones trigonom@'etricas e hiperb@'olicas de sumas de @'angulos y de @'angulos m@'ultiples que aparecen en la expresi@'on.  Para mejores
resultados, la expresi@'on deber@'{@dotless{i}}a ser expandida (N.T: Es decir use antes el comando EXPAND). Para mejorar el control del usuario 
sobre la simplificaci@'on, esta funci@'on expande solamente un nivel por vez,
extendiendo las sumas de @'angulos o los @'angulos multiples.  Para obtener la expansi@'on completa en los senos y cosenos inmediatamente, configure la variable  TRIGEXPAND a TRUE.(TRIGEXPAND:TRUE).
TRIGEXPAND es por defecto: [FALSE] - si es TRUE causa la expansi@'on de todas
la expresiones que contienen SIN y COS apareciendo subsecuencialmente.
HALFANGLES[FALSE] - si es TRUE causa que los @'angulos medios sean simplificados fuera.
TRIGEXPANDPLUS[TRUE] - controla la regla de la "suma" para TRIGEXPAND,
expansi@'on de sumas (por ejemplo SIN(X+Y)) tomar@'a lugar @'unicamente si
TRIGEXPANDPLUS es TRUE.
TRIGEXPANDTIMES[TRUE] - controla la regla del "producto" para TRIGEXPAND,
expansi@'on de productos (por ejemplo SIN(2*X)) tomar@'a lugar @'unicamente si
TRIGEXPANDTIMES es TRUE.
@example
(C1) X+SIN(3*X)/SIN(X),TRIGEXPAND:TRUE,EXPAND;
                              2           2
(D1)                     - SIN (X) + 3 COS (X) + X
(C2) TRIGEXPAND(SIN(10*X+Y));
(D2)               COS(10 X) SIN(Y) + SIN(10 X) COS(Y)


@end example
@end defun
@c @node TRIGEXPANDPLUS
@c @unnumberedsec phony
@defvar TRIGEXPANDPLUS
 por defecto: [TRUE] - controla la regla de la "suma" para
TRIGEXPAND.  As@'{@dotless{i}}, cuando el comando TRIGEXPAND es usado o la variable 
TRIGEXPAND toma el valor  TRUE, la expansi@'on de las sumas (por ejemplo SIN(X+Y)) 
tomar@'a lugar @'unicamente si TRIGEXPANDPLUS es TRUE.

@end defvar
@c @node TRIGEXPANDTIMES
@c @unnumberedsec phony
@defvar TRIGEXPANDTIMES
 por defecto: [TRUE] - controla la regla del "producto" para
TRIGEXPAND.  As@'{@dotless{i}}, cuando el comando TRIGEXPAND es usado o la variable TRIGEXPAND toma el valor  TRUE, la expansi@'on de los productos (por ejemplo SIN(2*X))
tomar@'a lugar @'unicamente si TRIGEXPANDTIMES es TRUE.

@end defvar
@c @node TRIGINVERSES
@c @unnumberedsec phony
@defvar TRIGINVERSES
 por defecto: [ALL] - controla la simplificaci@'on de la
composici@'on de funciones trigonom@'etricas e hiperb@'olicas con sus funciones inversas: Si su valor es ALL, ambos ejemplos ATAN(TAN(X)) y TAN(ATAN(X)) se simplificar@'an a
X.  Si su valor es TRUE, la simplificaci@'on de arcfuncion(funcion(x)) esta fuera. Si su valor es FALSE, tanto  la simplificaci@'on de arcfun(fun(x)) y fun(arcfun(x)) esta fuera.

@end defvar
@c @node TRIGREDUCE
@c @unnumberedsec phony
@defun TRIGREDUCE (exp, var)
combina productos y potencias de los senos y cosenos trigonom@'etricos e hiperb@'olicos de var en aquellos multiplos de var.
Tambi@'en intenta eliminar esas funciones cuando ocurren en los denominadores.  Si la variable es omitida entonces todas las variables de las expresion son usadas. Vea tambi@'en la funcion POISSIMP (6.6).
@example
(C4) TRIGREDUCE(-SIN(X)^2+3*COS(X)^2+X);
(D4)                        2 COS(2 X) + X + 1
Las rutinas de simplificaci@'on trigonom@'etrica usar@'an declaraciones de
informaci@'on en algunos casos simples. Las Declaraciones acerca de las variables son usadas como sigue, por ejemplo.
(C5) DECLARE(J, INTEGER, E, EVEN, O, ODD)$
(C6) SIN(X + (E + 1/2)*%PI)$
(D6)                      COS(X)
(C7) SIN(X + (O + 1/2) %PI);
(D7)                     - COS(X)

@end example
@end defun
@c @node TRIGSIGN
@c @unnumberedsec phony
@defvar TRIGSIGN
 por defecto: [TRUE] - Si es TRUE permite la simplificaci@'on de argumentos
negativos en las funciones trigonom@'etricas. Por ejemplo, SIN(-X) se volver@'a
-SIN(X) @'unicamente si TRIGSIGN es TRUE.

@end defvar
@c @node TRIGSIMP
@c @unnumberedsec phony
@defun TRIGSIMP (expr)
emplea las identidades sin(x)^2 + cos(x)^2 = 1 y
cosh(x)^2 - sinh(x)^2 = 1 para simplificar expresiones que contengan tan, sec,
etc., a sin, cos, sinh, cosh para que la siguiente simplificaci@'on se pueda 
obtener usando TRIGREDUCE en el resultado.  Algunos ejemplos pueden verse
haciendo DEMO("trgsmp.dem");. Tambi@'en vea la funci@'on TRIGSUM.

@end defun
@c @node TRIGRAT
@c @unnumberedsec phony
@defun TRIGRAT (trigexp)
genera un canon simplificado casi lineal de una expresi@'on trigonom@'etrica; trigexp es una fracci@'on racional de algunos sin,
cos o tan, los argumentos son de forma lineal en algunas variables (o
n@'ucleos) y %pi/n (n entero) con coeficientes enteros. El resultado es una
fracci@'on simplificada con numerador y denominador lineal en seno y coseno.
As@'{@dotless{i}} TRIGRAT linearizar@'a siempre y cuando esto sea posible.(Escrito por D. Lazard).

@example
(c1) trigrat(sin(3*a)/sin(a+%pi/3));

(d1) 		        sqrt(3) sin(2 a) + cos(2 a) - 1
@end example

Aqui hay otro ejemplo (para el cual la funci@'on fue pensada); vea
[Davenport, Siret, Tournier, Calcul Formel, Masson (o en ingl@'es,
Addison-Wesley), seccion 1.5.5, Morley theorem). 

@example
(c4)   c:%pi/3-a-b;

					   %pi
(d4) 				 - b - a + ---
					    3

(c5)   bc:sin(a)*sin(3*c)/sin(a+b);

			     sin(a) sin(3 b + 3 a)
(d5) 			     ---------------------
				  sin(b + a)

(c6)   ba:bc,c=a,a=c$

(c7)   ac2:ba^2+bc^2-2*bc*ba*cos(b);

	2       2
     sin (a) sin (3 b + 3 a)
(d7) -----------------------
	      2
	   sin (b + a)

					%pi
   2 sin(a) sin(3 a) cos(b) sin(b + a - ---) sin(3 b + 3 a)
					 3
 - --------------------------------------------------------
			   %pi
		   sin(a - ---) sin(b + a)
			    3

      2	        2	  %pi
   sin (3 a) sin (b + a - ---)
			   3
 + ---------------------------
	     2	   %pi
	  sin (a - ---)
		    3

(c9)   trigrat(ac2);
Totaltime= 65866 msec.  GCtime= 7716 msec.

(d9)
- (sqrt(3) sin(4 b + 4 a) - cos(4 b + 4 a)

- 2 sqrt(3) sin(4 b + 2 a)

+ 2 cos(4 b + 2 a) - 2 sqrt(3) sin(2 b + 4 a) + 2 cos(2 b + 4 a)

+ 4 sqrt(3) sin(2 b + 2 a) - 8 cos(2 b + 2 a) - 4 cos(2 b - 2 a)

+ sqrt(3) sin(4 b) - cos(4 b) - 2 sqrt(3) sin(2 b) + 10 cos(2 b)

+ sqrt(3) sin(4 a) - cos(4 a) - 2 sqrt(3) sin(2 a) + 10 cos(2 a)

   - 9)/4

@end example
@end defun

@c Traducido por: Diego Andres Sanabria
@c correo-e: diegueus9@yahoo.com
@c Revisado por	: Juan Pablo Romero Bernal
@c correo-e	: jpromerobx@linuxmail.org
@c Grupo Linux Universidad Distrital
@c http://glud.udistrital.edu.co
@c Proyecto GLUD-CLog
@c http://glud.udistrital.edu.co/clog
@c Bogota - Colombia
