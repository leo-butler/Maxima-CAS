@c english version 1.1
@menu
* Introducci@'on a lbfgs::
* Definiciones para lbfgs::
@end menu

@node Introducci@'on a lbfgs, Definiciones para lbfgs, Top, Top
@section Introducci@'on a lbfgs

La funci@'on @code{lbfgs} implementa el llamado algoritmo L-BFGS [1]
para resolver problemas de minimizaci@'on sin restricciones mediante una
t@'ecnica @i{cuasi-Newton con memoria limitada} (BFGS). El t@'ermino
memoria limitada procede del hecho de que se almacena una aproximaci@'on
de rango bajo de la inversa de la matriz hessiana, en lugar de la matriz
completa. El programa fue originalmente escrito en Fortran [2] por
Jorge Nocedal, incorporando algunas funciones escritas originalmente
por Jorge J. Mor@'{e} y David J. Thuente, traducidas posteriormente a Lisp
autom@'aticamente con el programa @code{f2cl}. El paquete @code{lbfgs}
contiene el c@'odigo traducido, junto con una funci@'on interfaz que para
controlar ciertos detalles.


Referencias:

[1] D. Liu and J. Nocedal. "On the limited memory BFGS method for large
scale optimization". @i{Mathematical Programming B} 45:503--528 (1989)

[2] http://netlib.org/opt/lbfgs_um.shar

@node Definiciones para lbfgs, , Introducci@'on a lbfgs, Top
@section Definiciones para lbfgs

@deffn {Funci@'on} lbfgs (@var{FOM}, @var{X}, @var{X0}, @var{epsilon}, @var{iprint})

Encuentra una soluci@'on aproximada para el problema de minimizaci@'on
sin restricciones de la funci@'on objetivo @var{FOM} para la lista de 
variables @var{X}, partiendo de los estimadores iniciales @var{X0},
de tal manera que @math{norm grad FOM < epsilon max(1, norm X)}.

El algoritmo utilizado es una t@'ecnica @i{cuasi-Newton con memoria limitada}
(BFGS) [1]. El t@'ermino memoria limitada procede del hecho de que se almacena
una aproximaci@'on de rango bajo de la inversa de la matriz hessiana, en lugar
de la matriz completa.

El argumento @var{iprint} controla los mensajes de progreso que env@'{@dotless{i}}a
la funci@'on @code{lbfgs}.


@table @code
@item iprint[1]
@code{@var{iprint}[1]} controla la frecuencia con la que se emiten los mensajes.
@table @code
@item iprint[1] < 0
No se env@'{@dotless{i}}an mensajes.
@item iprint[1] = 0
Mensajes @'unicamente en la primera y @'ultima iteraciones.
@item iprint[1] > 0
Imprime un mensaje cada @code{@var{iprint}[1]} iteraciones.
@end table
@item iprint[2]
@code{@var{iprint}[2]} controla la cantidad de informaci@'on contenida en los mensajes.
@table @code
@item iprint[2] = 0
Imprime contador de iteraciones, n@'umero de evaluaciones de @var{FOM}, valor de @var{FOM},
m@'odulo del gradiente de @var{FOM} y amplitud del paso.
@item iprint[2] = 1
Igual que @code{@var{iprint}[2] = 0}, incluyendo @var{X0} y el gradiente de @var{FOM} evaluado en @var{X0}.
@item iprint[2] = 2
Igual que @code{@var{iprint}[2] = 1}, incluyendo los valores de @var{X} en cada iteraci@'on.
@item iprint[2] = 3
Igual que @code{@var{iprint}[2] = 2}, incluyendo el gradiente de @var{FOM} en cada iteraci@'on.
@end table
@end table

V@'eanse tambi@'en @code{lbfgs_nfeval_max} y @code{lbfgs_ncorrections}.

Referencias:

[1] D. Liu and J. Nocedal. "On the limited memory BFGS method for large
scale optimization". @i{Mathematical Programming B} 45:503--528 (1989)

Ejemplo:

@c ===beg===
@c load (lbfgs);
@c FOM : '((1/length(X))*sum((F(X[i]) - Y[i])^2, i, 1, length(X)));
@c X : [1, 2, 3, 4, 5];
@c Y : [0, 0.5, 1, 1.25, 1.5];
@c F(x) := A/(1 + exp(-B*(x - C)));
@c ''FOM;
@c estimates : lbfgs (FOM, '[A, B, C], [1, 1, 1], 1e-4, [1, 0]);
@c plot2d ([F(x), [discrete, X, Y]], [x, -1, 6]), ''estimates;
@c ===end===
@example
(%i1) load (lbfgs);
(%o1)   /usr/share/maxima/5.10.0cvs/share/lbfgs/lbfgs.mac
(%i2) FOM : '((1/length(X))*sum((F(X[i]) - Y[i])^2, i, 1, length(X)));
                               2
               sum((F(X ) - Y ) , i, 1, length(X))
                       i     i
(%o2)          -----------------------------------
                            length(X)
(%i3) X : [1, 2, 3, 4, 5];
(%o3)                    [1, 2, 3, 4, 5]
(%i4) Y : [0, 0.5, 1, 1.25, 1.5];
(%o4)                [0, 0.5, 1, 1.25, 1.5]
(%i5) F(x) := A/(1 + exp(-B*(x - C)));
                                   A
(%o5)            F(x) := ----------------------
                         1 + exp((- B) (x - C))
(%i6) ''FOM;
                A               2            A                2
(%o6) ((----------------- - 1.5)  + (----------------- - 1.25)
          - B (5 - C)                  - B (4 - C)
        %e            + 1            %e            + 1
            A             2            A               2
 + (----------------- - 1)  + (----------------- - 0.5)
      - B (3 - C)                - B (2 - C)
    %e            + 1          %e            + 1
             2
            A
 + --------------------)/5
      - B (1 - C)     2
   (%e            + 1)
(%i7) estimates : lbfgs (FOM, '[A, B, C], [1, 1, 1], 1e-4, [1, 0]);
*************************************************
  N=    3   NUMBER OF CORRECTIONS=25
       INITIAL VALUES
 F=  1.348738534246918D-01   GNORM=  2.000215531936760D-01
*************************************************

   I  NFN     FUNC                    GNORM                   STEPLENGTH

   1    3     1.177820636622582D-01   9.893138394953992D-02   8.554435968992371D-01  
   2    6     2.302653892214013D-02   1.180098521565904D-01   2.100000000000000D+01  
   3    8     1.496348495303005D-02   9.611201567691633D-02   5.257340567840707D-01  
   4    9     7.900460841091139D-03   1.325041647391314D-02   1.000000000000000D+00  
   5   10     7.314495451266917D-03   1.510670810312237D-02   1.000000000000000D+00  
   6   11     6.750147275936680D-03   1.914964958023047D-02   1.000000000000000D+00  
   7   12     5.850716021108205D-03   1.028089194579363D-02   1.000000000000000D+00  
   8   13     5.778664230657791D-03   3.676866074530332D-04   1.000000000000000D+00  
   9   14     5.777818823650782D-03   3.010740179797255D-04   1.000000000000000D+00  

 THE MINIMIZATION TERMINATED WITHOUT DETECTING ERRORS.
 IFLAG = 0
(%o7) [A = 1.461933911464101, B = 1.601593973254802, 
                                           C = 2.528933072164854]
(%i8) plot2d ([F(x), [discrete, X, Y]], [x, -1, 6]), ''estimates;
(%o8) 
@end example

@end deffn

@defvr {Variable} lbfgs_nfeval_max
Valor por defecto: 100

@end defvr

@defvr {Variable} lbfgs_ncorrections
Valor por defecto: 25

@end defvr
