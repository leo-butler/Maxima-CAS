@menu
* Definiciones para augmented_lagrangian::
@end menu

@node Definiciones para augmented_lagrangian,  , augmented_lagrangian, augmented_lagrangian
@section Definiciones para augmented_lagrangian



@defvr {Variable opcional} niter
Valor por defecto:  10

N@'umero de iteraciones para @code{augmented_lagrangian_method}.
@end defvr


@deffn {Funci@'on} augmented_lagrangian_method (@var{FOM}, @var{xx}, @var{constraints}, @var{yy})
M@'etodo de Lagrange aumentado para optimizaci@'on con restricciones.
@var{FOM} es la funci@'on objetivo, 
@var{xx} es la lista de variables sobre las que minimizar,
@var{constraints} es una lista de expresiones iguales a cero y
@var{yy} es una lista de valores iniciales para @var{xx}.

Este c@'odigo minimiza el lagrangiano aumentado calculando
un punto estacionario de su gradiente; la t@'ecnica puede ser
mejorada con un algoritmo de gradiente conjugado o un m@'etodo
de minimizaci@'on de Newton.

Para referencias v@'eanse
@example
http://www-fp.mcs.anl.gov/otc/Guide/OptWeb/continuous/constrained/nonlinearcon/auglag.html
@end example
y
@example
http://www.cs.ubc.ca/spider/ascher/542/chap10.pdf
@end example

El paquete @code{mnewton} debe cargarse antes de llamar a la 
funci@'on @code{augmented_lagrangian_method}, a fin de que pueda
resolver @math{grad L = 0}.

Ejemplo:
@example
(%i1) load (mnewton)$

(%i2) load("augmented_lagrangian")$

(%i3) FOM: x^2 + 2*y^2;
                           2    2
(%o3)                   2 y  + x
(%i4) xx: [x, y];
(%o4)                     [x, y]
(%i5) C: [x + y - 1];
(%o5)                  [y + x - 1]
(%i6) yy: [1, 1];
(%o6)                     [1, 1]
(%i7) augmented_lagrangian_method (FOM, xx, C, yy);
(%o7)          [0.6478349834, 0.3239174917]
@end example

Antes de hacer uso de esta funci@'on ejec@'utense  @code{load("mnewton")} y @code{load("augmented_lagrangian")}. 
V@'ease tambi@'en @code{niter}.
@end deffn
