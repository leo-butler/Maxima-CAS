%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Tk Canvas Widget
%%For: Cliff
%%Title: Window .frame1.canvas
%%CreationDate: Sun Dec 16 11:40:32 2001
%%BoundingBox: 65 252 548 541
%%Pages: 1
%%DocumentData: Clean7Bit
%%Orientation: Portrait
%%DocumentNeededResources: font Times-Roman
%%+ font Helvetica
%%EndComments

%%BeginProlog
50 dict begin

% This is a standard prolog for Postscript generated by Tk's canvas
% widget.
% RCS: @(#) $Id: symaxxoutput.ps,v 1.1.1.1 2002/04/05 18:29:49 starseeker Exp $

% The definitions below just define all of the variables used in
% any of the procedures here.  This is needed for obscure reasons
% explained on p. 716 of the Postscript manual (Section H.2.7,
% "Initializing Variables," in the section on Encapsulated Postscript).

/baseline 0 def
/stipimage 0 def
/height 0 def
/justify 0 def
/lineLength 0 def
/spacing 0 def
/stipple 0 def
/strings 0 def
/xoffset 0 def
/yoffset 0 def
/tmpstip null def

% Define the array ISOLatin1Encoding (which specifies how characters are
% encoded for ISO-8859-1 fonts), if it isn't already present (Postscript
% level 2 is supposed to define it, but level 1 doesn't).

systemdict /ISOLatin1Encoding known not {
    /ISOLatin1Encoding [
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/space /exclam /quotedbl /numbersign /dollar /percent /ampersand
	    /quoteright
	/parenleft /parenright /asterisk /plus /comma /minus /period /slash
	/zero /one /two /three /four /five /six /seven
	/eight /nine /colon /semicolon /less /equal /greater /question
	/at /A /B /C /D /E /F /G
	/H /I /J /K /L /M /N /O
	/P /Q /R /S /T /U /V /W
	/X /Y /Z /bracketleft /backslash /bracketright /asciicircum /underscore
	/quoteleft /a /b /c /d /e /f /g
	/h /i /j /k /l /m /n /o
	/p /q /r /s /t /u /v /w
	/x /y /z /braceleft /bar /braceright /asciitilde /space
	/space /space /space /space /space /space /space /space
	/space /space /space /space /space /space /space /space
	/dotlessi /grave /acute /circumflex /tilde /macron /breve /dotaccent
	/dieresis /space /ring /cedilla /space /hungarumlaut /ogonek /caron
	/space /exclamdown /cent /sterling /currency /yen /brokenbar /section
	/dieresis /copyright /ordfeminine /guillemotleft /logicalnot /hyphen
	    /registered /macron
	/degree /plusminus /twosuperior /threesuperior /acute /mu /paragraph
	    /periodcentered
	/cedillar /onesuperior /ordmasculine /guillemotright /onequarter
	    /onehalf /threequarters /questiondown
	/Agrave /Aacute /Acircumflex /Atilde /Adieresis /Aring /AE /Ccedilla
	/Egrave /Eacute /Ecircumflex /Edieresis /Igrave /Iacute /Icircumflex
	    /Idieresis
	/Eth /Ntilde /Ograve /Oacute /Ocircumflex /Otilde /Odieresis /multiply
	/Oslash /Ugrave /Uacute /Ucircumflex /Udieresis /Yacute /Thorn
	    /germandbls
	/agrave /aacute /acircumflex /atilde /adieresis /aring /ae /ccedilla
	/egrave /eacute /ecircumflex /edieresis /igrave /iacute /icircumflex
	    /idieresis
	/eth /ntilde /ograve /oacute /ocircumflex /otilde /odieresis /divide
	/oslash /ugrave /uacute /ucircumflex /udieresis /yacute /thorn
	    /ydieresis
    ] def
} if

% font ISOEncode font
% This procedure changes the encoding of a font from the default
% Postscript encoding to ISOLatin1.  It's typically invoked just
% before invoking "setfont".  The body of this procedure comes from
% Section 5.6.1 of the Postscript book.

/ISOEncode {
    dup length dict begin
	{1 index /FID ne {def} {pop pop} ifelse} forall
	/Encoding ISOLatin1Encoding def
	currentdict
    end

    % I'm not sure why it's necessary to use "definefont" on this new
    % font, but it seems to be important; just use the name "Temporary"
    % for the font.

    /Temporary exch definefont
} bind def

% StrokeClip
%
% This procedure converts the current path into a clip area under
% the assumption of stroking.  It's a bit tricky because some Postscript
% interpreters get errors during strokepath for dashed lines.  If
% this happens then turn off dashes and try again.

/StrokeClip {
    {strokepath} stopped {
	(This Postscript printer gets limitcheck overflows when) =
	(stippling dashed lines;  lines will be printed solid instead.) =
	[] 0 setdash strokepath} if
    clip
} bind def

% desiredSize EvenPixels closestSize
%
% The procedure below is used for stippling.  Given the optimal size
% of a dot in a stipple pattern in the current user coordinate system,
% compute the closest size that is an exact multiple of the device's
% pixel size.  This allows stipple patterns to be displayed without
% aliasing effects.

/EvenPixels {
    % Compute exact number of device pixels per stipple dot.
    dup 0 matrix currentmatrix dtransform
    dup mul exch dup mul add sqrt

    % Round to an integer, make sure the number is at least 1, and compute
    % user coord distance corresponding to this.
    dup round dup 1 lt {pop 1} if
    exch div mul
} bind def

% width height string StippleFill --
%
% Given a path already set up and a clipping region generated from
% it, this procedure will fill the clipping region with a stipple
% pattern.  "String" contains a proper image description of the
% stipple pattern and "width" and "height" give its dimensions.  Each
% stipple dot is assumed to be about one unit across in the current
% user coordinate system.  This procedure trashes the graphics state.

/StippleFill {
    % The following code is needed to work around a NeWSprint bug.

    /tmpstip 1 index def

    % Change the scaling so that one user unit in user coordinates
    % corresponds to the size of one stipple dot.
    1 EvenPixels dup scale

    % Compute the bounding box occupied by the path (which is now
    % the clipping region), and round the lower coordinates down
    % to the nearest starting point for the stipple pattern.  Be
    % careful about negative numbers, since the rounding works
    % differently on them.

    pathbbox
    4 2 roll
    5 index div dup 0 lt {1 sub} if cvi 5 index mul 4 1 roll
    6 index div dup 0 lt {1 sub} if cvi 6 index mul 3 2 roll

    % Stack now: width height string y1 y2 x1 x2
    % Below is a doubly-nested for loop to iterate across this area
    % in units of the stipple pattern size, going up columns then
    % across rows, blasting out a stipple-pattern-sized rectangle at
    % each position

    6 index exch {
	2 index 5 index 3 index {
	    % Stack now: width height string y1 y2 x y

	    gsave
	    1 index exch translate
	    5 index 5 index true matrix tmpstip imagemask
	    grestore
	} for
	pop
    } for
    pop pop pop pop pop
} bind def

% -- AdjustColor --
% Given a color value already set for output by the caller, adjusts
% that value to a grayscale or mono value if requested by the CL
% variable.

/AdjustColor {
    CL 2 lt {
	currentgray
	CL 0 eq {
	    .5 lt {0} {1} ifelse
	} if
	setgray
    } if
} bind def

% x y strings spacing xoffset yoffset justify stipple DrawText --
% This procedure does all of the real work of drawing text.  The
% color and font must already have been set by the caller, and the
% following arguments must be on the stack:
%
% x, y -	Coordinates at which to draw text.
% strings -	An array of strings, one for each line of the text item,
%		in order from top to bottom.
% spacing -	Spacing between lines.
% xoffset -	Horizontal offset for text bbox relative to x and y: 0 for
%		nw/w/sw anchor, -0.5 for n/center/s, and -1.0 for ne/e/se.
% yoffset -	Vertical offset for text bbox relative to x and y: 0 for
%		nw/n/ne anchor, +0.5 for w/center/e, and +1.0 for sw/s/se.
% justify -	0 for left justification, 0.5 for center, 1 for right justify.
% stipple -	Boolean value indicating whether or not text is to be
%		drawn in stippled fashion.  If text is stippled,
%		procedure StippleText must have been defined to call
%		StippleFill in the right way.
%
% Also, when this procedure is invoked, the color and font must already
% have been set for the text.

/DrawText {
    /stipple exch def
    /justify exch def
    /yoffset exch def
    /xoffset exch def
    /spacing exch def
    /strings exch def

    % First scan through all of the text to find the widest line.

    /lineLength 0 def
    strings {
	stringwidth pop
	dup lineLength gt {/lineLength exch def} {pop} ifelse
	newpath
    } forall

    % Compute the baseline offset and the actual font height.

    0 0 moveto (TXygqPZ) false charpath
    pathbbox dup /baseline exch def
    exch pop exch sub /height exch def pop
    newpath

    % Translate coordinates first so that the origin is at the upper-left
    % corner of the text's bounding box. Remember that x and y for
    % positioning are still on the stack.

    translate
    lineLength xoffset mul
    strings length 1 sub spacing mul height add yoffset mul translate

    % Now use the baseline and justification information to translate so
    % that the origin is at the baseline and positioning point for the
    % first line of text.

    justify lineLength mul baseline neg translate

    % Iterate over each of the lines to output it.  For each line,
    % compute its width again so it can be properly justified, then
    % display it.

    strings {
	dup stringwidth pop
	justify neg mul 0 moveto
	stipple {

	    % The text is stippled, so turn it into a path and print
	    % by calling StippledText, which in turn calls StippleFill.
	    % Unfortunately, many Postscript interpreters will get
	    % overflow errors if we try to do the whole string at
	    % once, so do it a character at a time.

	    gsave
	    /char (X) def
	    {
		char 0 3 -1 roll put
		currentpoint
		gsave
		char true charpath clip StippleText
		grestore
		char stringwidth translate
		moveto
	    } forall
	    grestore
	} {show} ifelse
	0 spacing neg translate
    } forall
} bind def

%%EndProlog
%%BeginSetup
/CL 2 def
%%IncludeResource: font Times-Roman
%%IncludeResource: font Helvetica
%%EndSetup

%%Page: 1 1
save
306.0 396.0 translate
0.8018 0.8018 scale
-667 -179 translate
367 359 moveto 968 359 lineto 968 0 lineto 367 0 lineto closepath clip newpath
gsave
750 140.857469437304 moveto
750 213 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.678 0.847 0.902 setrgbcolor AdjustColor
stroke
750 136 moveto
753.501 146.001 lineto
750.5 144.286632676378 lineto
749.5 144.286632676378 lineto
746.499 146.001 lineto
750 136 lineto
fill
grestore
gsave
368 358 moveto 28 0 rlineto 0 -12 rlineto -28 0 rlineto closepath
1.000 1.000 1.000 setrgbcolor AdjustColor
fill
368 358 moveto 28 0 rlineto 0 -12 rlineto -28 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
368 352 [
( ID 1 )
] 14 -0 0.5 0 false DrawText
grestore
gsave
397 358 moveto 57 0 rlineto 0 -12 rlineto -57 0 rlineto closepath
0.000 1.000 0.000 setrgbcolor AdjustColor
fill
397 358 moveto 57 0 rlineto 0 -12 rlineto -57 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
397 352 [
( AutoExec )
] 14 -0 0.5 0 false DrawText
grestore
gsave
368 345 moveto 262 0 rlineto 0 -15 rlineto -262 0 rlineto closepath
0.937 0.922 0.937 setrgbcolor AdjustColor
fill
368 345 moveto 262 0 rlineto 0 -15 rlineto -262 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.937 0.922 0.937 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
368 338 [
(gnuplot)
] 14 -0 0.5 0 false DrawText
grestore
gsave
409 345 moveto
406 342 lineto
406 334 lineto
409 331 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
410 338 [
(SIN)
] 14 -0 0.5 0 false DrawText
grestore
gsave
434 344 moveto
431 341 lineto
431 335 lineto
434 332 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
435 338 [
(x)
] 14 -0 0.5 0 false DrawText
grestore
gsave
441 344 moveto
444 341 lineto
444 335 lineto
441 332 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
448 338 [
(,)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
452 338 [
(x)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
459 338 [
(,)
] 14 -0 0.5 0 false DrawText
grestore
gsave
466 344 moveto
463 344 lineto
463 332 lineto
466 332 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
467 338 [
(0)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
474 338 [
(,)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
478 338 [
(20)
] 14 -0 0.5 0 false DrawText
grestore
gsave
490 344 moveto
493 344 lineto
493 332 lineto
490 332 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
495 338 [
(,)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
499 338 [
(101)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
518 338 [
(,)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
522 338 [
("GnuPlotDemo.eps")
] 14 -0 0.5 0 false DrawText
grestore
gsave
624 345 moveto
627 342 lineto
627 334 lineto
624 331 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
 /showpage 	% - showpage - 
{ %def 
gsave 
grestore 
} bind def
 save gsave 367 329 translate 1 1 scale -50 -302 translate
 %!PS-Adobe-2.0 EPSF-2.0
 %%Title: /home/cliff/.symaxx/Demo/GnuPlotDemo.eps
 %%Creator: gnuplot 3.7 patchlevel 1
 %%CreationDate: Sun Dec 16 11:31:20 2001
 %%DocumentFonts: (atend)
 %%BoundingBox: 50 50 410 302
 %%Orientation: Portrait
 %%EndComments
 /gnudict 256 dict def
 gnudict begin
 /Color false def
 /Solid false def
 /gnulinewidth 5.000 def
 /userlinewidth gnulinewidth def
 /vshift -46 def
 /dl {10 mul} def
 /hpt_ 31.5 def
 /vpt_ 31.5 def
 /hpt hpt_ def
 /vpt vpt_ def
 /M {moveto} bind def
 /L {lineto} bind def
 /R {rmoveto} bind def
 /V {rlineto} bind def
 /vpt2 vpt 2 mul def
 /hpt2 hpt 2 mul def
 /Lshow { currentpoint stroke M
   0 vshift R show } def
 /Rshow { currentpoint stroke M
   dup stringwidth pop neg vshift R show } def
 /Cshow { currentpoint stroke M
   dup stringwidth pop -2 div vshift R show } def
 /UP { dup vpt_ mul /vpt exch def hpt_ mul /hpt exch def
   /hpt2 hpt 2 mul def /vpt2 vpt 2 mul def } def
 /DL { Color {setrgbcolor Solid {pop []} if 0 setdash }
  {pop pop pop Solid {pop []} if 0 setdash} ifelse } def
 /BL { stroke userlinewidth 2 mul setlinewidth } def
 /AL { stroke userlinewidth 2 div setlinewidth } def
 /UL { dup gnulinewidth mul /userlinewidth exch def
       10 mul /udl exch def } def
 /PL { stroke userlinewidth setlinewidth } def
 /LTb { BL [] 0 0 0 DL } def
 /LTa { AL [1 udl mul 2 udl mul] 0 setdash 0 0 0 setrgbcolor } def
 /LT0 { PL [] 1 0 0 DL } def
 /LT1 { PL [4 dl 2 dl] 0 1 0 DL } def
 /LT2 { PL [2 dl 3 dl] 0 0 1 DL } def
 /LT3 { PL [1 dl 1.5 dl] 1 0 1 DL } def
 /LT4 { PL [5 dl 2 dl 1 dl 2 dl] 0 1 1 DL } def
 /LT5 { PL [4 dl 3 dl 1 dl 3 dl] 1 1 0 DL } def
 /LT6 { PL [2 dl 2 dl 2 dl 4 dl] 0 0 0 DL } def
 /LT7 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 1 0.3 0 DL } def
 /LT8 { PL [2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 2 dl 4 dl] 0.5 0.5 0.5 DL } def
 /Pnt { stroke [] 0 setdash
    gsave 1 setlinecap M 0 0 V stroke grestore } def
 /Dia { stroke [] 0 setdash 2 copy vpt add M
   hpt neg vpt neg V hpt vpt neg V
   hpt vpt V hpt neg vpt V closepath stroke
   Pnt } def
 /Pls { stroke [] 0 setdash vpt sub M 0 vpt2 V
   currentpoint stroke M
   hpt neg vpt neg R hpt2 0 V stroke
   } def
 /Box { stroke [] 0 setdash 2 copy exch hpt sub exch vpt add M
   0 vpt2 neg V hpt2 0 V 0 vpt2 V
   hpt2 neg 0 V closepath stroke
   Pnt } def
 /Crs { stroke [] 0 setdash exch hpt sub exch vpt add M
   hpt2 vpt2 neg V currentpoint stroke M
   hpt2 neg 0 R hpt2 vpt2 V stroke } def
 /TriU { stroke [] 0 setdash 2 copy vpt 1.12 mul add M
   hpt neg vpt -1.62 mul V
   hpt 2 mul 0 V
   hpt neg vpt 1.62 mul V closepath stroke
   Pnt  } def
 /Star { 2 copy Pls Crs } def
 /BoxF { stroke [] 0 setdash exch hpt sub exch vpt add M
   0 vpt2 neg V  hpt2 0 V  0 vpt2 V
   hpt2 neg 0 V  closepath fill } def
 /TriUF { stroke [] 0 setdash vpt 1.12 mul add M
   hpt neg vpt -1.62 mul V
   hpt 2 mul 0 V
   hpt neg vpt 1.62 mul V closepath fill } def
 /TriD { stroke [] 0 setdash 2 copy vpt 1.12 mul sub M
   hpt neg vpt 1.62 mul V
   hpt 2 mul 0 V
   hpt neg vpt -1.62 mul V closepath stroke
   Pnt  } def
 /TriDF { stroke [] 0 setdash vpt 1.12 mul sub M
   hpt neg vpt 1.62 mul V
   hpt 2 mul 0 V
   hpt neg vpt -1.62 mul V closepath fill} def
 /DiaF { stroke [] 0 setdash vpt add M
   hpt neg vpt neg V hpt vpt neg V
   hpt vpt V hpt neg vpt V closepath fill } def
 /Pent { stroke [] 0 setdash 2 copy gsave
   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
   closepath stroke grestore Pnt } def
 /PentF { stroke [] 0 setdash gsave
   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
   closepath fill grestore } def
 /Circle { stroke [] 0 setdash 2 copy
   hpt 0 360 arc stroke Pnt } def
 /CircleF { stroke [] 0 setdash hpt 0 360 arc fill } def
 /C0 { BL [] 0 setdash 2 copy moveto vpt 90 450  arc } bind def
 /C1 { BL [] 0 setdash 2 copy        moveto
        2 copy  vpt 0 90 arc closepath fill
                vpt 0 360 arc closepath } bind def
 /C2 { BL [] 0 setdash 2 copy moveto
        2 copy  vpt 90 180 arc closepath fill
                vpt 0 360 arc closepath } bind def
 /C3 { BL [] 0 setdash 2 copy moveto
        2 copy  vpt 0 180 arc closepath fill
                vpt 0 360 arc closepath } bind def
 /C4 { BL [] 0 setdash 2 copy moveto
        2 copy  vpt 180 270 arc closepath fill
                vpt 0 360 arc closepath } bind def
 /C5 { BL [] 0 setdash 2 copy moveto
        2 copy  vpt 0 90 arc
        2 copy moveto
        2 copy  vpt 180 270 arc closepath fill
                vpt 0 360 arc } bind def
 /C6 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 90 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
 /C7 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 0 270 arc closepath fill
               vpt 0 360 arc closepath } bind def
 /C8 { BL [] 0 setdash 2 copy moveto
       2 copy vpt 270 360 arc closepath fill
               vpt 0 360 arc closepath } bind def
 /C9 { BL [] 0 setdash 2 copy moveto
       2 copy  vpt 270 450 arc closepath fill
               vpt 0 360 arc closepath } bind def
 /C10 { BL [] 0 setdash 2 copy 2 copy moveto vpt 270 360 arc closepath fill
        2 copy moveto
        2 copy vpt 90 180 arc closepath fill
                vpt 0 360 arc closepath } bind def
 /C11 { BL [] 0 setdash 2 copy moveto
        2 copy  vpt 0 180 arc closepath fill
        2 copy moveto
        2 copy  vpt 270 360 arc closepath fill
                vpt 0 360 arc closepath } bind def
 /C12 { BL [] 0 setdash 2 copy moveto
        2 copy  vpt 180 360 arc closepath fill
                vpt 0 360 arc closepath } bind def
 /C13 { BL [] 0 setdash  2 copy moveto
        2 copy  vpt 0 90 arc closepath fill
        2 copy moveto
        2 copy  vpt 180 360 arc closepath fill
                vpt 0 360 arc closepath } bind def
 /C14 { BL [] 0 setdash 2 copy moveto
        2 copy  vpt 90 360 arc closepath fill
                vpt 0 360 arc } bind def
 /C15 { BL [] 0 setdash 2 copy vpt 0 360 arc closepath fill
                vpt 0 360 arc closepath } bind def
 /Rec   { newpath 4 2 roll moveto 1 index 0 rlineto 0 exch rlineto
        neg 0 rlineto closepath } bind def
 /Square { dup Rec } bind def
 /Bsquare { vpt sub exch vpt sub exch vpt2 Square } bind def
 /S0 { BL [] 0 setdash 2 copy moveto 0 vpt rlineto BL Bsquare } bind def
 /S1 { BL [] 0 setdash 2 copy vpt Square fill Bsquare } bind def
 /S2 { BL [] 0 setdash 2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
 /S3 { BL [] 0 setdash 2 copy exch vpt sub exch vpt2 vpt Rec fill Bsquare } bind def
 /S4 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
 /S5 { BL [] 0 setdash 2 copy 2 copy vpt Square fill
        exch vpt sub exch vpt sub vpt Square fill Bsquare } bind def
 /S6 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill Bsquare } bind def
 /S7 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt vpt2 Rec fill
        2 copy vpt Square fill
        Bsquare } bind def
 /S8 { BL [] 0 setdash 2 copy vpt sub vpt Square fill Bsquare } bind def
 /S9 { BL [] 0 setdash 2 copy vpt sub vpt vpt2 Rec fill Bsquare } bind def
 /S10 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt Square fill
        Bsquare } bind def
 /S11 { BL [] 0 setdash 2 copy vpt sub vpt Square fill 2 copy exch vpt sub exch vpt2 vpt Rec fill
        Bsquare } bind def
 /S12 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill Bsquare } bind def
 /S13 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
        2 copy vpt Square fill Bsquare } bind def
 /S14 { BL [] 0 setdash 2 copy exch vpt sub exch vpt sub vpt2 vpt Rec fill
        2 copy exch vpt sub exch vpt Square fill Bsquare } bind def
 /S15 { BL [] 0 setdash 2 copy Bsquare fill Bsquare } bind def
 /D0 { gsave translate 45 rotate 0 0 S0 stroke grestore } bind def
 /D1 { gsave translate 45 rotate 0 0 S1 stroke grestore } bind def
 /D2 { gsave translate 45 rotate 0 0 S2 stroke grestore } bind def
 /D3 { gsave translate 45 rotate 0 0 S3 stroke grestore } bind def
 /D4 { gsave translate 45 rotate 0 0 S4 stroke grestore } bind def
 /D5 { gsave translate 45 rotate 0 0 S5 stroke grestore } bind def
 /D6 { gsave translate 45 rotate 0 0 S6 stroke grestore } bind def
 /D7 { gsave translate 45 rotate 0 0 S7 stroke grestore } bind def
 /D8 { gsave translate 45 rotate 0 0 S8 stroke grestore } bind def
 /D9 { gsave translate 45 rotate 0 0 S9 stroke grestore } bind def
 /D10 { gsave translate 45 rotate 0 0 S10 stroke grestore } bind def
 /D11 { gsave translate 45 rotate 0 0 S11 stroke grestore } bind def
 /D12 { gsave translate 45 rotate 0 0 S12 stroke grestore } bind def
 /D13 { gsave translate 45 rotate 0 0 S13 stroke grestore } bind def
 /D14 { gsave translate 45 rotate 0 0 S14 stroke grestore } bind def
 /D15 { gsave translate 45 rotate 0 0 S15 stroke grestore } bind def
 /DiaE { stroke [] 0 setdash vpt add M
   hpt neg vpt neg V hpt vpt neg V
   hpt vpt V hpt neg vpt V closepath stroke } def
 /BoxE { stroke [] 0 setdash exch hpt sub exch vpt add M
   0 vpt2 neg V hpt2 0 V 0 vpt2 V
   hpt2 neg 0 V closepath stroke } def
 /TriUE { stroke [] 0 setdash vpt 1.12 mul add M
   hpt neg vpt -1.62 mul V
   hpt 2 mul 0 V
   hpt neg vpt 1.62 mul V closepath stroke } def
 /TriDE { stroke [] 0 setdash vpt 1.12 mul sub M
   hpt neg vpt 1.62 mul V
   hpt 2 mul 0 V
   hpt neg vpt -1.62 mul V closepath stroke } def
 /PentE { stroke [] 0 setdash gsave
   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
   closepath stroke grestore } def
 /CircE { stroke [] 0 setdash 
   hpt 0 360 arc stroke } def
 /Opaque { gsave closepath 1 setgray fill grestore 0 setgray closepath } def
 /DiaW { stroke [] 0 setdash vpt add M
   hpt neg vpt neg V hpt vpt neg V
   hpt vpt V hpt neg vpt V Opaque stroke } def
 /BoxW { stroke [] 0 setdash exch hpt sub exch vpt add M
   0 vpt2 neg V hpt2 0 V 0 vpt2 V
   hpt2 neg 0 V Opaque stroke } def
 /TriUW { stroke [] 0 setdash vpt 1.12 mul add M
   hpt neg vpt -1.62 mul V
   hpt 2 mul 0 V
   hpt neg vpt 1.62 mul V Opaque stroke } def
 /TriDW { stroke [] 0 setdash vpt 1.12 mul sub M
   hpt neg vpt 1.62 mul V
   hpt 2 mul 0 V
   hpt neg vpt -1.62 mul V Opaque stroke } def
 /PentW { stroke [] 0 setdash gsave
   translate 0 hpt M 4 {72 rotate 0 hpt L} repeat
   Opaque stroke grestore } def
 /CircW { stroke [] 0 setdash 
   hpt 0 360 arc Opaque stroke } def
 /BoxFill { gsave Rec 1 setgray fill grestore } def
 end
 %%EndProlog
 gnudict begin
 gsave
 50 50 translate
 0.050 0.050 scale
 0 setgray
 newpath
 (Helvetica) findfont 140 scalefont setfont
 1.000 UL
 LTb
 574 280 M
 63 0 V
 6325 0 R
 -63 0 V
 490 280 M
 (-1) Rshow
 574 714 M
 63 0 V
 6325 0 R
 -63 0 V
 490 714 M
 (-0.8) Rshow
 574 1148 M
 63 0 V
 6325 0 R
 -63 0 V
 -6409 0 R
 (-0.6) Rshow
 574 1582 M
 63 0 V
 6325 0 R
 -63 0 V
 -6409 0 R
 (-0.4) Rshow
 574 2016 M
 63 0 V
 6325 0 R
 -63 0 V
 -6409 0 R
 (-0.2) Rshow
 574 2450 M
 63 0 V
 6325 0 R
 -63 0 V
 -6409 0 R
 (0) Rshow
 574 2884 M
 63 0 V
 6325 0 R
 -63 0 V
 -6409 0 R
 (0.2) Rshow
 574 3318 M
 63 0 V
 6325 0 R
 -63 0 V
 -6409 0 R
 (0.4) Rshow
 574 3752 M
 63 0 V
 6325 0 R
 -63 0 V
 -6409 0 R
 (0.6) Rshow
 574 4186 M
 63 0 V
 6325 0 R
 -63 0 V
 -6409 0 R
 (0.8) Rshow
 574 4620 M
 63 0 V
 6325 0 R
 -63 0 V
 -6409 0 R
 (1) Rshow
 574 280 M
 0 63 V
 0 4277 R
 0 -63 V
 574 140 M
 (0) Cshow
 1213 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (2) Cshow
 1852 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (4) Cshow
 2490 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (6) Cshow
 3129 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (8) Cshow
 3768 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (10) Cshow
 4407 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (12) Cshow
 5046 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (14) Cshow
 5684 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (16) Cshow
 6323 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (18) Cshow
 6962 280 M
 0 63 V
 0 4277 R
 0 -63 V
 0 -4417 R
 (20) Cshow
 1.000 UL
 LTb
 574 280 M
 6388 0 V
 0 4340 V
 -6388 0 V
 574 280 L
 3768 4830 M
 (SIN\(x\)) Cshow
 1.000 UL
 LT0
 6311 4487 M
 ('/tmp/symaxx2tmp60493071008522857/Plot.data') Rshow
 6395 4487 M
 399 0 V
 574 2450 M
 63 427 V
 63 410 V
 64 378 V
 63 330 V
 63 269 V
 63 199 V
 64 120 V
 63 37 V
 63 -48 V
 63 -131 V
 64 -209 V
 63 -279 V
 63 -337 V
 63 -383 V
 64 -413 V
 63 -428 V
 63 -426 V
 63 -406 V
 64 -372 V
 63 -323 V
 63 -260 V
 63 -189 V
 64 -109 V
 63 -25 V
 63 59 V
 63 142 V
 64 219 V
 63 287 V
 63 344 V
 63 388 V
 64 416 V
 63 429 V
 63 424 V
 63 403 V
 64 366 V
 63 315 V
 63 251 V
 63 178 V
 64 98 V
 63 14 V
 63 -71 V
 63 -152 V
 64 -229 V
 63 -295 V
 63 -351 V
 63 -393 V
 64 -419 V
 63 -429 V
 63 -422 V
 63 -399 V
 64 -360 V
 63 -307 V
 63 -242 V
 63 -167 V
 64 -87 V
 63 -3 V
 63 83 V
 63 163 V
 64 238 V
 63 304 V
 63 357 V
 63 397 V
 64 422 V
 63 429 V
 63 419 V
 63 395 V
 64 354 V
 63 298 V
 63 233 V
 63 157 V
 64 75 V
 63 -9 V
 63 -93 V
 63 -174 V
 64 -247 V
 63 -312 V
 63 -364 V
 63 -401 V
 64 -423 V
 63 -429 V
 63 -418 V
 63 -389 V
 64 -347 V
 63 -291 V
 63 -223 V
 63 -146 V
 64 -64 V
 63 20 V
 63 105 V
 63 184 V
 64 257 V
 63 320 V
 63 369 V
 63 405 V
 64 425 V
 63 428 V
 63 415 V
 63 385 V
 64 340 V
 63 282 V
 stroke
 grestore
 end
 showpage
 %%Trailer
 %%DocumentFonts: Helvetica
 grestore restore
 
gsave
368 74.9999999999999 moveto 209 0 rlineto 0 -71.9999999999999 rlineto -209 0 rlineto closepath
0.620 0.620 1.000 setrgbcolor AdjustColor
fill
368 74.9999999999999 moveto 209 0 rlineto 0 -71.9999999999999 rlineto -209 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.620 0.620 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
368 68.9999999999999 [
(Arguments:)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
368 57 [
(* sin\050x\051 function)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
368 45 [
(* x variable)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
368 33 [
(* [0,20] start - stop)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
368 21 [
(* 101 - number of points)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
368 9 [
(* "test.eps" filename in working directory)
] 14 -0 0.5 0 false DrawText
grestore
gsave
530 299 moveto 117 0 rlineto 0 -12 rlineto -117 0 rlineto closepath
0.620 0.620 1.000 setrgbcolor AdjustColor
fill
530 299 moveto 117 0 rlineto 0 -12 rlineto -117 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.620 0.620 1.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
530 293 [
("Plots a sine-function")
] 14 -0 0.5 0 false DrawText
grestore
gsave
760 337 moveto 28 0 rlineto 0 -12 rlineto -28 0 rlineto closepath
1.000 1.000 1.000 setrgbcolor AdjustColor
fill
760 337 moveto 28 0 rlineto 0 -12 rlineto -28 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
760 331 [
( ID 3 )
] 14 -0 0.5 0 false DrawText
grestore
gsave
760 323 moveto 62.7 0 rlineto 0 -42 rlineto -62.7 0 rlineto closepath
0.937 0.922 0.937 setrgbcolor AdjustColor
fill
760 323 moveto 62.7 0 rlineto 0 -42 rlineto -62.7 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.937 0.922 0.937 setrgbcolor AdjustColor
stroke
grestore
gsave
760 288 moveto
763 282 lineto
766 288 lineto
766 316 lineto
769 322 lineto
772 316 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
784.85 316 [
(1)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
774.35 288 [
(1)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
781.35 288 [
(+)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
789.35 288 [
(x)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
795.35 300 [
(3)
] 14 -0 0.5 0 false DrawText
grestore
gsave
773 308 moveto
801.7 308 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
803.7 314 moveto 12 0 rlineto 0 -12 rlineto -12 0 rlineto closepath
0.937 0.922 0.937 setrgbcolor AdjustColor
fill
803.7 314 moveto 12 0 rlineto 0 -12 rlineto -12 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.937 0.922 0.937 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
803.7 308 [
( d )
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
816.7 308 [
(x)
] 14 -0 0.5 0 false DrawText
grestore
 /showpage 	% - showpage - 
{ %def 
gsave 
grestore 
} bind def
 save gsave 759 280 translate 1 1 scale -3568 -710 translate
 %!PS-Adobe-2.0 EPSF-2.0
 %%Creator: dvips(k) 5.86 Copyright 1999 Radical Eye Software
 %%Title: /tmp/symaxx2tmp60493071008522857/TEXPICRES3.dvi
 %%BoundingBox: 3568 681 3775 710
 %%EndComments
 %DVIPSWebPage: (www.radicaleye.com)
 %DVIPSCommandLine: dvips -E
 %+ -o/tmp/symaxx2tmp60493071008522857/TEXPICRES3.eps
 %+ /tmp/symaxx2tmp60493071008522857/TEXPICRES3.dvi
 %DVIPSParameters: dpi=600, compressed
 %DVIPSSource:  TeX output 2001.12.16:1133
 %%BeginProcSet: texc.pro
 %!
 /TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
 N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
 mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
 0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
 landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
 mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
 matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
 exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
 statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
 N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
 /FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
 /BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
 array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
 df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
 definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
 }B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
 B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
 1 add N}if}B/id 0 N/rw 0 N/rc 0 N/gp 0 N/cp 0 N/G 0 N/CharBuilder{save 3
 1 roll S A/base get 2 index get S/BitMaps get S get/Cd X pop/ctr 0 N Cdx
 0 Cx Cy Ch sub Cx Cw add Cy setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx
 sub Cy .1 sub]/id Ci N/rw Cw 7 add 8 idiv string N/rc 0 N/gp 0 N/cp 0 N{
 rc 0 ne{rc 1 sub/rc X rw}{G}ifelse}imagemask restore}B/G{{id gp get/gp
 gp 1 add N A 18 mod S 18 idiv pl S get exec}loop}B/adv{cp add/cp X}B
 /chg{rw cp id gp 4 index getinterval putinterval A gp add/gp X adv}B/nd{
 /cp 0 N rw exit}B/lsh{rw cp 2 copy get A 0 eq{pop 1}{A 255 eq{pop 254}{
 A A add 255 and S 1 and or}ifelse}ifelse put 1 adv}B/rsh{rw cp 2 copy
 get A 0 eq{pop 128}{A 255 eq{pop 127}{A 2 idiv S 128 and or}ifelse}
 ifelse put 1 adv}B/clr{rw cp 2 index string putinterval adv}B/set{rw cp
 fillstr 0 4 index getinterval putinterval adv}B/fillstr 18 string 0 1 17
 {2 copy 255 put pop}for N/pl[{adv 1 chg}{adv 1 chg nd}{1 add chg}{1 add
 chg nd}{adv lsh}{adv lsh nd}{adv rsh}{adv rsh nd}{1 add adv}{/rc X nd}{
 1 add set}{1 add clr}{adv 2 chg}{adv 2 chg nd}{pop nd}]A{bind pop}
 forall N/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
 /BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
 }if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
 bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
 mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
 SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
 userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
 1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
 index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
 /p{show}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0 N/Ry 0 N/V{}B/RV/v{
 /Ry X/Rx X V}B statusdict begin/product where{pop false[(Display)(NeXT)
 (LaserWriter 16/600)]{A length product length le{A length product exch 0
 exch getinterval eq{pop true exit}if}{pop}ifelse}forall}{false}ifelse
 end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{BDot}imagemask
 grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat{BDot}
 imagemask grestore}}ifelse B/QV{gsave newpath transform round exch round
 exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0 rlineto
 fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B/M{S p
 delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}B/g{0 M}
 B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p -3 w}B/n{
 p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{0 S
 rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end
 
 %%EndProcSet
 TeXDict begin 40258437 52099154 1000 600 600
 (/tmp/symaxx2tmp60493071008522857/TEXPICRES3.dvi) @start
 %DVIPSBitmapFont: Fa cmsy7 7 2
 /Fa 2 113 df<B712FEA327037A8F34>0 D<186018E0170118C0170318801707EF0F0017
 0E171E171C173C17381778177017F05F16014C5A5F160794C7FC5E160E161E161C163C16
 38486C147800075DD81FC05C003F1401D8F7E05C00C31403D803F05C000114076D91C8FC
 00005C6D130E017C131E017E5B013E1338013F13786D1370EC80F0010F5B14C101075B14
 E301035B14F76DB4C9FC5C13005C147C14781438333A7B8237>112
 D E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Fb cmmi7 7 1
 /Fb 1 121 df<90387C03C03901FF0FF03907079C30390E03B078000CEBF0F8001813E1
 123015F0396007C0E015001200A2495AA449C7FC15301238007C1460EAFC3E15C0EAF87E
 39F06F03803970C70700383F83FE381F01F81D1B7D9926>120 D
 E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Fc cmr7 7 3
 /Fc 3 52 df<13381378EA01F8121F12FE12E01200B3AB487EB512F8A215267BA521>49
 D<13FF000313E0380E03F0381800F848137C48137E00787F12FC6CEB1F80A4127CC7FC15
 005C143E147E147C5C495A495A5C495A010EC7FC5B5B903870018013E0EA018039030003
 0012065A001FB5FC5A485BB5FCA219267DA521>I<13FF000313E0380F01F8381C007C00
 30137E003C133E007E133FA4123CC7123E147E147C5C495AEB07E03801FF8091C7FC3800
 01E06D7E147C80143F801580A21238127C12FEA21500485B0078133E00705B6C5B381F01
 F03807FFC0C690C7FC19277DA521>I E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Fd cmmi10 10 1
 /Fd 1 121 df<903907E001F090391FF807FC9039783E0E0F9039E01F1C1FD801C09038
 383F803A03800FF07F0100EBE0FF5A000E4A1300000C157E021F133C001C4AC7FC1218A2
 C7123FA292C8FCA25CA2147EA214FEA24A130CA20101141C001E1518003F5BD87F811438
 01835C00FF1560010714E03AFE0E7C01C0D87C1C495A2778383E0FC7FC391FF00FFC3907
 C003F029267EA42F>120 D E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Fe cmex10 10 2
 /Fe 2 2 df<1430147014E0EB01C01303EB0780EB0F00A2131E5BA25B13F85B12015B12
 03A2485AA3485AA3121F90C7FCA25AA3123EA2127EA6127C12FCB3A2127C127EA6123EA2
 123FA37EA27F120FA36C7EA36C7EA212017F12007F13787FA27F7FA2EB0780EB03C01301
 EB00E0147014301462738226>0 D<12C07E12707E123C7E7EA26C7E6C7EA26C7E7F1200
 7F1378137CA27FA37FA31480130FA214C0A31307A214E0A6130314F0B3A214E01307A614
 C0A2130FA31480A2131F1400A3133EA35BA2137813F85B12015B485AA2485A48C7FCA212
 1E5A12385A5A5A14627C8226>I E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Ff cmr10 10 14
 /Ff 14 117 df<146014E0EB01C0EB0380EB0700130E131E5B5BA25B485AA2485AA21207
 5B120F90C7FCA25A121EA2123EA35AA65AB2127CA67EA3121EA2121F7EA27F12077F1203
 A26C7EA26C7E1378A27F7F130E7FEB0380EB01C0EB00E01460135278BD20>40
 D<12C07E12707E7E7E120F6C7E6C7EA26C7E6C7EA21378A2137C133C133E131EA2131F7F
 A21480A3EB07C0A6EB03E0B2EB07C0A6EB0F80A31400A25B131EA2133E133C137C1378A2
 5BA2485A485AA2485A48C7FC120E5A5A5A5A5A13527CBD20>I<15301578B3A6007FB812
 F8B912FCA26C17F8C80078C8FCB3A6153036367BAF41>43 D<EB01C013031307131F13FF
 B5FCA2131F1200B3B3A8497E007FB512F0A31C3879B72A>49 D<EB07F8EB3FFF4913C039
 01F80FF03903C007F848486C7E380E0001000F80381FE0006D7FA56C5A6C5AC85A1401A2
 5D4A5AA24A5A5DEC0F80027EC7FCEB1FFCECFF809038000FE06E7EEC01FC816E7EED7F80
 A216C0A2153F16E0A2121EEA7F80487EA416C049137F007F1580007EC7FC0070ECFF006C
 495A121E390F8003F83907F00FF00001B512C06C6C90C7FCEB0FF8233A7DB72A>51
 D<EC3FC0903801FFF0010713FC90380FE03E90383F800790387E001F49EB3F804848137F
 485AA2485A000FEC3F0049131E001F91C7FCA2485AA3127F90C9FCEB01FC903807FF8039
 FF1E07E090383801F0496C7E01607F01E0137E497FA249148016C0151FA290C713E0A57E
 A56C7E16C0A2121FED3F807F000F15006C6C5B15FE6C6C5B6C6C485A3900FE07F090383F
 FFC06D90C7FCEB03FC233A7DB72A>54 D<EB1FE0EBFFFC3803E03F3907000F80390F8007
 E0486C6C7E13E06E7EA26E7E6C5A6C5AC8FCA4147FEB07FFEB3FE0EBFE00EA03F8EA0FF0
 EA1FC0123F485A90C7FC160C12FEA31401A26C13036CEB077C903980063E18383FC01E3A
 0FE0781FF03A03FFF00FE03A007F8007C026277DA52A>97 D<EB03FC90381FFF8090387E
 03E03901F80070484813F83907E001FC380FC003A2EA1F80123F90380001F848EB00F015
 00A2127E12FEAA127E127FA26C14067F001F140E6D130C000F141C6C6C13386C6C13706C
 6C13E039007C07C090381FFF00EB07F81F277DA525>99 D<ED03F090390FF00FF890393F
 FC3C3C9039F81F707C3901F00FE03903E007C03A07C003E010000FECF000A248486C7EA8
 6C6C485AA200075C6C6C485A6D485A6D48C7FC38073FFC38060FF0000EC9FCA4120FA213
 C06CB512C015F86C14FE6CECFF804815C03A0F80007FE048C7EA0FF0003E140348140116
 F8481400A56C1401007C15F06CEC03E0003F1407D80F80EB0F80D807E0EB3F003901FC01
 FC39007FFFF0010790C7FC26387EA52A>103 D<EA03F012FFA3120F1203B3B3AD487EB5
 12C0A3123A7EB917>108 D<3903F00FF000FFEB3FFCECF03F9039F1C01F803A0FF3800F
 C03803F70013FE496D7EA25BA35BB3A3486C497EB500C1B51280A329257EA42E>110
 D<EB03FE90380FFF8090383E03E09038F800F84848137C48487F48487F4848EB0F80001F
 15C090C712074815E0A2007EEC03F0A400FE15F8A9007E15F0A2007F14076C15E0A26C6C
 EB0FC0000F15806D131F6C6CEB3F006C6C137EC66C13F890387E03F090381FFFC0D903FE
 C7FC25277EA52A>I<3807E01F00FFEB7FC09038E1E3E09038E387F0380FE707EA03E613
 EE9038EC03E09038FC0080491300A45BB3A2487EB512F0A31C257EA421>114
 D<1318A51338A31378A313F8120112031207001FB5FCB6FCA2D801F8C7FCB215C0A93800
 FC011580EB7C03017E13006D5AEB0FFEEB01F81A347FB220>116
 D E
 %EndDVIPSBitmapFont
 %DVIPSBitmapFont: Fg cmsy10 10 2
 /Fg 2 113 df<007FB81280B912C0A26C17803204799641>0 D<F10180F103C01907A2F1
 0F80A2F11F00A2193EA261A261A24E5AA24E5AA24E5AA24E5AA296C7FC60A2183EA260A2
 60A24D5AA24D5AA24D5AA24D5AA24DC8FCA20130153E13F000015EEA07F8000F5E487E00
 794B5AEAE1FE00C04B5AC67E6D4A5AA26E495A133F6E49C9FC131F6E133E130F6E5B1307
 6E1378010314F8A26E485A13016E485A13006E485A147FED8F80143F039FCAFC15DFEC1F
 FEA26E5AA26E5AA26E5AA26E5A5D42547B8345>112 D E
 %EndDVIPSBitmapFont
 end
 %%EndProlog
 %%BeginSetup
 %%Feature: *Resolution 600dpi
 TeXDict begin
 
 %%EndSetup
 1 0 bop 29144 239 a Fg(\000)29219 178 y Ff(log)29339
 110 y Fe(\000)29377 178 y Fd(x)29424 147 y Fc(2)29481
 178 y Fg(\000)18 b Fd(x)g Ff(+)g(1)29754 110 y Fe(\001)p
 29219 220 574 4 v 29484 296 a Ff(6)29820 239 y(+)29913
 161 y(arctan)30168 129 y Fc(2)d Fb(x)p Fa(\000)p Fc(1)p
 30168 143 171 4 v 30210 151 a Fa(p)p 30264 151 34 3 v
 30264 200 a Fc(3)p 29913 220 436 4 v 30076 237 a Fg(p)p
 30145 237 42 4 v 68 x Ff(3)30377 239 y(+)30470 183 y(log)f(\()q
 Fd(x)19 b Ff(+)f(1\))p 30470 220 377 4 v 30638 296 a(3)p
 eop
 %%Trailer
 end
 userdict /end-hook known{end-hook}if
 %%EOF
 grestore restore
 
gsave
760 220 moveto 28 0 rlineto 0 -12 rlineto -28 0 rlineto closepath
1.000 1.000 1.000 setrgbcolor AdjustColor
fill
760 220 moveto 28 0 rlineto 0 -12 rlineto -28 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
760 214 [
( ID 4 )
] 14 -0 0.5 0 false DrawText
grestore
gsave
760 207 moveto 44 0 rlineto 0 -12 rlineto -44 0 rlineto closepath
0.937 0.922 0.937 setrgbcolor AdjustColor
fill
760 207 moveto 44 0 rlineto 0 -12 rlineto -44 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.937 0.922 0.937 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
760 201 [
(1240)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
785 201 [
(*)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 1.000 setrgbcolor AdjustColor
792 201 [
(hp)
] 14 -0 0.5 0 false DrawText
grestore
gsave
760 194 moveto 90.1999999999999 0 rlineto 0 -52 rlineto -90.1999999999999 0 rlineto closepath
0.843 0.843 0.843 setrgbcolor AdjustColor
fill
760 194 moveto 90.1999999999999 0 rlineto 0 -52 rlineto -90.1999999999999 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.843 0.843 0.843 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
764.1 176 [
(924668.)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
804.1 176 [
(*)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 1.000 setrgbcolor AdjustColor
811.1 176 [
(kg)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
824.1 176 [
(*)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 1.000 setrgbcolor AdjustColor
831.1 176 [
(m)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
840.1 188 [
(2)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 1.000 setrgbcolor AdjustColor
799.1 148 [
(s)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
805.1 160 [
(3)
] 14 -0 0.5 0 false DrawText
grestore
gsave
760 168 moveto
849.2 168 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
760 144 moveto 28 0 rlineto 0 -12 rlineto -28 0 rlineto closepath
1.000 1.000 1.000 setrgbcolor AdjustColor
fill
760 144 moveto 28 0 rlineto 0 -12 rlineto -28 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
760 138 [
( ID 5 )
] 14 -0 0.5 0 false DrawText
grestore
gsave
760 131 moveto 173 0 rlineto 0 -15 rlineto -173 0 rlineto closepath
0.937 0.922 0.937 setrgbcolor AdjustColor
fill
760 131 moveto 173 0 rlineto 0 -15 rlineto -173 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.937 0.922 0.937 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
760 124 [
(ConvertUnitNumer)
] 14 -0 0.5 0 false DrawText
grestore
gsave
860 131 moveto
857 128 lineto
857 120 lineto
860 117 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
861 124 [
(REF)
] 14 -0 0.5 0 false DrawText
grestore
gsave
888 130 moveto
885 130 lineto
885 118 lineto
888 118 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
889 124 [
(4)
] 14 -0 0.5 0 false DrawText
grestore
gsave
895 130 moveto
898 130 lineto
898 118 lineto
895 118 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
900 124 [
(,)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
904 124 [
(')
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 1.000 setrgbcolor AdjustColor
909 124 [
(kW)
] 14 -0 0.5 0 false DrawText
grestore
gsave
927 131 moveto
930 128 lineto
930 120 lineto
927 117 lineto
0 setlinecap
1 setlinejoin
1 setlinewidth
[] 0 setdash
0.000 0.000 0.000 setrgbcolor AdjustColor
stroke
grestore
gsave
760 115 moveto 65 0 rlineto 0 -12 rlineto -65 0 rlineto closepath
0.843 0.843 0.843 setrgbcolor AdjustColor
fill
760 115 moveto 65 0 rlineto 0 -12 rlineto -65 0 rlineto closepath
0 setlinejoin 2 setlinecap
1 setlinewidth
[] 0 setdash
0.843 0.843 0.843 setrgbcolor AdjustColor
stroke
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
760 109 [
(924.668)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 0.000 setrgbcolor AdjustColor
800 109 [
(*)
] 14 -0 0.5 0 false DrawText
grestore
gsave
/Times-Roman findfont 12 scalefont ISOEncode setfont
0.000 0.000 1.000 setrgbcolor AdjustColor
807 109 [
(kW)
] 14 -0 0.5 0 false DrawText
grestore
restore showpage

%%Trailer
end
%%EOF
